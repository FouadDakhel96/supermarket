{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { SimpleFilter } from \"./simpleFilter\";\n\nvar ScalarFilter =\n/** @class */\nfunction (_super) {\n  __extends(ScalarFilter, _super);\n\n  function ScalarFilter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ScalarFilter.prototype.setParams = function (params) {\n    _super.prototype.setParams.call(this, params);\n\n    this.scalarFilterParams = params;\n    this.checkDeprecatedParams();\n  };\n\n  ScalarFilter.prototype.checkDeprecatedParams = function () {\n    if (this.scalarFilterParams.nullComparator) {\n      console.warn('ag-Grid: Since v21.0, the property filterParams.nullComparator is deprecated. ' + 'Please use filterParams.includeBlanksInEquals, filterParams.includeBlanksInLessThan and ' + 'filterParams.includeBlanksInGreaterThan instead.');\n      this.scalarFilterParams.includeBlanksInEquals = this.scalarFilterParams.nullComparator.equals;\n      this.scalarFilterParams.includeBlanksInLessThan = this.scalarFilterParams.nullComparator.lessThan;\n      this.scalarFilterParams.includeBlanksInGreaterThan = this.scalarFilterParams.nullComparator.greaterThan;\n    }\n  };\n\n  ScalarFilter.prototype.nullComparator = function (selectedOption, filterValue, gridValue) {\n    if (gridValue == null) {\n      switch (selectedOption) {\n        case ScalarFilter.EMPTY:\n          return 0;\n\n        case ScalarFilter.EQUALS:\n          return this.scalarFilterParams.includeBlanksInEquals ? 0 : 1;\n\n        case ScalarFilter.NOT_EQUAL:\n          return this.scalarFilterParams.includeBlanksInEquals ? 1 : 0;\n\n        case ScalarFilter.GREATER_THAN:\n        case ScalarFilter.GREATER_THAN_OR_EQUAL:\n          return this.scalarFilterParams.includeBlanksInGreaterThan ? 1 : -1;\n\n        case ScalarFilter.LESS_THAN:\n        case ScalarFilter.LESS_THAN_OR_EQUAL:\n          return this.scalarFilterParams.includeBlanksInLessThan ? -1 : 1;\n      }\n    }\n\n    return this.comparator()(filterValue, gridValue);\n  };\n\n  ScalarFilter.prototype.individualConditionPasses = function (params, filterModel) {\n    var cellValue = this.scalarFilterParams.valueGetter(params.node);\n    var range = this.mapRangeFromModel(filterModel);\n    var filterValue = range.from;\n    var filterValueTo = range.to;\n    var filterType = filterModel.type;\n    var customFilterOption = this.optionsFactory.getCustomOption(filterType);\n\n    if (customFilterOption) {\n      // only execute the custom filter if a value exists or a value isn't required, i.e. input is hidden\n      if (filterValue != null || customFilterOption.hideFilterInput) {\n        return customFilterOption.test(filterValue, cellValue);\n      }\n    }\n\n    var compareResult = this.nullComparator(filterType, filterValue, cellValue);\n\n    switch (filterType) {\n      case ScalarFilter.EQUALS:\n        return compareResult === 0;\n\n      case ScalarFilter.NOT_EQUAL:\n        return compareResult !== 0;\n\n      case ScalarFilter.GREATER_THAN:\n        return compareResult > 0;\n\n      case ScalarFilter.GREATER_THAN_OR_EQUAL:\n        return compareResult >= 0;\n\n      case ScalarFilter.LESS_THAN:\n        return compareResult < 0;\n\n      case ScalarFilter.LESS_THAN_OR_EQUAL:\n        return compareResult <= 0;\n\n      case ScalarFilter.IN_RANGE:\n        {\n          var compareToResult = this.nullComparator(filterType, filterValueTo, cellValue);\n          return this.scalarFilterParams.inRangeInclusive ? compareResult >= 0 && compareToResult <= 0 : compareResult > 0 && compareToResult < 0;\n        }\n\n      default:\n        throw new Error('Unexpected type of filter: ' + filterType);\n    }\n  };\n\n  return ScalarFilter;\n}(SimpleFilter);\n\nexport { ScalarFilter };","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/@ag-grid-community/core/dist/es6/filter/provided/scalarFilter.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","SimpleFilter","ScalarFilter","_super","apply","arguments","setParams","params","call","scalarFilterParams","checkDeprecatedParams","nullComparator","console","warn","includeBlanksInEquals","equals","includeBlanksInLessThan","lessThan","includeBlanksInGreaterThan","greaterThan","selectedOption","filterValue","gridValue","EMPTY","EQUALS","NOT_EQUAL","GREATER_THAN","GREATER_THAN_OR_EQUAL","LESS_THAN","LESS_THAN_OR_EQUAL","comparator","individualConditionPasses","filterModel","cellValue","valueGetter","node","range","mapRangeFromModel","from","filterValueTo","to","filterType","type","customFilterOption","optionsFactory","getCustomOption","hideFilterInput","test","compareResult","IN_RANGE","compareToResult","inRangeInclusive","Error"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { SimpleFilter } from \"./simpleFilter\";\nvar ScalarFilter = /** @class */ (function (_super) {\n    __extends(ScalarFilter, _super);\n    function ScalarFilter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ScalarFilter.prototype.setParams = function (params) {\n        _super.prototype.setParams.call(this, params);\n        this.scalarFilterParams = params;\n        this.checkDeprecatedParams();\n    };\n    ScalarFilter.prototype.checkDeprecatedParams = function () {\n        if (this.scalarFilterParams.nullComparator) {\n            console.warn('ag-Grid: Since v21.0, the property filterParams.nullComparator is deprecated. ' +\n                'Please use filterParams.includeBlanksInEquals, filterParams.includeBlanksInLessThan and ' +\n                'filterParams.includeBlanksInGreaterThan instead.');\n            this.scalarFilterParams.includeBlanksInEquals = this.scalarFilterParams.nullComparator.equals;\n            this.scalarFilterParams.includeBlanksInLessThan = this.scalarFilterParams.nullComparator.lessThan;\n            this.scalarFilterParams.includeBlanksInGreaterThan = this.scalarFilterParams.nullComparator.greaterThan;\n        }\n    };\n    ScalarFilter.prototype.nullComparator = function (selectedOption, filterValue, gridValue) {\n        if (gridValue == null) {\n            switch (selectedOption) {\n                case ScalarFilter.EMPTY:\n                    return 0;\n                case ScalarFilter.EQUALS:\n                    return this.scalarFilterParams.includeBlanksInEquals ? 0 : 1;\n                case ScalarFilter.NOT_EQUAL:\n                    return this.scalarFilterParams.includeBlanksInEquals ? 1 : 0;\n                case ScalarFilter.GREATER_THAN:\n                case ScalarFilter.GREATER_THAN_OR_EQUAL:\n                    return this.scalarFilterParams.includeBlanksInGreaterThan ? 1 : -1;\n                case ScalarFilter.LESS_THAN:\n                case ScalarFilter.LESS_THAN_OR_EQUAL:\n                    return this.scalarFilterParams.includeBlanksInLessThan ? -1 : 1;\n            }\n        }\n        return this.comparator()(filterValue, gridValue);\n    };\n    ScalarFilter.prototype.individualConditionPasses = function (params, filterModel) {\n        var cellValue = this.scalarFilterParams.valueGetter(params.node);\n        var range = this.mapRangeFromModel(filterModel);\n        var filterValue = range.from;\n        var filterValueTo = range.to;\n        var filterType = filterModel.type;\n        var customFilterOption = this.optionsFactory.getCustomOption(filterType);\n        if (customFilterOption) {\n            // only execute the custom filter if a value exists or a value isn't required, i.e. input is hidden\n            if (filterValue != null || customFilterOption.hideFilterInput) {\n                return customFilterOption.test(filterValue, cellValue);\n            }\n        }\n        var compareResult = this.nullComparator(filterType, filterValue, cellValue);\n        switch (filterType) {\n            case ScalarFilter.EQUALS:\n                return compareResult === 0;\n            case ScalarFilter.NOT_EQUAL:\n                return compareResult !== 0;\n            case ScalarFilter.GREATER_THAN:\n                return compareResult > 0;\n            case ScalarFilter.GREATER_THAN_OR_EQUAL:\n                return compareResult >= 0;\n            case ScalarFilter.LESS_THAN:\n                return compareResult < 0;\n            case ScalarFilter.LESS_THAN_OR_EQUAL:\n                return compareResult <= 0;\n            case ScalarFilter.IN_RANGE: {\n                var compareToResult = this.nullComparator(filterType, filterValueTo, cellValue);\n                return this.scalarFilterParams.inRangeInclusive ?\n                    compareResult >= 0 && compareToResult <= 0 :\n                    compareResult > 0 && compareToResult < 0;\n            }\n            default:\n                throw new Error('Unexpected type of filter: ' + filterType);\n        }\n    };\n    return ScalarFilter;\n}(SimpleFilter));\nexport { ScalarFilter };\n"]},"metadata":{},"sourceType":"module"}