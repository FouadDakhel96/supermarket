{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { _, Autowired, Bean, ChartType, Optional, PreDestroy, BeanStub } from \"@ag-grid-community/core\";\nimport { GridChartComp } from \"./chartComp/gridChartComp\";\n\nvar ChartService =\n/** @class */\nfunction (_super) {\n  __extends(ChartService, _super);\n\n  function ChartService() {\n    var _this = _super !== null && _super.apply(this, arguments) || this; // we destroy all charts bound to this grid when grid is destroyed. activeCharts contains all charts, including\n    // those in developer provided containers.\n\n\n    _this.activeCharts = new Set();\n    _this.activeChartComps = new Set();\n    return _this;\n  }\n\n  ChartService.prototype.getChartModels = function () {\n    var models = [];\n    this.activeChartComps.forEach(function (c) {\n      return models.push(c.getChartModel());\n    });\n    return models;\n  };\n\n  ChartService.prototype.createChartFromCurrentRange = function (chartType) {\n    if (chartType === void 0) {\n      chartType = ChartType.GroupedColumn;\n    }\n\n    var selectedRange = this.getSelectedRange();\n    return this.createChart(selectedRange, chartType);\n  };\n\n  ChartService.prototype.createRangeChart = function (params) {\n    var cellRange = this.rangeController ? this.rangeController.createCellRangeFromCellRangeParams(params.cellRange) : undefined;\n\n    if (!cellRange) {\n      console.warn(\"ag-Grid - unable to create chart as no range is selected\");\n      return;\n    }\n\n    return this.createChart(cellRange, params.chartType, params.chartPalette, false, params.suppressChartRanges, params.chartContainer, params.aggFunc, params.processChartOptions);\n  };\n\n  ChartService.prototype.createPivotChart = function (params) {\n    // if required enter pivot mode\n    if (!this.columnController.isPivotMode()) {\n      this.columnController.setPivotMode(true, \"pivotChart\");\n    } // pivot chart range contains all visible column without a row range to include all rows\n\n\n    var chartAllRangeParams = {\n      columns: this.columnController.getAllDisplayedColumns().map(function (col) {\n        return col.getColId();\n      })\n    };\n    var cellRange = this.rangeController ? this.rangeController.createCellRangeFromCellRangeParams(chartAllRangeParams) : undefined;\n\n    if (!cellRange) {\n      console.warn(\"ag-Grid - unable to create chart as there are no columns in the grid.\");\n      return;\n    }\n\n    return this.createChart(cellRange, params.chartType, params.chartPalette, true, true, params.chartContainer, undefined, params.processChartOptions);\n  };\n\n  ChartService.prototype.createChart = function (cellRange, chartType, chartPaletteName, pivotChart, suppressChartRanges, container, aggFunc, processChartOptions) {\n    var _this = this;\n\n    if (pivotChart === void 0) {\n      pivotChart = false;\n    }\n\n    if (suppressChartRanges === void 0) {\n      suppressChartRanges = false;\n    }\n\n    var createChartContainerFunc = this.gridOptionsWrapper.getCreateChartContainerFunc();\n    var params = {\n      pivotChart: pivotChart,\n      cellRange: cellRange,\n      chartType: chartType,\n      chartPaletteName: chartPaletteName,\n      insideDialog: !(container || createChartContainerFunc),\n      suppressChartRanges: suppressChartRanges,\n      aggFunc: aggFunc,\n      processChartOptions: processChartOptions\n    };\n    var chartComp = new GridChartComp(params);\n    this.context.createBean(chartComp);\n    var chartRef = this.createChartRef(chartComp);\n\n    if (container) {\n      // if container exists, means developer initiated chart create via API, so place in provided container\n      container.appendChild(chartComp.getGui()); // if the chart container was placed outside of an element that\n      // has the grid's theme, we manually add the current theme to\n      // make sure all styles for the chartMenu are rendered correctly\n\n      var theme = this.environment.getTheme();\n\n      if (theme.el && !theme.el.contains(container)) {\n        _.addCssClass(container, theme.theme);\n      }\n    } else if (createChartContainerFunc) {\n      // otherwise user created chart via grid UI, check if developer provides containers (eg if the application\n      // is using its own dialogs rather than the grid provided dialogs)\n      createChartContainerFunc(chartRef);\n    } else {\n      // add listener to remove from active charts list when charts are destroyed, e.g. closing chart dialog\n      chartComp.addEventListener(GridChartComp.EVENT_DESTROYED, function () {\n        _this.activeChartComps.delete(chartComp);\n\n        _this.activeCharts.delete(chartRef);\n      });\n    }\n\n    return chartRef;\n  };\n\n  ChartService.prototype.createChartRef = function (chartComp) {\n    var _this = this;\n\n    var chartRef = {\n      destroyChart: function () {\n        if (_this.activeCharts.has(chartRef)) {\n          _this.context.destroyBean(chartComp);\n\n          _this.activeChartComps.delete(chartComp);\n\n          _this.activeCharts.delete(chartRef);\n        }\n      },\n      chartElement: chartComp.getGui()\n    };\n    this.activeCharts.add(chartRef);\n    this.activeChartComps.add(chartComp);\n    return chartRef;\n  };\n\n  ChartService.prototype.getSelectedRange = function () {\n    var ranges = this.rangeController.getCellRanges();\n    return ranges.length > 0 ? ranges[0] : {};\n  };\n\n  ChartService.prototype.destroyAllActiveCharts = function () {\n    this.activeCharts.forEach(function (chart) {\n      return chart.destroyChart();\n    });\n  };\n\n  __decorate([Optional('rangeController')], ChartService.prototype, \"rangeController\", void 0);\n\n  __decorate([Autowired('columnController')], ChartService.prototype, \"columnController\", void 0);\n\n  __decorate([Autowired('environment')], ChartService.prototype, \"environment\", void 0);\n\n  __decorate([Autowired('gridOptionsWrapper')], ChartService.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([PreDestroy], ChartService.prototype, \"destroyAllActiveCharts\", null);\n\n  ChartService = __decorate([Bean('chartService')], ChartService);\n  return ChartService;\n}(BeanStub);\n\nexport { ChartService };","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/@ag-grid-enterprise/charts/dist/es6/chartAdaptor/chartService.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","_","Autowired","Bean","ChartType","Optional","PreDestroy","BeanStub","GridChartComp","ChartService","_super","_this","apply","activeCharts","Set","activeChartComps","getChartModels","models","forEach","push","getChartModel","createChartFromCurrentRange","chartType","GroupedColumn","selectedRange","getSelectedRange","createChart","createRangeChart","params","cellRange","rangeController","createCellRangeFromCellRangeParams","undefined","console","warn","chartPalette","suppressChartRanges","chartContainer","aggFunc","processChartOptions","createPivotChart","columnController","isPivotMode","setPivotMode","chartAllRangeParams","columns","getAllDisplayedColumns","map","col","getColId","chartPaletteName","pivotChart","container","createChartContainerFunc","gridOptionsWrapper","getCreateChartContainerFunc","insideDialog","chartComp","context","createBean","chartRef","createChartRef","appendChild","getGui","theme","environment","getTheme","el","contains","addCssClass","addEventListener","EVENT_DESTROYED","delete","destroyChart","has","destroyBean","chartElement","add","ranges","getCellRanges","destroyAllActiveCharts","chart"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { _, Autowired, Bean, ChartType, Optional, PreDestroy, BeanStub } from \"@ag-grid-community/core\";\nimport { GridChartComp } from \"./chartComp/gridChartComp\";\nvar ChartService = /** @class */ (function (_super) {\n    __extends(ChartService, _super);\n    function ChartService() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        // we destroy all charts bound to this grid when grid is destroyed. activeCharts contains all charts, including\n        // those in developer provided containers.\n        _this.activeCharts = new Set();\n        _this.activeChartComps = new Set();\n        return _this;\n    }\n    ChartService.prototype.getChartModels = function () {\n        var models = [];\n        this.activeChartComps.forEach(function (c) { return models.push(c.getChartModel()); });\n        return models;\n    };\n    ChartService.prototype.createChartFromCurrentRange = function (chartType) {\n        if (chartType === void 0) { chartType = ChartType.GroupedColumn; }\n        var selectedRange = this.getSelectedRange();\n        return this.createChart(selectedRange, chartType);\n    };\n    ChartService.prototype.createRangeChart = function (params) {\n        var cellRange = this.rangeController\n            ? this.rangeController.createCellRangeFromCellRangeParams(params.cellRange)\n            : undefined;\n        if (!cellRange) {\n            console.warn(\"ag-Grid - unable to create chart as no range is selected\");\n            return;\n        }\n        return this.createChart(cellRange, params.chartType, params.chartPalette, false, params.suppressChartRanges, params.chartContainer, params.aggFunc, params.processChartOptions);\n    };\n    ChartService.prototype.createPivotChart = function (params) {\n        // if required enter pivot mode\n        if (!this.columnController.isPivotMode()) {\n            this.columnController.setPivotMode(true, \"pivotChart\");\n        }\n        // pivot chart range contains all visible column without a row range to include all rows\n        var chartAllRangeParams = {\n            columns: this.columnController.getAllDisplayedColumns().map(function (col) { return col.getColId(); })\n        };\n        var cellRange = this.rangeController\n            ? this.rangeController.createCellRangeFromCellRangeParams(chartAllRangeParams)\n            : undefined;\n        if (!cellRange) {\n            console.warn(\"ag-Grid - unable to create chart as there are no columns in the grid.\");\n            return;\n        }\n        return this.createChart(cellRange, params.chartType, params.chartPalette, true, true, params.chartContainer, undefined, params.processChartOptions);\n    };\n    ChartService.prototype.createChart = function (cellRange, chartType, chartPaletteName, pivotChart, suppressChartRanges, container, aggFunc, processChartOptions) {\n        var _this = this;\n        if (pivotChart === void 0) { pivotChart = false; }\n        if (suppressChartRanges === void 0) { suppressChartRanges = false; }\n        var createChartContainerFunc = this.gridOptionsWrapper.getCreateChartContainerFunc();\n        var params = {\n            pivotChart: pivotChart,\n            cellRange: cellRange,\n            chartType: chartType,\n            chartPaletteName: chartPaletteName,\n            insideDialog: !(container || createChartContainerFunc),\n            suppressChartRanges: suppressChartRanges,\n            aggFunc: aggFunc,\n            processChartOptions: processChartOptions,\n        };\n        var chartComp = new GridChartComp(params);\n        this.context.createBean(chartComp);\n        var chartRef = this.createChartRef(chartComp);\n        if (container) {\n            // if container exists, means developer initiated chart create via API, so place in provided container\n            container.appendChild(chartComp.getGui());\n            // if the chart container was placed outside of an element that\n            // has the grid's theme, we manually add the current theme to\n            // make sure all styles for the chartMenu are rendered correctly\n            var theme = this.environment.getTheme();\n            if (theme.el && !theme.el.contains(container)) {\n                _.addCssClass(container, theme.theme);\n            }\n        }\n        else if (createChartContainerFunc) {\n            // otherwise user created chart via grid UI, check if developer provides containers (eg if the application\n            // is using its own dialogs rather than the grid provided dialogs)\n            createChartContainerFunc(chartRef);\n        }\n        else {\n            // add listener to remove from active charts list when charts are destroyed, e.g. closing chart dialog\n            chartComp.addEventListener(GridChartComp.EVENT_DESTROYED, function () {\n                _this.activeChartComps.delete(chartComp);\n                _this.activeCharts.delete(chartRef);\n            });\n        }\n        return chartRef;\n    };\n    ChartService.prototype.createChartRef = function (chartComp) {\n        var _this = this;\n        var chartRef = {\n            destroyChart: function () {\n                if (_this.activeCharts.has(chartRef)) {\n                    _this.context.destroyBean(chartComp);\n                    _this.activeChartComps.delete(chartComp);\n                    _this.activeCharts.delete(chartRef);\n                }\n            },\n            chartElement: chartComp.getGui()\n        };\n        this.activeCharts.add(chartRef);\n        this.activeChartComps.add(chartComp);\n        return chartRef;\n    };\n    ChartService.prototype.getSelectedRange = function () {\n        var ranges = this.rangeController.getCellRanges();\n        return ranges.length > 0 ? ranges[0] : {};\n    };\n    ChartService.prototype.destroyAllActiveCharts = function () {\n        this.activeCharts.forEach(function (chart) { return chart.destroyChart(); });\n    };\n    __decorate([\n        Optional('rangeController')\n    ], ChartService.prototype, \"rangeController\", void 0);\n    __decorate([\n        Autowired('columnController')\n    ], ChartService.prototype, \"columnController\", void 0);\n    __decorate([\n        Autowired('environment')\n    ], ChartService.prototype, \"environment\", void 0);\n    __decorate([\n        Autowired('gridOptionsWrapper')\n    ], ChartService.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        PreDestroy\n    ], ChartService.prototype, \"destroyAllActiveCharts\", null);\n    ChartService = __decorate([\n        Bean('chartService')\n    ], ChartService);\n    return ChartService;\n}(BeanStub));\nexport { ChartService };\n"]},"metadata":{},"sourceType":"module"}