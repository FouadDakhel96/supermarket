{"ast":null,"code":"var convertLegacyHorizontalAlignment = function (alignment) {\n  var map = {\n    Automatic: 'general',\n    Left: 'left',\n    Center: 'center',\n    Right: 'right',\n    Fill: 'fill',\n    Justify: 'justify',\n    CenterAcrossSelection: 'centerContinuous',\n    Distributed: 'distributed',\n    JustifyDistributed: 'justify'\n  };\n  return map[alignment] || 'general';\n};\n\nvar convertLegacyVerticalAlignment = function (alignment) {\n  var map = {\n    Automatic: undefined,\n    Top: 'top',\n    Bottom: 'bottom',\n    Center: 'center',\n    Justify: 'justify',\n    Distributed: 'distributed',\n    JustifyDistributed: 'justify'\n  };\n  return map[alignment] || undefined;\n};\n\nvar getReadingOrderId = function (readingOrder) {\n  var order = ['Context', 'LeftToRight', 'RightToLeft'];\n  var pos = order.indexOf(readingOrder);\n  return Math.max(pos, 0);\n};\n\nvar alignmentFactory = {\n  getTemplate: function (alignment) {\n    var horizontal = alignment.horizontal,\n        indent = alignment.indent,\n        readingOrder = alignment.readingOrder,\n        rotate = alignment.rotate,\n        shrinkToFit = alignment.shrinkToFit,\n        vertical = alignment.vertical,\n        wrapText = alignment.wrapText;\n    return {\n      name: 'alignment',\n      properties: {\n        rawMap: {\n          horizontal: horizontal && convertLegacyHorizontalAlignment(horizontal),\n          indent: indent,\n          readingOrder: readingOrder && getReadingOrderId(readingOrder),\n          textRotation: rotate,\n          shrinkToFit: shrinkToFit,\n          vertical: vertical && convertLegacyVerticalAlignment(vertical),\n          wrapText: wrapText\n        }\n      }\n    };\n  }\n};\nexport default alignmentFactory;","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/@ag-grid-enterprise/excel-export/dist/es6/excelExport/files/ooxml/styles/alignment.js"],"names":["convertLegacyHorizontalAlignment","alignment","map","Automatic","Left","Center","Right","Fill","Justify","CenterAcrossSelection","Distributed","JustifyDistributed","convertLegacyVerticalAlignment","undefined","Top","Bottom","getReadingOrderId","readingOrder","order","pos","indexOf","Math","max","alignmentFactory","getTemplate","horizontal","indent","rotate","shrinkToFit","vertical","wrapText","name","properties","rawMap","textRotation"],"mappings":"AAAA,IAAIA,gCAAgC,GAAG,UAAUC,SAAV,EAAqB;AACxD,MAAIC,GAAG,GAAG;AACNC,IAAAA,SAAS,EAAE,SADL;AAENC,IAAAA,IAAI,EAAE,MAFA;AAGNC,IAAAA,MAAM,EAAE,QAHF;AAINC,IAAAA,KAAK,EAAE,OAJD;AAKNC,IAAAA,IAAI,EAAE,MALA;AAMNC,IAAAA,OAAO,EAAE,SANH;AAONC,IAAAA,qBAAqB,EAAE,kBAPjB;AAQNC,IAAAA,WAAW,EAAE,aARP;AASNC,IAAAA,kBAAkB,EAAE;AATd,GAAV;AAWA,SAAOT,GAAG,CAACD,SAAD,CAAH,IAAkB,SAAzB;AACH,CAbD;;AAcA,IAAIW,8BAA8B,GAAG,UAAUX,SAAV,EAAqB;AACtD,MAAIC,GAAG,GAAG;AACNC,IAAAA,SAAS,EAAEU,SADL;AAENC,IAAAA,GAAG,EAAE,KAFC;AAGNC,IAAAA,MAAM,EAAE,QAHF;AAINV,IAAAA,MAAM,EAAE,QAJF;AAKNG,IAAAA,OAAO,EAAE,SALH;AAMNE,IAAAA,WAAW,EAAE,aANP;AAONC,IAAAA,kBAAkB,EAAE;AAPd,GAAV;AASA,SAAOT,GAAG,CAACD,SAAD,CAAH,IAAkBY,SAAzB;AACH,CAXD;;AAYA,IAAIG,iBAAiB,GAAG,UAAUC,YAAV,EAAwB;AAC5C,MAAIC,KAAK,GAAG,CAAC,SAAD,EAAY,aAAZ,EAA2B,aAA3B,CAAZ;AACA,MAAIC,GAAG,GAAGD,KAAK,CAACE,OAAN,CAAcH,YAAd,CAAV;AACA,SAAOI,IAAI,CAACC,GAAL,CAASH,GAAT,EAAc,CAAd,CAAP;AACH,CAJD;;AAKA,IAAII,gBAAgB,GAAG;AACnBC,EAAAA,WAAW,EAAE,UAAUvB,SAAV,EAAqB;AAC9B,QAAIwB,UAAU,GAAGxB,SAAS,CAACwB,UAA3B;AAAA,QAAuCC,MAAM,GAAGzB,SAAS,CAACyB,MAA1D;AAAA,QAAkET,YAAY,GAAGhB,SAAS,CAACgB,YAA3F;AAAA,QAAyGU,MAAM,GAAG1B,SAAS,CAAC0B,MAA5H;AAAA,QAAoIC,WAAW,GAAG3B,SAAS,CAAC2B,WAA5J;AAAA,QAAyKC,QAAQ,GAAG5B,SAAS,CAAC4B,QAA9L;AAAA,QAAwMC,QAAQ,GAAG7B,SAAS,CAAC6B,QAA7N;AACA,WAAO;AACHC,MAAAA,IAAI,EAAE,WADH;AAEHC,MAAAA,UAAU,EAAE;AACRC,QAAAA,MAAM,EAAE;AACJR,UAAAA,UAAU,EAAEA,UAAU,IAAIzB,gCAAgC,CAACyB,UAAD,CADtD;AAEJC,UAAAA,MAAM,EAAEA,MAFJ;AAGJT,UAAAA,YAAY,EAAEA,YAAY,IAAID,iBAAiB,CAACC,YAAD,CAH3C;AAIJiB,UAAAA,YAAY,EAAEP,MAJV;AAKJC,UAAAA,WAAW,EAAEA,WALT;AAMJC,UAAAA,QAAQ,EAAEA,QAAQ,IAAIjB,8BAA8B,CAACiB,QAAD,CANhD;AAOJC,UAAAA,QAAQ,EAAEA;AAPN;AADA;AAFT,KAAP;AAcH;AAjBkB,CAAvB;AAmBA,eAAeP,gBAAf","sourcesContent":["var convertLegacyHorizontalAlignment = function (alignment) {\n    var map = {\n        Automatic: 'general',\n        Left: 'left',\n        Center: 'center',\n        Right: 'right',\n        Fill: 'fill',\n        Justify: 'justify',\n        CenterAcrossSelection: 'centerContinuous',\n        Distributed: 'distributed',\n        JustifyDistributed: 'justify'\n    };\n    return map[alignment] || 'general';\n};\nvar convertLegacyVerticalAlignment = function (alignment) {\n    var map = {\n        Automatic: undefined,\n        Top: 'top',\n        Bottom: 'bottom',\n        Center: 'center',\n        Justify: 'justify',\n        Distributed: 'distributed',\n        JustifyDistributed: 'justify'\n    };\n    return map[alignment] || undefined;\n};\nvar getReadingOrderId = function (readingOrder) {\n    var order = ['Context', 'LeftToRight', 'RightToLeft'];\n    var pos = order.indexOf(readingOrder);\n    return Math.max(pos, 0);\n};\nvar alignmentFactory = {\n    getTemplate: function (alignment) {\n        var horizontal = alignment.horizontal, indent = alignment.indent, readingOrder = alignment.readingOrder, rotate = alignment.rotate, shrinkToFit = alignment.shrinkToFit, vertical = alignment.vertical, wrapText = alignment.wrapText;\n        return {\n            name: 'alignment',\n            properties: {\n                rawMap: {\n                    horizontal: horizontal && convertLegacyHorizontalAlignment(horizontal),\n                    indent: indent,\n                    readingOrder: readingOrder && getReadingOrderId(readingOrder),\n                    textRotation: rotate,\n                    shrinkToFit: shrinkToFit,\n                    vertical: vertical && convertLegacyVerticalAlignment(vertical),\n                    wrapText: wrapText\n                }\n            }\n        };\n    }\n};\nexport default alignmentFactory;\n"]},"metadata":{},"sourceType":"module"}