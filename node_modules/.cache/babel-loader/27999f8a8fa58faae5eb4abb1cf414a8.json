{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nimport { Group } from \"../../../scene/group\";\nimport { Selection } from \"../../../scene/selection\";\nimport { Rect } from \"../../../scene/shape/rect\";\nimport { Text } from \"../../../scene/shape/text\";\nimport { BandScale } from \"../../../scale/bandScale\";\nimport palette from \"../../palettes\";\nimport { Label } from \"../../label\";\nimport { PointerEvents } from \"../../../scene/node\";\nimport { CartesianSeries } from \"./cartesianSeries\";\nimport { ChartAxisDirection, flipChartAxisDirection } from \"../../chartAxis\";\nimport { Chart } from \"../../chart\";\nimport { findLargestMinMax, findMinMax } from \"../../../util/array\";\nimport { toFixed } from \"../../../util/number\";\nimport { equal } from \"../../../util/equal\";\nimport { reactive } from \"../../../util/observable\";\nvar BarSeriesNodeTag;\n\n(function (BarSeriesNodeTag) {\n  BarSeriesNodeTag[BarSeriesNodeTag[\"Bar\"] = 0] = \"Bar\";\n  BarSeriesNodeTag[BarSeriesNodeTag[\"Label\"] = 1] = \"Label\";\n})(BarSeriesNodeTag || (BarSeriesNodeTag = {}));\n\nvar BarSeriesLabel =\n/** @class */\nfunction (_super) {\n  __extends(BarSeriesLabel, _super);\n\n  function BarSeriesLabel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([reactive('change')], BarSeriesLabel.prototype, \"formatter\", void 0);\n\n  return BarSeriesLabel;\n}(Label);\n\nvar BarSeries =\n/** @class */\nfunction (_super) {\n  __extends(BarSeries, _super);\n\n  function BarSeries() {\n    var _a;\n\n    var _this = _super.call(this) || this; // Need to put bar and label nodes into separate groups, because even though label nodes are\n    // created after the bar nodes, this only guarantees that labels will always be on top of bars\n    // on the first run. If on the next run more bars are added, they might clip the labels\n    // rendered during the previous run.\n\n\n    _this.rectGroup = _this.group.appendChild(new Group());\n    _this.textGroup = _this.group.appendChild(new Group());\n    _this.rectSelection = Selection.select(_this.rectGroup).selectAll();\n    _this.textSelection = Selection.select(_this.textGroup).selectAll();\n    _this.xData = [];\n    _this.yData = [];\n    _this.yDomain = [];\n    _this.label = new BarSeriesLabel();\n    /**\n     * The assumption is that the values will be reset (to `true`)\n     * in the {@link yKeys} setter.\n     */\n\n    _this.seriesItemEnabled = new Map();\n    _this.flipXY = false;\n    _this.fills = palette.fills;\n    _this.strokes = palette.strokes;\n    _this.fillOpacity = 1;\n    _this.strokeOpacity = 1;\n    /**\n     * Used to get the position of bars within each group.\n     */\n\n    _this.groupScale = new BandScale();\n    _this.directionKeys = (_a = {}, _a[ChartAxisDirection.X] = ['xKey'], _a[ChartAxisDirection.Y] = ['yKeys'], _a);\n    _this._xKey = '';\n    _this._xName = '';\n    /**\n     * With a single value in the `yKeys` array we get the regular bar series.\n     * With multiple values, we get the stacked bar series.\n     * If the {@link grouped} set to `true`, we get the grouped bar series.\n     * @param values\n     */\n\n    _this._yKeys = [];\n    _this._yNames = [];\n    _this.grouped = false;\n    _this._strokeWidth = 1;\n    _this.highlightStyle = {\n      fill: 'yellow'\n    };\n    _this.label.enabled = false;\n\n    _this.label.addEventListener('change', _this.update, _this);\n\n    return _this;\n  }\n\n  BarSeries.prototype.getKeys = function (direction) {\n    var _this = this;\n\n    var directionKeys = this.directionKeys;\n    var keys = directionKeys && directionKeys[this.flipXY ? flipChartAxisDirection(direction) : direction];\n    var values = [];\n\n    if (keys) {\n      keys.forEach(function (key) {\n        var value = _this[key];\n\n        if (value) {\n          if (Array.isArray(value)) {\n            values.push.apply(values, value);\n          } else {\n            values.push(value);\n          }\n        }\n      });\n    }\n\n    return values;\n  };\n\n  Object.defineProperty(BarSeries.prototype, \"xKey\", {\n    get: function () {\n      return this._xKey;\n    },\n    set: function (value) {\n      if (this._xKey !== value) {\n        this._xKey = value;\n        this.xData = [];\n        this.scheduleData();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BarSeries.prototype, \"xName\", {\n    get: function () {\n      return this._xName;\n    },\n    set: function (value) {\n      if (this._xName !== value) {\n        this._xName = value;\n        this.update();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BarSeries.prototype, \"yKeys\", {\n    get: function () {\n      return this._yKeys;\n    },\n    set: function (values) {\n      if (!equal(this._yKeys, values)) {\n        this._yKeys = values;\n        this.yData = [];\n        var seriesItemEnabled_1 = this.seriesItemEnabled;\n        seriesItemEnabled_1.clear();\n        values.forEach(function (key) {\n          return seriesItemEnabled_1.set(key, true);\n        });\n        var groupScale = this.groupScale;\n        groupScale.domain = values;\n        groupScale.padding = 0.1;\n        groupScale.round = true;\n        this.scheduleData();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BarSeries.prototype, \"yNames\", {\n    get: function () {\n      return this._yNames;\n    },\n    set: function (values) {\n      this._yNames = values;\n      this.scheduleData();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BarSeries.prototype, \"normalizedTo\", {\n    get: function () {\n      return this._normalizedTo;\n    },\n    set: function (value) {\n      var absValue = value ? Math.abs(value) : undefined;\n\n      if (this._normalizedTo !== absValue) {\n        this._normalizedTo = absValue;\n        this.scheduleData();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BarSeries.prototype, \"strokeWidth\", {\n    get: function () {\n      return this._strokeWidth;\n    },\n    set: function (value) {\n      if (this._strokeWidth !== value) {\n        this._strokeWidth = value;\n        this.update();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BarSeries.prototype, \"shadow\", {\n    get: function () {\n      return this._shadow;\n    },\n    set: function (value) {\n      if (this._shadow !== value) {\n        this._shadow = value;\n        this.update();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BarSeries.prototype.onHighlightChange = function () {\n    this.updateRectNodes();\n  };\n\n  BarSeries.prototype.processData = function () {\n    var _a = this,\n        xKey = _a.xKey,\n        yKeys = _a.yKeys,\n        seriesItemEnabled = _a.seriesItemEnabled;\n\n    var data = xKey && yKeys.length && this.data ? this.data : []; // If the data is an array of rows like so:\n    //\n    // [{\n    //   xKey: 'Jan',\n    //   yKey1: 5,\n    //   yKey2: 7,\n    //   yKey3: -9,\n    // }, {\n    //   xKey: 'Feb',\n    //   yKey1: 10,\n    //   yKey2: -15,\n    //   yKey3: 20\n    // }]\n    //\n\n    var keysFound = true; // only warn once\n\n    this.xData = data.map(function (datum) {\n      if (keysFound && !(xKey in datum)) {\n        keysFound = false;\n        console.warn(\"The key '\" + xKey + \"' was not found in the data: \", datum);\n      }\n\n      return datum[xKey];\n    });\n    this.yData = data.map(function (datum) {\n      return yKeys.map(function (yKey) {\n        if (keysFound && !(yKey in datum)) {\n          keysFound = false;\n          console.warn(\"The key '\" + yKey + \"' was not found in the data: \", datum);\n        }\n\n        var value = datum[yKey];\n        return isFinite(value) && seriesItemEnabled.get(yKey) ? value : 0;\n      });\n    }); // xData: ['Jan', 'Feb']\n    //\n    // yData: [\n    //   [5, 7, -9],\n    //   [10, -15, 20]\n    // ]\n\n    var yMinMax = this.yData.map(function (values) {\n      return findMinMax(values);\n    }); // used for normalization of stacked bars\n\n    var _b = this,\n        yData = _b.yData,\n        normalizedTo = _b.normalizedTo;\n\n    var yMin = Infinity;\n    var yMax = -Infinity;\n\n    if (this.grouped) {\n      // Find the tallest positive/negative bar in each group,\n      // then find the tallest positive/negative bar overall.\n      // The `yMin` should always be <= 0,\n      // otherwise with the `yData` like [300, 200, 100] the last bar\n      // will have zero height, because the y-axis range is [100, 300].\n      yMin = Math.min.apply(Math, __spreadArrays([0], yData.map(function (values) {\n        return Math.min.apply(Math, values);\n      })));\n      yMax = Math.max.apply(Math, yData.map(function (values) {\n        return Math.max.apply(Math, values);\n      }));\n    } else {\n      // stacked or regular\n      var yLargestMinMax = findLargestMinMax(yMinMax);\n\n      if (normalizedTo && isFinite(normalizedTo)) {\n        yMin = yLargestMinMax.min < 0 ? -normalizedTo : 0;\n        yMax = normalizedTo;\n        yData.forEach(function (stackValues, i) {\n          return stackValues.forEach(function (y, j) {\n            if (y < 0) {\n              stackValues[j] = -y / yMinMax[i].min * normalizedTo;\n            } else {\n              stackValues[j] = y / yMinMax[i].max * normalizedTo;\n            }\n          });\n        });\n      } else {\n        yMin = yLargestMinMax.min;\n        yMax = yLargestMinMax.max;\n      }\n    }\n\n    this.yDomain = this.fixNumericExtent([yMin, yMax], 'y');\n    this.fireEvent({\n      type: 'dataProcessed'\n    });\n    return true;\n  };\n\n  BarSeries.prototype.getDomain = function (direction) {\n    if (this.flipXY) {\n      direction = flipChartAxisDirection(direction);\n    }\n\n    if (direction === ChartAxisDirection.X) {\n      return this.xData;\n    } else {\n      return this.yDomain;\n    }\n  };\n\n  BarSeries.prototype.fireNodeClickEvent = function (datum) {\n    this.fireEvent({\n      type: 'nodeClick',\n      series: this,\n      datum: datum.seriesDatum,\n      xKey: this.xKey,\n      yKey: datum.yKey\n    });\n  };\n\n  BarSeries.prototype.generateNodeData = function () {\n    var _this = this;\n\n    var _a = this,\n        xAxis = _a.xAxis,\n        yAxis = _a.yAxis,\n        flipXY = _a.flipXY;\n\n    var xScale = (flipXY ? yAxis : xAxis).scale;\n    var yScale = (flipXY ? xAxis : yAxis).scale;\n\n    var _b = this,\n        groupScale = _b.groupScale,\n        yKeys = _b.yKeys,\n        fills = _b.fills,\n        strokes = _b.strokes,\n        grouped = _b.grouped,\n        strokeWidth = _b.strokeWidth,\n        seriesItemEnabled = _b.seriesItemEnabled,\n        data = _b.data,\n        xData = _b.xData,\n        yData = _b.yData;\n\n    var label = this.label;\n    var labelFontStyle = label.fontStyle;\n    var labelFontWeight = label.fontWeight;\n    var labelFontSize = label.fontSize;\n    var labelFontFamily = label.fontFamily;\n    var labelColor = label.color;\n    var labelFormatter = label.formatter;\n    groupScale.range = [0, xScale.bandwidth];\n    var barWidth = grouped ? groupScale.bandwidth : xScale.bandwidth;\n    var nodeData = [];\n    xData.forEach(function (category, i) {\n      var yDatum = yData[i];\n      var seriesDatum = data[i];\n      var x = xScale.convert(category);\n      var prevMin = 0;\n      var prevMax = 0;\n      yDatum.forEach(function (curr, j) {\n        var yKey = yKeys[j];\n        var barX = grouped ? x + groupScale.convert(yKey) : x;\n        var prev = curr < 0 ? prevMin : prevMax;\n        var y = yScale.convert(grouped ? curr : prev + curr);\n        var bottomY = yScale.convert(grouped ? 0 : prev);\n        var yValue = seriesDatum[yKey]; // unprocessed y-value\n\n        var yValueIsNumber = typeof yValue === 'number';\n        var labelText;\n\n        if (labelFormatter) {\n          labelText = labelFormatter({\n            value: yValueIsNumber ? yValue : undefined\n          });\n        } else {\n          labelText = yValueIsNumber && isFinite(yValue) ? yValue.toFixed(2) : '';\n        }\n\n        nodeData.push({\n          series: _this,\n          seriesDatum: seriesDatum,\n          yValue: yValue,\n          yKey: yKey,\n          x: flipXY ? Math.min(y, bottomY) : barX,\n          y: flipXY ? barX : Math.min(y, bottomY),\n          width: flipXY ? Math.abs(bottomY - y) : barWidth,\n          height: flipXY ? barWidth : Math.abs(bottomY - y),\n          fill: fills[j % fills.length],\n          stroke: strokes[j % strokes.length],\n          strokeWidth: strokeWidth,\n          label: seriesItemEnabled.get(yKey) && labelText ? {\n            text: labelText,\n            fontStyle: labelFontStyle,\n            fontWeight: labelFontWeight,\n            fontSize: labelFontSize,\n            fontFamily: labelFontFamily,\n            fill: labelColor,\n            x: flipXY ? y + (yValue >= 0 ? -1 : 1) * Math.abs(bottomY - y) / 2 : barX + barWidth / 2,\n            y: flipXY ? barX + barWidth / 2 : y + (yValue >= 0 ? 1 : -1) * Math.abs(bottomY - y) / 2\n          } : undefined\n        });\n\n        if (!grouped) {\n          if (curr < 0) {\n            prevMin += curr;\n          } else {\n            prevMax += curr;\n          }\n        }\n      });\n    });\n    return nodeData;\n  };\n\n  BarSeries.prototype.update = function () {\n    var _a = this,\n        visible = _a.visible,\n        chart = _a.chart,\n        xAxis = _a.xAxis,\n        yAxis = _a.yAxis,\n        xData = _a.xData,\n        yData = _a.yData;\n\n    this.group.visible = visible;\n\n    if (!chart || chart.layoutPending || chart.dataPending || !xAxis || !yAxis || !visible || !xData.length || !yData.length) {\n      return;\n    }\n\n    var nodeData = this.generateNodeData();\n    this.updateRectSelection(nodeData);\n    this.updateRectNodes();\n    this.updateTextSelection(nodeData);\n    this.updateTextNodes();\n  };\n\n  BarSeries.prototype.updateRectSelection = function (selectionData) {\n    var updateRects = this.rectSelection.setData(selectionData);\n    updateRects.exit.remove();\n    var enterRects = updateRects.enter.append(Rect).each(function (rect) {\n      rect.tag = BarSeriesNodeTag.Bar;\n      rect.crisp = true;\n    });\n    this.rectSelection = updateRects.merge(enterRects);\n  };\n\n  BarSeries.prototype.updateRectNodes = function () {\n    var _a = this,\n        fillOpacity = _a.fillOpacity,\n        strokeOpacity = _a.strokeOpacity,\n        shadow = _a.shadow,\n        _b = _a.highlightStyle,\n        fill = _b.fill,\n        stroke = _b.stroke;\n\n    var highlightedDatum = this.chart.highlightedDatum;\n    this.rectSelection.each(function (rect, datum) {\n      var highlighted = datum === highlightedDatum;\n      rect.x = datum.x;\n      rect.y = datum.y;\n      rect.width = datum.width;\n      rect.height = datum.height;\n      rect.fill = highlighted && fill !== undefined ? fill : datum.fill;\n      rect.stroke = highlighted && stroke !== undefined ? stroke : datum.stroke;\n      rect.fillOpacity = fillOpacity;\n      rect.strokeOpacity = strokeOpacity;\n      rect.strokeWidth = datum.strokeWidth;\n      rect.fillShadow = shadow;\n      rect.visible = datum.height > 0; // prevent stroke from rendering for zero height bars\n    });\n  };\n\n  BarSeries.prototype.updateTextSelection = function (selectionData) {\n    var updateTexts = this.textSelection.setData(selectionData);\n    updateTexts.exit.remove();\n    var enterTexts = updateTexts.enter.append(Text).each(function (text) {\n      text.tag = BarSeriesNodeTag.Label;\n      text.pointerEvents = PointerEvents.None;\n      text.textAlign = 'center';\n      text.textBaseline = 'middle';\n    });\n    this.textSelection = updateTexts.merge(enterTexts);\n  };\n\n  BarSeries.prototype.updateTextNodes = function () {\n    var labelEnabled = this.label.enabled;\n    this.textSelection.each(function (text, datum) {\n      var label = datum.label;\n\n      if (label && labelEnabled) {\n        text.fontStyle = label.fontStyle;\n        text.fontWeight = label.fontWeight;\n        text.fontSize = label.fontSize;\n        text.fontFamily = label.fontFamily;\n        text.text = label.text;\n        text.x = label.x;\n        text.y = label.y;\n        text.fill = label.fill;\n        text.visible = true;\n      } else {\n        text.visible = false;\n      }\n    });\n  };\n\n  BarSeries.prototype.getTooltipHtml = function (nodeDatum) {\n    var xKey = this.xKey;\n    var yKey = nodeDatum.yKey;\n\n    if (!xKey || !yKey) {\n      return '';\n    }\n\n    var _a = this,\n        xName = _a.xName,\n        yKeys = _a.yKeys,\n        yNames = _a.yNames,\n        fills = _a.fills,\n        tooltipRenderer = _a.tooltipRenderer;\n\n    var datum = nodeDatum.seriesDatum;\n    var yKeyIndex = yKeys.indexOf(yKey);\n    var yName = yNames[yKeyIndex];\n    var color = fills[yKeyIndex % fills.length];\n\n    if (tooltipRenderer) {\n      return tooltipRenderer({\n        datum: datum,\n        xKey: xKey,\n        xName: xName,\n        yKey: yKey,\n        yName: yName,\n        color: color\n      });\n    } else {\n      var titleStyle = \"style=\\\"color: white; background-color: \" + color + \"\\\"\";\n      var titleString = yName ? \"<div class=\\\"\" + Chart.defaultTooltipClass + \"-title\\\" \" + titleStyle + \">\" + yName + \"</div>\" : '';\n      var xValue = datum[xKey];\n      var yValue = datum[yKey];\n      var xString = typeof xValue === 'number' ? toFixed(xValue) : String(xValue);\n      var yString = typeof yValue === 'number' ? toFixed(yValue) : String(yValue);\n      return titleString + \"<div class=\\\"\" + Chart.defaultTooltipClass + \"-content\\\">\" + xString + \": \" + yString + \"</div>\";\n    }\n  };\n\n  BarSeries.prototype.listSeriesItems = function (legendData) {\n    var _a = this,\n        id = _a.id,\n        data = _a.data,\n        xKey = _a.xKey,\n        yKeys = _a.yKeys,\n        yNames = _a.yNames,\n        seriesItemEnabled = _a.seriesItemEnabled,\n        fills = _a.fills,\n        strokes = _a.strokes,\n        fillOpacity = _a.fillOpacity,\n        strokeOpacity = _a.strokeOpacity;\n\n    if (data && data.length && xKey && yKeys.length) {\n      yKeys.forEach(function (yKey, index) {\n        legendData.push({\n          id: id,\n          itemId: yKey,\n          enabled: seriesItemEnabled.get(yKey) || false,\n          label: {\n            text: yNames[index] || yKeys[index]\n          },\n          marker: {\n            fill: fills[index % fills.length],\n            stroke: strokes[index % strokes.length],\n            fillOpacity: fillOpacity,\n            strokeOpacity: strokeOpacity\n          }\n        });\n      });\n    }\n  };\n\n  BarSeries.prototype.toggleSeriesItem = function (itemId, enabled) {\n    var seriesItemEnabled = this.seriesItemEnabled;\n    var enabledSeriesItems = [];\n    seriesItemEnabled.set(itemId, enabled);\n    seriesItemEnabled.forEach(function (enabled, yKey) {\n      if (enabled) {\n        enabledSeriesItems.push(yKey);\n      }\n    });\n    this.groupScale.domain = enabledSeriesItems;\n    this.scheduleData();\n  };\n\n  BarSeries.className = 'BarSeries';\n  BarSeries.type = 'bar';\n\n  __decorate([reactive('layoutChange')], BarSeries.prototype, \"flipXY\", void 0);\n\n  __decorate([reactive('dataChange')], BarSeries.prototype, \"fills\", void 0);\n\n  __decorate([reactive('dataChange')], BarSeries.prototype, \"strokes\", void 0);\n\n  __decorate([reactive('layoutChange')], BarSeries.prototype, \"fillOpacity\", void 0);\n\n  __decorate([reactive('layoutChange')], BarSeries.prototype, \"strokeOpacity\", void 0);\n\n  __decorate([reactive('dataChange')], BarSeries.prototype, \"grouped\", void 0);\n\n  return BarSeries;\n}(CartesianSeries);\n\nexport { BarSeries };","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/ag-charts-community/dist/es6/chart/series/cartesian/barSeries.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__spreadArrays","s","il","k","a","j","jl","Group","Selection","Rect","Text","BandScale","palette","Label","PointerEvents","CartesianSeries","ChartAxisDirection","flipChartAxisDirection","Chart","findLargestMinMax","findMinMax","toFixed","equal","reactive","BarSeriesNodeTag","BarSeriesLabel","_super","apply","BarSeries","_a","_this","call","rectGroup","group","appendChild","textGroup","rectSelection","select","selectAll","textSelection","xData","yData","yDomain","label","seriesItemEnabled","Map","flipXY","fills","strokes","fillOpacity","strokeOpacity","groupScale","directionKeys","X","Y","_xKey","_xName","_yKeys","_yNames","grouped","_strokeWidth","highlightStyle","fill","enabled","addEventListener","update","getKeys","direction","keys","values","forEach","value","isArray","push","get","set","scheduleData","enumerable","configurable","seriesItemEnabled_1","clear","domain","padding","round","_normalizedTo","absValue","Math","abs","undefined","_shadow","onHighlightChange","updateRectNodes","processData","xKey","yKeys","data","keysFound","map","datum","console","warn","yKey","isFinite","yMinMax","_b","normalizedTo","yMin","Infinity","yMax","min","max","yLargestMinMax","stackValues","y","fixNumericExtent","fireEvent","type","getDomain","fireNodeClickEvent","series","seriesDatum","generateNodeData","xAxis","yAxis","xScale","scale","yScale","strokeWidth","labelFontStyle","fontStyle","labelFontWeight","fontWeight","labelFontSize","fontSize","labelFontFamily","fontFamily","labelColor","color","labelFormatter","formatter","range","bandwidth","barWidth","nodeData","category","yDatum","x","convert","prevMin","prevMax","curr","barX","prev","bottomY","yValue","yValueIsNumber","labelText","width","height","stroke","text","visible","chart","layoutPending","dataPending","updateRectSelection","updateTextSelection","updateTextNodes","selectionData","updateRects","setData","exit","remove","enterRects","enter","append","each","rect","tag","Bar","crisp","merge","shadow","highlightedDatum","highlighted","fillShadow","updateTexts","enterTexts","pointerEvents","None","textAlign","textBaseline","labelEnabled","getTooltipHtml","nodeDatum","xName","yNames","tooltipRenderer","yKeyIndex","indexOf","yName","titleStyle","titleString","defaultTooltipClass","xValue","xString","String","yString","listSeriesItems","legendData","id","index","itemId","marker","toggleSeriesItem","enabledSeriesItems","className"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { Group } from \"../../../scene/group\";\nimport { Selection } from \"../../../scene/selection\";\nimport { Rect } from \"../../../scene/shape/rect\";\nimport { Text } from \"../../../scene/shape/text\";\nimport { BandScale } from \"../../../scale/bandScale\";\nimport palette from \"../../palettes\";\nimport { Label } from \"../../label\";\nimport { PointerEvents } from \"../../../scene/node\";\nimport { CartesianSeries } from \"./cartesianSeries\";\nimport { ChartAxisDirection, flipChartAxisDirection } from \"../../chartAxis\";\nimport { Chart } from \"../../chart\";\nimport { findLargestMinMax, findMinMax } from \"../../../util/array\";\nimport { toFixed } from \"../../../util/number\";\nimport { equal } from \"../../../util/equal\";\nimport { reactive } from \"../../../util/observable\";\nvar BarSeriesNodeTag;\n(function (BarSeriesNodeTag) {\n    BarSeriesNodeTag[BarSeriesNodeTag[\"Bar\"] = 0] = \"Bar\";\n    BarSeriesNodeTag[BarSeriesNodeTag[\"Label\"] = 1] = \"Label\";\n})(BarSeriesNodeTag || (BarSeriesNodeTag = {}));\nvar BarSeriesLabel = /** @class */ (function (_super) {\n    __extends(BarSeriesLabel, _super);\n    function BarSeriesLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        reactive('change')\n    ], BarSeriesLabel.prototype, \"formatter\", void 0);\n    return BarSeriesLabel;\n}(Label));\nvar BarSeries = /** @class */ (function (_super) {\n    __extends(BarSeries, _super);\n    function BarSeries() {\n        var _a;\n        var _this = _super.call(this) || this;\n        // Need to put bar and label nodes into separate groups, because even though label nodes are\n        // created after the bar nodes, this only guarantees that labels will always be on top of bars\n        // on the first run. If on the next run more bars are added, they might clip the labels\n        // rendered during the previous run.\n        _this.rectGroup = _this.group.appendChild(new Group);\n        _this.textGroup = _this.group.appendChild(new Group);\n        _this.rectSelection = Selection.select(_this.rectGroup).selectAll();\n        _this.textSelection = Selection.select(_this.textGroup).selectAll();\n        _this.xData = [];\n        _this.yData = [];\n        _this.yDomain = [];\n        _this.label = new BarSeriesLabel();\n        /**\n         * The assumption is that the values will be reset (to `true`)\n         * in the {@link yKeys} setter.\n         */\n        _this.seriesItemEnabled = new Map();\n        _this.flipXY = false;\n        _this.fills = palette.fills;\n        _this.strokes = palette.strokes;\n        _this.fillOpacity = 1;\n        _this.strokeOpacity = 1;\n        /**\n         * Used to get the position of bars within each group.\n         */\n        _this.groupScale = new BandScale();\n        _this.directionKeys = (_a = {},\n            _a[ChartAxisDirection.X] = ['xKey'],\n            _a[ChartAxisDirection.Y] = ['yKeys'],\n            _a);\n        _this._xKey = '';\n        _this._xName = '';\n        /**\n         * With a single value in the `yKeys` array we get the regular bar series.\n         * With multiple values, we get the stacked bar series.\n         * If the {@link grouped} set to `true`, we get the grouped bar series.\n         * @param values\n         */\n        _this._yKeys = [];\n        _this._yNames = [];\n        _this.grouped = false;\n        _this._strokeWidth = 1;\n        _this.highlightStyle = { fill: 'yellow' };\n        _this.label.enabled = false;\n        _this.label.addEventListener('change', _this.update, _this);\n        return _this;\n    }\n    BarSeries.prototype.getKeys = function (direction) {\n        var _this = this;\n        var directionKeys = this.directionKeys;\n        var keys = directionKeys && directionKeys[this.flipXY ? flipChartAxisDirection(direction) : direction];\n        var values = [];\n        if (keys) {\n            keys.forEach(function (key) {\n                var value = _this[key];\n                if (value) {\n                    if (Array.isArray(value)) {\n                        values.push.apply(values, value);\n                    }\n                    else {\n                        values.push(value);\n                    }\n                }\n            });\n        }\n        return values;\n    };\n    Object.defineProperty(BarSeries.prototype, \"xKey\", {\n        get: function () {\n            return this._xKey;\n        },\n        set: function (value) {\n            if (this._xKey !== value) {\n                this._xKey = value;\n                this.xData = [];\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarSeries.prototype, \"xName\", {\n        get: function () {\n            return this._xName;\n        },\n        set: function (value) {\n            if (this._xName !== value) {\n                this._xName = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarSeries.prototype, \"yKeys\", {\n        get: function () {\n            return this._yKeys;\n        },\n        set: function (values) {\n            if (!equal(this._yKeys, values)) {\n                this._yKeys = values;\n                this.yData = [];\n                var seriesItemEnabled_1 = this.seriesItemEnabled;\n                seriesItemEnabled_1.clear();\n                values.forEach(function (key) { return seriesItemEnabled_1.set(key, true); });\n                var groupScale = this.groupScale;\n                groupScale.domain = values;\n                groupScale.padding = 0.1;\n                groupScale.round = true;\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarSeries.prototype, \"yNames\", {\n        get: function () {\n            return this._yNames;\n        },\n        set: function (values) {\n            this._yNames = values;\n            this.scheduleData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarSeries.prototype, \"normalizedTo\", {\n        get: function () {\n            return this._normalizedTo;\n        },\n        set: function (value) {\n            var absValue = value ? Math.abs(value) : undefined;\n            if (this._normalizedTo !== absValue) {\n                this._normalizedTo = absValue;\n                this.scheduleData();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarSeries.prototype, \"strokeWidth\", {\n        get: function () {\n            return this._strokeWidth;\n        },\n        set: function (value) {\n            if (this._strokeWidth !== value) {\n                this._strokeWidth = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarSeries.prototype, \"shadow\", {\n        get: function () {\n            return this._shadow;\n        },\n        set: function (value) {\n            if (this._shadow !== value) {\n                this._shadow = value;\n                this.update();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BarSeries.prototype.onHighlightChange = function () {\n        this.updateRectNodes();\n    };\n    BarSeries.prototype.processData = function () {\n        var _a = this, xKey = _a.xKey, yKeys = _a.yKeys, seriesItemEnabled = _a.seriesItemEnabled;\n        var data = xKey && yKeys.length && this.data ? this.data : [];\n        // If the data is an array of rows like so:\n        //\n        // [{\n        //   xKey: 'Jan',\n        //   yKey1: 5,\n        //   yKey2: 7,\n        //   yKey3: -9,\n        // }, {\n        //   xKey: 'Feb',\n        //   yKey1: 10,\n        //   yKey2: -15,\n        //   yKey3: 20\n        // }]\n        //\n        var keysFound = true; // only warn once\n        this.xData = data.map(function (datum) {\n            if (keysFound && !(xKey in datum)) {\n                keysFound = false;\n                console.warn(\"The key '\" + xKey + \"' was not found in the data: \", datum);\n            }\n            return datum[xKey];\n        });\n        this.yData = data.map(function (datum) { return yKeys.map(function (yKey) {\n            if (keysFound && !(yKey in datum)) {\n                keysFound = false;\n                console.warn(\"The key '\" + yKey + \"' was not found in the data: \", datum);\n            }\n            var value = datum[yKey];\n            return isFinite(value) && seriesItemEnabled.get(yKey) ? value : 0;\n        }); });\n        // xData: ['Jan', 'Feb']\n        //\n        // yData: [\n        //   [5, 7, -9],\n        //   [10, -15, 20]\n        // ]\n        var yMinMax = this.yData.map(function (values) { return findMinMax(values); }); // used for normalization of stacked bars\n        var _b = this, yData = _b.yData, normalizedTo = _b.normalizedTo;\n        var yMin = Infinity;\n        var yMax = -Infinity;\n        if (this.grouped) {\n            // Find the tallest positive/negative bar in each group,\n            // then find the tallest positive/negative bar overall.\n            // The `yMin` should always be <= 0,\n            // otherwise with the `yData` like [300, 200, 100] the last bar\n            // will have zero height, because the y-axis range is [100, 300].\n            yMin = Math.min.apply(Math, __spreadArrays([0], yData.map(function (values) { return Math.min.apply(Math, values); })));\n            yMax = Math.max.apply(Math, yData.map(function (values) { return Math.max.apply(Math, values); }));\n        }\n        else { // stacked or regular\n            var yLargestMinMax = findLargestMinMax(yMinMax);\n            if (normalizedTo && isFinite(normalizedTo)) {\n                yMin = yLargestMinMax.min < 0 ? -normalizedTo : 0;\n                yMax = normalizedTo;\n                yData.forEach(function (stackValues, i) { return stackValues.forEach(function (y, j) {\n                    if (y < 0) {\n                        stackValues[j] = -y / yMinMax[i].min * normalizedTo;\n                    }\n                    else {\n                        stackValues[j] = y / yMinMax[i].max * normalizedTo;\n                    }\n                }); });\n            }\n            else {\n                yMin = yLargestMinMax.min;\n                yMax = yLargestMinMax.max;\n            }\n        }\n        this.yDomain = this.fixNumericExtent([yMin, yMax], 'y');\n        this.fireEvent({ type: 'dataProcessed' });\n        return true;\n    };\n    BarSeries.prototype.getDomain = function (direction) {\n        if (this.flipXY) {\n            direction = flipChartAxisDirection(direction);\n        }\n        if (direction === ChartAxisDirection.X) {\n            return this.xData;\n        }\n        else {\n            return this.yDomain;\n        }\n    };\n    BarSeries.prototype.fireNodeClickEvent = function (datum) {\n        this.fireEvent({\n            type: 'nodeClick',\n            series: this,\n            datum: datum.seriesDatum,\n            xKey: this.xKey,\n            yKey: datum.yKey\n        });\n    };\n    BarSeries.prototype.generateNodeData = function () {\n        var _this = this;\n        var _a = this, xAxis = _a.xAxis, yAxis = _a.yAxis, flipXY = _a.flipXY;\n        var xScale = (flipXY ? yAxis : xAxis).scale;\n        var yScale = (flipXY ? xAxis : yAxis).scale;\n        var _b = this, groupScale = _b.groupScale, yKeys = _b.yKeys, fills = _b.fills, strokes = _b.strokes, grouped = _b.grouped, strokeWidth = _b.strokeWidth, seriesItemEnabled = _b.seriesItemEnabled, data = _b.data, xData = _b.xData, yData = _b.yData;\n        var label = this.label;\n        var labelFontStyle = label.fontStyle;\n        var labelFontWeight = label.fontWeight;\n        var labelFontSize = label.fontSize;\n        var labelFontFamily = label.fontFamily;\n        var labelColor = label.color;\n        var labelFormatter = label.formatter;\n        groupScale.range = [0, xScale.bandwidth];\n        var barWidth = grouped ? groupScale.bandwidth : xScale.bandwidth;\n        var nodeData = [];\n        xData.forEach(function (category, i) {\n            var yDatum = yData[i];\n            var seriesDatum = data[i];\n            var x = xScale.convert(category);\n            var prevMin = 0;\n            var prevMax = 0;\n            yDatum.forEach(function (curr, j) {\n                var yKey = yKeys[j];\n                var barX = grouped ? x + groupScale.convert(yKey) : x;\n                var prev = curr < 0 ? prevMin : prevMax;\n                var y = yScale.convert(grouped ? curr : prev + curr);\n                var bottomY = yScale.convert(grouped ? 0 : prev);\n                var yValue = seriesDatum[yKey]; // unprocessed y-value\n                var yValueIsNumber = typeof yValue === 'number';\n                var labelText;\n                if (labelFormatter) {\n                    labelText = labelFormatter({ value: yValueIsNumber ? yValue : undefined });\n                }\n                else {\n                    labelText = yValueIsNumber && isFinite(yValue) ? yValue.toFixed(2) : '';\n                }\n                nodeData.push({\n                    series: _this,\n                    seriesDatum: seriesDatum,\n                    yValue: yValue,\n                    yKey: yKey,\n                    x: flipXY ? Math.min(y, bottomY) : barX,\n                    y: flipXY ? barX : Math.min(y, bottomY),\n                    width: flipXY ? Math.abs(bottomY - y) : barWidth,\n                    height: flipXY ? barWidth : Math.abs(bottomY - y),\n                    fill: fills[j % fills.length],\n                    stroke: strokes[j % strokes.length],\n                    strokeWidth: strokeWidth,\n                    label: seriesItemEnabled.get(yKey) && labelText ? {\n                        text: labelText,\n                        fontStyle: labelFontStyle,\n                        fontWeight: labelFontWeight,\n                        fontSize: labelFontSize,\n                        fontFamily: labelFontFamily,\n                        fill: labelColor,\n                        x: flipXY ? y + (yValue >= 0 ? -1 : 1) * Math.abs(bottomY - y) / 2 : barX + barWidth / 2,\n                        y: flipXY ? barX + barWidth / 2 : y + (yValue >= 0 ? 1 : -1) * Math.abs(bottomY - y) / 2\n                    } : undefined\n                });\n                if (!grouped) {\n                    if (curr < 0) {\n                        prevMin += curr;\n                    }\n                    else {\n                        prevMax += curr;\n                    }\n                }\n            });\n        });\n        return nodeData;\n    };\n    BarSeries.prototype.update = function () {\n        var _a = this, visible = _a.visible, chart = _a.chart, xAxis = _a.xAxis, yAxis = _a.yAxis, xData = _a.xData, yData = _a.yData;\n        this.group.visible = visible;\n        if (!chart || chart.layoutPending || chart.dataPending ||\n            !xAxis || !yAxis || !visible || !xData.length || !yData.length) {\n            return;\n        }\n        var nodeData = this.generateNodeData();\n        this.updateRectSelection(nodeData);\n        this.updateRectNodes();\n        this.updateTextSelection(nodeData);\n        this.updateTextNodes();\n    };\n    BarSeries.prototype.updateRectSelection = function (selectionData) {\n        var updateRects = this.rectSelection.setData(selectionData);\n        updateRects.exit.remove();\n        var enterRects = updateRects.enter.append(Rect).each(function (rect) {\n            rect.tag = BarSeriesNodeTag.Bar;\n            rect.crisp = true;\n        });\n        this.rectSelection = updateRects.merge(enterRects);\n    };\n    BarSeries.prototype.updateRectNodes = function () {\n        var _a = this, fillOpacity = _a.fillOpacity, strokeOpacity = _a.strokeOpacity, shadow = _a.shadow, _b = _a.highlightStyle, fill = _b.fill, stroke = _b.stroke;\n        var highlightedDatum = this.chart.highlightedDatum;\n        this.rectSelection.each(function (rect, datum) {\n            var highlighted = datum === highlightedDatum;\n            rect.x = datum.x;\n            rect.y = datum.y;\n            rect.width = datum.width;\n            rect.height = datum.height;\n            rect.fill = highlighted && fill !== undefined ? fill : datum.fill;\n            rect.stroke = highlighted && stroke !== undefined ? stroke : datum.stroke;\n            rect.fillOpacity = fillOpacity;\n            rect.strokeOpacity = strokeOpacity;\n            rect.strokeWidth = datum.strokeWidth;\n            rect.fillShadow = shadow;\n            rect.visible = datum.height > 0; // prevent stroke from rendering for zero height bars\n        });\n    };\n    BarSeries.prototype.updateTextSelection = function (selectionData) {\n        var updateTexts = this.textSelection.setData(selectionData);\n        updateTexts.exit.remove();\n        var enterTexts = updateTexts.enter.append(Text).each(function (text) {\n            text.tag = BarSeriesNodeTag.Label;\n            text.pointerEvents = PointerEvents.None;\n            text.textAlign = 'center';\n            text.textBaseline = 'middle';\n        });\n        this.textSelection = updateTexts.merge(enterTexts);\n    };\n    BarSeries.prototype.updateTextNodes = function () {\n        var labelEnabled = this.label.enabled;\n        this.textSelection.each(function (text, datum) {\n            var label = datum.label;\n            if (label && labelEnabled) {\n                text.fontStyle = label.fontStyle;\n                text.fontWeight = label.fontWeight;\n                text.fontSize = label.fontSize;\n                text.fontFamily = label.fontFamily;\n                text.text = label.text;\n                text.x = label.x;\n                text.y = label.y;\n                text.fill = label.fill;\n                text.visible = true;\n            }\n            else {\n                text.visible = false;\n            }\n        });\n    };\n    BarSeries.prototype.getTooltipHtml = function (nodeDatum) {\n        var xKey = this.xKey;\n        var yKey = nodeDatum.yKey;\n        if (!xKey || !yKey) {\n            return '';\n        }\n        var _a = this, xName = _a.xName, yKeys = _a.yKeys, yNames = _a.yNames, fills = _a.fills, tooltipRenderer = _a.tooltipRenderer;\n        var datum = nodeDatum.seriesDatum;\n        var yKeyIndex = yKeys.indexOf(yKey);\n        var yName = yNames[yKeyIndex];\n        var color = fills[yKeyIndex % fills.length];\n        if (tooltipRenderer) {\n            return tooltipRenderer({\n                datum: datum,\n                xKey: xKey,\n                xName: xName,\n                yKey: yKey,\n                yName: yName,\n                color: color\n            });\n        }\n        else {\n            var titleStyle = \"style=\\\"color: white; background-color: \" + color + \"\\\"\";\n            var titleString = yName ? \"<div class=\\\"\" + Chart.defaultTooltipClass + \"-title\\\" \" + titleStyle + \">\" + yName + \"</div>\" : '';\n            var xValue = datum[xKey];\n            var yValue = datum[yKey];\n            var xString = typeof xValue === 'number' ? toFixed(xValue) : String(xValue);\n            var yString = typeof yValue === 'number' ? toFixed(yValue) : String(yValue);\n            return titleString + \"<div class=\\\"\" + Chart.defaultTooltipClass + \"-content\\\">\" + xString + \": \" + yString + \"</div>\";\n        }\n    };\n    BarSeries.prototype.listSeriesItems = function (legendData) {\n        var _a = this, id = _a.id, data = _a.data, xKey = _a.xKey, yKeys = _a.yKeys, yNames = _a.yNames, seriesItemEnabled = _a.seriesItemEnabled, fills = _a.fills, strokes = _a.strokes, fillOpacity = _a.fillOpacity, strokeOpacity = _a.strokeOpacity;\n        if (data && data.length && xKey && yKeys.length) {\n            yKeys.forEach(function (yKey, index) {\n                legendData.push({\n                    id: id,\n                    itemId: yKey,\n                    enabled: seriesItemEnabled.get(yKey) || false,\n                    label: {\n                        text: yNames[index] || yKeys[index]\n                    },\n                    marker: {\n                        fill: fills[index % fills.length],\n                        stroke: strokes[index % strokes.length],\n                        fillOpacity: fillOpacity,\n                        strokeOpacity: strokeOpacity\n                    }\n                });\n            });\n        }\n    };\n    BarSeries.prototype.toggleSeriesItem = function (itemId, enabled) {\n        var seriesItemEnabled = this.seriesItemEnabled;\n        var enabledSeriesItems = [];\n        seriesItemEnabled.set(itemId, enabled);\n        seriesItemEnabled.forEach(function (enabled, yKey) {\n            if (enabled) {\n                enabledSeriesItems.push(yKey);\n            }\n        });\n        this.groupScale.domain = enabledSeriesItems;\n        this.scheduleData();\n    };\n    BarSeries.className = 'BarSeries';\n    BarSeries.type = 'bar';\n    __decorate([\n        reactive('layoutChange')\n    ], BarSeries.prototype, \"flipXY\", void 0);\n    __decorate([\n        reactive('dataChange')\n    ], BarSeries.prototype, \"fills\", void 0);\n    __decorate([\n        reactive('dataChange')\n    ], BarSeries.prototype, \"strokes\", void 0);\n    __decorate([\n        reactive('layoutChange')\n    ], BarSeries.prototype, \"fillOpacity\", void 0);\n    __decorate([\n        reactive('layoutChange')\n    ], BarSeries.prototype, \"strokeOpacity\", void 0);\n    __decorate([\n        reactive('dataChange')\n    ], BarSeries.prototype, \"grouped\", void 0);\n    return BarSeries;\n}(CartesianSeries));\nexport { BarSeries };\n"]},"metadata":{},"sourceType":"module"}