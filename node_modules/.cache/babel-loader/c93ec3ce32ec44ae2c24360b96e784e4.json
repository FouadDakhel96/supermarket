{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Bean, PreDestroy, Autowired, PostConstruct } from \"../context/context\";\nimport { Events } from \"../events\";\nimport { _ } from \"../utils\";\nimport { BeanStub } from \"../context/beanStub\";\n/** Adds drag listening onto an element. In ag-Grid this is used twice, first is resizing columns,\n * second is moving the columns and column groups around (ie the 'drag' part of Drag and Drop. */\n\nvar DragService =\n/** @class */\nfunction (_super) {\n  __extends(DragService, _super);\n\n  function DragService() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.dragEndFunctions = [];\n    _this.dragSources = [];\n    return _this;\n  }\n\n  DragService.prototype.init = function () {\n    this.logger = this.loggerFactory.create('DragService');\n  };\n\n  DragService.prototype.removeAllListeners = function () {\n    this.dragSources.forEach(this.removeListener.bind(this));\n    this.dragSources.length = 0;\n  };\n\n  DragService.prototype.removeListener = function (dragSourceAndListener) {\n    var element = dragSourceAndListener.dragSource.eElement;\n    var mouseDownListener = dragSourceAndListener.mouseDownListener;\n    element.removeEventListener('mousedown', mouseDownListener); // remove touch listener only if it exists\n\n    if (dragSourceAndListener.touchEnabled) {\n      var touchStartListener = dragSourceAndListener.touchStartListener;\n      element.removeEventListener('touchstart', touchStartListener, {\n        passive: true\n      });\n    }\n  };\n\n  DragService.prototype.removeDragSource = function (params) {\n    var dragSourceAndListener = _.find(this.dragSources, function (item) {\n      return item.dragSource === params;\n    });\n\n    if (!dragSourceAndListener) {\n      return;\n    }\n\n    this.removeListener(dragSourceAndListener);\n\n    _.removeFromArray(this.dragSources, dragSourceAndListener);\n  };\n\n  DragService.prototype.setNoSelectToBody = function (noSelect) {\n    var eDocument = this.gridOptionsWrapper.getDocument();\n    var eBody = eDocument.querySelector('body');\n\n    if (_.exists(eBody)) {\n      // when we drag the mouse in ag-Grid, this class gets added / removed from the body, so that\n      // the mouse isn't selecting text when dragging.\n      _.addOrRemoveCssClass(eBody, 'ag-unselectable', noSelect);\n    }\n  };\n\n  DragService.prototype.addDragSource = function (params, includeTouch) {\n    if (includeTouch === void 0) {\n      includeTouch = false;\n    }\n\n    var mouseListener = this.onMouseDown.bind(this, params);\n    params.eElement.addEventListener('mousedown', mouseListener);\n    var touchListener = null;\n    var suppressTouch = this.gridOptionsWrapper.isSuppressTouch();\n\n    if (includeTouch && !suppressTouch) {\n      touchListener = this.onTouchStart.bind(this, params);\n      params.eElement.addEventListener('touchstart', touchListener, {\n        passive: false\n      });\n    }\n\n    this.dragSources.push({\n      dragSource: params,\n      mouseDownListener: mouseListener,\n      touchStartListener: touchListener,\n      touchEnabled: includeTouch\n    });\n  }; // gets called whenever mouse down on any drag source\n\n\n  DragService.prototype.onTouchStart = function (params, touchEvent) {\n    var _this = this;\n\n    this.currentDragParams = params;\n    this.dragging = false;\n    var touch = touchEvent.touches[0];\n    this.touchLastTime = touch;\n    this.touchStart = touch;\n\n    if (touchEvent.cancelable) {\n      touchEvent.preventDefault();\n    }\n\n    var touchMoveEvent = function (e) {\n      return _this.onTouchMove(e, params.eElement);\n    };\n\n    var touchEndEvent = function (e) {\n      return _this.onTouchUp(e, params.eElement);\n    };\n\n    var target = params.eElement;\n    var events = [{\n      target: target,\n      type: 'touchmove',\n      listener: touchMoveEvent,\n      options: {\n        passive: true\n      }\n    }, {\n      target: target,\n      type: 'touchend',\n      listener: touchEndEvent,\n      options: {\n        passive: true\n      }\n    }, {\n      target: target,\n      type: 'touchcancel',\n      listener: touchEndEvent,\n      options: {\n        passive: true\n      }\n    }]; // temporally add these listeners, for the duration of the drag\n\n    this.addTemporaryEvents(events); // see if we want to start dragging straight away\n\n    if (params.dragStartPixels === 0) {\n      this.onCommonMove(touch, this.touchStart, params.eElement);\n    }\n  }; // gets called whenever mouse down on any drag source\n\n\n  DragService.prototype.onMouseDown = function (params, mouseEvent) {\n    var _this = this;\n\n    var e = mouseEvent;\n\n    if (params.skipMouseEvent && params.skipMouseEvent(mouseEvent)) {\n      return;\n    } // if there are two elements with parent / child relationship, and both are draggable,\n    // when we drag the child, we should NOT drag the parent. an example of this is row moving\n    // and range selection - row moving should get preference when use drags the rowDrag component.\n\n\n    if (e._alreadyProcessedByDragService) {\n      return;\n    }\n\n    e._alreadyProcessedByDragService = true; // only interested in left button clicks\n\n    if (mouseEvent.button !== 0) {\n      return;\n    }\n\n    this.currentDragParams = params;\n    this.dragging = false;\n    this.mouseStartEvent = mouseEvent;\n    var eDocument = this.gridOptionsWrapper.getDocument();\n    this.setNoSelectToBody(true);\n\n    var mouseMoveEvent = function (e, el) {\n      return _this.onMouseMove(e, params.eElement);\n    };\n\n    var mouseUpEvent = function (e, el) {\n      return _this.onMouseUp(e, params.eElement);\n    };\n\n    var contextEvent = function (e) {\n      return e.preventDefault();\n    };\n\n    var target = eDocument;\n    var events = [{\n      target: target,\n      type: 'mousemove',\n      listener: mouseMoveEvent\n    }, {\n      target: target,\n      type: 'mouseup',\n      listener: mouseUpEvent\n    }, {\n      target: target,\n      type: 'contextmenu',\n      listener: contextEvent\n    }]; // temporally add these listeners, for the duration of the drag\n\n    this.addTemporaryEvents(events); //see if we want to start dragging straight away\n\n    if (params.dragStartPixels === 0) {\n      this.onMouseMove(mouseEvent, params.eElement);\n    }\n  };\n\n  DragService.prototype.addTemporaryEvents = function (events) {\n    events.forEach(function (currentEvent) {\n      var target = currentEvent.target,\n          type = currentEvent.type,\n          listener = currentEvent.listener,\n          options = currentEvent.options;\n      target.addEventListener(type, listener, options);\n    });\n    this.dragEndFunctions.push(function () {\n      events.forEach(function (currentEvent) {\n        var target = currentEvent.target,\n            type = currentEvent.type,\n            listener = currentEvent.listener,\n            options = currentEvent.options;\n        target.removeEventListener(type, listener, options);\n      });\n    });\n  }; // returns true if the event is close to the original event by X pixels either vertically or horizontally.\n  // we only start dragging after X pixels so this allows us to know if we should start dragging yet.\n\n\n  DragService.prototype.isEventNearStartEvent = function (currentEvent, startEvent) {\n    // by default, we wait 4 pixels before starting the drag\n    var dragStartPixels = this.currentDragParams.dragStartPixels;\n    var requiredPixelDiff = _.exists(dragStartPixels) ? dragStartPixels : 4;\n    return _.areEventsNear(currentEvent, startEvent, requiredPixelDiff);\n  };\n\n  DragService.prototype.getFirstActiveTouch = function (touchList) {\n    for (var i = 0; i < touchList.length; i++) {\n      if (touchList[i].identifier === this.touchStart.identifier) {\n        return touchList[i];\n      }\n    }\n\n    return null;\n  };\n\n  DragService.prototype.onCommonMove = function (currentEvent, startEvent, el) {\n    if (!this.dragging) {\n      // if mouse hasn't travelled from the start position enough, do nothing\n      if (!this.dragging && this.isEventNearStartEvent(currentEvent, startEvent)) {\n        return;\n      }\n\n      this.dragging = true;\n      var event_1 = {\n        type: Events.EVENT_DRAG_STARTED,\n        api: this.gridApi,\n        columnApi: this.columnApi,\n        target: el\n      };\n      this.eventService.dispatchEvent(event_1);\n      this.currentDragParams.onDragStart(startEvent);\n    }\n\n    this.currentDragParams.onDragging(currentEvent);\n  };\n\n  DragService.prototype.onTouchMove = function (touchEvent, el) {\n    var touch = this.getFirstActiveTouch(touchEvent.touches);\n\n    if (!touch) {\n      return;\n    } // this.___statusPanel.setInfoText(Math.random() + ' onTouchMove preventDefault stopPropagation');\n    // if we don't preview default, then the browser will try and do it's own touch stuff,\n    // like do 'back button' (chrome does this) or scroll the page (eg drag column could  be confused\n    // with scroll page in the app)\n    // touchEvent.preventDefault();\n\n\n    this.onCommonMove(touch, this.touchStart, el);\n  }; // only gets called after a mouse down - as this is only added after mouseDown\n  // and is removed when mouseUp happens\n\n\n  DragService.prototype.onMouseMove = function (mouseEvent, el) {\n    this.onCommonMove(mouseEvent, this.mouseStartEvent, el);\n  };\n\n  DragService.prototype.onTouchUp = function (touchEvent, el) {\n    var touch = this.getFirstActiveTouch(touchEvent.changedTouches); // i haven't worked this out yet, but there is no matching touch\n    // when we get the touch up event. to get around this, we swap in\n    // the last touch. this is a hack to 'get it working' while we\n    // figure out what's going on, why we are not getting a touch in\n    // current event.\n\n    if (!touch) {\n      touch = this.touchLastTime;\n    } // if mouse was left up before we started to move, then this is a tap.\n    // we check this before onUpCommon as onUpCommon resets the dragging\n    // let tap = !this.dragging;\n    // let tapTarget = this.currentDragParams.eElement;\n\n\n    this.onUpCommon(touch, el); // if tap, tell user\n    // console.log(`${Math.random()} tap = ${tap}`);\n    // if (tap) {\n    //     tapTarget.click();\n    // }\n  };\n\n  DragService.prototype.onMouseUp = function (mouseEvent, el) {\n    this.onUpCommon(mouseEvent, el);\n  };\n\n  DragService.prototype.onUpCommon = function (eventOrTouch, el) {\n    if (this.dragging) {\n      this.dragging = false;\n      this.currentDragParams.onDragStop(eventOrTouch);\n      var event_2 = {\n        type: Events.EVENT_DRAG_STOPPED,\n        api: this.gridApi,\n        columnApi: this.columnApi,\n        target: el\n      };\n      this.eventService.dispatchEvent(event_2);\n    }\n\n    this.setNoSelectToBody(false);\n    this.mouseStartEvent = null;\n    this.touchStart = null;\n    this.touchLastTime = null;\n    this.currentDragParams = null;\n    this.dragEndFunctions.forEach(function (func) {\n      return func();\n    });\n    this.dragEndFunctions.length = 0;\n  };\n\n  __decorate([Autowired('loggerFactory')], DragService.prototype, \"loggerFactory\", void 0);\n\n  __decorate([Autowired('gridOptionsWrapper')], DragService.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([Autowired('columnApi')], DragService.prototype, \"columnApi\", void 0);\n\n  __decorate([Autowired('gridApi')], DragService.prototype, \"gridApi\", void 0);\n\n  __decorate([PostConstruct], DragService.prototype, \"init\", null);\n\n  __decorate([PreDestroy], DragService.prototype, \"removeAllListeners\", null);\n\n  DragService = __decorate([Bean('dragService')], DragService);\n  return DragService;\n}(BeanStub);\n\nexport { DragService };","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/@ag-grid-community/core/dist/es6/dragAndDrop/dragService.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Bean","PreDestroy","Autowired","PostConstruct","Events","_","BeanStub","DragService","_super","_this","apply","dragEndFunctions","dragSources","init","logger","loggerFactory","removeAllListeners","forEach","removeListener","bind","dragSourceAndListener","element","dragSource","eElement","mouseDownListener","removeEventListener","touchEnabled","touchStartListener","passive","removeDragSource","params","find","item","removeFromArray","setNoSelectToBody","noSelect","eDocument","gridOptionsWrapper","getDocument","eBody","querySelector","exists","addOrRemoveCssClass","addDragSource","includeTouch","mouseListener","onMouseDown","addEventListener","touchListener","suppressTouch","isSuppressTouch","onTouchStart","push","touchEvent","currentDragParams","dragging","touch","touches","touchLastTime","touchStart","cancelable","preventDefault","touchMoveEvent","e","onTouchMove","touchEndEvent","onTouchUp","events","type","listener","options","addTemporaryEvents","dragStartPixels","onCommonMove","mouseEvent","skipMouseEvent","_alreadyProcessedByDragService","button","mouseStartEvent","mouseMoveEvent","el","onMouseMove","mouseUpEvent","onMouseUp","contextEvent","currentEvent","isEventNearStartEvent","startEvent","requiredPixelDiff","areEventsNear","getFirstActiveTouch","touchList","identifier","event_1","EVENT_DRAG_STARTED","api","gridApi","columnApi","eventService","dispatchEvent","onDragStart","onDragging","changedTouches","onUpCommon","eventOrTouch","onDragStop","event_2","EVENT_DRAG_STOPPED","func"],"mappings":"AAAA;;;;;;AAMA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIA,CAAC,CAACM,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAAc,KAF9E;;AAGA,WAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnBF,IAAAA,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASO,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBT,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACU,SAAF,GAAcT,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACS,MAAP,CAAcV,CAAd,CAAb,IAAiCO,EAAE,CAACE,SAAH,GAAeT,CAAC,CAACS,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;AACH,GAJD;AAKH,CAZ2C,EAA5C;;AAaA,IAAII,UAAU,GAAI,QAAQ,KAAKA,UAAd,IAA6B,UAAUC,UAAV,EAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACnF,MAAIC,CAAC,GAAGC,SAAS,CAACC,MAAlB;AAAA,MAA0BC,CAAC,GAAGH,CAAC,GAAG,CAAJ,GAAQH,MAAR,GAAiBE,IAAI,KAAK,IAAT,GAAgBA,IAAI,GAAGd,MAAM,CAACmB,wBAAP,CAAgCP,MAAhC,EAAwCC,GAAxC,CAAvB,GAAsEC,IAArH;AAAA,MAA2HhB,CAA3H;AACA,MAAI,OAAOsB,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACC,QAAf,KAA4B,UAA/D,EAA2EH,CAAC,GAAGE,OAAO,CAACC,QAAR,CAAiBV,UAAjB,EAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,CAAJ,CAA3E,KACK,KAAK,IAAIQ,CAAC,GAAGX,UAAU,CAACM,MAAX,GAAoB,CAAjC,EAAoCK,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C,EAAiD,IAAIxB,CAAC,GAAGa,UAAU,CAACW,CAAD,CAAlB,EAAuBJ,CAAC,GAAG,CAACH,CAAC,GAAG,CAAJ,GAAQjB,CAAC,CAACoB,CAAD,CAAT,GAAeH,CAAC,GAAG,CAAJ,GAAQjB,CAAC,CAACc,MAAD,EAASC,GAAT,EAAcK,CAAd,CAAT,GAA4BpB,CAAC,CAACc,MAAD,EAASC,GAAT,CAA7C,KAA+DK,CAAnE;AAC7E,SAAOH,CAAC,GAAG,CAAJ,IAASG,CAAT,IAAclB,MAAM,CAACuB,cAAP,CAAsBX,MAAtB,EAA8BC,GAA9B,EAAmCK,CAAnC,CAAd,EAAqDA,CAA5D;AACH,CALD;;AAMA,SAASM,IAAT,EAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,aAAtC,QAA2D,oBAA3D;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,CAAT,QAAkB,UAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA;;;AAEA,IAAIC,WAAW;AAAG;AAAe,UAAUC,MAAV,EAAkB;AAC/CpC,EAAAA,SAAS,CAACmC,WAAD,EAAcC,MAAd,CAAT;;AACA,WAASD,WAAT,GAAuB;AACnB,QAAIE,KAAK,GAAGD,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACE,KAAP,CAAa,IAAb,EAAmBlB,SAAnB,CAAnB,IAAoD,IAAhE;;AACAiB,IAAAA,KAAK,CAACE,gBAAN,GAAyB,EAAzB;AACAF,IAAAA,KAAK,CAACG,WAAN,GAAoB,EAApB;AACA,WAAOH,KAAP;AACH;;AACDF,EAAAA,WAAW,CAACvB,SAAZ,CAAsB6B,IAAtB,GAA6B,YAAY;AACrC,SAAKC,MAAL,GAAc,KAAKC,aAAL,CAAmB9B,MAAnB,CAA0B,aAA1B,CAAd;AACH,GAFD;;AAGAsB,EAAAA,WAAW,CAACvB,SAAZ,CAAsBgC,kBAAtB,GAA2C,YAAY;AACnD,SAAKJ,WAAL,CAAiBK,OAAjB,CAAyB,KAAKC,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAzB;AACA,SAAKP,WAAL,CAAiBnB,MAAjB,GAA0B,CAA1B;AACH,GAHD;;AAIAc,EAAAA,WAAW,CAACvB,SAAZ,CAAsBkC,cAAtB,GAAuC,UAAUE,qBAAV,EAAiC;AACpE,QAAIC,OAAO,GAAGD,qBAAqB,CAACE,UAAtB,CAAiCC,QAA/C;AACA,QAAIC,iBAAiB,GAAGJ,qBAAqB,CAACI,iBAA9C;AACAH,IAAAA,OAAO,CAACI,mBAAR,CAA4B,WAA5B,EAAyCD,iBAAzC,EAHoE,CAIpE;;AACA,QAAIJ,qBAAqB,CAACM,YAA1B,EAAwC;AACpC,UAAIC,kBAAkB,GAAGP,qBAAqB,CAACO,kBAA/C;AACAN,MAAAA,OAAO,CAACI,mBAAR,CAA4B,YAA5B,EAA0CE,kBAA1C,EAA8D;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAA9D;AACH;AACJ,GATD;;AAUArB,EAAAA,WAAW,CAACvB,SAAZ,CAAsB6C,gBAAtB,GAAyC,UAAUC,MAAV,EAAkB;AACvD,QAAIV,qBAAqB,GAAGf,CAAC,CAAC0B,IAAF,CAAO,KAAKnB,WAAZ,EAAyB,UAAUoB,IAAV,EAAgB;AAAE,aAAOA,IAAI,CAACV,UAAL,KAAoBQ,MAA3B;AAAoC,KAA/E,CAA5B;;AACA,QAAI,CAACV,qBAAL,EAA4B;AACxB;AACH;;AACD,SAAKF,cAAL,CAAoBE,qBAApB;;AACAf,IAAAA,CAAC,CAAC4B,eAAF,CAAkB,KAAKrB,WAAvB,EAAoCQ,qBAApC;AACH,GAPD;;AAQAb,EAAAA,WAAW,CAACvB,SAAZ,CAAsBkD,iBAAtB,GAA0C,UAAUC,QAAV,EAAoB;AAC1D,QAAIC,SAAS,GAAG,KAAKC,kBAAL,CAAwBC,WAAxB,EAAhB;AACA,QAAIC,KAAK,GAAGH,SAAS,CAACI,aAAV,CAAwB,MAAxB,CAAZ;;AACA,QAAInC,CAAC,CAACoC,MAAF,CAASF,KAAT,CAAJ,EAAqB;AACjB;AACA;AACAlC,MAAAA,CAAC,CAACqC,mBAAF,CAAsBH,KAAtB,EAA6B,iBAA7B,EAAgDJ,QAAhD;AACH;AACJ,GARD;;AASA5B,EAAAA,WAAW,CAACvB,SAAZ,CAAsB2D,aAAtB,GAAsC,UAAUb,MAAV,EAAkBc,YAAlB,EAAgC;AAClE,QAAIA,YAAY,KAAK,KAAK,CAA1B,EAA6B;AAAEA,MAAAA,YAAY,GAAG,KAAf;AAAuB;;AACtD,QAAIC,aAAa,GAAG,KAAKC,WAAL,CAAiB3B,IAAjB,CAAsB,IAAtB,EAA4BW,MAA5B,CAApB;AACAA,IAAAA,MAAM,CAACP,QAAP,CAAgBwB,gBAAhB,CAAiC,WAAjC,EAA8CF,aAA9C;AACA,QAAIG,aAAa,GAAG,IAApB;AACA,QAAIC,aAAa,GAAG,KAAKZ,kBAAL,CAAwBa,eAAxB,EAApB;;AACA,QAAIN,YAAY,IAAI,CAACK,aAArB,EAAoC;AAChCD,MAAAA,aAAa,GAAG,KAAKG,YAAL,CAAkBhC,IAAlB,CAAuB,IAAvB,EAA6BW,MAA7B,CAAhB;AACAA,MAAAA,MAAM,CAACP,QAAP,CAAgBwB,gBAAhB,CAAiC,YAAjC,EAA+CC,aAA/C,EAA8D;AAAEpB,QAAAA,OAAO,EAAE;AAAX,OAA9D;AACH;;AACD,SAAKhB,WAAL,CAAiBwC,IAAjB,CAAsB;AAClB9B,MAAAA,UAAU,EAAEQ,MADM;AAElBN,MAAAA,iBAAiB,EAAEqB,aAFD;AAGlBlB,MAAAA,kBAAkB,EAAEqB,aAHF;AAIlBtB,MAAAA,YAAY,EAAEkB;AAJI,KAAtB;AAMH,GAhBD,CA1C+C,CA2D/C;;;AACArC,EAAAA,WAAW,CAACvB,SAAZ,CAAsBmE,YAAtB,GAAqC,UAAUrB,MAAV,EAAkBuB,UAAlB,EAA8B;AAC/D,QAAI5C,KAAK,GAAG,IAAZ;;AACA,SAAK6C,iBAAL,GAAyBxB,MAAzB;AACA,SAAKyB,QAAL,GAAgB,KAAhB;AACA,QAAIC,KAAK,GAAGH,UAAU,CAACI,OAAX,CAAmB,CAAnB,CAAZ;AACA,SAAKC,aAAL,GAAqBF,KAArB;AACA,SAAKG,UAAL,GAAkBH,KAAlB;;AACA,QAAIH,UAAU,CAACO,UAAf,EAA2B;AACvBP,MAAAA,UAAU,CAACQ,cAAX;AACH;;AACD,QAAIC,cAAc,GAAG,UAAUC,CAAV,EAAa;AAAE,aAAOtD,KAAK,CAACuD,WAAN,CAAkBD,CAAlB,EAAqBjC,MAAM,CAACP,QAA5B,CAAP;AAA+C,KAAnF;;AACA,QAAI0C,aAAa,GAAG,UAAUF,CAAV,EAAa;AAAE,aAAOtD,KAAK,CAACyD,SAAN,CAAgBH,CAAhB,EAAmBjC,MAAM,CAACP,QAA1B,CAAP;AAA6C,KAAhF;;AACA,QAAInC,MAAM,GAAG0C,MAAM,CAACP,QAApB;AACA,QAAI4C,MAAM,GAAG,CACT;AAAE/E,MAAAA,MAAM,EAAEA,MAAV;AAAkBgF,MAAAA,IAAI,EAAE,WAAxB;AAAqCC,MAAAA,QAAQ,EAAEP,cAA/C;AAA+DQ,MAAAA,OAAO,EAAE;AAAE1C,QAAAA,OAAO,EAAE;AAAX;AAAxE,KADS,EAET;AAAExC,MAAAA,MAAM,EAAEA,MAAV;AAAkBgF,MAAAA,IAAI,EAAE,UAAxB;AAAoCC,MAAAA,QAAQ,EAAEJ,aAA9C;AAA6DK,MAAAA,OAAO,EAAE;AAAE1C,QAAAA,OAAO,EAAE;AAAX;AAAtE,KAFS,EAGT;AAAExC,MAAAA,MAAM,EAAEA,MAAV;AAAkBgF,MAAAA,IAAI,EAAE,aAAxB;AAAuCC,MAAAA,QAAQ,EAAEJ,aAAjD;AAAgEK,MAAAA,OAAO,EAAE;AAAE1C,QAAAA,OAAO,EAAE;AAAX;AAAzE,KAHS,CAAb,CAb+D,CAkB/D;;AACA,SAAK2C,kBAAL,CAAwBJ,MAAxB,EAnB+D,CAoB/D;;AACA,QAAIrC,MAAM,CAAC0C,eAAP,KAA2B,CAA/B,EAAkC;AAC9B,WAAKC,YAAL,CAAkBjB,KAAlB,EAAyB,KAAKG,UAA9B,EAA0C7B,MAAM,CAACP,QAAjD;AACH;AACJ,GAxBD,CA5D+C,CAqF/C;;;AACAhB,EAAAA,WAAW,CAACvB,SAAZ,CAAsB8D,WAAtB,GAAoC,UAAUhB,MAAV,EAAkB4C,UAAlB,EAA8B;AAC9D,QAAIjE,KAAK,GAAG,IAAZ;;AACA,QAAIsD,CAAC,GAAGW,UAAR;;AACA,QAAI5C,MAAM,CAAC6C,cAAP,IAAyB7C,MAAM,CAAC6C,cAAP,CAAsBD,UAAtB,CAA7B,EAAgE;AAC5D;AACH,KAL6D,CAM9D;AACA;AACA;;;AACA,QAAIX,CAAC,CAACa,8BAAN,EAAsC;AAClC;AACH;;AACDb,IAAAA,CAAC,CAACa,8BAAF,GAAmC,IAAnC,CAZ8D,CAa9D;;AACA,QAAIF,UAAU,CAACG,MAAX,KAAsB,CAA1B,EAA6B;AACzB;AACH;;AACD,SAAKvB,iBAAL,GAAyBxB,MAAzB;AACA,SAAKyB,QAAL,GAAgB,KAAhB;AACA,SAAKuB,eAAL,GAAuBJ,UAAvB;AACA,QAAItC,SAAS,GAAG,KAAKC,kBAAL,CAAwBC,WAAxB,EAAhB;AACA,SAAKJ,iBAAL,CAAuB,IAAvB;;AACA,QAAI6C,cAAc,GAAG,UAAUhB,CAAV,EAAaiB,EAAb,EAAiB;AAAE,aAAOvE,KAAK,CAACwE,WAAN,CAAkBlB,CAAlB,EAAqBjC,MAAM,CAACP,QAA5B,CAAP;AAA+C,KAAvF;;AACA,QAAI2D,YAAY,GAAG,UAAUnB,CAAV,EAAaiB,EAAb,EAAiB;AAAE,aAAOvE,KAAK,CAAC0E,SAAN,CAAgBpB,CAAhB,EAAmBjC,MAAM,CAACP,QAA1B,CAAP;AAA6C,KAAnF;;AACA,QAAI6D,YAAY,GAAG,UAAUrB,CAAV,EAAa;AAAE,aAAOA,CAAC,CAACF,cAAF,EAAP;AAA4B,KAA9D;;AACA,QAAIzE,MAAM,GAAGgD,SAAb;AACA,QAAI+B,MAAM,GAAG,CACT;AAAE/E,MAAAA,MAAM,EAAEA,MAAV;AAAkBgF,MAAAA,IAAI,EAAE,WAAxB;AAAqCC,MAAAA,QAAQ,EAAEU;AAA/C,KADS,EAET;AAAE3F,MAAAA,MAAM,EAAEA,MAAV;AAAkBgF,MAAAA,IAAI,EAAE,SAAxB;AAAmCC,MAAAA,QAAQ,EAAEa;AAA7C,KAFS,EAGT;AAAE9F,MAAAA,MAAM,EAAEA,MAAV;AAAkBgF,MAAAA,IAAI,EAAE,aAAxB;AAAuCC,MAAAA,QAAQ,EAAEe;AAAjD,KAHS,CAAb,CA1B8D,CA+B9D;;AACA,SAAKb,kBAAL,CAAwBJ,MAAxB,EAhC8D,CAiC9D;;AACA,QAAIrC,MAAM,CAAC0C,eAAP,KAA2B,CAA/B,EAAkC;AAC9B,WAAKS,WAAL,CAAiBP,UAAjB,EAA6B5C,MAAM,CAACP,QAApC;AACH;AACJ,GArCD;;AAsCAhB,EAAAA,WAAW,CAACvB,SAAZ,CAAsBuF,kBAAtB,GAA2C,UAAUJ,MAAV,EAAkB;AACzDA,IAAAA,MAAM,CAAClD,OAAP,CAAe,UAAUoE,YAAV,EAAwB;AACnC,UAAIjG,MAAM,GAAGiG,YAAY,CAACjG,MAA1B;AAAA,UAAkCgF,IAAI,GAAGiB,YAAY,CAACjB,IAAtD;AAAA,UAA4DC,QAAQ,GAAGgB,YAAY,CAAChB,QAApF;AAAA,UAA8FC,OAAO,GAAGe,YAAY,CAACf,OAArH;AACAlF,MAAAA,MAAM,CAAC2D,gBAAP,CAAwBqB,IAAxB,EAA8BC,QAA9B,EAAwCC,OAAxC;AACH,KAHD;AAIA,SAAK3D,gBAAL,CAAsByC,IAAtB,CAA2B,YAAY;AACnCe,MAAAA,MAAM,CAAClD,OAAP,CAAe,UAAUoE,YAAV,EAAwB;AACnC,YAAIjG,MAAM,GAAGiG,YAAY,CAACjG,MAA1B;AAAA,YAAkCgF,IAAI,GAAGiB,YAAY,CAACjB,IAAtD;AAAA,YAA4DC,QAAQ,GAAGgB,YAAY,CAAChB,QAApF;AAAA,YAA8FC,OAAO,GAAGe,YAAY,CAACf,OAArH;AACAlF,QAAAA,MAAM,CAACqC,mBAAP,CAA2B2C,IAA3B,EAAiCC,QAAjC,EAA2CC,OAA3C;AACH,OAHD;AAIH,KALD;AAMH,GAXD,CA5H+C,CAwI/C;AACA;;;AACA/D,EAAAA,WAAW,CAACvB,SAAZ,CAAsBsG,qBAAtB,GAA8C,UAAUD,YAAV,EAAwBE,UAAxB,EAAoC;AAC9E;AACA,QAAIf,eAAe,GAAG,KAAKlB,iBAAL,CAAuBkB,eAA7C;AACA,QAAIgB,iBAAiB,GAAGnF,CAAC,CAACoC,MAAF,CAAS+B,eAAT,IAA4BA,eAA5B,GAA8C,CAAtE;AACA,WAAOnE,CAAC,CAACoF,aAAF,CAAgBJ,YAAhB,EAA8BE,UAA9B,EAA0CC,iBAA1C,CAAP;AACH,GALD;;AAMAjF,EAAAA,WAAW,CAACvB,SAAZ,CAAsB0G,mBAAtB,GAA4C,UAAUC,SAAV,EAAqB;AAC7D,SAAK,IAAI7F,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6F,SAAS,CAAClG,MAA9B,EAAsCK,CAAC,EAAvC,EAA2C;AACvC,UAAI6F,SAAS,CAAC7F,CAAD,CAAT,CAAa8F,UAAb,KAA4B,KAAKjC,UAAL,CAAgBiC,UAAhD,EAA4D;AACxD,eAAOD,SAAS,CAAC7F,CAAD,CAAhB;AACH;AACJ;;AACD,WAAO,IAAP;AACH,GAPD;;AAQAS,EAAAA,WAAW,CAACvB,SAAZ,CAAsByF,YAAtB,GAAqC,UAAUY,YAAV,EAAwBE,UAAxB,EAAoCP,EAApC,EAAwC;AACzE,QAAI,CAAC,KAAKzB,QAAV,EAAoB;AAChB;AACA,UAAI,CAAC,KAAKA,QAAN,IAAkB,KAAK+B,qBAAL,CAA2BD,YAA3B,EAAyCE,UAAzC,CAAtB,EAA4E;AACxE;AACH;;AACD,WAAKhC,QAAL,GAAgB,IAAhB;AACA,UAAIsC,OAAO,GAAG;AACVzB,QAAAA,IAAI,EAAEhE,MAAM,CAAC0F,kBADH;AAEVC,QAAAA,GAAG,EAAE,KAAKC,OAFA;AAGVC,QAAAA,SAAS,EAAE,KAAKA,SAHN;AAIV7G,QAAAA,MAAM,EAAE4F;AAJE,OAAd;AAMA,WAAKkB,YAAL,CAAkBC,aAAlB,CAAgCN,OAAhC;AACA,WAAKvC,iBAAL,CAAuB8C,WAAvB,CAAmCb,UAAnC;AACH;;AACD,SAAKjC,iBAAL,CAAuB+C,UAAvB,CAAkChB,YAAlC;AACH,GAjBD;;AAkBA9E,EAAAA,WAAW,CAACvB,SAAZ,CAAsBgF,WAAtB,GAAoC,UAAUX,UAAV,EAAsB2B,EAAtB,EAA0B;AAC1D,QAAIxB,KAAK,GAAG,KAAKkC,mBAAL,CAAyBrC,UAAU,CAACI,OAApC,CAAZ;;AACA,QAAI,CAACD,KAAL,EAAY;AACR;AACH,KAJyD,CAK1D;AACA;AACA;AACA;AACA;;;AACA,SAAKiB,YAAL,CAAkBjB,KAAlB,EAAyB,KAAKG,UAA9B,EAA0CqB,EAA1C;AACH,GAXD,CA1K+C,CAsL/C;AACA;;;AACAzE,EAAAA,WAAW,CAACvB,SAAZ,CAAsBiG,WAAtB,GAAoC,UAAUP,UAAV,EAAsBM,EAAtB,EAA0B;AAC1D,SAAKP,YAAL,CAAkBC,UAAlB,EAA8B,KAAKI,eAAnC,EAAoDE,EAApD;AACH,GAFD;;AAGAzE,EAAAA,WAAW,CAACvB,SAAZ,CAAsBkF,SAAtB,GAAkC,UAAUb,UAAV,EAAsB2B,EAAtB,EAA0B;AACxD,QAAIxB,KAAK,GAAG,KAAKkC,mBAAL,CAAyBrC,UAAU,CAACiD,cAApC,CAAZ,CADwD,CAExD;AACA;AACA;AACA;AACA;;AACA,QAAI,CAAC9C,KAAL,EAAY;AACRA,MAAAA,KAAK,GAAG,KAAKE,aAAb;AACH,KATuD,CAUxD;AACA;AACA;AACA;;;AACA,SAAK6C,UAAL,CAAgB/C,KAAhB,EAAuBwB,EAAvB,EAdwD,CAexD;AACA;AACA;AACA;AACA;AACH,GApBD;;AAqBAzE,EAAAA,WAAW,CAACvB,SAAZ,CAAsBmG,SAAtB,GAAkC,UAAUT,UAAV,EAAsBM,EAAtB,EAA0B;AACxD,SAAKuB,UAAL,CAAgB7B,UAAhB,EAA4BM,EAA5B;AACH,GAFD;;AAGAzE,EAAAA,WAAW,CAACvB,SAAZ,CAAsBuH,UAAtB,GAAmC,UAAUC,YAAV,EAAwBxB,EAAxB,EAA4B;AAC3D,QAAI,KAAKzB,QAAT,EAAmB;AACf,WAAKA,QAAL,GAAgB,KAAhB;AACA,WAAKD,iBAAL,CAAuBmD,UAAvB,CAAkCD,YAAlC;AACA,UAAIE,OAAO,GAAG;AACVtC,QAAAA,IAAI,EAAEhE,MAAM,CAACuG,kBADH;AAEVZ,QAAAA,GAAG,EAAE,KAAKC,OAFA;AAGVC,QAAAA,SAAS,EAAE,KAAKA,SAHN;AAIV7G,QAAAA,MAAM,EAAE4F;AAJE,OAAd;AAMA,WAAKkB,YAAL,CAAkBC,aAAlB,CAAgCO,OAAhC;AACH;;AACD,SAAKxE,iBAAL,CAAuB,KAAvB;AACA,SAAK4C,eAAL,GAAuB,IAAvB;AACA,SAAKnB,UAAL,GAAkB,IAAlB;AACA,SAAKD,aAAL,GAAqB,IAArB;AACA,SAAKJ,iBAAL,GAAyB,IAAzB;AACA,SAAK3C,gBAAL,CAAsBM,OAAtB,CAA8B,UAAU2F,IAAV,EAAgB;AAAE,aAAOA,IAAI,EAAX;AAAgB,KAAhE;AACA,SAAKjG,gBAAL,CAAsBlB,MAAtB,GAA+B,CAA/B;AACH,GAnBD;;AAoBAP,EAAAA,UAAU,CAAC,CACPgB,SAAS,CAAC,eAAD,CADF,CAAD,EAEPK,WAAW,CAACvB,SAFL,EAEgB,eAFhB,EAEiC,KAAK,CAFtC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPgB,SAAS,CAAC,oBAAD,CADF,CAAD,EAEPK,WAAW,CAACvB,SAFL,EAEgB,oBAFhB,EAEsC,KAAK,CAF3C,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPgB,SAAS,CAAC,WAAD,CADF,CAAD,EAEPK,WAAW,CAACvB,SAFL,EAEgB,WAFhB,EAE6B,KAAK,CAFlC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPgB,SAAS,CAAC,SAAD,CADF,CAAD,EAEPK,WAAW,CAACvB,SAFL,EAEgB,SAFhB,EAE2B,KAAK,CAFhC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPiB,aADO,CAAD,EAEPI,WAAW,CAACvB,SAFL,EAEgB,MAFhB,EAEwB,IAFxB,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPe,UADO,CAAD,EAEPM,WAAW,CAACvB,SAFL,EAEgB,oBAFhB,EAEsC,IAFtC,CAAV;;AAGAuB,EAAAA,WAAW,GAAGrB,UAAU,CAAC,CACrBc,IAAI,CAAC,aAAD,CADiB,CAAD,EAErBO,WAFqB,CAAxB;AAGA,SAAOA,WAAP;AACH,CA7PgC,CA6P/BD,QA7P+B,CAAjC;;AA8PA,SAASC,WAAT","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Bean, PreDestroy, Autowired, PostConstruct } from \"../context/context\";\nimport { Events } from \"../events\";\nimport { _ } from \"../utils\";\nimport { BeanStub } from \"../context/beanStub\";\n/** Adds drag listening onto an element. In ag-Grid this is used twice, first is resizing columns,\n * second is moving the columns and column groups around (ie the 'drag' part of Drag and Drop. */\nvar DragService = /** @class */ (function (_super) {\n    __extends(DragService, _super);\n    function DragService() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.dragEndFunctions = [];\n        _this.dragSources = [];\n        return _this;\n    }\n    DragService.prototype.init = function () {\n        this.logger = this.loggerFactory.create('DragService');\n    };\n    DragService.prototype.removeAllListeners = function () {\n        this.dragSources.forEach(this.removeListener.bind(this));\n        this.dragSources.length = 0;\n    };\n    DragService.prototype.removeListener = function (dragSourceAndListener) {\n        var element = dragSourceAndListener.dragSource.eElement;\n        var mouseDownListener = dragSourceAndListener.mouseDownListener;\n        element.removeEventListener('mousedown', mouseDownListener);\n        // remove touch listener only if it exists\n        if (dragSourceAndListener.touchEnabled) {\n            var touchStartListener = dragSourceAndListener.touchStartListener;\n            element.removeEventListener('touchstart', touchStartListener, { passive: true });\n        }\n    };\n    DragService.prototype.removeDragSource = function (params) {\n        var dragSourceAndListener = _.find(this.dragSources, function (item) { return item.dragSource === params; });\n        if (!dragSourceAndListener) {\n            return;\n        }\n        this.removeListener(dragSourceAndListener);\n        _.removeFromArray(this.dragSources, dragSourceAndListener);\n    };\n    DragService.prototype.setNoSelectToBody = function (noSelect) {\n        var eDocument = this.gridOptionsWrapper.getDocument();\n        var eBody = eDocument.querySelector('body');\n        if (_.exists(eBody)) {\n            // when we drag the mouse in ag-Grid, this class gets added / removed from the body, so that\n            // the mouse isn't selecting text when dragging.\n            _.addOrRemoveCssClass(eBody, 'ag-unselectable', noSelect);\n        }\n    };\n    DragService.prototype.addDragSource = function (params, includeTouch) {\n        if (includeTouch === void 0) { includeTouch = false; }\n        var mouseListener = this.onMouseDown.bind(this, params);\n        params.eElement.addEventListener('mousedown', mouseListener);\n        var touchListener = null;\n        var suppressTouch = this.gridOptionsWrapper.isSuppressTouch();\n        if (includeTouch && !suppressTouch) {\n            touchListener = this.onTouchStart.bind(this, params);\n            params.eElement.addEventListener('touchstart', touchListener, { passive: false });\n        }\n        this.dragSources.push({\n            dragSource: params,\n            mouseDownListener: mouseListener,\n            touchStartListener: touchListener,\n            touchEnabled: includeTouch\n        });\n    };\n    // gets called whenever mouse down on any drag source\n    DragService.prototype.onTouchStart = function (params, touchEvent) {\n        var _this = this;\n        this.currentDragParams = params;\n        this.dragging = false;\n        var touch = touchEvent.touches[0];\n        this.touchLastTime = touch;\n        this.touchStart = touch;\n        if (touchEvent.cancelable) {\n            touchEvent.preventDefault();\n        }\n        var touchMoveEvent = function (e) { return _this.onTouchMove(e, params.eElement); };\n        var touchEndEvent = function (e) { return _this.onTouchUp(e, params.eElement); };\n        var target = params.eElement;\n        var events = [\n            { target: target, type: 'touchmove', listener: touchMoveEvent, options: { passive: true } },\n            { target: target, type: 'touchend', listener: touchEndEvent, options: { passive: true } },\n            { target: target, type: 'touchcancel', listener: touchEndEvent, options: { passive: true } }\n        ];\n        // temporally add these listeners, for the duration of the drag\n        this.addTemporaryEvents(events);\n        // see if we want to start dragging straight away\n        if (params.dragStartPixels === 0) {\n            this.onCommonMove(touch, this.touchStart, params.eElement);\n        }\n    };\n    // gets called whenever mouse down on any drag source\n    DragService.prototype.onMouseDown = function (params, mouseEvent) {\n        var _this = this;\n        var e = mouseEvent;\n        if (params.skipMouseEvent && params.skipMouseEvent(mouseEvent)) {\n            return;\n        }\n        // if there are two elements with parent / child relationship, and both are draggable,\n        // when we drag the child, we should NOT drag the parent. an example of this is row moving\n        // and range selection - row moving should get preference when use drags the rowDrag component.\n        if (e._alreadyProcessedByDragService) {\n            return;\n        }\n        e._alreadyProcessedByDragService = true;\n        // only interested in left button clicks\n        if (mouseEvent.button !== 0) {\n            return;\n        }\n        this.currentDragParams = params;\n        this.dragging = false;\n        this.mouseStartEvent = mouseEvent;\n        var eDocument = this.gridOptionsWrapper.getDocument();\n        this.setNoSelectToBody(true);\n        var mouseMoveEvent = function (e, el) { return _this.onMouseMove(e, params.eElement); };\n        var mouseUpEvent = function (e, el) { return _this.onMouseUp(e, params.eElement); };\n        var contextEvent = function (e) { return e.preventDefault(); };\n        var target = eDocument;\n        var events = [\n            { target: target, type: 'mousemove', listener: mouseMoveEvent },\n            { target: target, type: 'mouseup', listener: mouseUpEvent },\n            { target: target, type: 'contextmenu', listener: contextEvent }\n        ];\n        // temporally add these listeners, for the duration of the drag\n        this.addTemporaryEvents(events);\n        //see if we want to start dragging straight away\n        if (params.dragStartPixels === 0) {\n            this.onMouseMove(mouseEvent, params.eElement);\n        }\n    };\n    DragService.prototype.addTemporaryEvents = function (events) {\n        events.forEach(function (currentEvent) {\n            var target = currentEvent.target, type = currentEvent.type, listener = currentEvent.listener, options = currentEvent.options;\n            target.addEventListener(type, listener, options);\n        });\n        this.dragEndFunctions.push(function () {\n            events.forEach(function (currentEvent) {\n                var target = currentEvent.target, type = currentEvent.type, listener = currentEvent.listener, options = currentEvent.options;\n                target.removeEventListener(type, listener, options);\n            });\n        });\n    };\n    // returns true if the event is close to the original event by X pixels either vertically or horizontally.\n    // we only start dragging after X pixels so this allows us to know if we should start dragging yet.\n    DragService.prototype.isEventNearStartEvent = function (currentEvent, startEvent) {\n        // by default, we wait 4 pixels before starting the drag\n        var dragStartPixels = this.currentDragParams.dragStartPixels;\n        var requiredPixelDiff = _.exists(dragStartPixels) ? dragStartPixels : 4;\n        return _.areEventsNear(currentEvent, startEvent, requiredPixelDiff);\n    };\n    DragService.prototype.getFirstActiveTouch = function (touchList) {\n        for (var i = 0; i < touchList.length; i++) {\n            if (touchList[i].identifier === this.touchStart.identifier) {\n                return touchList[i];\n            }\n        }\n        return null;\n    };\n    DragService.prototype.onCommonMove = function (currentEvent, startEvent, el) {\n        if (!this.dragging) {\n            // if mouse hasn't travelled from the start position enough, do nothing\n            if (!this.dragging && this.isEventNearStartEvent(currentEvent, startEvent)) {\n                return;\n            }\n            this.dragging = true;\n            var event_1 = {\n                type: Events.EVENT_DRAG_STARTED,\n                api: this.gridApi,\n                columnApi: this.columnApi,\n                target: el\n            };\n            this.eventService.dispatchEvent(event_1);\n            this.currentDragParams.onDragStart(startEvent);\n        }\n        this.currentDragParams.onDragging(currentEvent);\n    };\n    DragService.prototype.onTouchMove = function (touchEvent, el) {\n        var touch = this.getFirstActiveTouch(touchEvent.touches);\n        if (!touch) {\n            return;\n        }\n        // this.___statusPanel.setInfoText(Math.random() + ' onTouchMove preventDefault stopPropagation');\n        // if we don't preview default, then the browser will try and do it's own touch stuff,\n        // like do 'back button' (chrome does this) or scroll the page (eg drag column could  be confused\n        // with scroll page in the app)\n        // touchEvent.preventDefault();\n        this.onCommonMove(touch, this.touchStart, el);\n    };\n    // only gets called after a mouse down - as this is only added after mouseDown\n    // and is removed when mouseUp happens\n    DragService.prototype.onMouseMove = function (mouseEvent, el) {\n        this.onCommonMove(mouseEvent, this.mouseStartEvent, el);\n    };\n    DragService.prototype.onTouchUp = function (touchEvent, el) {\n        var touch = this.getFirstActiveTouch(touchEvent.changedTouches);\n        // i haven't worked this out yet, but there is no matching touch\n        // when we get the touch up event. to get around this, we swap in\n        // the last touch. this is a hack to 'get it working' while we\n        // figure out what's going on, why we are not getting a touch in\n        // current event.\n        if (!touch) {\n            touch = this.touchLastTime;\n        }\n        // if mouse was left up before we started to move, then this is a tap.\n        // we check this before onUpCommon as onUpCommon resets the dragging\n        // let tap = !this.dragging;\n        // let tapTarget = this.currentDragParams.eElement;\n        this.onUpCommon(touch, el);\n        // if tap, tell user\n        // console.log(`${Math.random()} tap = ${tap}`);\n        // if (tap) {\n        //     tapTarget.click();\n        // }\n    };\n    DragService.prototype.onMouseUp = function (mouseEvent, el) {\n        this.onUpCommon(mouseEvent, el);\n    };\n    DragService.prototype.onUpCommon = function (eventOrTouch, el) {\n        if (this.dragging) {\n            this.dragging = false;\n            this.currentDragParams.onDragStop(eventOrTouch);\n            var event_2 = {\n                type: Events.EVENT_DRAG_STOPPED,\n                api: this.gridApi,\n                columnApi: this.columnApi,\n                target: el\n            };\n            this.eventService.dispatchEvent(event_2);\n        }\n        this.setNoSelectToBody(false);\n        this.mouseStartEvent = null;\n        this.touchStart = null;\n        this.touchLastTime = null;\n        this.currentDragParams = null;\n        this.dragEndFunctions.forEach(function (func) { return func(); });\n        this.dragEndFunctions.length = 0;\n    };\n    __decorate([\n        Autowired('loggerFactory')\n    ], DragService.prototype, \"loggerFactory\", void 0);\n    __decorate([\n        Autowired('gridOptionsWrapper')\n    ], DragService.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        Autowired('columnApi')\n    ], DragService.prototype, \"columnApi\", void 0);\n    __decorate([\n        Autowired('gridApi')\n    ], DragService.prototype, \"gridApi\", void 0);\n    __decorate([\n        PostConstruct\n    ], DragService.prototype, \"init\", null);\n    __decorate([\n        PreDestroy\n    ], DragService.prototype, \"removeAllListeners\", null);\n    DragService = __decorate([\n        Bean('dragService')\n    ], DragService);\n    return DragService;\n}(BeanStub));\nexport { DragService };\n"]},"metadata":{},"sourceType":"module"}