{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Autowired, Bean } from \"../context/context\";\nimport { CellComp } from \"./cellComp\";\nimport { _ } from \"../utils\";\nimport { BeanStub } from \"../context/beanStub\";\n\nvar AutoHeightCalculator =\n/** @class */\nfunction (_super) {\n  __extends(AutoHeightCalculator, _super);\n\n  function AutoHeightCalculator() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  AutoHeightCalculator.prototype.registerGridComp = function (gridPanel) {\n    this.gridPanel = gridPanel;\n  };\n\n  AutoHeightCalculator.prototype.getPreferredHeightForRow = function (rowNode) {\n    var _this = this;\n\n    if (!this.eDummyContainer) {\n      this.eDummyContainer = document.createElement('div'); // so any styles on row also get applied in dummy, otherwise\n      // the content in dummy may differ to the real\n\n      _.addCssClass(this.eDummyContainer, 'ag-row ag-row-no-focus');\n    } // we put the dummy into the body container, so it will inherit all the\n    // css styles that the real cells are inheriting\n\n\n    var eBodyContainer = this.gridPanel.getCenterContainer();\n    eBodyContainer.appendChild(this.eDummyContainer);\n    var cellComps = [];\n    var autoRowHeightCols = this.columnController.getAllAutoRowHeightCols();\n    var visibleAutoRowHeightCols = autoRowHeightCols.filter(function (col) {\n      return col.isVisible();\n    });\n    visibleAutoRowHeightCols.forEach(function (col) {\n      var cellComp = new CellComp(_this.$scope, _this.beans, col, rowNode, null, true, false);\n      cellComp.setParentRow(_this.eDummyContainer);\n      cellComps.push(cellComp);\n    });\n    var template = cellComps.map(function (cellComp) {\n      return cellComp.getCreateTemplate();\n    }).join(' ');\n    this.eDummyContainer.innerHTML = template; // this gets any cellComps that are using components to put the components in\n\n    cellComps.forEach(function (cellComp) {\n      return cellComp.afterAttached();\n    }); // we should be able to just take the height of the row at this point, however\n    // the row isn't expanding to cover the cell heights, i don't know why, i couldn't\n    // figure it out so instead looking at the individual cells instead\n\n    var maxCellHeight = 0;\n\n    for (var i = 0; i < this.eDummyContainer.children.length; i++) {\n      var child = this.eDummyContainer.children[i];\n\n      if (child.offsetHeight > maxCellHeight) {\n        maxCellHeight = child.offsetHeight;\n      }\n    } // we are finished with the dummy container, so get rid of it\n\n\n    eBodyContainer.removeChild(this.eDummyContainer);\n    cellComps.forEach(function (cellComp) {\n      // dunno why we need to detach first, doing it here to be consistent with code in RowComp\n      cellComp.detach();\n      cellComp.destroy();\n    }); // in case anything left over from last time\n\n    _.clearElement(this.eDummyContainer);\n\n    return maxCellHeight;\n  };\n\n  __decorate([Autowired('beans')], AutoHeightCalculator.prototype, \"beans\", void 0);\n\n  __decorate([Autowired(\"$scope\")], AutoHeightCalculator.prototype, \"$scope\", void 0);\n\n  __decorate([Autowired(\"columnController\")], AutoHeightCalculator.prototype, \"columnController\", void 0);\n\n  AutoHeightCalculator = __decorate([Bean('autoHeightCalculator')], AutoHeightCalculator);\n  return AutoHeightCalculator;\n}(BeanStub);\n\nexport { AutoHeightCalculator };","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/@ag-grid-community/core/dist/es6/rendering/autoHeightCalculator.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Autowired","Bean","CellComp","_","BeanStub","AutoHeightCalculator","_super","apply","registerGridComp","gridPanel","getPreferredHeightForRow","rowNode","_this","eDummyContainer","document","createElement","addCssClass","eBodyContainer","getCenterContainer","appendChild","cellComps","autoRowHeightCols","columnController","getAllAutoRowHeightCols","visibleAutoRowHeightCols","filter","col","isVisible","forEach","cellComp","$scope","beans","setParentRow","push","template","map","getCreateTemplate","join","innerHTML","afterAttached","maxCellHeight","children","child","offsetHeight","removeChild","detach","destroy","clearElement"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Autowired, Bean } from \"../context/context\";\nimport { CellComp } from \"./cellComp\";\nimport { _ } from \"../utils\";\nimport { BeanStub } from \"../context/beanStub\";\nvar AutoHeightCalculator = /** @class */ (function (_super) {\n    __extends(AutoHeightCalculator, _super);\n    function AutoHeightCalculator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AutoHeightCalculator.prototype.registerGridComp = function (gridPanel) {\n        this.gridPanel = gridPanel;\n    };\n    AutoHeightCalculator.prototype.getPreferredHeightForRow = function (rowNode) {\n        var _this = this;\n        if (!this.eDummyContainer) {\n            this.eDummyContainer = document.createElement('div');\n            // so any styles on row also get applied in dummy, otherwise\n            // the content in dummy may differ to the real\n            _.addCssClass(this.eDummyContainer, 'ag-row ag-row-no-focus');\n        }\n        // we put the dummy into the body container, so it will inherit all the\n        // css styles that the real cells are inheriting\n        var eBodyContainer = this.gridPanel.getCenterContainer();\n        eBodyContainer.appendChild(this.eDummyContainer);\n        var cellComps = [];\n        var autoRowHeightCols = this.columnController.getAllAutoRowHeightCols();\n        var visibleAutoRowHeightCols = autoRowHeightCols.filter(function (col) { return col.isVisible(); });\n        visibleAutoRowHeightCols.forEach(function (col) {\n            var cellComp = new CellComp(_this.$scope, _this.beans, col, rowNode, null, true, false);\n            cellComp.setParentRow(_this.eDummyContainer);\n            cellComps.push(cellComp);\n        });\n        var template = cellComps.map(function (cellComp) { return cellComp.getCreateTemplate(); }).join(' ');\n        this.eDummyContainer.innerHTML = template;\n        // this gets any cellComps that are using components to put the components in\n        cellComps.forEach(function (cellComp) { return cellComp.afterAttached(); });\n        // we should be able to just take the height of the row at this point, however\n        // the row isn't expanding to cover the cell heights, i don't know why, i couldn't\n        // figure it out so instead looking at the individual cells instead\n        var maxCellHeight = 0;\n        for (var i = 0; i < this.eDummyContainer.children.length; i++) {\n            var child = this.eDummyContainer.children[i];\n            if (child.offsetHeight > maxCellHeight) {\n                maxCellHeight = child.offsetHeight;\n            }\n        }\n        // we are finished with the dummy container, so get rid of it\n        eBodyContainer.removeChild(this.eDummyContainer);\n        cellComps.forEach(function (cellComp) {\n            // dunno why we need to detach first, doing it here to be consistent with code in RowComp\n            cellComp.detach();\n            cellComp.destroy();\n        });\n        // in case anything left over from last time\n        _.clearElement(this.eDummyContainer);\n        return maxCellHeight;\n    };\n    __decorate([\n        Autowired('beans')\n    ], AutoHeightCalculator.prototype, \"beans\", void 0);\n    __decorate([\n        Autowired(\"$scope\")\n    ], AutoHeightCalculator.prototype, \"$scope\", void 0);\n    __decorate([\n        Autowired(\"columnController\")\n    ], AutoHeightCalculator.prototype, \"columnController\", void 0);\n    AutoHeightCalculator = __decorate([\n        Bean('autoHeightCalculator')\n    ], AutoHeightCalculator);\n    return AutoHeightCalculator;\n}(BeanStub));\nexport { AutoHeightCalculator };\n"]},"metadata":{},"sourceType":"module"}