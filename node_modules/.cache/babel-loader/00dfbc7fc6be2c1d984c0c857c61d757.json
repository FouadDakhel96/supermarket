{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nimport { _ } from '../utils';\n\nvar CssClassApplier =\n/** @class */\nfunction () {\n  function CssClassApplier() {}\n\n  CssClassApplier.addHeaderClassesFromColDef = function (abstractColDef, eHeaderCell, gridOptionsWrapper, column, columnGroup) {\n    if (_.missing(abstractColDef)) {\n      return;\n    }\n\n    this.addColumnClassesFromCollDef(abstractColDef.headerClass, abstractColDef, eHeaderCell, gridOptionsWrapper, column, columnGroup);\n  };\n\n  CssClassApplier.addToolPanelClassesFromColDef = function (abstractColDef, eHeaderCell, gridOptionsWrapper, column, columnGroup) {\n    if (_.missing(abstractColDef)) {\n      return;\n    }\n\n    this.addColumnClassesFromCollDef(abstractColDef.toolPanelClass, abstractColDef, eHeaderCell, gridOptionsWrapper, column, columnGroup);\n  };\n\n  CssClassApplier.addColumnClassesFromCollDef = function (classesOrFunc, abstractColDef, eHeaderCell, gridOptionsWrapper, column, columnGroup) {\n    if (_.missing(classesOrFunc)) {\n      return;\n    }\n\n    var classToUse;\n\n    if (typeof classesOrFunc === 'function') {\n      var params = {\n        // bad naming, as colDef here can be a group or a column,\n        // however most people won't appreciate the difference,\n        // so keeping it as colDef to avoid confusion.\n        colDef: abstractColDef,\n        column: column,\n        columnGroup: columnGroup,\n        context: gridOptionsWrapper.getContext(),\n        api: gridOptionsWrapper.getApi()\n      };\n      var headerClassFunc = classesOrFunc;\n      classToUse = headerClassFunc(params);\n    } else {\n      classToUse = classesOrFunc;\n    }\n\n    if (typeof classToUse === 'string') {\n      _.addCssClass(eHeaderCell, classToUse);\n    } else if (Array.isArray(classToUse)) {\n      classToUse.forEach(function (cssClassItem) {\n        _.addCssClass(eHeaderCell, cssClassItem);\n      });\n    }\n  };\n\n  return CssClassApplier;\n}();\n\nexport { CssClassApplier };","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/@ag-grid-community/core/dist/es6/headerRendering/cssClassApplier.js"],"names":["_","CssClassApplier","addHeaderClassesFromColDef","abstractColDef","eHeaderCell","gridOptionsWrapper","column","columnGroup","missing","addColumnClassesFromCollDef","headerClass","addToolPanelClassesFromColDef","toolPanelClass","classesOrFunc","classToUse","params","colDef","context","getContext","api","getApi","headerClassFunc","addCssClass","Array","isArray","forEach","cssClassItem"],"mappings":"AAAA;;;;;;AAMA,SAASA,CAAT,QAAkB,UAAlB;;AACA,IAAIC,eAAe;AAAG;AAAe,YAAY;AAC7C,WAASA,eAAT,GAA2B,CAC1B;;AACDA,EAAAA,eAAe,CAACC,0BAAhB,GAA6C,UAAUC,cAAV,EAA0BC,WAA1B,EAAuCC,kBAAvC,EAA2DC,MAA3D,EAAmEC,WAAnE,EAAgF;AACzH,QAAIP,CAAC,CAACQ,OAAF,CAAUL,cAAV,CAAJ,EAA+B;AAC3B;AACH;;AACD,SAAKM,2BAAL,CAAiCN,cAAc,CAACO,WAAhD,EAA6DP,cAA7D,EAA6EC,WAA7E,EAA0FC,kBAA1F,EAA8GC,MAA9G,EAAsHC,WAAtH;AACH,GALD;;AAMAN,EAAAA,eAAe,CAACU,6BAAhB,GAAgD,UAAUR,cAAV,EAA0BC,WAA1B,EAAuCC,kBAAvC,EAA2DC,MAA3D,EAAmEC,WAAnE,EAAgF;AAC5H,QAAIP,CAAC,CAACQ,OAAF,CAAUL,cAAV,CAAJ,EAA+B;AAC3B;AACH;;AACD,SAAKM,2BAAL,CAAiCN,cAAc,CAACS,cAAhD,EAAgET,cAAhE,EAAgFC,WAAhF,EAA6FC,kBAA7F,EAAiHC,MAAjH,EAAyHC,WAAzH;AACH,GALD;;AAMAN,EAAAA,eAAe,CAACQ,2BAAhB,GAA8C,UAAUI,aAAV,EAAyBV,cAAzB,EAAyCC,WAAzC,EAAsDC,kBAAtD,EAA0EC,MAA1E,EAAkFC,WAAlF,EAA+F;AACzI,QAAIP,CAAC,CAACQ,OAAF,CAAUK,aAAV,CAAJ,EAA8B;AAC1B;AACH;;AACD,QAAIC,UAAJ;;AACA,QAAI,OAAOD,aAAP,KAAyB,UAA7B,EAAyC;AACrC,UAAIE,MAAM,GAAG;AACT;AACA;AACA;AACAC,QAAAA,MAAM,EAAEb,cAJC;AAKTG,QAAAA,MAAM,EAAEA,MALC;AAMTC,QAAAA,WAAW,EAAEA,WANJ;AAOTU,QAAAA,OAAO,EAAEZ,kBAAkB,CAACa,UAAnB,EAPA;AAQTC,QAAAA,GAAG,EAAEd,kBAAkB,CAACe,MAAnB;AARI,OAAb;AAUA,UAAIC,eAAe,GAAGR,aAAtB;AACAC,MAAAA,UAAU,GAAGO,eAAe,CAACN,MAAD,CAA5B;AACH,KAbD,MAcK;AACDD,MAAAA,UAAU,GAAGD,aAAb;AACH;;AACD,QAAI,OAAOC,UAAP,KAAsB,QAA1B,EAAoC;AAChCd,MAAAA,CAAC,CAACsB,WAAF,CAAclB,WAAd,EAA2BU,UAA3B;AACH,KAFD,MAGK,IAAIS,KAAK,CAACC,OAAN,CAAcV,UAAd,CAAJ,EAA+B;AAChCA,MAAAA,UAAU,CAACW,OAAX,CAAmB,UAAUC,YAAV,EAAwB;AACvC1B,QAAAA,CAAC,CAACsB,WAAF,CAAclB,WAAd,EAA2BsB,YAA3B;AACH,OAFD;AAGH;AACJ,GA9BD;;AA+BA,SAAOzB,eAAP;AACH,CA/CoC,EAArC;;AAgDA,SAASA,eAAT","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nimport { _ } from '../utils';\nvar CssClassApplier = /** @class */ (function () {\n    function CssClassApplier() {\n    }\n    CssClassApplier.addHeaderClassesFromColDef = function (abstractColDef, eHeaderCell, gridOptionsWrapper, column, columnGroup) {\n        if (_.missing(abstractColDef)) {\n            return;\n        }\n        this.addColumnClassesFromCollDef(abstractColDef.headerClass, abstractColDef, eHeaderCell, gridOptionsWrapper, column, columnGroup);\n    };\n    CssClassApplier.addToolPanelClassesFromColDef = function (abstractColDef, eHeaderCell, gridOptionsWrapper, column, columnGroup) {\n        if (_.missing(abstractColDef)) {\n            return;\n        }\n        this.addColumnClassesFromCollDef(abstractColDef.toolPanelClass, abstractColDef, eHeaderCell, gridOptionsWrapper, column, columnGroup);\n    };\n    CssClassApplier.addColumnClassesFromCollDef = function (classesOrFunc, abstractColDef, eHeaderCell, gridOptionsWrapper, column, columnGroup) {\n        if (_.missing(classesOrFunc)) {\n            return;\n        }\n        var classToUse;\n        if (typeof classesOrFunc === 'function') {\n            var params = {\n                // bad naming, as colDef here can be a group or a column,\n                // however most people won't appreciate the difference,\n                // so keeping it as colDef to avoid confusion.\n                colDef: abstractColDef,\n                column: column,\n                columnGroup: columnGroup,\n                context: gridOptionsWrapper.getContext(),\n                api: gridOptionsWrapper.getApi()\n            };\n            var headerClassFunc = classesOrFunc;\n            classToUse = headerClassFunc(params);\n        }\n        else {\n            classToUse = classesOrFunc;\n        }\n        if (typeof classToUse === 'string') {\n            _.addCssClass(eHeaderCell, classToUse);\n        }\n        else if (Array.isArray(classToUse)) {\n            classToUse.forEach(function (cssClassItem) {\n                _.addCssClass(eHeaderCell, cssClassItem);\n            });\n        }\n    };\n    return CssClassApplier;\n}());\nexport { CssClassApplier };\n"]},"metadata":{},"sourceType":"module"}