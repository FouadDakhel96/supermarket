{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { _, AgAngleSelect, AgSlider, Autowired, Component, PostConstruct, RefSelector } from \"@ag-grid-community/core\";\nimport { AxisTicksPanel } from \"./axisTicksPanel\";\nimport { FontPanel } from \"../fontPanel\";\nimport { ChartAxisPosition, find } from \"ag-charts-community\";\n\nvar AxisPanel =\n/** @class */\nfunction (_super) {\n  __extends(AxisPanel, _super);\n\n  function AxisPanel(chartController) {\n    var _this = _super.call(this) || this;\n\n    _this.activePanels = [];\n    _this.chartController = chartController;\n    return _this;\n  }\n\n  AxisPanel.prototype.init = function () {\n    var groupParams = {\n      cssIdentifier: 'charts-format-top-level',\n      direction: 'vertical'\n    };\n    this.setTemplate(AxisPanel.TEMPLATE, {\n      axisGroup: groupParams\n    });\n    this.initAxis();\n    this.initAxisTicks();\n    this.initAxisLabels();\n  };\n\n  AxisPanel.prototype.initAxis = function () {\n    var _this = this;\n\n    var chartTranslator = this.chartTranslator;\n    this.axisGroup.setTitle(chartTranslator.translate(\"axis\")).toggleGroupExpand(false).hideEnabledCheckbox(true);\n    this.axisColorInput.setLabel(chartTranslator.translate(\"color\")).setLabelWidth(\"flex\").setInputWidth(45).setValue(this.getChartProxy().getAxisProperty(\"line.color\")).onValueChange(function (newColor) {\n      return _this.getChartProxy().setAxisProperty(\"line.color\", newColor);\n    });\n    this.axisLineWidthSlider.setLabel(chartTranslator.translate(\"thickness\")).setMaxValue(10).setTextFieldWidth(45).setValue(this.getChartProxy().getAxisProperty(\"line.width\")).onValueChange(function (newValue) {\n      return _this.getChartProxy().setAxisProperty(\"line.width\", newValue);\n    });\n\n    if (_.includes(['line', 'scatter', 'bubble'], this.chartController.getChartType()) && !this.chartController.isGrouping()) {\n      var options_1 = [{\n        value: '',\n        text: chartTranslator.translate('automatic')\n      }];\n      ['category', 'time', 'number'].forEach(function (type) {\n        options_1.push({\n          value: type,\n          text: chartTranslator.translate(type)\n        });\n      });\n      this.xAxisTypeSelect.setLabel(chartTranslator.translate('xType')).setLabelWidth('flex').addOptions(options_1).setValue(this.getChartProxy().getChartOption('xAxis.type') || '').onValueChange(function (newValue) {\n        var chartProxy = _this.getChartProxy();\n\n        chartProxy.setChartOption('xAxis.type', newValue.length && newValue);\n\n        _this.chartController.updateForDataChange();\n      });\n    } else {\n      this.xAxisTypeSelect.setDisplayed(false);\n    }\n  };\n\n  AxisPanel.prototype.initAxisTicks = function () {\n    var axisTicksComp = this.createBean(new AxisTicksPanel(this.chartController));\n    this.axisGroup.addItem(axisTicksComp);\n    this.activePanels.push(axisTicksComp);\n  };\n\n  AxisPanel.prototype.initAxisLabels = function () {\n    var _this = this;\n\n    var chartProxy = this.getChartProxy();\n    var initialFont = {\n      family: chartProxy.getAxisProperty(\"label.fontFamily\"),\n      style: chartProxy.getAxisProperty(\"label.fontStyle\"),\n      weight: chartProxy.getAxisProperty(\"label.fontWeight\"),\n      size: chartProxy.getAxisProperty(\"label.fontSize\"),\n      color: chartProxy.getAxisProperty(\"label.color\")\n    };\n\n    var setFont = function setFont(font) {\n      var chartProxy = _this.getChartProxy();\n\n      if (font.family) {\n        chartProxy.setAxisProperty(\"label.fontFamily\", font.family);\n      }\n\n      if (font.weight) {\n        chartProxy.setAxisProperty(\"label.fontWeight\", font.weight);\n      }\n\n      if (font.style) {\n        chartProxy.setAxisProperty(\"label.fontStyle\", font.style);\n      }\n\n      if (font.size) {\n        chartProxy.setAxisProperty(\"label.fontSize\", font.size);\n      }\n\n      if (font.color) {\n        chartProxy.setAxisProperty(\"label.color\", font.color);\n      }\n\n      chartProxy.getChart().performLayout();\n    };\n\n    var params = {\n      enabled: true,\n      suppressEnabledCheckbox: true,\n      initialFont: initialFont,\n      setFont: setFont\n    };\n    var labelPanelComp = this.createBean(new FontPanel(params));\n    this.axisGroup.addItem(labelPanelComp);\n    this.activePanels.push(labelPanelComp);\n    this.addAdditionalLabelComps(labelPanelComp);\n  };\n\n  AxisPanel.prototype.addAdditionalLabelComps = function (labelPanelComp) {\n    var _this = this;\n\n    var createAngleComp = function createAngleComp(label, initialValue, updateFunc) {\n      var rotationInput = _this.createBean(new AgAngleSelect().setLabel(label).setLabelWidth(\"flex\").setValue(initialValue || 0).onValueChange(updateFunc));\n\n      labelPanelComp.addCompToPanel(rotationInput);\n    };\n\n    var degreesSymbol = String.fromCharCode(176);\n\n    var createLabelUpdateFunc = function createLabelUpdateFunc(axisPosition) {\n      return function (newValue) {\n        var chartProxy = _this.getChartProxy();\n\n        var chart = chartProxy.getChart();\n        var axis = find(chart.axes, function (axis) {\n          return axis.position === axisPosition;\n        });\n\n        if (axis) {\n          axis.label.rotation = newValue;\n\n          if (axis.position === ChartAxisPosition.Bottom) {\n            _.set(chartProxy.getChartOptions().xAxis, \"label.rotation\", newValue);\n          } else if (axis.position === ChartAxisPosition.Left) {\n            _.set(chartProxy.getChartOptions().yAxis, \"label.rotation\", newValue);\n          }\n\n          chart.performLayout();\n        }\n      };\n    };\n\n    var xRotationLabel = this.chartTranslator.translate(\"xRotation\") + \" \" + degreesSymbol;\n    var yRotationLabel = this.chartTranslator.translate(\"yRotation\") + \" \" + degreesSymbol;\n    createAngleComp(xRotationLabel, this.getChartProxy().getChartOption(\"xAxis.label.rotation\"), createLabelUpdateFunc(ChartAxisPosition.Bottom));\n    createAngleComp(yRotationLabel, this.getChartProxy().getChartOption(\"yAxis.label.rotation\"), createLabelUpdateFunc(ChartAxisPosition.Left));\n    var labelPaddingSlider = this.createBean(new AgSlider());\n    labelPaddingSlider.setLabel(this.chartTranslator.translate(\"padding\")).setValue(this.getChartProxy().getAxisProperty(\"label.padding\")).setMaxValue(30).setTextFieldWidth(45).onValueChange(function (newValue) {\n      return _this.getChartProxy().setAxisProperty(\"label.padding\", newValue);\n    });\n    labelPanelComp.addCompToPanel(labelPaddingSlider);\n  };\n\n  AxisPanel.prototype.destroyActivePanels = function () {\n    var _this = this;\n\n    this.activePanels.forEach(function (panel) {\n      _.removeFromParent(panel.getGui());\n\n      _this.destroyBean(panel);\n    });\n  };\n\n  AxisPanel.prototype.getChartProxy = function () {\n    return this.chartController.getChartProxy();\n  };\n\n  AxisPanel.prototype.destroy = function () {\n    this.destroyActivePanels();\n\n    _super.prototype.destroy.call(this);\n  };\n\n  AxisPanel.TEMPLATE = \"<div>\\n            <ag-group-component ref=\\\"axisGroup\\\">\\n                <ag-color-picker ref=\\\"axisColorInput\\\"></ag-color-picker>\\n                <ag-slider ref=\\\"axisLineWidthSlider\\\"></ag-slider>\\n                <ag-select ref=\\\"xAxisTypeSelect\\\"></ag-select>\\n            </ag-group-component>\\n        </div>\";\n\n  __decorate([RefSelector('axisGroup')], AxisPanel.prototype, \"axisGroup\", void 0);\n\n  __decorate([RefSelector('axisColorInput')], AxisPanel.prototype, \"axisColorInput\", void 0);\n\n  __decorate([RefSelector('axisLineWidthSlider')], AxisPanel.prototype, \"axisLineWidthSlider\", void 0);\n\n  __decorate([RefSelector('xAxisTypeSelect')], AxisPanel.prototype, \"xAxisTypeSelect\", void 0);\n\n  __decorate([Autowired('chartTranslator')], AxisPanel.prototype, \"chartTranslator\", void 0);\n\n  __decorate([PostConstruct], AxisPanel.prototype, \"init\", null);\n\n  return AxisPanel;\n}(Component);\n\nexport { AxisPanel };","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/@ag-grid-enterprise/charts/dist/es6/chartAdaptor/chartComp/menu/format/axis/axisPanel.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","_","AgAngleSelect","AgSlider","Autowired","Component","PostConstruct","RefSelector","AxisTicksPanel","FontPanel","ChartAxisPosition","find","AxisPanel","_super","chartController","_this","call","activePanels","init","groupParams","cssIdentifier","direction","setTemplate","TEMPLATE","axisGroup","initAxis","initAxisTicks","initAxisLabels","chartTranslator","setTitle","translate","toggleGroupExpand","hideEnabledCheckbox","axisColorInput","setLabel","setLabelWidth","setInputWidth","setValue","getChartProxy","getAxisProperty","onValueChange","newColor","setAxisProperty","axisLineWidthSlider","setMaxValue","setTextFieldWidth","newValue","includes","getChartType","isGrouping","options_1","value","text","forEach","type","push","xAxisTypeSelect","addOptions","getChartOption","chartProxy","setChartOption","updateForDataChange","setDisplayed","axisTicksComp","createBean","addItem","initialFont","family","style","weight","size","color","setFont","font","getChart","performLayout","params","enabled","suppressEnabledCheckbox","labelPanelComp","addAdditionalLabelComps","createAngleComp","label","initialValue","updateFunc","rotationInput","addCompToPanel","degreesSymbol","String","fromCharCode","createLabelUpdateFunc","axisPosition","chart","axis","axes","position","rotation","Bottom","set","getChartOptions","xAxis","Left","yAxis","xRotationLabel","yRotationLabel","labelPaddingSlider","destroyActivePanels","panel","removeFromParent","getGui","destroyBean","destroy"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { _, AgAngleSelect, AgSlider, Autowired, Component, PostConstruct, RefSelector, } from \"@ag-grid-community/core\";\nimport { AxisTicksPanel } from \"./axisTicksPanel\";\nimport { FontPanel } from \"../fontPanel\";\nimport { ChartAxisPosition, find } from \"ag-charts-community\";\nvar AxisPanel = /** @class */ (function (_super) {\n    __extends(AxisPanel, _super);\n    function AxisPanel(chartController) {\n        var _this = _super.call(this) || this;\n        _this.activePanels = [];\n        _this.chartController = chartController;\n        return _this;\n    }\n    AxisPanel.prototype.init = function () {\n        var groupParams = {\n            cssIdentifier: 'charts-format-top-level',\n            direction: 'vertical'\n        };\n        this.setTemplate(AxisPanel.TEMPLATE, { axisGroup: groupParams });\n        this.initAxis();\n        this.initAxisTicks();\n        this.initAxisLabels();\n    };\n    AxisPanel.prototype.initAxis = function () {\n        var _this = this;\n        var chartTranslator = this.chartTranslator;\n        this.axisGroup\n            .setTitle(chartTranslator.translate(\"axis\"))\n            .toggleGroupExpand(false)\n            .hideEnabledCheckbox(true);\n        this.axisColorInput\n            .setLabel(chartTranslator.translate(\"color\"))\n            .setLabelWidth(\"flex\")\n            .setInputWidth(45)\n            .setValue(this.getChartProxy().getAxisProperty(\"line.color\"))\n            .onValueChange(function (newColor) { return _this.getChartProxy().setAxisProperty(\"line.color\", newColor); });\n        this.axisLineWidthSlider\n            .setLabel(chartTranslator.translate(\"thickness\"))\n            .setMaxValue(10)\n            .setTextFieldWidth(45)\n            .setValue(this.getChartProxy().getAxisProperty(\"line.width\"))\n            .onValueChange(function (newValue) { return _this.getChartProxy().setAxisProperty(\"line.width\", newValue); });\n        if (_.includes(['line', 'scatter', 'bubble'], this.chartController.getChartType()) && !this.chartController.isGrouping()) {\n            var options_1 = [\n                { value: '', text: chartTranslator.translate('automatic') }\n            ];\n            ['category', 'time', 'number'].forEach(function (type) {\n                options_1.push({ value: type, text: chartTranslator.translate(type) });\n            });\n            this.xAxisTypeSelect\n                .setLabel(chartTranslator.translate('xType'))\n                .setLabelWidth('flex')\n                .addOptions(options_1)\n                .setValue(this.getChartProxy().getChartOption('xAxis.type') || '')\n                .onValueChange(function (newValue) {\n                var chartProxy = _this.getChartProxy();\n                chartProxy.setChartOption('xAxis.type', newValue.length && newValue);\n                _this.chartController.updateForDataChange();\n            });\n        }\n        else {\n            this.xAxisTypeSelect.setDisplayed(false);\n        }\n    };\n    AxisPanel.prototype.initAxisTicks = function () {\n        var axisTicksComp = this.createBean(new AxisTicksPanel(this.chartController));\n        this.axisGroup.addItem(axisTicksComp);\n        this.activePanels.push(axisTicksComp);\n    };\n    AxisPanel.prototype.initAxisLabels = function () {\n        var _this = this;\n        var chartProxy = this.getChartProxy();\n        var initialFont = {\n            family: chartProxy.getAxisProperty(\"label.fontFamily\"),\n            style: chartProxy.getAxisProperty(\"label.fontStyle\"),\n            weight: chartProxy.getAxisProperty(\"label.fontWeight\"),\n            size: chartProxy.getAxisProperty(\"label.fontSize\"),\n            color: chartProxy.getAxisProperty(\"label.color\")\n        };\n        var setFont = function (font) {\n            var chartProxy = _this.getChartProxy();\n            if (font.family) {\n                chartProxy.setAxisProperty(\"label.fontFamily\", font.family);\n            }\n            if (font.weight) {\n                chartProxy.setAxisProperty(\"label.fontWeight\", font.weight);\n            }\n            if (font.style) {\n                chartProxy.setAxisProperty(\"label.fontStyle\", font.style);\n            }\n            if (font.size) {\n                chartProxy.setAxisProperty(\"label.fontSize\", font.size);\n            }\n            if (font.color) {\n                chartProxy.setAxisProperty(\"label.color\", font.color);\n            }\n            chartProxy.getChart().performLayout();\n        };\n        var params = {\n            enabled: true,\n            suppressEnabledCheckbox: true,\n            initialFont: initialFont,\n            setFont: setFont\n        };\n        var labelPanelComp = this.createBean(new FontPanel(params));\n        this.axisGroup.addItem(labelPanelComp);\n        this.activePanels.push(labelPanelComp);\n        this.addAdditionalLabelComps(labelPanelComp);\n    };\n    AxisPanel.prototype.addAdditionalLabelComps = function (labelPanelComp) {\n        var _this = this;\n        var createAngleComp = function (label, initialValue, updateFunc) {\n            var rotationInput = _this.createBean(new AgAngleSelect()\n                .setLabel(label)\n                .setLabelWidth(\"flex\")\n                .setValue(initialValue || 0)\n                .onValueChange(updateFunc));\n            labelPanelComp.addCompToPanel(rotationInput);\n        };\n        var degreesSymbol = String.fromCharCode(176);\n        var createLabelUpdateFunc = function (axisPosition) { return function (newValue) {\n            var chartProxy = _this.getChartProxy();\n            var chart = chartProxy.getChart();\n            var axis = find(chart.axes, function (axis) { return axis.position === axisPosition; });\n            if (axis) {\n                axis.label.rotation = newValue;\n                if (axis.position === ChartAxisPosition.Bottom) {\n                    _.set(chartProxy.getChartOptions().xAxis, \"label.rotation\", newValue);\n                }\n                else if (axis.position === ChartAxisPosition.Left) {\n                    _.set(chartProxy.getChartOptions().yAxis, \"label.rotation\", newValue);\n                }\n                chart.performLayout();\n            }\n        }; };\n        var xRotationLabel = this.chartTranslator.translate(\"xRotation\") + \" \" + degreesSymbol;\n        var yRotationLabel = this.chartTranslator.translate(\"yRotation\") + \" \" + degreesSymbol;\n        createAngleComp(xRotationLabel, this.getChartProxy().getChartOption(\"xAxis.label.rotation\"), createLabelUpdateFunc(ChartAxisPosition.Bottom));\n        createAngleComp(yRotationLabel, this.getChartProxy().getChartOption(\"yAxis.label.rotation\"), createLabelUpdateFunc(ChartAxisPosition.Left));\n        var labelPaddingSlider = this.createBean(new AgSlider());\n        labelPaddingSlider.setLabel(this.chartTranslator.translate(\"padding\"))\n            .setValue(this.getChartProxy().getAxisProperty(\"label.padding\"))\n            .setMaxValue(30)\n            .setTextFieldWidth(45)\n            .onValueChange(function (newValue) { return _this.getChartProxy().setAxisProperty(\"label.padding\", newValue); });\n        labelPanelComp.addCompToPanel(labelPaddingSlider);\n    };\n    AxisPanel.prototype.destroyActivePanels = function () {\n        var _this = this;\n        this.activePanels.forEach(function (panel) {\n            _.removeFromParent(panel.getGui());\n            _this.destroyBean(panel);\n        });\n    };\n    AxisPanel.prototype.getChartProxy = function () {\n        return this.chartController.getChartProxy();\n    };\n    AxisPanel.prototype.destroy = function () {\n        this.destroyActivePanels();\n        _super.prototype.destroy.call(this);\n    };\n    AxisPanel.TEMPLATE = \"<div>\\n            <ag-group-component ref=\\\"axisGroup\\\">\\n                <ag-color-picker ref=\\\"axisColorInput\\\"></ag-color-picker>\\n                <ag-slider ref=\\\"axisLineWidthSlider\\\"></ag-slider>\\n                <ag-select ref=\\\"xAxisTypeSelect\\\"></ag-select>\\n            </ag-group-component>\\n        </div>\";\n    __decorate([\n        RefSelector('axisGroup')\n    ], AxisPanel.prototype, \"axisGroup\", void 0);\n    __decorate([\n        RefSelector('axisColorInput')\n    ], AxisPanel.prototype, \"axisColorInput\", void 0);\n    __decorate([\n        RefSelector('axisLineWidthSlider')\n    ], AxisPanel.prototype, \"axisLineWidthSlider\", void 0);\n    __decorate([\n        RefSelector('xAxisTypeSelect')\n    ], AxisPanel.prototype, \"xAxisTypeSelect\", void 0);\n    __decorate([\n        Autowired('chartTranslator')\n    ], AxisPanel.prototype, \"chartTranslator\", void 0);\n    __decorate([\n        PostConstruct\n    ], AxisPanel.prototype, \"init\", null);\n    return AxisPanel;\n}(Component));\nexport { AxisPanel };\n"]},"metadata":{},"sourceType":"module"}