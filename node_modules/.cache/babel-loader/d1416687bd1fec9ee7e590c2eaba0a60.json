{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nimport { includes } from './array';\nvar AG_GRID_STOP_PROPAGATION = '__ag_Grid_Stop_Propagation';\nvar PASSIVE_EVENTS = ['touchstart', 'touchend', 'touchmove', 'touchcancel'];\nvar OUTSIDE_ANGULAR_EVENTS = ['mouseover', 'mouseout', 'mouseenter', 'mouseleave'];\nvar supports = {};\n/**\n * a user once raised an issue - they said that when you opened a popup (eg context menu)\n * and then clicked on a selection checkbox, the popup wasn't closed. this is because the\n * popup listens for clicks on the body, however ag-grid WAS stopping propagation on the\n * checkbox clicks (so the rows didn't pick them up as row selection selection clicks).\n * to get around this, we have a pattern to stop propagation for the purposes of ag-Grid,\n * but we still let the event pass back to the body.\n * @param {Event} event\n */\n\nexport function stopPropagationForAgGrid(event) {\n  event[AG_GRID_STOP_PROPAGATION] = true;\n}\nexport function isStopPropagationForAgGrid(event) {\n  return event[AG_GRID_STOP_PROPAGATION] === true;\n}\nexport var isEventSupported = function () {\n  var tags = {\n    select: 'input',\n    change: 'input',\n    submit: 'form',\n    reset: 'form',\n    error: 'img',\n    load: 'img',\n    abort: 'img'\n  };\n\n  var isEventSupported = function (eventName) {\n    if (typeof supports[eventName] === 'boolean') {\n      return supports[eventName];\n    }\n\n    var el = document.createElement(tags[eventName] || 'div');\n    eventName = 'on' + eventName;\n    var isSupported = (eventName in el);\n\n    if (!isSupported) {\n      el.setAttribute(eventName, 'return;');\n      isSupported = typeof el[eventName] == 'function';\n    }\n\n    el = null;\n    return supports[eventName] = isSupported;\n  };\n\n  return isEventSupported;\n}();\nexport function getCellCompForEvent(gridOptionsWrapper, event) {\n  var sourceElement = getTarget(event);\n\n  while (sourceElement) {\n    var renderedCell = gridOptionsWrapper.getDomData(sourceElement, 'cellComp');\n\n    if (renderedCell) {\n      return renderedCell;\n    }\n\n    sourceElement = sourceElement.parentElement;\n  }\n\n  return null;\n}\n/**\n * @deprecated\n * Adds all type of change listeners to an element, intended to be a text field\n * @param {HTMLElement} element\n * @param {EventListener} listener\n */\n\nexport function addChangeListener(element, listener) {\n  element.addEventListener('changed', listener);\n  element.addEventListener('paste', listener);\n  element.addEventListener('input', listener); // IE doesn't fire changed for special keys (eg delete, backspace), so need to\n  // listen for this further ones\n\n  element.addEventListener('keydown', listener);\n  element.addEventListener('keyup', listener);\n}\n/**\n * srcElement is only available in IE. In all other browsers it is target\n * http://stackoverflow.com/questions/5301643/how-can-i-make-event-srcelement-work-in-firefox-and-what-does-it-mean\n * @param {Event} event\n * @returns {Element}\n */\n\nexport function getTarget(event) {\n  var eventNoType = event;\n  return eventNoType.target || eventNoType.srcElement;\n}\nexport function isElementInEventPath(element, event) {\n  if (!event || !element) {\n    return false;\n  }\n\n  return getEventPath(event).indexOf(element) >= 0;\n}\nexport function createEventPath(event) {\n  var res = [];\n  var pointer = getTarget(event);\n\n  while (pointer) {\n    res.push(pointer);\n    pointer = pointer.parentElement;\n  }\n\n  return res;\n}\n/**\n * firefox doesn't have event.path set, or any alternative to it, so we hack\n * it in. this is needed as it's to late to work out the path when the item is\n * removed from the dom. used by MouseEventService, where it works out if a click\n * was from the current grid, or a detail grid (master / detail).\n * @param {Event} event\n */\n\nexport function addAgGridEventPath(event) {\n  event.__agGridEventPath = getEventPath(event);\n}\n/**\n * Gets the path for an Event.\n * https://stackoverflow.com/questions/39245488/event-path-undefined-with-firefox-and-vue-js\n * https://developer.mozilla.org/en-US/docs/Web/API/Event\n * @param {Event} event\n * @returns {EventTarget[]}\n */\n\nexport function getEventPath(event) {\n  var eventNoType = event;\n\n  if (eventNoType.deepPath) {\n    // IE supports deep path\n    return eventNoType.deepPath();\n  }\n\n  if (eventNoType.path) {\n    // Chrome supports path\n    return eventNoType.path;\n  }\n\n  if (eventNoType.composedPath) {\n    // Firefox supports composePath\n    return eventNoType.composedPath();\n  }\n\n  if (eventNoType.__agGridEventPath) {\n    // Firefox supports composePath\n    return eventNoType.__agGridEventPath;\n  } // and finally, if none of the above worked,\n  // we create the path ourselves\n\n\n  return createEventPath(event);\n}\nexport function addSafePassiveEventListener(frameworkOverrides, eElement, event, listener) {\n  var isPassive = includes(PASSIVE_EVENTS, event);\n  var isOutsideAngular = includes(OUTSIDE_ANGULAR_EVENTS, event);\n  var options = isPassive ? {\n    passive: true\n  } : undefined;\n\n  if (isOutsideAngular) {\n    // this happens in certain scenarios where I believe the user must be destroying the grid somehow but continuing\n    // for it to be used\n    // don't fall through to the else part either - just don't add the listener\n    if (frameworkOverrides && frameworkOverrides.addEventListenerOutsideAngular) {\n      frameworkOverrides.addEventListenerOutsideAngular(eElement, event, listener, options);\n    }\n  } else {\n    eElement.addEventListener(event, listener, options);\n  }\n}","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/@ag-grid-community/core/dist/es6/utils/event.js"],"names":["includes","AG_GRID_STOP_PROPAGATION","PASSIVE_EVENTS","OUTSIDE_ANGULAR_EVENTS","supports","stopPropagationForAgGrid","event","isStopPropagationForAgGrid","isEventSupported","tags","select","change","submit","reset","error","load","abort","eventName","el","document","createElement","isSupported","setAttribute","getCellCompForEvent","gridOptionsWrapper","sourceElement","getTarget","renderedCell","getDomData","parentElement","addChangeListener","element","listener","addEventListener","eventNoType","target","srcElement","isElementInEventPath","getEventPath","indexOf","createEventPath","res","pointer","push","addAgGridEventPath","__agGridEventPath","deepPath","path","composedPath","addSafePassiveEventListener","frameworkOverrides","eElement","isPassive","isOutsideAngular","options","passive","undefined","addEventListenerOutsideAngular"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nimport { includes } from './array';\nvar AG_GRID_STOP_PROPAGATION = '__ag_Grid_Stop_Propagation';\nvar PASSIVE_EVENTS = ['touchstart', 'touchend', 'touchmove', 'touchcancel'];\nvar OUTSIDE_ANGULAR_EVENTS = ['mouseover', 'mouseout', 'mouseenter', 'mouseleave'];\nvar supports = {};\n/**\n * a user once raised an issue - they said that when you opened a popup (eg context menu)\n * and then clicked on a selection checkbox, the popup wasn't closed. this is because the\n * popup listens for clicks on the body, however ag-grid WAS stopping propagation on the\n * checkbox clicks (so the rows didn't pick them up as row selection selection clicks).\n * to get around this, we have a pattern to stop propagation for the purposes of ag-Grid,\n * but we still let the event pass back to the body.\n * @param {Event} event\n */\nexport function stopPropagationForAgGrid(event) {\n    event[AG_GRID_STOP_PROPAGATION] = true;\n}\nexport function isStopPropagationForAgGrid(event) {\n    return event[AG_GRID_STOP_PROPAGATION] === true;\n}\nexport var isEventSupported = (function () {\n    var tags = {\n        select: 'input',\n        change: 'input',\n        submit: 'form',\n        reset: 'form',\n        error: 'img',\n        load: 'img',\n        abort: 'img'\n    };\n    var isEventSupported = function (eventName) {\n        if (typeof supports[eventName] === 'boolean') {\n            return supports[eventName];\n        }\n        var el = document.createElement(tags[eventName] || 'div');\n        eventName = 'on' + eventName;\n        var isSupported = (eventName in el);\n        if (!isSupported) {\n            el.setAttribute(eventName, 'return;');\n            isSupported = typeof el[eventName] == 'function';\n        }\n        el = null;\n        return supports[eventName] = isSupported;\n    };\n    return isEventSupported;\n})();\nexport function getCellCompForEvent(gridOptionsWrapper, event) {\n    var sourceElement = getTarget(event);\n    while (sourceElement) {\n        var renderedCell = gridOptionsWrapper.getDomData(sourceElement, 'cellComp');\n        if (renderedCell) {\n            return renderedCell;\n        }\n        sourceElement = sourceElement.parentElement;\n    }\n    return null;\n}\n/**\n * @deprecated\n * Adds all type of change listeners to an element, intended to be a text field\n * @param {HTMLElement} element\n * @param {EventListener} listener\n */\nexport function addChangeListener(element, listener) {\n    element.addEventListener('changed', listener);\n    element.addEventListener('paste', listener);\n    element.addEventListener('input', listener);\n    // IE doesn't fire changed for special keys (eg delete, backspace), so need to\n    // listen for this further ones\n    element.addEventListener('keydown', listener);\n    element.addEventListener('keyup', listener);\n}\n/**\n * srcElement is only available in IE. In all other browsers it is target\n * http://stackoverflow.com/questions/5301643/how-can-i-make-event-srcelement-work-in-firefox-and-what-does-it-mean\n * @param {Event} event\n * @returns {Element}\n */\nexport function getTarget(event) {\n    var eventNoType = event;\n    return eventNoType.target || eventNoType.srcElement;\n}\nexport function isElementInEventPath(element, event) {\n    if (!event || !element) {\n        return false;\n    }\n    return getEventPath(event).indexOf(element) >= 0;\n}\nexport function createEventPath(event) {\n    var res = [];\n    var pointer = getTarget(event);\n    while (pointer) {\n        res.push(pointer);\n        pointer = pointer.parentElement;\n    }\n    return res;\n}\n/**\n * firefox doesn't have event.path set, or any alternative to it, so we hack\n * it in. this is needed as it's to late to work out the path when the item is\n * removed from the dom. used by MouseEventService, where it works out if a click\n * was from the current grid, or a detail grid (master / detail).\n * @param {Event} event\n */\nexport function addAgGridEventPath(event) {\n    event.__agGridEventPath = getEventPath(event);\n}\n/**\n * Gets the path for an Event.\n * https://stackoverflow.com/questions/39245488/event-path-undefined-with-firefox-and-vue-js\n * https://developer.mozilla.org/en-US/docs/Web/API/Event\n * @param {Event} event\n * @returns {EventTarget[]}\n */\nexport function getEventPath(event) {\n    var eventNoType = event;\n    if (eventNoType.deepPath) {\n        // IE supports deep path\n        return eventNoType.deepPath();\n    }\n    if (eventNoType.path) {\n        // Chrome supports path\n        return eventNoType.path;\n    }\n    if (eventNoType.composedPath) {\n        // Firefox supports composePath\n        return eventNoType.composedPath();\n    }\n    if (eventNoType.__agGridEventPath) {\n        // Firefox supports composePath\n        return eventNoType.__agGridEventPath;\n    }\n    // and finally, if none of the above worked,\n    // we create the path ourselves\n    return createEventPath(event);\n}\nexport function addSafePassiveEventListener(frameworkOverrides, eElement, event, listener) {\n    var isPassive = includes(PASSIVE_EVENTS, event);\n    var isOutsideAngular = includes(OUTSIDE_ANGULAR_EVENTS, event);\n    var options = isPassive ? { passive: true } : undefined;\n    if (isOutsideAngular) {\n        // this happens in certain scenarios where I believe the user must be destroying the grid somehow but continuing\n        // for it to be used\n        // don't fall through to the else part either - just don't add the listener\n        if (frameworkOverrides && frameworkOverrides.addEventListenerOutsideAngular) {\n            frameworkOverrides.addEventListenerOutsideAngular(eElement, event, listener, options);\n        }\n    }\n    else {\n        eElement.addEventListener(event, listener, options);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}