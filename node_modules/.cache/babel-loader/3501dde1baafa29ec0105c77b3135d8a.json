{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { BeanStub } from \"../context/beanStub\";\nimport { Autowired, Bean, PostConstruct } from \"../context/context\";\nimport { Events } from \"../eventKeys\";\nimport { _ } from \"../utils\";\n/**\n * This class solves the 'max height' problem, where the user might want to show more data than\n * the max div height actually allows.\n */\n\nvar MaxDivHeightScaler =\n/** @class */\nfunction (_super) {\n  __extends(MaxDivHeightScaler, _super);\n\n  function MaxDivHeightScaler() {\n    var _this = _super !== null && _super.apply(this, arguments) || this; // the scrollY position\n\n\n    _this.scrollY = 0; // how tall the body is\n\n    _this.uiBodyHeight = 0;\n    return _this;\n  }\n\n  MaxDivHeightScaler.prototype.postConstruct = function () {\n    this.addManagedListener(this.eventService, Events.EVENT_BODY_HEIGHT_CHANGED, this.updateOffset.bind(this));\n    this.scrollBarWidth = this.gridOptionsWrapper.getScrollbarWidth();\n    this.maxDivHeight = _.getMaxDivHeight();\n  };\n\n  MaxDivHeightScaler.prototype.registerGridComp = function (gridPanel) {\n    this.gridPanel = gridPanel;\n  };\n\n  MaxDivHeightScaler.prototype.isScaling = function () {\n    return this.scaling;\n  };\n\n  MaxDivHeightScaler.prototype.getOffset = function () {\n    return this.offset;\n  };\n\n  MaxDivHeightScaler.prototype.updateOffset = function () {\n    if (!this.scaling) {\n      return;\n    }\n\n    var newScrollY = this.gridPanel.getVScrollPosition().top;\n    var newBodyHeight = this.getUiBodyHeight();\n    var atLeastOneChanged = newScrollY !== this.scrollY || newBodyHeight !== this.uiBodyHeight;\n\n    if (atLeastOneChanged) {\n      this.scrollY = newScrollY;\n      this.uiBodyHeight = newBodyHeight;\n      this.calculateOffset();\n    }\n  };\n\n  MaxDivHeightScaler.prototype.calculateOffset = function () {\n    this.uiContainerHeight = this.maxDivHeight;\n    this.pixelsToShave = this.modelHeight - this.uiContainerHeight;\n    this.maxScrollY = this.uiContainerHeight - this.uiBodyHeight;\n    var scrollPercent = this.scrollY / this.maxScrollY;\n    this.setOffset(scrollPercent * this.pixelsToShave);\n  };\n\n  MaxDivHeightScaler.prototype.clearOffset = function () {\n    this.uiContainerHeight = this.modelHeight;\n    this.pixelsToShave = 0;\n    this.setOffset(0);\n  };\n\n  MaxDivHeightScaler.prototype.setOffset = function (newOffset) {\n    // because we are talking pixels, no point in confusing things with half numbers\n    var newOffsetFloor = typeof newOffset === 'number' ? Math.floor(newOffset) : null;\n\n    if (this.offset === newOffsetFloor) {\n      return;\n    }\n\n    this.offset = newOffsetFloor;\n    this.eventService.dispatchEvent({\n      type: Events.EVENT_HEIGHT_SCALE_CHANGED\n    });\n  };\n\n  MaxDivHeightScaler.prototype.setModelHeight = function (modelHeight) {\n    this.modelHeight = modelHeight;\n    this.scaling = this.maxDivHeight > 0 && modelHeight > this.maxDivHeight;\n\n    if (this.scaling) {\n      this.calculateOffset();\n    } else {\n      this.clearOffset();\n    }\n  };\n\n  MaxDivHeightScaler.prototype.getUiContainerHeight = function () {\n    return this.uiContainerHeight;\n  };\n\n  MaxDivHeightScaler.prototype.getRealPixelPosition = function (modelPixel) {\n    return modelPixel - this.offset;\n  };\n\n  MaxDivHeightScaler.prototype.getUiBodyHeight = function () {\n    var pos = this.gridPanel.getVScrollPosition();\n    return pos.bottom - pos.top;\n  };\n\n  MaxDivHeightScaler.prototype.getScrollPositionForPixel = function (rowTop) {\n    if (this.pixelsToShave <= 0) {\n      return rowTop;\n    }\n\n    var modelMaxScroll = this.modelHeight - this.getUiBodyHeight();\n    var scrollPercent = rowTop / modelMaxScroll;\n    var scrollPixel = this.maxScrollY * scrollPercent;\n    return scrollPixel;\n  };\n\n  __decorate([Autowired('gridOptionsWrapper')], MaxDivHeightScaler.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([PostConstruct], MaxDivHeightScaler.prototype, \"postConstruct\", null);\n\n  MaxDivHeightScaler = __decorate([Bean('maxDivHeightScaler')], MaxDivHeightScaler);\n  return MaxDivHeightScaler;\n}(BeanStub);\n\nexport { MaxDivHeightScaler };","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/@ag-grid-community/core/dist/es6/rendering/maxDivHeightScaler.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","BeanStub","Autowired","Bean","PostConstruct","Events","_","MaxDivHeightScaler","_super","_this","apply","scrollY","uiBodyHeight","postConstruct","addManagedListener","eventService","EVENT_BODY_HEIGHT_CHANGED","updateOffset","bind","scrollBarWidth","gridOptionsWrapper","getScrollbarWidth","maxDivHeight","getMaxDivHeight","registerGridComp","gridPanel","isScaling","scaling","getOffset","offset","newScrollY","getVScrollPosition","top","newBodyHeight","getUiBodyHeight","atLeastOneChanged","calculateOffset","uiContainerHeight","pixelsToShave","modelHeight","maxScrollY","scrollPercent","setOffset","clearOffset","newOffset","newOffsetFloor","Math","floor","dispatchEvent","type","EVENT_HEIGHT_SCALE_CHANGED","setModelHeight","getUiContainerHeight","getRealPixelPosition","modelPixel","pos","bottom","getScrollPositionForPixel","rowTop","modelMaxScroll","scrollPixel"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { BeanStub } from \"../context/beanStub\";\nimport { Autowired, Bean, PostConstruct } from \"../context/context\";\nimport { Events } from \"../eventKeys\";\nimport { _ } from \"../utils\";\n/**\n * This class solves the 'max height' problem, where the user might want to show more data than\n * the max div height actually allows.\n */\nvar MaxDivHeightScaler = /** @class */ (function (_super) {\n    __extends(MaxDivHeightScaler, _super);\n    function MaxDivHeightScaler() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        // the scrollY position\n        _this.scrollY = 0;\n        // how tall the body is\n        _this.uiBodyHeight = 0;\n        return _this;\n    }\n    MaxDivHeightScaler.prototype.postConstruct = function () {\n        this.addManagedListener(this.eventService, Events.EVENT_BODY_HEIGHT_CHANGED, this.updateOffset.bind(this));\n        this.scrollBarWidth = this.gridOptionsWrapper.getScrollbarWidth();\n        this.maxDivHeight = _.getMaxDivHeight();\n    };\n    MaxDivHeightScaler.prototype.registerGridComp = function (gridPanel) {\n        this.gridPanel = gridPanel;\n    };\n    MaxDivHeightScaler.prototype.isScaling = function () {\n        return this.scaling;\n    };\n    MaxDivHeightScaler.prototype.getOffset = function () {\n        return this.offset;\n    };\n    MaxDivHeightScaler.prototype.updateOffset = function () {\n        if (!this.scaling) {\n            return;\n        }\n        var newScrollY = this.gridPanel.getVScrollPosition().top;\n        var newBodyHeight = this.getUiBodyHeight();\n        var atLeastOneChanged = newScrollY !== this.scrollY || newBodyHeight !== this.uiBodyHeight;\n        if (atLeastOneChanged) {\n            this.scrollY = newScrollY;\n            this.uiBodyHeight = newBodyHeight;\n            this.calculateOffset();\n        }\n    };\n    MaxDivHeightScaler.prototype.calculateOffset = function () {\n        this.uiContainerHeight = this.maxDivHeight;\n        this.pixelsToShave = this.modelHeight - this.uiContainerHeight;\n        this.maxScrollY = this.uiContainerHeight - this.uiBodyHeight;\n        var scrollPercent = this.scrollY / this.maxScrollY;\n        this.setOffset(scrollPercent * this.pixelsToShave);\n    };\n    MaxDivHeightScaler.prototype.clearOffset = function () {\n        this.uiContainerHeight = this.modelHeight;\n        this.pixelsToShave = 0;\n        this.setOffset(0);\n    };\n    MaxDivHeightScaler.prototype.setOffset = function (newOffset) {\n        // because we are talking pixels, no point in confusing things with half numbers\n        var newOffsetFloor = typeof newOffset === 'number' ? Math.floor(newOffset) : null;\n        if (this.offset === newOffsetFloor) {\n            return;\n        }\n        this.offset = newOffsetFloor;\n        this.eventService.dispatchEvent({ type: Events.EVENT_HEIGHT_SCALE_CHANGED });\n    };\n    MaxDivHeightScaler.prototype.setModelHeight = function (modelHeight) {\n        this.modelHeight = modelHeight;\n        this.scaling = this.maxDivHeight > 0 && modelHeight > this.maxDivHeight;\n        if (this.scaling) {\n            this.calculateOffset();\n        }\n        else {\n            this.clearOffset();\n        }\n    };\n    MaxDivHeightScaler.prototype.getUiContainerHeight = function () {\n        return this.uiContainerHeight;\n    };\n    MaxDivHeightScaler.prototype.getRealPixelPosition = function (modelPixel) {\n        return modelPixel - this.offset;\n    };\n    MaxDivHeightScaler.prototype.getUiBodyHeight = function () {\n        var pos = this.gridPanel.getVScrollPosition();\n        return pos.bottom - pos.top;\n    };\n    MaxDivHeightScaler.prototype.getScrollPositionForPixel = function (rowTop) {\n        if (this.pixelsToShave <= 0) {\n            return rowTop;\n        }\n        var modelMaxScroll = this.modelHeight - this.getUiBodyHeight();\n        var scrollPercent = rowTop / modelMaxScroll;\n        var scrollPixel = this.maxScrollY * scrollPercent;\n        return scrollPixel;\n    };\n    __decorate([\n        Autowired('gridOptionsWrapper')\n    ], MaxDivHeightScaler.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        PostConstruct\n    ], MaxDivHeightScaler.prototype, \"postConstruct\", null);\n    MaxDivHeightScaler = __decorate([\n        Bean('maxDivHeightScaler')\n    ], MaxDivHeightScaler);\n    return MaxDivHeightScaler;\n}(BeanStub));\nexport { MaxDivHeightScaler };\n"]},"metadata":{},"sourceType":"module"}