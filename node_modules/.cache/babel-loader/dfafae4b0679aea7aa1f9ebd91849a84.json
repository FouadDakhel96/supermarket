{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nimport { _ } from \"../utils\";\n\nvar Context =\n/** @class */\nfunction () {\n  function Context(params, logger) {\n    this.beanWrappers = {};\n    this.destroyed = false;\n\n    if (!params || !params.beanClasses) {\n      return;\n    }\n\n    this.contextParams = params;\n    this.logger = logger;\n    this.logger.log(\">> creating ag-Application Context\");\n    this.createBeans();\n    var beanInstances = this.getBeanInstances();\n    this.wireBeans(beanInstances);\n    this.logger.log(\">> ag-Application Context ready - component is alive\");\n  }\n\n  Context.prototype.getBeanInstances = function () {\n    return _.values(this.beanWrappers).map(function (beanEntry) {\n      return beanEntry.beanInstance;\n    });\n  };\n\n  Context.prototype.createBean = function (bean, afterPreCreateCallback) {\n    if (!bean) {\n      throw Error(\"Can't wire to bean since it is null\");\n    }\n\n    this.wireBeans([bean], afterPreCreateCallback);\n    return bean;\n  };\n\n  Context.prototype.wireBeans = function (beanInstances, afterPreCreateCallback) {\n    this.autoWireBeans(beanInstances);\n    this.methodWireBeans(beanInstances);\n    this.callLifeCycleMethods(beanInstances, 'preConstructMethods'); // the callback sets the attributes, so the component has access to attributes\n    // before postConstruct methods in the component are executed\n\n    if (_.exists(afterPreCreateCallback)) {\n      beanInstances.forEach(afterPreCreateCallback);\n    }\n\n    this.callLifeCycleMethods(beanInstances, 'postConstructMethods');\n  };\n\n  Context.prototype.createBeans = function () {\n    var _this = this; // register all normal beans\n\n\n    this.contextParams.beanClasses.forEach(this.createBeanWrapper.bind(this)); // register override beans, these will overwrite beans above of same name\n    // instantiate all beans - overridden beans will be left out\n\n    _.iterateObject(this.beanWrappers, function (key, beanEntry) {\n      var constructorParamsMeta;\n\n      if (beanEntry.bean.__agBeanMetaData && beanEntry.bean.__agBeanMetaData.autowireMethods && beanEntry.bean.__agBeanMetaData.autowireMethods.agConstructor) {\n        constructorParamsMeta = beanEntry.bean.__agBeanMetaData.autowireMethods.agConstructor;\n      }\n\n      var constructorParams = _this.getBeansForParameters(constructorParamsMeta, beanEntry.bean.name);\n\n      var newInstance = applyToConstructor(beanEntry.bean, constructorParams);\n      beanEntry.beanInstance = newInstance;\n    });\n\n    var createdBeanNames = Object.keys(this.beanWrappers).join(', ');\n    this.logger.log(\"created beans: \" + createdBeanNames);\n  }; // tslint:disable-next-line\n\n\n  Context.prototype.createBeanWrapper = function (Bean) {\n    var metaData = Bean.__agBeanMetaData;\n\n    if (!metaData) {\n      var beanName = void 0;\n\n      if (Bean.prototype.constructor) {\n        beanName = Bean.prototype.constructor.name;\n      } else {\n        beanName = \"\" + Bean;\n      }\n\n      console.error(\"context item \" + beanName + \" is not a bean\");\n      return;\n    }\n\n    var beanEntry = {\n      bean: Bean,\n      beanInstance: null,\n      beanName: metaData.beanName\n    };\n    this.beanWrappers[metaData.beanName] = beanEntry;\n  };\n\n  Context.prototype.autoWireBeans = function (beanInstances) {\n    var _this = this;\n\n    beanInstances.forEach(function (beanInstance) {\n      _this.forEachMetaDataInHierarchy(beanInstance, function (metaData, beanName) {\n        var attributes = metaData.agClassAttributes;\n\n        if (!attributes) {\n          return;\n        }\n\n        attributes.forEach(function (attribute) {\n          var otherBean = _this.lookupBeanInstance(beanName, attribute.beanName, attribute.optional);\n\n          beanInstance[attribute.attributeName] = otherBean;\n        });\n      });\n    });\n  };\n\n  Context.prototype.methodWireBeans = function (beanInstances) {\n    var _this = this;\n\n    beanInstances.forEach(function (beanInstance) {\n      _this.forEachMetaDataInHierarchy(beanInstance, function (metaData, beanName) {\n        _.iterateObject(metaData.autowireMethods, function (methodName, wireParams) {\n          // skip constructor, as this is dealt with elsewhere\n          if (methodName === \"agConstructor\") {\n            return;\n          }\n\n          var initParams = _this.getBeansForParameters(wireParams, beanName);\n\n          beanInstance[methodName].apply(beanInstance, initParams);\n        });\n      });\n    });\n  };\n\n  Context.prototype.forEachMetaDataInHierarchy = function (beanInstance, callback) {\n    var prototype = Object.getPrototypeOf(beanInstance);\n\n    while (prototype != null) {\n      var constructor = prototype.constructor;\n\n      if (constructor.hasOwnProperty('__agBeanMetaData')) {\n        var metaData = constructor.__agBeanMetaData;\n        var beanName = this.getBeanName(constructor);\n        callback(metaData, beanName);\n      }\n\n      prototype = Object.getPrototypeOf(prototype);\n    }\n  };\n\n  Context.prototype.getBeanName = function (constructor) {\n    if (constructor.__agBeanMetaData && constructor.__agBeanMetaData.beanName) {\n      return constructor.__agBeanMetaData.beanName;\n    }\n\n    var constructorString = constructor.toString();\n    var beanName = constructorString.substring(9, constructorString.indexOf(\"(\"));\n    return beanName;\n  };\n\n  Context.prototype.getBeansForParameters = function (parameters, beanName) {\n    var _this = this;\n\n    var beansList = [];\n\n    if (parameters) {\n      _.iterateObject(parameters, function (paramIndex, otherBeanName) {\n        var otherBean = _this.lookupBeanInstance(beanName, otherBeanName);\n\n        beansList[Number(paramIndex)] = otherBean;\n      });\n    }\n\n    return beansList;\n  };\n\n  Context.prototype.lookupBeanInstance = function (wiringBean, beanName, optional) {\n    if (optional === void 0) {\n      optional = false;\n    }\n\n    if (beanName === \"context\") {\n      return this;\n    } else if (this.contextParams.providedBeanInstances && this.contextParams.providedBeanInstances.hasOwnProperty(beanName)) {\n      return this.contextParams.providedBeanInstances[beanName];\n    } else {\n      var beanEntry = this.beanWrappers[beanName];\n\n      if (beanEntry) {\n        return beanEntry.beanInstance;\n      }\n\n      if (!optional) {\n        console.error(\"ag-Grid: unable to find bean reference \" + beanName + \" while initialising \" + wiringBean);\n      }\n\n      return null;\n    }\n  };\n\n  Context.prototype.callLifeCycleMethods = function (beanInstances, lifeCycleMethod) {\n    var _this = this;\n\n    beanInstances.forEach(function (beanInstance) {\n      _this.callLifeCycleMethodsOneBean(beanInstance, lifeCycleMethod);\n    });\n  };\n\n  Context.prototype.callLifeCycleMethodsOneBean = function (beanInstance, lifeCycleMethod, methodToIgnore) {\n    // putting all methods into a map removes duplicates\n    var allMethods = {}; // dump methods from each level of the metadata hierarchy\n\n    this.forEachMetaDataInHierarchy(beanInstance, function (metaData) {\n      var methods = metaData[lifeCycleMethod];\n\n      if (methods) {\n        methods.forEach(function (methodName) {\n          if (methodName != methodToIgnore) {\n            allMethods[methodName] = true;\n          }\n        });\n      }\n    });\n    var allMethodsList = Object.keys(allMethods);\n    allMethodsList.forEach(function (methodName) {\n      return beanInstance[methodName]();\n    });\n  };\n\n  Context.prototype.getBean = function (name) {\n    return this.lookupBeanInstance(\"getBean\", name, true);\n  };\n\n  Context.prototype.destroy = function () {\n    // should only be able to destroy once\n    if (this.destroyed) {\n      return;\n    }\n\n    this.logger.log(\">> Shutting down ag-Application Context\");\n    var beanInstances = this.getBeanInstances();\n    this.destroyBeans(beanInstances);\n    this.contextParams.providedBeanInstances = null;\n    this.destroyed = true;\n    this.logger.log(\">> ag-Application Context shut down - component is dead\");\n  };\n\n  Context.prototype.destroyBean = function (bean) {\n    if (!bean) {\n      return undefined;\n    }\n\n    this.destroyBeans([bean]);\n    return undefined;\n  };\n\n  Context.prototype.destroyBeans = function (beans) {\n    var _this = this;\n\n    if (!beans) {\n      return [];\n    }\n\n    beans.forEach(function (bean) {\n      _this.callLifeCycleMethodsOneBean(bean, 'preDestroyMethods', 'destroy'); // call destroy() explicitly if it exists\n\n\n      if (bean.destroy) {\n        bean.destroy();\n      }\n    });\n    return [];\n  };\n\n  return Context;\n}();\n\nexport { Context }; // taken from: http://stackoverflow.com/questions/3362471/how-can-i-call-a-javascript-constructor-using-call-or-apply\n// allows calling 'apply' on a constructor\n\nfunction applyToConstructor(constructor, argArray) {\n  var args = [null].concat(argArray);\n  var factoryFunction = constructor.bind.apply(constructor, args);\n  return new factoryFunction();\n}\n\nexport function PreConstruct(target, methodName, descriptor) {\n  var props = getOrCreateProps(target.constructor);\n\n  if (!props.preConstructMethods) {\n    props.preConstructMethods = [];\n  }\n\n  props.preConstructMethods.push(methodName);\n}\nexport function PostConstruct(target, methodName, descriptor) {\n  var props = getOrCreateProps(target.constructor);\n\n  if (!props.postConstructMethods) {\n    props.postConstructMethods = [];\n  }\n\n  props.postConstructMethods.push(methodName);\n}\nexport function PreDestroy(target, methodName, descriptor) {\n  var props = getOrCreateProps(target.constructor);\n\n  if (!props.preDestroyMethods) {\n    props.preDestroyMethods = [];\n  }\n\n  props.preDestroyMethods.push(methodName);\n}\nexport function Bean(beanName) {\n  return function (classConstructor) {\n    var props = getOrCreateProps(classConstructor);\n    props.beanName = beanName;\n  };\n}\nexport function Autowired(name) {\n  return function (target, propertyKey, descriptor) {\n    autowiredFunc(target, name, false, target, propertyKey, null);\n  };\n}\nexport function Optional(name) {\n  return function (target, propertyKey, descriptor) {\n    autowiredFunc(target, name, true, target, propertyKey, null);\n  };\n}\n\nfunction autowiredFunc(target, name, optional, classPrototype, methodOrAttributeName, index) {\n  if (name === null) {\n    console.error(\"ag-Grid: Autowired name should not be null\");\n    return;\n  }\n\n  if (typeof index === \"number\") {\n    console.error(\"ag-Grid: Autowired should be on an attribute\");\n    return;\n  } // it's an attribute on the class\n\n\n  var props = getOrCreateProps(target.constructor);\n\n  if (!props.agClassAttributes) {\n    props.agClassAttributes = [];\n  }\n\n  props.agClassAttributes.push({\n    attributeName: methodOrAttributeName,\n    beanName: name,\n    optional: optional\n  });\n}\n\nexport function Qualifier(name) {\n  return function (classPrototype, methodOrAttributeName, index) {\n    var constructor = typeof classPrototype == \"function\" ? classPrototype : classPrototype.constructor;\n    var props;\n\n    if (typeof index === \"number\") {\n      // it's a parameter on a method\n      var methodName = void 0;\n\n      if (methodOrAttributeName) {\n        props = getOrCreateProps(constructor);\n        methodName = methodOrAttributeName;\n      } else {\n        props = getOrCreateProps(constructor);\n        methodName = \"agConstructor\";\n      }\n\n      if (!props.autowireMethods) {\n        props.autowireMethods = {};\n      }\n\n      if (!props.autowireMethods[methodName]) {\n        props.autowireMethods[methodName] = {};\n      }\n\n      props.autowireMethods[methodName][index] = name;\n    }\n  };\n}\n\nfunction getOrCreateProps(target) {\n  if (!target.hasOwnProperty(\"__agBeanMetaData\")) {\n    target.__agBeanMetaData = {};\n  }\n\n  return target.__agBeanMetaData;\n}","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/@ag-grid-community/core/dist/es6/context/context.js"],"names":["_","Context","params","logger","beanWrappers","destroyed","beanClasses","contextParams","log","createBeans","beanInstances","getBeanInstances","wireBeans","prototype","values","map","beanEntry","beanInstance","createBean","bean","afterPreCreateCallback","Error","autoWireBeans","methodWireBeans","callLifeCycleMethods","exists","forEach","_this","createBeanWrapper","bind","iterateObject","key","constructorParamsMeta","__agBeanMetaData","autowireMethods","agConstructor","constructorParams","getBeansForParameters","name","newInstance","applyToConstructor","createdBeanNames","Object","keys","join","Bean","metaData","beanName","constructor","console","error","forEachMetaDataInHierarchy","attributes","agClassAttributes","attribute","otherBean","lookupBeanInstance","optional","attributeName","methodName","wireParams","initParams","apply","callback","getPrototypeOf","hasOwnProperty","getBeanName","constructorString","toString","substring","indexOf","parameters","beansList","paramIndex","otherBeanName","Number","wiringBean","providedBeanInstances","lifeCycleMethod","callLifeCycleMethodsOneBean","methodToIgnore","allMethods","methods","allMethodsList","getBean","destroy","destroyBeans","destroyBean","undefined","beans","argArray","args","concat","factoryFunction","PreConstruct","target","descriptor","props","getOrCreateProps","preConstructMethods","push","PostConstruct","postConstructMethods","PreDestroy","preDestroyMethods","classConstructor","Autowired","propertyKey","autowiredFunc","Optional","classPrototype","methodOrAttributeName","index","Qualifier"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nimport { _ } from \"../utils\";\nvar Context = /** @class */ (function () {\n    function Context(params, logger) {\n        this.beanWrappers = {};\n        this.destroyed = false;\n        if (!params || !params.beanClasses) {\n            return;\n        }\n        this.contextParams = params;\n        this.logger = logger;\n        this.logger.log(\">> creating ag-Application Context\");\n        this.createBeans();\n        var beanInstances = this.getBeanInstances();\n        this.wireBeans(beanInstances);\n        this.logger.log(\">> ag-Application Context ready - component is alive\");\n    }\n    Context.prototype.getBeanInstances = function () {\n        return _.values(this.beanWrappers).map(function (beanEntry) { return beanEntry.beanInstance; });\n    };\n    Context.prototype.createBean = function (bean, afterPreCreateCallback) {\n        if (!bean) {\n            throw Error(\"Can't wire to bean since it is null\");\n        }\n        this.wireBeans([bean], afterPreCreateCallback);\n        return bean;\n    };\n    Context.prototype.wireBeans = function (beanInstances, afterPreCreateCallback) {\n        this.autoWireBeans(beanInstances);\n        this.methodWireBeans(beanInstances);\n        this.callLifeCycleMethods(beanInstances, 'preConstructMethods');\n        // the callback sets the attributes, so the component has access to attributes\n        // before postConstruct methods in the component are executed\n        if (_.exists(afterPreCreateCallback)) {\n            beanInstances.forEach(afterPreCreateCallback);\n        }\n        this.callLifeCycleMethods(beanInstances, 'postConstructMethods');\n    };\n    Context.prototype.createBeans = function () {\n        var _this = this;\n        // register all normal beans\n        this.contextParams.beanClasses.forEach(this.createBeanWrapper.bind(this));\n        // register override beans, these will overwrite beans above of same name\n        // instantiate all beans - overridden beans will be left out\n        _.iterateObject(this.beanWrappers, function (key, beanEntry) {\n            var constructorParamsMeta;\n            if (beanEntry.bean.__agBeanMetaData && beanEntry.bean.__agBeanMetaData.autowireMethods && beanEntry.bean.__agBeanMetaData.autowireMethods.agConstructor) {\n                constructorParamsMeta = beanEntry.bean.__agBeanMetaData.autowireMethods.agConstructor;\n            }\n            var constructorParams = _this.getBeansForParameters(constructorParamsMeta, beanEntry.bean.name);\n            var newInstance = applyToConstructor(beanEntry.bean, constructorParams);\n            beanEntry.beanInstance = newInstance;\n        });\n        var createdBeanNames = Object.keys(this.beanWrappers).join(', ');\n        this.logger.log(\"created beans: \" + createdBeanNames);\n    };\n    // tslint:disable-next-line\n    Context.prototype.createBeanWrapper = function (Bean) {\n        var metaData = Bean.__agBeanMetaData;\n        if (!metaData) {\n            var beanName = void 0;\n            if (Bean.prototype.constructor) {\n                beanName = Bean.prototype.constructor.name;\n            }\n            else {\n                beanName = \"\" + Bean;\n            }\n            console.error(\"context item \" + beanName + \" is not a bean\");\n            return;\n        }\n        var beanEntry = {\n            bean: Bean,\n            beanInstance: null,\n            beanName: metaData.beanName\n        };\n        this.beanWrappers[metaData.beanName] = beanEntry;\n    };\n    Context.prototype.autoWireBeans = function (beanInstances) {\n        var _this = this;\n        beanInstances.forEach(function (beanInstance) {\n            _this.forEachMetaDataInHierarchy(beanInstance, function (metaData, beanName) {\n                var attributes = metaData.agClassAttributes;\n                if (!attributes) {\n                    return;\n                }\n                attributes.forEach(function (attribute) {\n                    var otherBean = _this.lookupBeanInstance(beanName, attribute.beanName, attribute.optional);\n                    beanInstance[attribute.attributeName] = otherBean;\n                });\n            });\n        });\n    };\n    Context.prototype.methodWireBeans = function (beanInstances) {\n        var _this = this;\n        beanInstances.forEach(function (beanInstance) {\n            _this.forEachMetaDataInHierarchy(beanInstance, function (metaData, beanName) {\n                _.iterateObject(metaData.autowireMethods, function (methodName, wireParams) {\n                    // skip constructor, as this is dealt with elsewhere\n                    if (methodName === \"agConstructor\") {\n                        return;\n                    }\n                    var initParams = _this.getBeansForParameters(wireParams, beanName);\n                    beanInstance[methodName].apply(beanInstance, initParams);\n                });\n            });\n        });\n    };\n    Context.prototype.forEachMetaDataInHierarchy = function (beanInstance, callback) {\n        var prototype = Object.getPrototypeOf(beanInstance);\n        while (prototype != null) {\n            var constructor = prototype.constructor;\n            if (constructor.hasOwnProperty('__agBeanMetaData')) {\n                var metaData = constructor.__agBeanMetaData;\n                var beanName = this.getBeanName(constructor);\n                callback(metaData, beanName);\n            }\n            prototype = Object.getPrototypeOf(prototype);\n        }\n    };\n    Context.prototype.getBeanName = function (constructor) {\n        if (constructor.__agBeanMetaData && constructor.__agBeanMetaData.beanName) {\n            return constructor.__agBeanMetaData.beanName;\n        }\n        var constructorString = constructor.toString();\n        var beanName = constructorString.substring(9, constructorString.indexOf(\"(\"));\n        return beanName;\n    };\n    Context.prototype.getBeansForParameters = function (parameters, beanName) {\n        var _this = this;\n        var beansList = [];\n        if (parameters) {\n            _.iterateObject(parameters, function (paramIndex, otherBeanName) {\n                var otherBean = _this.lookupBeanInstance(beanName, otherBeanName);\n                beansList[Number(paramIndex)] = otherBean;\n            });\n        }\n        return beansList;\n    };\n    Context.prototype.lookupBeanInstance = function (wiringBean, beanName, optional) {\n        if (optional === void 0) { optional = false; }\n        if (beanName === \"context\") {\n            return this;\n        }\n        else if (this.contextParams.providedBeanInstances && this.contextParams.providedBeanInstances.hasOwnProperty(beanName)) {\n            return this.contextParams.providedBeanInstances[beanName];\n        }\n        else {\n            var beanEntry = this.beanWrappers[beanName];\n            if (beanEntry) {\n                return beanEntry.beanInstance;\n            }\n            if (!optional) {\n                console.error(\"ag-Grid: unable to find bean reference \" + beanName + \" while initialising \" + wiringBean);\n            }\n            return null;\n        }\n    };\n    Context.prototype.callLifeCycleMethods = function (beanInstances, lifeCycleMethod) {\n        var _this = this;\n        beanInstances.forEach(function (beanInstance) {\n            _this.callLifeCycleMethodsOneBean(beanInstance, lifeCycleMethod);\n        });\n    };\n    Context.prototype.callLifeCycleMethodsOneBean = function (beanInstance, lifeCycleMethod, methodToIgnore) {\n        // putting all methods into a map removes duplicates\n        var allMethods = {};\n        // dump methods from each level of the metadata hierarchy\n        this.forEachMetaDataInHierarchy(beanInstance, function (metaData) {\n            var methods = metaData[lifeCycleMethod];\n            if (methods) {\n                methods.forEach(function (methodName) {\n                    if (methodName != methodToIgnore) {\n                        allMethods[methodName] = true;\n                    }\n                });\n            }\n        });\n        var allMethodsList = Object.keys(allMethods);\n        allMethodsList.forEach(function (methodName) { return beanInstance[methodName](); });\n    };\n    Context.prototype.getBean = function (name) {\n        return this.lookupBeanInstance(\"getBean\", name, true);\n    };\n    Context.prototype.destroy = function () {\n        // should only be able to destroy once\n        if (this.destroyed) {\n            return;\n        }\n        this.logger.log(\">> Shutting down ag-Application Context\");\n        var beanInstances = this.getBeanInstances();\n        this.destroyBeans(beanInstances);\n        this.contextParams.providedBeanInstances = null;\n        this.destroyed = true;\n        this.logger.log(\">> ag-Application Context shut down - component is dead\");\n    };\n    Context.prototype.destroyBean = function (bean) {\n        if (!bean) {\n            return undefined;\n        }\n        this.destroyBeans([bean]);\n        return undefined;\n    };\n    Context.prototype.destroyBeans = function (beans) {\n        var _this = this;\n        if (!beans) {\n            return [];\n        }\n        beans.forEach(function (bean) {\n            _this.callLifeCycleMethodsOneBean(bean, 'preDestroyMethods', 'destroy');\n            // call destroy() explicitly if it exists\n            if (bean.destroy) {\n                bean.destroy();\n            }\n        });\n        return [];\n    };\n    return Context;\n}());\nexport { Context };\n// taken from: http://stackoverflow.com/questions/3362471/how-can-i-call-a-javascript-constructor-using-call-or-apply\n// allows calling 'apply' on a constructor\nfunction applyToConstructor(constructor, argArray) {\n    var args = [null].concat(argArray);\n    var factoryFunction = constructor.bind.apply(constructor, args);\n    return new factoryFunction();\n}\nexport function PreConstruct(target, methodName, descriptor) {\n    var props = getOrCreateProps(target.constructor);\n    if (!props.preConstructMethods) {\n        props.preConstructMethods = [];\n    }\n    props.preConstructMethods.push(methodName);\n}\nexport function PostConstruct(target, methodName, descriptor) {\n    var props = getOrCreateProps(target.constructor);\n    if (!props.postConstructMethods) {\n        props.postConstructMethods = [];\n    }\n    props.postConstructMethods.push(methodName);\n}\nexport function PreDestroy(target, methodName, descriptor) {\n    var props = getOrCreateProps(target.constructor);\n    if (!props.preDestroyMethods) {\n        props.preDestroyMethods = [];\n    }\n    props.preDestroyMethods.push(methodName);\n}\nexport function Bean(beanName) {\n    return function (classConstructor) {\n        var props = getOrCreateProps(classConstructor);\n        props.beanName = beanName;\n    };\n}\nexport function Autowired(name) {\n    return function (target, propertyKey, descriptor) {\n        autowiredFunc(target, name, false, target, propertyKey, null);\n    };\n}\nexport function Optional(name) {\n    return function (target, propertyKey, descriptor) {\n        autowiredFunc(target, name, true, target, propertyKey, null);\n    };\n}\nfunction autowiredFunc(target, name, optional, classPrototype, methodOrAttributeName, index) {\n    if (name === null) {\n        console.error(\"ag-Grid: Autowired name should not be null\");\n        return;\n    }\n    if (typeof index === \"number\") {\n        console.error(\"ag-Grid: Autowired should be on an attribute\");\n        return;\n    }\n    // it's an attribute on the class\n    var props = getOrCreateProps(target.constructor);\n    if (!props.agClassAttributes) {\n        props.agClassAttributes = [];\n    }\n    props.agClassAttributes.push({\n        attributeName: methodOrAttributeName,\n        beanName: name,\n        optional: optional\n    });\n}\nexport function Qualifier(name) {\n    return function (classPrototype, methodOrAttributeName, index) {\n        var constructor = typeof classPrototype == \"function\" ? classPrototype : classPrototype.constructor;\n        var props;\n        if (typeof index === \"number\") {\n            // it's a parameter on a method\n            var methodName = void 0;\n            if (methodOrAttributeName) {\n                props = getOrCreateProps(constructor);\n                methodName = methodOrAttributeName;\n            }\n            else {\n                props = getOrCreateProps(constructor);\n                methodName = \"agConstructor\";\n            }\n            if (!props.autowireMethods) {\n                props.autowireMethods = {};\n            }\n            if (!props.autowireMethods[methodName]) {\n                props.autowireMethods[methodName] = {};\n            }\n            props.autowireMethods[methodName][index] = name;\n        }\n    };\n}\nfunction getOrCreateProps(target) {\n    if (!target.hasOwnProperty(\"__agBeanMetaData\")) {\n        target.__agBeanMetaData = {};\n    }\n    return target.__agBeanMetaData;\n}\n"]},"metadata":{},"sourceType":"module"}