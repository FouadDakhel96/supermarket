{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { AgCheckbox } from '../widgets/agCheckbox';\nimport { Autowired } from '../context/context';\nimport { Component } from '../widgets/component';\nimport { Events } from '../events';\nimport { RefSelector } from '../widgets/componentAnnotations';\nimport { RowNode } from '../entities/rowNode';\nimport { _ } from '../utils';\n\nvar CheckboxSelectionComponent =\n/** @class */\nfunction (_super) {\n  __extends(CheckboxSelectionComponent, _super);\n\n  function CheckboxSelectionComponent() {\n    return _super.call(this,\n    /* html*/\n    \"\\n            <div class=\\\"ag-selection-checkbox\\\">\\n                <ag-checkbox role=\\\"presentation\\\" ref=\\\"eCheckbox\\\"></ag-checkbox>\\n            </div>\") || this;\n  }\n\n  CheckboxSelectionComponent.prototype.onDataChanged = function () {\n    // when rows are loaded for the second time, this can impact the selection, as a row\n    // could be loaded as already selected (if user scrolls down, and then up again).\n    this.onSelectionChanged();\n  };\n\n  CheckboxSelectionComponent.prototype.onSelectableChanged = function () {\n    this.showOrHideSelect();\n  };\n\n  CheckboxSelectionComponent.prototype.onSelectionChanged = function () {\n    var state = this.rowNode.isSelected();\n    this.eCheckbox.setValue(state, true);\n  };\n\n  CheckboxSelectionComponent.prototype.onCheckedClicked = function () {\n    var groupSelectsFiltered = this.gridOptionsWrapper.isGroupSelectsFiltered();\n    var updatedCount = this.rowNode.setSelectedParams({\n      newValue: false,\n      groupSelectsFiltered: groupSelectsFiltered\n    });\n    return updatedCount;\n  };\n\n  CheckboxSelectionComponent.prototype.onUncheckedClicked = function (event) {\n    var groupSelectsFiltered = this.gridOptionsWrapper.isGroupSelectsFiltered();\n    var updatedCount = this.rowNode.setSelectedParams({\n      newValue: true,\n      rangeSelect: event.shiftKey,\n      groupSelectsFiltered: groupSelectsFiltered\n    });\n    return updatedCount;\n  };\n\n  CheckboxSelectionComponent.prototype.init = function (params) {\n    var _this = this;\n\n    this.rowNode = params.rowNode;\n    this.column = params.column;\n    this.onSelectionChanged(); // we don't want the row clicked event to fire when selecting the checkbox, otherwise the row\n    // would possibly get selected twice\n\n    this.addGuiEventListener('click', function (event) {\n      return _.stopPropagationForAgGrid(event);\n    }); // likewise we don't want double click on this icon to open a group\n\n    this.addGuiEventListener('dblclick', function (event) {\n      return _.stopPropagationForAgGrid(event);\n    });\n    this.addManagedListener(this.eCheckbox, AgCheckbox.EVENT_CHANGED, function (params) {\n      if (params.selected) {\n        _this.onUncheckedClicked(params.event || {});\n      } else {\n        _this.onCheckedClicked();\n      }\n    });\n    this.addManagedListener(this.rowNode, RowNode.EVENT_ROW_SELECTED, this.onSelectionChanged.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_DATA_CHANGED, this.onDataChanged.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_SELECTABLE_CHANGED, this.onSelectableChanged.bind(this));\n    this.isRowSelectableFunc = this.gridOptionsWrapper.getIsRowSelectableFunc();\n    var checkboxVisibleIsDynamic = this.isRowSelectableFunc || this.checkboxCallbackExists();\n\n    if (checkboxVisibleIsDynamic) {\n      this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.showOrHideSelect.bind(this));\n      this.showOrHideSelect();\n    }\n\n    this.eCheckbox.setInputAriaLabel('Toggle Row Selection');\n  };\n\n  CheckboxSelectionComponent.prototype.showOrHideSelect = function () {\n    // if the isRowSelectable() is not provided the row node is selectable by default\n    var selectable = this.rowNode.selectable; // checkboxSelection callback is deemed a legacy solution however we will still consider it's result.\n    // If selectable, then also check the colDef callback. if not selectable, this it short circuits - no need\n    // to call the colDef callback.\n\n    if (selectable && this.checkboxCallbackExists()) {\n      selectable = this.column.isCellCheckboxSelection(this.rowNode);\n    } // show checkbox if both conditions are true\n\n\n    this.setDisplayed(selectable);\n  };\n\n  CheckboxSelectionComponent.prototype.checkboxCallbackExists = function () {\n    // column will be missing if groupUseEntireRow=true\n    var colDef = this.column ? this.column.getColDef() : null;\n    return colDef && typeof colDef.checkboxSelection === 'function';\n  };\n\n  __decorate([Autowired('gridOptionsWrapper')], CheckboxSelectionComponent.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([RefSelector('eCheckbox')], CheckboxSelectionComponent.prototype, \"eCheckbox\", void 0);\n\n  return CheckboxSelectionComponent;\n}(Component);\n\nexport { CheckboxSelectionComponent };","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/@ag-grid-community/core/dist/es6/rendering/checkboxSelectionComponent.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","AgCheckbox","Autowired","Component","Events","RefSelector","RowNode","_","CheckboxSelectionComponent","_super","call","onDataChanged","onSelectionChanged","onSelectableChanged","showOrHideSelect","state","rowNode","isSelected","eCheckbox","setValue","onCheckedClicked","groupSelectsFiltered","gridOptionsWrapper","isGroupSelectsFiltered","updatedCount","setSelectedParams","newValue","onUncheckedClicked","event","rangeSelect","shiftKey","init","params","_this","column","addGuiEventListener","stopPropagationForAgGrid","addManagedListener","EVENT_CHANGED","selected","EVENT_ROW_SELECTED","bind","EVENT_DATA_CHANGED","EVENT_SELECTABLE_CHANGED","isRowSelectableFunc","getIsRowSelectableFunc","checkboxVisibleIsDynamic","checkboxCallbackExists","eventService","EVENT_DISPLAYED_COLUMNS_CHANGED","setInputAriaLabel","selectable","isCellCheckboxSelection","setDisplayed","colDef","getColDef","checkboxSelection"],"mappings":"AAAA;;;;;;AAMA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,cAAa,GAAG,uBAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,cAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd;AAAiB,YAAIA,CAAC,CAACM,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAA1C;AAAwD,KAF9E;;AAGA,WAAOP,cAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnBF,IAAAA,cAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASO,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBT,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACU,SAAF,GAAcT,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACS,MAAP,CAAcV,CAAd,CAAb,IAAiCO,EAAE,CAACE,SAAH,GAAeT,CAAC,CAACS,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;AACH,GAJD;AAKH,CAZ2C,EAA5C;;AAaA,IAAII,UAAU,GAAI,QAAQ,KAAKA,UAAd,IAA6B,UAAUC,UAAV,EAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACnF,MAAIC,CAAC,GAAGC,SAAS,CAACC,MAAlB;AAAA,MAA0BC,CAAC,GAAGH,CAAC,GAAG,CAAJ,GAAQH,MAAR,GAAiBE,IAAI,KAAK,IAAT,GAAgBA,IAAI,GAAGd,MAAM,CAACmB,wBAAP,CAAgCP,MAAhC,EAAwCC,GAAxC,CAAvB,GAAsEC,IAArH;AAAA,MAA2HhB,CAA3H;AACA,MAAI,OAAOsB,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACC,QAAf,KAA4B,UAA/D,EAA2EH,CAAC,GAAGE,OAAO,CAACC,QAAR,CAAiBV,UAAjB,EAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,CAAJ,CAA3E,KACK,KAAK,IAAIQ,CAAC,GAAGX,UAAU,CAACM,MAAX,GAAoB,CAAjC,EAAoCK,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C;AAAiD,QAAIxB,CAAC,GAAGa,UAAU,CAACW,CAAD,CAAlB,EAAuBJ,CAAC,GAAG,CAACH,CAAC,GAAG,CAAJ,GAAQjB,CAAC,CAACoB,CAAD,CAAT,GAAeH,CAAC,GAAG,CAAJ,GAAQjB,CAAC,CAACc,MAAD,EAASC,GAAT,EAAcK,CAAd,CAAT,GAA4BpB,CAAC,CAACc,MAAD,EAASC,GAAT,CAA7C,KAA+DK,CAAnE;AAAxE;AACL,SAAOH,CAAC,GAAG,CAAJ,IAASG,CAAT,IAAclB,MAAM,CAACuB,cAAP,CAAsBX,MAAtB,EAA8BC,GAA9B,EAAmCK,CAAnC,CAAd,EAAqDA,CAA5D;AACH,CALD;;AAMA,SAASM,UAAT,QAA2B,uBAA3B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,CAAT,QAAkB,UAAlB;;AACA,IAAIC,0BAA0B;AAAG;AAAe,UAAUC,MAAV,EAAkB;AAC9DpC,EAAAA,SAAS,CAACmC,0BAAD,EAA6BC,MAA7B,CAAT;;AACA,WAASD,0BAAT,GAAsC;AAClC,WAAOC,MAAM,CAACC,IAAP,CAAY,IAAZ;AAAkB;AAAU,kKAA5B,KAA+L,IAAtM;AACH;;AACDF,EAAAA,0BAA0B,CAACvB,SAA3B,CAAqC0B,aAArC,GAAqD,YAAY;AAC7D;AACA;AACA,SAAKC,kBAAL;AACH,GAJD;;AAKAJ,EAAAA,0BAA0B,CAACvB,SAA3B,CAAqC4B,mBAArC,GAA2D,YAAY;AACnE,SAAKC,gBAAL;AACH,GAFD;;AAGAN,EAAAA,0BAA0B,CAACvB,SAA3B,CAAqC2B,kBAArC,GAA0D,YAAY;AAClE,QAAIG,KAAK,GAAG,KAAKC,OAAL,CAAaC,UAAb,EAAZ;AACA,SAAKC,SAAL,CAAeC,QAAf,CAAwBJ,KAAxB,EAA+B,IAA/B;AACH,GAHD;;AAIAP,EAAAA,0BAA0B,CAACvB,SAA3B,CAAqCmC,gBAArC,GAAwD,YAAY;AAChE,QAAIC,oBAAoB,GAAG,KAAKC,kBAAL,CAAwBC,sBAAxB,EAA3B;AACA,QAAIC,YAAY,GAAG,KAAKR,OAAL,CAAaS,iBAAb,CAA+B;AAAEC,MAAAA,QAAQ,EAAE,KAAZ;AAAmBL,MAAAA,oBAAoB,EAAEA;AAAzC,KAA/B,CAAnB;AACA,WAAOG,YAAP;AACH,GAJD;;AAKAhB,EAAAA,0BAA0B,CAACvB,SAA3B,CAAqC0C,kBAArC,GAA0D,UAAUC,KAAV,EAAiB;AACvE,QAAIP,oBAAoB,GAAG,KAAKC,kBAAL,CAAwBC,sBAAxB,EAA3B;AACA,QAAIC,YAAY,GAAG,KAAKR,OAAL,CAAaS,iBAAb,CAA+B;AAAEC,MAAAA,QAAQ,EAAE,IAAZ;AAAkBG,MAAAA,WAAW,EAAED,KAAK,CAACE,QAArC;AAA+CT,MAAAA,oBAAoB,EAAEA;AAArE,KAA/B,CAAnB;AACA,WAAOG,YAAP;AACH,GAJD;;AAKAhB,EAAAA,0BAA0B,CAACvB,SAA3B,CAAqC8C,IAArC,GAA4C,UAAUC,MAAV,EAAkB;AAC1D,QAAIC,KAAK,GAAG,IAAZ;;AACA,SAAKjB,OAAL,GAAegB,MAAM,CAAChB,OAAtB;AACA,SAAKkB,MAAL,GAAcF,MAAM,CAACE,MAArB;AACA,SAAKtB,kBAAL,GAJ0D,CAK1D;AACA;;AACA,SAAKuB,mBAAL,CAAyB,OAAzB,EAAkC,UAAUP,KAAV,EAAiB;AAAE,aAAOrB,CAAC,CAAC6B,wBAAF,CAA2BR,KAA3B,CAAP;AAA2C,KAAhG,EAP0D,CAQ1D;;AACA,SAAKO,mBAAL,CAAyB,UAAzB,EAAqC,UAAUP,KAAV,EAAiB;AAAE,aAAOrB,CAAC,CAAC6B,wBAAF,CAA2BR,KAA3B,CAAP;AAA2C,KAAnG;AACA,SAAKS,kBAAL,CAAwB,KAAKnB,SAA7B,EAAwCjB,UAAU,CAACqC,aAAnD,EAAkE,UAAUN,MAAV,EAAkB;AAChF,UAAIA,MAAM,CAACO,QAAX,EAAqB;AACjBN,QAAAA,KAAK,CAACN,kBAAN,CAAyBK,MAAM,CAACJ,KAAP,IAAgB,EAAzC;AACH,OAFD,MAGK;AACDK,QAAAA,KAAK,CAACb,gBAAN;AACH;AACJ,KAPD;AAQA,SAAKiB,kBAAL,CAAwB,KAAKrB,OAA7B,EAAsCV,OAAO,CAACkC,kBAA9C,EAAkE,KAAK5B,kBAAL,CAAwB6B,IAAxB,CAA6B,IAA7B,CAAlE;AACA,SAAKJ,kBAAL,CAAwB,KAAKrB,OAA7B,EAAsCV,OAAO,CAACoC,kBAA9C,EAAkE,KAAK/B,aAAL,CAAmB8B,IAAnB,CAAwB,IAAxB,CAAlE;AACA,SAAKJ,kBAAL,CAAwB,KAAKrB,OAA7B,EAAsCV,OAAO,CAACqC,wBAA9C,EAAwE,KAAK9B,mBAAL,CAAyB4B,IAAzB,CAA8B,IAA9B,CAAxE;AACA,SAAKG,mBAAL,GAA2B,KAAKtB,kBAAL,CAAwBuB,sBAAxB,EAA3B;AACA,QAAIC,wBAAwB,GAAG,KAAKF,mBAAL,IAA4B,KAAKG,sBAAL,EAA3D;;AACA,QAAID,wBAAJ,EAA8B;AAC1B,WAAKT,kBAAL,CAAwB,KAAKW,YAA7B,EAA2C5C,MAAM,CAAC6C,+BAAlD,EAAmF,KAAKnC,gBAAL,CAAsB2B,IAAtB,CAA2B,IAA3B,CAAnF;AACA,WAAK3B,gBAAL;AACH;;AACD,SAAKI,SAAL,CAAegC,iBAAf,CAAiC,sBAAjC;AACH,GA5BD;;AA6BA1C,EAAAA,0BAA0B,CAACvB,SAA3B,CAAqC6B,gBAArC,GAAwD,YAAY;AAChE;AACA,QAAIqC,UAAU,GAAG,KAAKnC,OAAL,CAAamC,UAA9B,CAFgE,CAGhE;AACA;AACA;;AACA,QAAIA,UAAU,IAAI,KAAKJ,sBAAL,EAAlB,EAAiD;AAC7CI,MAAAA,UAAU,GAAG,KAAKjB,MAAL,CAAYkB,uBAAZ,CAAoC,KAAKpC,OAAzC,CAAb;AACH,KAR+D,CAShE;;;AACA,SAAKqC,YAAL,CAAkBF,UAAlB;AACH,GAXD;;AAYA3C,EAAAA,0BAA0B,CAACvB,SAA3B,CAAqC8D,sBAArC,GAA8D,YAAY;AACtE;AACA,QAAIO,MAAM,GAAG,KAAKpB,MAAL,GAAc,KAAKA,MAAL,CAAYqB,SAAZ,EAAd,GAAwC,IAArD;AACA,WAAOD,MAAM,IAAI,OAAOA,MAAM,CAACE,iBAAd,KAAoC,UAArD;AACH,GAJD;;AAKArE,EAAAA,UAAU,CAAC,CACPe,SAAS,CAAC,oBAAD,CADF,CAAD,EAEPM,0BAA0B,CAACvB,SAFpB,EAE+B,oBAF/B,EAEqD,KAAK,CAF1D,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkB,WAAW,CAAC,WAAD,CADJ,CAAD,EAEPG,0BAA0B,CAACvB,SAFpB,EAE+B,WAF/B,EAE4C,KAAK,CAFjD,CAAV;;AAGA,SAAOuB,0BAAP;AACH,CAhF+C,CAgF9CL,SAhF8C,CAAhD;;AAiFA,SAASK,0BAAT","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { AgCheckbox } from '../widgets/agCheckbox';\nimport { Autowired } from '../context/context';\nimport { Component } from '../widgets/component';\nimport { Events } from '../events';\nimport { RefSelector } from '../widgets/componentAnnotations';\nimport { RowNode } from '../entities/rowNode';\nimport { _ } from '../utils';\nvar CheckboxSelectionComponent = /** @class */ (function (_super) {\n    __extends(CheckboxSelectionComponent, _super);\n    function CheckboxSelectionComponent() {\n        return _super.call(this, /* html*/ \"\\n            <div class=\\\"ag-selection-checkbox\\\">\\n                <ag-checkbox role=\\\"presentation\\\" ref=\\\"eCheckbox\\\"></ag-checkbox>\\n            </div>\") || this;\n    }\n    CheckboxSelectionComponent.prototype.onDataChanged = function () {\n        // when rows are loaded for the second time, this can impact the selection, as a row\n        // could be loaded as already selected (if user scrolls down, and then up again).\n        this.onSelectionChanged();\n    };\n    CheckboxSelectionComponent.prototype.onSelectableChanged = function () {\n        this.showOrHideSelect();\n    };\n    CheckboxSelectionComponent.prototype.onSelectionChanged = function () {\n        var state = this.rowNode.isSelected();\n        this.eCheckbox.setValue(state, true);\n    };\n    CheckboxSelectionComponent.prototype.onCheckedClicked = function () {\n        var groupSelectsFiltered = this.gridOptionsWrapper.isGroupSelectsFiltered();\n        var updatedCount = this.rowNode.setSelectedParams({ newValue: false, groupSelectsFiltered: groupSelectsFiltered });\n        return updatedCount;\n    };\n    CheckboxSelectionComponent.prototype.onUncheckedClicked = function (event) {\n        var groupSelectsFiltered = this.gridOptionsWrapper.isGroupSelectsFiltered();\n        var updatedCount = this.rowNode.setSelectedParams({ newValue: true, rangeSelect: event.shiftKey, groupSelectsFiltered: groupSelectsFiltered });\n        return updatedCount;\n    };\n    CheckboxSelectionComponent.prototype.init = function (params) {\n        var _this = this;\n        this.rowNode = params.rowNode;\n        this.column = params.column;\n        this.onSelectionChanged();\n        // we don't want the row clicked event to fire when selecting the checkbox, otherwise the row\n        // would possibly get selected twice\n        this.addGuiEventListener('click', function (event) { return _.stopPropagationForAgGrid(event); });\n        // likewise we don't want double click on this icon to open a group\n        this.addGuiEventListener('dblclick', function (event) { return _.stopPropagationForAgGrid(event); });\n        this.addManagedListener(this.eCheckbox, AgCheckbox.EVENT_CHANGED, function (params) {\n            if (params.selected) {\n                _this.onUncheckedClicked(params.event || {});\n            }\n            else {\n                _this.onCheckedClicked();\n            }\n        });\n        this.addManagedListener(this.rowNode, RowNode.EVENT_ROW_SELECTED, this.onSelectionChanged.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_DATA_CHANGED, this.onDataChanged.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_SELECTABLE_CHANGED, this.onSelectableChanged.bind(this));\n        this.isRowSelectableFunc = this.gridOptionsWrapper.getIsRowSelectableFunc();\n        var checkboxVisibleIsDynamic = this.isRowSelectableFunc || this.checkboxCallbackExists();\n        if (checkboxVisibleIsDynamic) {\n            this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.showOrHideSelect.bind(this));\n            this.showOrHideSelect();\n        }\n        this.eCheckbox.setInputAriaLabel('Toggle Row Selection');\n    };\n    CheckboxSelectionComponent.prototype.showOrHideSelect = function () {\n        // if the isRowSelectable() is not provided the row node is selectable by default\n        var selectable = this.rowNode.selectable;\n        // checkboxSelection callback is deemed a legacy solution however we will still consider it's result.\n        // If selectable, then also check the colDef callback. if not selectable, this it short circuits - no need\n        // to call the colDef callback.\n        if (selectable && this.checkboxCallbackExists()) {\n            selectable = this.column.isCellCheckboxSelection(this.rowNode);\n        }\n        // show checkbox if both conditions are true\n        this.setDisplayed(selectable);\n    };\n    CheckboxSelectionComponent.prototype.checkboxCallbackExists = function () {\n        // column will be missing if groupUseEntireRow=true\n        var colDef = this.column ? this.column.getColDef() : null;\n        return colDef && typeof colDef.checkboxSelection === 'function';\n    };\n    __decorate([\n        Autowired('gridOptionsWrapper')\n    ], CheckboxSelectionComponent.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        RefSelector('eCheckbox')\n    ], CheckboxSelectionComponent.prototype, \"eCheckbox\", void 0);\n    return CheckboxSelectionComponent;\n}(Component));\nexport { CheckboxSelectionComponent };\n"]},"metadata":{},"sourceType":"module"}