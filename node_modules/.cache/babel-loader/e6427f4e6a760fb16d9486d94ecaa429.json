{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Autowired, Component, RefSelector, _ } from '@ag-grid-community/core';\nimport { SetValueModel } from './setValueModel';\n\nvar SetFloatingFilterComp =\n/** @class */\nfunction (_super) {\n  __extends(SetFloatingFilterComp, _super);\n\n  function SetFloatingFilterComp() {\n    var _this = _super.call(this,\n    /* html */\n    \"\\n            <div class=\\\"ag-floating-filter-input\\\" role=\\\"presentation\\\">\\n                <ag-input-text-field ref=\\\"eFloatingFilterText\\\"></ag-input-text-field>\\n            </div>\") || this;\n\n    _this.availableValuesListenerAdded = false;\n    return _this;\n  } // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n  // so we need to override destroy() just to make the method public.\n\n\n  SetFloatingFilterComp.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n  };\n\n  SetFloatingFilterComp.prototype.init = function (params) {\n    var displayName = this.columnController.getDisplayNameForColumn(params.column, 'header', true);\n    this.eFloatingFilterText.setDisabled(true).setInputAriaLabel(displayName + \" Filter Input\");\n    this.params = params;\n  };\n\n  SetFloatingFilterComp.prototype.onParentModelChanged = function (parentModel) {\n    this.lastKnownModel = parentModel;\n    this.updateSetFilterText();\n  };\n\n  SetFloatingFilterComp.prototype.addAvailableValuesListener = function () {\n    var _this = this;\n\n    this.params.parentFilterInstance(function (setFilter) {\n      var setValueModel = setFilter.getValueModel(); // unlike other filters, what we show in the floating filter can be different, even\n      // if another filter changes. this is due to how set filter restricts its values based\n      // on selections in other filters, e.g. if you filter Language to English, then the set filter\n      // on Country will only show English speaking countries. Thus the list of items to show\n      // in the floating filter can change.\n\n      _this.addManagedListener(setValueModel, SetValueModel.EVENT_AVAILABLE_VALUES_CHANGED, function () {\n        return _this.updateSetFilterText();\n      });\n    });\n    this.availableValuesListenerAdded = true;\n  };\n\n  SetFloatingFilterComp.prototype.updateSetFilterText = function () {\n    var _this = this;\n\n    if (!this.lastKnownModel) {\n      this.eFloatingFilterText.setValue('');\n      return;\n    }\n\n    if (!this.availableValuesListenerAdded) {\n      this.addAvailableValuesListener();\n    } // also supporting old filter model for backwards compatibility\n\n\n    var values = this.lastKnownModel instanceof Array ? this.lastKnownModel : this.lastKnownModel.values;\n\n    if (!values) {\n      this.eFloatingFilterText.setValue('');\n      return;\n    }\n\n    this.params.parentFilterInstance(function (setFilter) {\n      var valueModel = setFilter.getValueModel();\n\n      var availableValues = _.filter(values, function (v) {\n        return valueModel.isValueAvailable(v);\n      });\n\n      var localeTextFunc = _this.gridOptionsWrapper.getLocaleTextFunc(); // format all the values, if a formatter is provided\n\n\n      var formattedValues = _.map(availableValues, function (value) {\n        var formattedValue = _this.valueFormatterService.formatValue(_this.params.column, null, null, value);\n\n        var valueToRender = formattedValue != null ? formattedValue : value;\n        return valueToRender == null ? \"(\" + localeTextFunc('blanks', 'Blanks') + \")\" : valueToRender;\n      });\n\n      var arrayToDisplay = formattedValues.length > 10 ? formattedValues.slice(0, 10).concat('...') : formattedValues;\n      var valuesString = \"(\" + formattedValues.length + \") \" + arrayToDisplay.join(',');\n\n      _this.eFloatingFilterText.setValue(valuesString);\n    });\n  };\n\n  __decorate([RefSelector('eFloatingFilterText')], SetFloatingFilterComp.prototype, \"eFloatingFilterText\", void 0);\n\n  __decorate([Autowired('valueFormatterService')], SetFloatingFilterComp.prototype, \"valueFormatterService\", void 0);\n\n  __decorate([Autowired('gridOptionsWrapper')], SetFloatingFilterComp.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([Autowired('columnController')], SetFloatingFilterComp.prototype, \"columnController\", void 0);\n\n  return SetFloatingFilterComp;\n}(Component);\n\nexport { SetFloatingFilterComp };","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/@ag-grid-enterprise/set-filter/dist/es6/setFilter/setFloatingFilter.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Autowired","Component","RefSelector","_","SetValueModel","SetFloatingFilterComp","_super","_this","call","availableValuesListenerAdded","destroy","init","params","displayName","columnController","getDisplayNameForColumn","column","eFloatingFilterText","setDisabled","setInputAriaLabel","onParentModelChanged","parentModel","lastKnownModel","updateSetFilterText","addAvailableValuesListener","parentFilterInstance","setFilter","setValueModel","getValueModel","addManagedListener","EVENT_AVAILABLE_VALUES_CHANGED","setValue","values","valueModel","availableValues","filter","v","isValueAvailable","localeTextFunc","gridOptionsWrapper","getLocaleTextFunc","formattedValues","map","value","formattedValue","valueFormatterService","formatValue","valueToRender","arrayToDisplay","slice","concat","valuesString","join"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Autowired, Component, RefSelector, _ } from '@ag-grid-community/core';\nimport { SetValueModel } from './setValueModel';\nvar SetFloatingFilterComp = /** @class */ (function (_super) {\n    __extends(SetFloatingFilterComp, _super);\n    function SetFloatingFilterComp() {\n        var _this = _super.call(this, /* html */ \"\\n            <div class=\\\"ag-floating-filter-input\\\" role=\\\"presentation\\\">\\n                <ag-input-text-field ref=\\\"eFloatingFilterText\\\"></ag-input-text-field>\\n            </div>\") || this;\n        _this.availableValuesListenerAdded = false;\n        return _this;\n    }\n    // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n    // so we need to override destroy() just to make the method public.\n    SetFloatingFilterComp.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    SetFloatingFilterComp.prototype.init = function (params) {\n        var displayName = this.columnController.getDisplayNameForColumn(params.column, 'header', true);\n        this.eFloatingFilterText\n            .setDisabled(true)\n            .setInputAriaLabel(displayName + \" Filter Input\");\n        this.params = params;\n    };\n    SetFloatingFilterComp.prototype.onParentModelChanged = function (parentModel) {\n        this.lastKnownModel = parentModel;\n        this.updateSetFilterText();\n    };\n    SetFloatingFilterComp.prototype.addAvailableValuesListener = function () {\n        var _this = this;\n        this.params.parentFilterInstance(function (setFilter) {\n            var setValueModel = setFilter.getValueModel();\n            // unlike other filters, what we show in the floating filter can be different, even\n            // if another filter changes. this is due to how set filter restricts its values based\n            // on selections in other filters, e.g. if you filter Language to English, then the set filter\n            // on Country will only show English speaking countries. Thus the list of items to show\n            // in the floating filter can change.\n            _this.addManagedListener(setValueModel, SetValueModel.EVENT_AVAILABLE_VALUES_CHANGED, function () { return _this.updateSetFilterText(); });\n        });\n        this.availableValuesListenerAdded = true;\n    };\n    SetFloatingFilterComp.prototype.updateSetFilterText = function () {\n        var _this = this;\n        if (!this.lastKnownModel) {\n            this.eFloatingFilterText.setValue('');\n            return;\n        }\n        if (!this.availableValuesListenerAdded) {\n            this.addAvailableValuesListener();\n        }\n        // also supporting old filter model for backwards compatibility\n        var values = this.lastKnownModel instanceof Array ? this.lastKnownModel : this.lastKnownModel.values;\n        if (!values) {\n            this.eFloatingFilterText.setValue('');\n            return;\n        }\n        this.params.parentFilterInstance(function (setFilter) {\n            var valueModel = setFilter.getValueModel();\n            var availableValues = _.filter(values, function (v) { return valueModel.isValueAvailable(v); });\n            var localeTextFunc = _this.gridOptionsWrapper.getLocaleTextFunc();\n            // format all the values, if a formatter is provided\n            var formattedValues = _.map(availableValues, function (value) {\n                var formattedValue = _this.valueFormatterService.formatValue(_this.params.column, null, null, value);\n                var valueToRender = formattedValue != null ? formattedValue : value;\n                return valueToRender == null ? \"(\" + localeTextFunc('blanks', 'Blanks') + \")\" : valueToRender;\n            });\n            var arrayToDisplay = formattedValues.length > 10 ? formattedValues.slice(0, 10).concat('...') : formattedValues;\n            var valuesString = \"(\" + formattedValues.length + \") \" + arrayToDisplay.join(',');\n            _this.eFloatingFilterText.setValue(valuesString);\n        });\n    };\n    __decorate([\n        RefSelector('eFloatingFilterText')\n    ], SetFloatingFilterComp.prototype, \"eFloatingFilterText\", void 0);\n    __decorate([\n        Autowired('valueFormatterService')\n    ], SetFloatingFilterComp.prototype, \"valueFormatterService\", void 0);\n    __decorate([\n        Autowired('gridOptionsWrapper')\n    ], SetFloatingFilterComp.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        Autowired('columnController')\n    ], SetFloatingFilterComp.prototype, \"columnController\", void 0);\n    return SetFloatingFilterComp;\n}(Component));\nexport { SetFloatingFilterComp };\n"]},"metadata":{},"sourceType":"module"}