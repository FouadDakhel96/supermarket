{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport { Autowired, PostConstruct, Qualifier, RowNodeBlock, _ } from \"@ag-grid-community/core\";\n\nvar ServerSideBlock =\n/** @class */\nfunction (_super) {\n  __extends(ServerSideBlock, _super);\n\n  function ServerSideBlock(pageNumber, parentRowNode, params, parentCache) {\n    var _this = _super.call(this, pageNumber, params) || this;\n\n    _this.params = params;\n    _this.parentRowNode = parentRowNode;\n    _this.parentCache = parentCache;\n    _this.level = parentRowNode.level + 1;\n    _this.groupLevel = params.rowGroupCols ? _this.level < params.rowGroupCols.length : undefined;\n    _this.leafGroup = params.rowGroupCols ? _this.level === params.rowGroupCols.length - 1 : false;\n    return _this;\n  }\n\n  ServerSideBlock.prototype.init = function () {\n    this.usingTreeData = this.gridOptionsWrapper.isTreeData();\n    this.usingMasterDetail = this.gridOptionsWrapper.isMasterDetail();\n\n    if (!this.usingTreeData && this.groupLevel) {\n      var groupColVo = this.params.rowGroupCols[this.level];\n      this.groupField = groupColVo.field;\n      this.rowGroupColumn = this.columnController.getRowGroupColumns()[this.level];\n    }\n\n    this.createNodeIdPrefix();\n\n    _super.prototype.init.call(this, {\n      context: this.getContext(),\n      rowRenderer: this.rowRenderer\n    });\n  };\n\n  ServerSideBlock.prototype.setBeans = function (loggerFactory) {\n    this.logger = loggerFactory.create('ServerSideBlock');\n  };\n\n  ServerSideBlock.prototype.createNodeIdPrefix = function () {\n    var parts = [];\n    var rowNode = this.parentRowNode; // pull keys from all parent nodes, but do not include the root node\n\n    while (rowNode && rowNode.level >= 0) {\n      parts.push(rowNode.key);\n      rowNode = rowNode.parent;\n    }\n\n    if (parts.length > 0) {\n      this.nodeIdPrefix = parts.reverse().join('-') + '-';\n    }\n  };\n\n  ServerSideBlock.prototype.createIdForIndex = function (index) {\n    if (_.exists(this.nodeIdPrefix)) {\n      return this.nodeIdPrefix + index.toString();\n    } else {\n      return index.toString();\n    }\n  };\n\n  ServerSideBlock.prototype.getNodeIdPrefix = function () {\n    return this.nodeIdPrefix;\n  };\n\n  ServerSideBlock.prototype.getRow = function (displayRowIndex) {\n    var bottomPointer = this.getStartRow(); // the end row depends on whether all this block is used or not. if the virtual row count\n    // is before the end, then not all the row is used\n\n    var virtualRowCount = this.parentCache.getVirtualRowCount();\n    var endRow = this.getEndRow();\n    var actualEnd = virtualRowCount < endRow ? virtualRowCount : endRow;\n    var topPointer = actualEnd - 1;\n\n    if (_.missing(topPointer) || _.missing(bottomPointer)) {\n      console.warn(\"ag-grid: error: topPointer = \" + topPointer + \", bottomPointer = \" + bottomPointer);\n      return null;\n    }\n\n    while (true) {\n      var midPointer = Math.floor((bottomPointer + topPointer) / 2);\n\n      var currentRowNode = _super.prototype.getRowUsingLocalIndex.call(this, midPointer); // first check current row for index\n\n\n      if (currentRowNode.rowIndex === displayRowIndex) {\n        return currentRowNode;\n      } // then check if current row contains a detail row with the index\n\n\n      var expandedMasterRow = currentRowNode.master && currentRowNode.expanded;\n\n      if (expandedMasterRow && currentRowNode.detailNode.rowIndex === displayRowIndex) {\n        return currentRowNode.detailNode;\n      } // then check if child cache contains index\n\n\n      var childrenCache = currentRowNode.childrenCache;\n\n      if (currentRowNode.expanded && childrenCache && childrenCache.isDisplayIndexInCache(displayRowIndex)) {\n        return childrenCache.getRow(displayRowIndex);\n      } // otherwise adjust pointers to continue searching for index\n\n\n      if (currentRowNode.rowIndex < displayRowIndex) {\n        bottomPointer = midPointer + 1;\n      } else if (currentRowNode.rowIndex > displayRowIndex) {\n        topPointer = midPointer - 1;\n      } else {\n        console.warn(\"ag-Grid: error: unable to locate rowIndex = \" + displayRowIndex + \" in cache\");\n        return null;\n      }\n    }\n  };\n\n  ServerSideBlock.prototype.setDataAndId = function (rowNode, data, index) {\n    var _this = this;\n\n    rowNode.stub = false;\n\n    if (_.exists(data)) {\n      // if the user is not providing id's, then we build an id based on the index.\n      // for infinite scrolling, the index is used on it's own. for Server Side Row Model,\n      // we combine the index with the level and group key, so that the id is\n      // unique across the set.\n      //\n      // unique id is needed for selection (so selection can be maintained when\n      // doing server side sorting / filtering) - if user is not providing id's\n      // (and we use the indexes) then selection will not work between sorting &\n      // filtering.\n      //\n      // id's are also used by the row renderer for updating the dom as it identifies\n      // rowNodes by id\n      var idToUse = this.createIdForIndex(index);\n      rowNode.setDataAndId(data, idToUse);\n      rowNode.setRowHeight(this.gridOptionsWrapper.getRowHeightForNode(rowNode).height);\n\n      if (this.usingTreeData) {\n        var getServerSideGroupKey = this.gridOptionsWrapper.getServerSideGroupKeyFunc();\n\n        if (_.exists(getServerSideGroupKey) && getServerSideGroupKey) {\n          rowNode.key = getServerSideGroupKey(rowNode.data);\n        }\n\n        var isServerSideGroup = this.gridOptionsWrapper.getIsServerSideGroupFunc();\n\n        if (_.exists(isServerSideGroup) && isServerSideGroup) {\n          rowNode.group = isServerSideGroup(rowNode.data);\n        }\n      } else if (rowNode.group) {\n        rowNode.key = this.valueService.getValue(this.rowGroupColumn, rowNode);\n\n        if (rowNode.key === null || rowNode.key === undefined) {\n          _.doOnce(function () {\n            console.warn(\"null and undefined values are not allowed for server side row model keys\");\n\n            if (_this.rowGroupColumn) {\n              console.warn(\"column = \" + _this.rowGroupColumn.getId());\n            }\n\n            console.warn(\"data is \", rowNode.data);\n          }, 'ServerSideBlock-CannotHaveNullOrUndefinedForKey');\n        }\n      } else if (this.usingMasterDetail) {\n        var isRowMasterFunc = this.gridOptionsWrapper.getIsRowMasterFunc();\n\n        if (_.exists(isRowMasterFunc) && isRowMasterFunc) {\n          rowNode.master = isRowMasterFunc(rowNode.data);\n        } else {\n          rowNode.master = true;\n        }\n      }\n    } else {\n      rowNode.setDataAndId(undefined, undefined);\n      rowNode.key = null;\n    }\n\n    if (this.usingTreeData || this.groupLevel) {\n      this.setGroupDataIntoRowNode(rowNode);\n      this.setChildCountIntoRowNode(rowNode);\n    }\n  };\n\n  ServerSideBlock.prototype.setChildCountIntoRowNode = function (rowNode) {\n    var getChildCount = this.gridOptionsWrapper.getChildCountFunc();\n\n    if (getChildCount) {\n      rowNode.allChildrenCount = getChildCount(rowNode.data);\n    }\n  };\n\n  ServerSideBlock.prototype.setGroupDataIntoRowNode = function (rowNode) {\n    var _this = this;\n\n    var groupDisplayCols = this.columnController.getGroupDisplayColumns();\n    var usingTreeData = this.gridOptionsWrapper.isTreeData();\n    groupDisplayCols.forEach(function (col) {\n      if (usingTreeData) {\n        if (_.missing(rowNode.groupData)) {\n          rowNode.groupData = {};\n        }\n\n        rowNode.groupData[col.getColId()] = rowNode.key;\n      } else if (col.isRowGroupDisplayed(_this.rowGroupColumn.getId())) {\n        var groupValue = _this.valueService.getValue(_this.rowGroupColumn, rowNode);\n\n        if (_.missing(rowNode.groupData)) {\n          rowNode.groupData = {};\n        }\n\n        rowNode.groupData[col.getColId()] = groupValue;\n      }\n    });\n  };\n\n  ServerSideBlock.prototype.loadFromDatasource = function () {\n    var _this = this;\n\n    var params = this.createLoadParams();\n    window.setTimeout(function () {\n      if (_this.params.datasource) {\n        _this.params.datasource.getRows(params);\n      }\n    }, 0);\n  };\n\n  ServerSideBlock.prototype.createBlankRowNode = function (rowIndex) {\n    var rowNode = _super.prototype.createBlankRowNode.call(this, rowIndex);\n\n    rowNode.group = this.groupLevel;\n    rowNode.leafGroup = this.leafGroup;\n    rowNode.level = this.level;\n    rowNode.uiLevel = this.level;\n    rowNode.parent = this.parentRowNode; // stub gets set to true here, and then false when this rowNode gets it's data\n\n    rowNode.stub = true;\n\n    if (rowNode.group) {\n      rowNode.expanded = false;\n      rowNode.field = this.groupField;\n      rowNode.rowGroupColumn = this.rowGroupColumn;\n    }\n\n    return rowNode;\n  };\n\n  ServerSideBlock.prototype.createGroupKeys = function (groupNode) {\n    var keys = [];\n    var pointer = groupNode;\n\n    while (pointer && pointer.level >= 0) {\n      keys.push(pointer.key);\n      pointer = pointer.parent;\n    }\n\n    keys.reverse();\n    return keys;\n  };\n\n  ServerSideBlock.prototype.isPixelInRange = function (pixel) {\n    return pixel >= this.blockTop && pixel < this.blockTop + this.blockHeight;\n  };\n\n  ServerSideBlock.prototype.getRowBounds = function (index, virtualRowCount) {\n    var start = this.getStartRow();\n    var end = this.getEndRow();\n\n    var extractRowBounds = function extractRowBounds(rowNode) {\n      return {\n        rowHeight: rowNode.rowHeight,\n        rowTop: rowNode.rowTop\n      };\n    };\n\n    for (var i = start; i <= end; i++) {\n      // the blocks can have extra rows in them, if they are the last block\n      // in the cache and the virtual row count doesn't divide evenly by the\n      if (i >= virtualRowCount) {\n        continue;\n      }\n\n      var rowNode = this.getRowUsingLocalIndex(i);\n\n      if (rowNode) {\n        if (rowNode.rowIndex === index) {\n          return extractRowBounds(rowNode);\n        }\n\n        if (rowNode.group && rowNode.expanded && _.exists(rowNode.childrenCache)) {\n          var serverSideCache = rowNode.childrenCache;\n\n          if (serverSideCache.isDisplayIndexInCache(index)) {\n            return serverSideCache.getRowBounds(index);\n          }\n        } else if (rowNode.master && rowNode.expanded && _.exists(rowNode.detailNode)) {\n          if (rowNode.detailNode.rowIndex === index) {\n            return extractRowBounds(rowNode.detailNode);\n          }\n        }\n      }\n    }\n\n    console.error(\" ag-Grid: looking for invalid row index in Server Side Row Model, index=\" + index);\n    return null;\n  };\n\n  ServerSideBlock.prototype.getRowIndexAtPixel = function (pixel, virtualRowCount) {\n    var start = this.getStartRow();\n    var end = this.getEndRow();\n\n    for (var i = start; i <= end; i++) {\n      // the blocks can have extra rows in them, if they are the last block\n      // in the cache and the virtual row count doesn't divide evenly by the\n      if (i >= virtualRowCount) {\n        continue;\n      }\n\n      var rowNode = this.getRowUsingLocalIndex(i);\n\n      if (rowNode) {\n        // first check if pixel is in range of current row\n        if (rowNode.isPixelInRange(pixel)) {\n          return rowNode.rowIndex;\n        } // then check if current row contains a detail row with pixel in range\n\n\n        var expandedMasterRow = rowNode.master && rowNode.expanded;\n\n        if (expandedMasterRow && rowNode.detailNode.isPixelInRange(pixel)) {\n          return rowNode.detailNode.rowIndex;\n        } // then check if it's a group row with a child cache with pixel in range\n\n\n        if (rowNode.group && rowNode.expanded && _.exists(rowNode.childrenCache)) {\n          var serverSideCache = rowNode.childrenCache;\n\n          if (serverSideCache.isPixelInRange(pixel)) {\n            return serverSideCache.getRowIndexAtPixel(pixel);\n          }\n        }\n      }\n    }\n\n    console.warn(\"ag-Grid: invalid pixel range for server side block \" + pixel);\n    return 0;\n  };\n\n  ServerSideBlock.prototype.clearDisplayIndexes = function (virtualRowCount) {\n    this.displayIndexEnd = undefined;\n    this.displayIndexStart = undefined;\n    this.forEachRowNode(virtualRowCount, function (rowNode) {\n      rowNode.clearRowTop();\n      rowNode.setRowIndex(undefined);\n\n      var hasChildCache = rowNode.group && _.exists(rowNode.childrenCache);\n\n      if (hasChildCache) {\n        var serverSideCache = rowNode.childrenCache;\n        serverSideCache.clearDisplayIndexes();\n      }\n\n      var hasDetailNode = rowNode.master && rowNode.detailNode;\n\n      if (hasDetailNode) {\n        rowNode.detailNode.clearRowTop();\n        rowNode.detailNode.setRowIndex(undefined);\n      }\n    });\n  };\n\n  ServerSideBlock.prototype.setDisplayIndexes = function (displayIndexSeq, virtualRowCount, nextRowTop) {\n    this.displayIndexStart = displayIndexSeq.peek();\n    this.blockTop = nextRowTop.value;\n    this.forEachRowNode(virtualRowCount, function (rowNode) {\n      // set this row\n      rowNode.setRowIndex(displayIndexSeq.next());\n      rowNode.setRowTop(nextRowTop.value);\n      nextRowTop.value += rowNode.rowHeight; // set child for master / detail\n\n      var hasDetailRow = rowNode.master;\n\n      if (hasDetailRow) {\n        if (rowNode.expanded && rowNode.detailNode) {\n          rowNode.detailNode.setRowIndex(displayIndexSeq.next());\n          rowNode.detailNode.setRowTop(nextRowTop.value);\n          nextRowTop.value += rowNode.detailNode.rowHeight;\n        } else if (rowNode.detailNode) {\n          rowNode.detailNode.clearRowTop();\n          rowNode.detailNode.setRowIndex(undefined);\n        }\n      } // set children for SSRM child rows\n\n\n      var hasChildCache = rowNode.group && _.exists(rowNode.childrenCache);\n\n      if (hasChildCache) {\n        var serverSideCache = rowNode.childrenCache;\n\n        if (rowNode.expanded) {\n          serverSideCache.setDisplayIndexes(displayIndexSeq, nextRowTop);\n        } else {\n          // we need to clear the row tops, as the row renderer depends on\n          // this to know if the row should be faded out\n          serverSideCache.clearDisplayIndexes();\n        }\n      }\n    });\n    this.displayIndexEnd = displayIndexSeq.peek();\n    this.blockHeight = nextRowTop.value - this.blockTop;\n  };\n\n  ServerSideBlock.prototype.forEachRowNode = function (virtualRowCount, callback) {\n    var start = this.getStartRow();\n    var end = this.getEndRow();\n\n    for (var i = start; i <= end; i++) {\n      // the blocks can have extra rows in them, if they are the last block\n      // in the cache and the virtual row count doesn't divide evenly by the\n      if (i >= virtualRowCount) {\n        continue;\n      }\n\n      var rowNode = this.getRowUsingLocalIndex(i);\n\n      if (rowNode) {\n        callback(rowNode);\n      }\n    }\n  };\n\n  ServerSideBlock.prototype.createLoadParams = function () {\n    var groupKeys = this.createGroupKeys(this.parentRowNode);\n    var request = {\n      startRow: this.getStartRow(),\n      endRow: this.getEndRow(),\n      rowGroupCols: this.params.rowGroupCols,\n      valueCols: this.params.valueCols,\n      pivotCols: this.params.pivotCols,\n      pivotMode: this.params.pivotMode,\n      groupKeys: groupKeys,\n      filterModel: this.params.filterModel,\n      sortModel: this.params.sortModel\n    };\n    var params = {\n      successCallback: this.pageLoaded.bind(this, this.getVersion()),\n      failCallback: this.pageLoadFailed.bind(this),\n      request: request,\n      parentNode: this.parentRowNode,\n      api: this.gridApi,\n      columnApi: this.columnApi\n    };\n    return params;\n  };\n\n  ServerSideBlock.prototype.isDisplayIndexInBlock = function (displayIndex) {\n    return displayIndex >= this.displayIndexStart && displayIndex < this.displayIndexEnd;\n  };\n\n  ServerSideBlock.prototype.isBlockBefore = function (displayIndex) {\n    return displayIndex >= this.displayIndexEnd;\n  };\n\n  ServerSideBlock.prototype.getDisplayIndexStart = function () {\n    return this.displayIndexStart;\n  };\n\n  ServerSideBlock.prototype.getDisplayIndexEnd = function () {\n    return this.displayIndexEnd;\n  };\n\n  ServerSideBlock.prototype.getBlockHeight = function () {\n    return this.blockHeight;\n  };\n\n  ServerSideBlock.prototype.getBlockTop = function () {\n    return this.blockTop;\n  };\n\n  ServerSideBlock.prototype.isGroupLevel = function () {\n    return this.groupLevel;\n  };\n\n  ServerSideBlock.prototype.getGroupField = function () {\n    return this.groupField;\n  };\n\n  ServerSideBlock.DefaultBlockSize = 100;\n\n  __decorate([Autowired('rowRenderer')], ServerSideBlock.prototype, \"rowRenderer\", void 0);\n\n  __decorate([Autowired('columnController')], ServerSideBlock.prototype, \"columnController\", void 0);\n\n  __decorate([Autowired('valueService')], ServerSideBlock.prototype, \"valueService\", void 0);\n\n  __decorate([Autowired('gridOptionsWrapper')], ServerSideBlock.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([Autowired('columnApi')], ServerSideBlock.prototype, \"columnApi\", void 0);\n\n  __decorate([Autowired('gridApi')], ServerSideBlock.prototype, \"gridApi\", void 0);\n\n  __decorate([PostConstruct], ServerSideBlock.prototype, \"init\", null);\n\n  __decorate([__param(0, Qualifier('loggerFactory'))], ServerSideBlock.prototype, \"setBeans\", null);\n\n  return ServerSideBlock;\n}(RowNodeBlock);\n\nexport { ServerSideBlock };","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/@ag-grid-enterprise/server-side-row-model/dist/es6/serverSideRowModel/serverSideBlock.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","Autowired","PostConstruct","Qualifier","RowNodeBlock","_","ServerSideBlock","_super","pageNumber","parentRowNode","params","parentCache","_this","call","level","groupLevel","rowGroupCols","undefined","leafGroup","init","usingTreeData","gridOptionsWrapper","isTreeData","usingMasterDetail","isMasterDetail","groupColVo","groupField","field","rowGroupColumn","columnController","getRowGroupColumns","createNodeIdPrefix","context","getContext","rowRenderer","setBeans","loggerFactory","logger","parts","rowNode","push","parent","nodeIdPrefix","reverse","join","createIdForIndex","index","exists","toString","getNodeIdPrefix","getRow","displayRowIndex","bottomPointer","getStartRow","virtualRowCount","getVirtualRowCount","endRow","getEndRow","actualEnd","topPointer","missing","console","warn","midPointer","Math","floor","currentRowNode","getRowUsingLocalIndex","rowIndex","expandedMasterRow","master","expanded","detailNode","childrenCache","isDisplayIndexInCache","setDataAndId","data","stub","idToUse","setRowHeight","getRowHeightForNode","height","getServerSideGroupKey","getServerSideGroupKeyFunc","isServerSideGroup","getIsServerSideGroupFunc","group","valueService","getValue","doOnce","getId","isRowMasterFunc","getIsRowMasterFunc","setGroupDataIntoRowNode","setChildCountIntoRowNode","getChildCount","getChildCountFunc","allChildrenCount","groupDisplayCols","getGroupDisplayColumns","forEach","col","groupData","getColId","isRowGroupDisplayed","groupValue","loadFromDatasource","createLoadParams","window","setTimeout","datasource","getRows","createBlankRowNode","uiLevel","createGroupKeys","groupNode","keys","pointer","isPixelInRange","pixel","blockTop","blockHeight","getRowBounds","start","end","extractRowBounds","rowHeight","rowTop","serverSideCache","error","getRowIndexAtPixel","clearDisplayIndexes","displayIndexEnd","displayIndexStart","forEachRowNode","clearRowTop","setRowIndex","hasChildCache","hasDetailNode","setDisplayIndexes","displayIndexSeq","nextRowTop","peek","value","next","setRowTop","hasDetailRow","callback","groupKeys","request","startRow","valueCols","pivotCols","pivotMode","filterModel","sortModel","successCallback","pageLoaded","bind","getVersion","failCallback","pageLoadFailed","parentNode","api","gridApi","columnApi","isDisplayIndexInBlock","displayIndex","isBlockBefore","getDisplayIndexStart","getDisplayIndexEnd","getBlockHeight","getBlockTop","isGroupLevel","getGroupField","DefaultBlockSize"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Autowired, PostConstruct, Qualifier, RowNodeBlock, _ } from \"@ag-grid-community/core\";\nvar ServerSideBlock = /** @class */ (function (_super) {\n    __extends(ServerSideBlock, _super);\n    function ServerSideBlock(pageNumber, parentRowNode, params, parentCache) {\n        var _this = _super.call(this, pageNumber, params) || this;\n        _this.params = params;\n        _this.parentRowNode = parentRowNode;\n        _this.parentCache = parentCache;\n        _this.level = parentRowNode.level + 1;\n        _this.groupLevel = params.rowGroupCols ? _this.level < params.rowGroupCols.length : undefined;\n        _this.leafGroup = params.rowGroupCols ? _this.level === params.rowGroupCols.length - 1 : false;\n        return _this;\n    }\n    ServerSideBlock.prototype.init = function () {\n        this.usingTreeData = this.gridOptionsWrapper.isTreeData();\n        this.usingMasterDetail = this.gridOptionsWrapper.isMasterDetail();\n        if (!this.usingTreeData && this.groupLevel) {\n            var groupColVo = this.params.rowGroupCols[this.level];\n            this.groupField = groupColVo.field;\n            this.rowGroupColumn = this.columnController.getRowGroupColumns()[this.level];\n        }\n        this.createNodeIdPrefix();\n        _super.prototype.init.call(this, {\n            context: this.getContext(),\n            rowRenderer: this.rowRenderer\n        });\n    };\n    ServerSideBlock.prototype.setBeans = function (loggerFactory) {\n        this.logger = loggerFactory.create('ServerSideBlock');\n    };\n    ServerSideBlock.prototype.createNodeIdPrefix = function () {\n        var parts = [];\n        var rowNode = this.parentRowNode;\n        // pull keys from all parent nodes, but do not include the root node\n        while (rowNode && rowNode.level >= 0) {\n            parts.push(rowNode.key);\n            rowNode = rowNode.parent;\n        }\n        if (parts.length > 0) {\n            this.nodeIdPrefix = parts.reverse().join('-') + '-';\n        }\n    };\n    ServerSideBlock.prototype.createIdForIndex = function (index) {\n        if (_.exists(this.nodeIdPrefix)) {\n            return this.nodeIdPrefix + index.toString();\n        }\n        else {\n            return index.toString();\n        }\n    };\n    ServerSideBlock.prototype.getNodeIdPrefix = function () {\n        return this.nodeIdPrefix;\n    };\n    ServerSideBlock.prototype.getRow = function (displayRowIndex) {\n        var bottomPointer = this.getStartRow();\n        // the end row depends on whether all this block is used or not. if the virtual row count\n        // is before the end, then not all the row is used\n        var virtualRowCount = this.parentCache.getVirtualRowCount();\n        var endRow = this.getEndRow();\n        var actualEnd = (virtualRowCount < endRow) ? virtualRowCount : endRow;\n        var topPointer = actualEnd - 1;\n        if (_.missing(topPointer) || _.missing(bottomPointer)) {\n            console.warn(\"ag-grid: error: topPointer = \" + topPointer + \", bottomPointer = \" + bottomPointer);\n            return null;\n        }\n        while (true) {\n            var midPointer = Math.floor((bottomPointer + topPointer) / 2);\n            var currentRowNode = _super.prototype.getRowUsingLocalIndex.call(this, midPointer);\n            // first check current row for index\n            if (currentRowNode.rowIndex === displayRowIndex) {\n                return currentRowNode;\n            }\n            // then check if current row contains a detail row with the index\n            var expandedMasterRow = currentRowNode.master && currentRowNode.expanded;\n            if (expandedMasterRow && currentRowNode.detailNode.rowIndex === displayRowIndex) {\n                return currentRowNode.detailNode;\n            }\n            // then check if child cache contains index\n            var childrenCache = currentRowNode.childrenCache;\n            if (currentRowNode.expanded && childrenCache && childrenCache.isDisplayIndexInCache(displayRowIndex)) {\n                return childrenCache.getRow(displayRowIndex);\n            }\n            // otherwise adjust pointers to continue searching for index\n            if (currentRowNode.rowIndex < displayRowIndex) {\n                bottomPointer = midPointer + 1;\n            }\n            else if (currentRowNode.rowIndex > displayRowIndex) {\n                topPointer = midPointer - 1;\n            }\n            else {\n                console.warn(\"ag-Grid: error: unable to locate rowIndex = \" + displayRowIndex + \" in cache\");\n                return null;\n            }\n        }\n    };\n    ServerSideBlock.prototype.setDataAndId = function (rowNode, data, index) {\n        var _this = this;\n        rowNode.stub = false;\n        if (_.exists(data)) {\n            // if the user is not providing id's, then we build an id based on the index.\n            // for infinite scrolling, the index is used on it's own. for Server Side Row Model,\n            // we combine the index with the level and group key, so that the id is\n            // unique across the set.\n            //\n            // unique id is needed for selection (so selection can be maintained when\n            // doing server side sorting / filtering) - if user is not providing id's\n            // (and we use the indexes) then selection will not work between sorting &\n            // filtering.\n            //\n            // id's are also used by the row renderer for updating the dom as it identifies\n            // rowNodes by id\n            var idToUse = this.createIdForIndex(index);\n            rowNode.setDataAndId(data, idToUse);\n            rowNode.setRowHeight(this.gridOptionsWrapper.getRowHeightForNode(rowNode).height);\n            if (this.usingTreeData) {\n                var getServerSideGroupKey = this.gridOptionsWrapper.getServerSideGroupKeyFunc();\n                if (_.exists(getServerSideGroupKey) && getServerSideGroupKey) {\n                    rowNode.key = getServerSideGroupKey(rowNode.data);\n                }\n                var isServerSideGroup = this.gridOptionsWrapper.getIsServerSideGroupFunc();\n                if (_.exists(isServerSideGroup) && isServerSideGroup) {\n                    rowNode.group = isServerSideGroup(rowNode.data);\n                }\n            }\n            else if (rowNode.group) {\n                rowNode.key = this.valueService.getValue(this.rowGroupColumn, rowNode);\n                if (rowNode.key === null || rowNode.key === undefined) {\n                    _.doOnce(function () {\n                        console.warn(\"null and undefined values are not allowed for server side row model keys\");\n                        if (_this.rowGroupColumn) {\n                            console.warn(\"column = \" + _this.rowGroupColumn.getId());\n                        }\n                        console.warn(\"data is \", rowNode.data);\n                    }, 'ServerSideBlock-CannotHaveNullOrUndefinedForKey');\n                }\n            }\n            else if (this.usingMasterDetail) {\n                var isRowMasterFunc = this.gridOptionsWrapper.getIsRowMasterFunc();\n                if (_.exists(isRowMasterFunc) && isRowMasterFunc) {\n                    rowNode.master = isRowMasterFunc(rowNode.data);\n                }\n                else {\n                    rowNode.master = true;\n                }\n            }\n        }\n        else {\n            rowNode.setDataAndId(undefined, undefined);\n            rowNode.key = null;\n        }\n        if (this.usingTreeData || this.groupLevel) {\n            this.setGroupDataIntoRowNode(rowNode);\n            this.setChildCountIntoRowNode(rowNode);\n        }\n    };\n    ServerSideBlock.prototype.setChildCountIntoRowNode = function (rowNode) {\n        var getChildCount = this.gridOptionsWrapper.getChildCountFunc();\n        if (getChildCount) {\n            rowNode.allChildrenCount = getChildCount(rowNode.data);\n        }\n    };\n    ServerSideBlock.prototype.setGroupDataIntoRowNode = function (rowNode) {\n        var _this = this;\n        var groupDisplayCols = this.columnController.getGroupDisplayColumns();\n        var usingTreeData = this.gridOptionsWrapper.isTreeData();\n        groupDisplayCols.forEach(function (col) {\n            if (usingTreeData) {\n                if (_.missing(rowNode.groupData)) {\n                    rowNode.groupData = {};\n                }\n                rowNode.groupData[col.getColId()] = rowNode.key;\n            }\n            else if (col.isRowGroupDisplayed(_this.rowGroupColumn.getId())) {\n                var groupValue = _this.valueService.getValue(_this.rowGroupColumn, rowNode);\n                if (_.missing(rowNode.groupData)) {\n                    rowNode.groupData = {};\n                }\n                rowNode.groupData[col.getColId()] = groupValue;\n            }\n        });\n    };\n    ServerSideBlock.prototype.loadFromDatasource = function () {\n        var _this = this;\n        var params = this.createLoadParams();\n        window.setTimeout(function () {\n            if (_this.params.datasource) {\n                _this.params.datasource.getRows(params);\n            }\n        }, 0);\n    };\n    ServerSideBlock.prototype.createBlankRowNode = function (rowIndex) {\n        var rowNode = _super.prototype.createBlankRowNode.call(this, rowIndex);\n        rowNode.group = this.groupLevel;\n        rowNode.leafGroup = this.leafGroup;\n        rowNode.level = this.level;\n        rowNode.uiLevel = this.level;\n        rowNode.parent = this.parentRowNode;\n        // stub gets set to true here, and then false when this rowNode gets it's data\n        rowNode.stub = true;\n        if (rowNode.group) {\n            rowNode.expanded = false;\n            rowNode.field = this.groupField;\n            rowNode.rowGroupColumn = this.rowGroupColumn;\n        }\n        return rowNode;\n    };\n    ServerSideBlock.prototype.createGroupKeys = function (groupNode) {\n        var keys = [];\n        var pointer = groupNode;\n        while (pointer && pointer.level >= 0) {\n            keys.push(pointer.key);\n            pointer = pointer.parent;\n        }\n        keys.reverse();\n        return keys;\n    };\n    ServerSideBlock.prototype.isPixelInRange = function (pixel) {\n        return pixel >= this.blockTop && pixel < (this.blockTop + this.blockHeight);\n    };\n    ServerSideBlock.prototype.getRowBounds = function (index, virtualRowCount) {\n        var start = this.getStartRow();\n        var end = this.getEndRow();\n        var extractRowBounds = function (rowNode) {\n            return {\n                rowHeight: rowNode.rowHeight,\n                rowTop: rowNode.rowTop\n            };\n        };\n        for (var i = start; i <= end; i++) {\n            // the blocks can have extra rows in them, if they are the last block\n            // in the cache and the virtual row count doesn't divide evenly by the\n            if (i >= virtualRowCount) {\n                continue;\n            }\n            var rowNode = this.getRowUsingLocalIndex(i);\n            if (rowNode) {\n                if (rowNode.rowIndex === index) {\n                    return extractRowBounds(rowNode);\n                }\n                if (rowNode.group && rowNode.expanded && _.exists(rowNode.childrenCache)) {\n                    var serverSideCache = rowNode.childrenCache;\n                    if (serverSideCache.isDisplayIndexInCache(index)) {\n                        return serverSideCache.getRowBounds(index);\n                    }\n                }\n                else if (rowNode.master && rowNode.expanded && _.exists(rowNode.detailNode)) {\n                    if (rowNode.detailNode.rowIndex === index) {\n                        return extractRowBounds(rowNode.detailNode);\n                    }\n                }\n            }\n        }\n        console.error(\" ag-Grid: looking for invalid row index in Server Side Row Model, index=\" + index);\n        return null;\n    };\n    ServerSideBlock.prototype.getRowIndexAtPixel = function (pixel, virtualRowCount) {\n        var start = this.getStartRow();\n        var end = this.getEndRow();\n        for (var i = start; i <= end; i++) {\n            // the blocks can have extra rows in them, if they are the last block\n            // in the cache and the virtual row count doesn't divide evenly by the\n            if (i >= virtualRowCount) {\n                continue;\n            }\n            var rowNode = this.getRowUsingLocalIndex(i);\n            if (rowNode) {\n                // first check if pixel is in range of current row\n                if (rowNode.isPixelInRange(pixel)) {\n                    return rowNode.rowIndex;\n                }\n                // then check if current row contains a detail row with pixel in range\n                var expandedMasterRow = rowNode.master && rowNode.expanded;\n                if (expandedMasterRow && rowNode.detailNode.isPixelInRange(pixel)) {\n                    return rowNode.detailNode.rowIndex;\n                }\n                // then check if it's a group row with a child cache with pixel in range\n                if (rowNode.group && rowNode.expanded && _.exists(rowNode.childrenCache)) {\n                    var serverSideCache = rowNode.childrenCache;\n                    if (serverSideCache.isPixelInRange(pixel)) {\n                        return serverSideCache.getRowIndexAtPixel(pixel);\n                    }\n                }\n            }\n        }\n        console.warn(\"ag-Grid: invalid pixel range for server side block \" + pixel);\n        return 0;\n    };\n    ServerSideBlock.prototype.clearDisplayIndexes = function (virtualRowCount) {\n        this.displayIndexEnd = undefined;\n        this.displayIndexStart = undefined;\n        this.forEachRowNode(virtualRowCount, function (rowNode) {\n            rowNode.clearRowTop();\n            rowNode.setRowIndex(undefined);\n            var hasChildCache = rowNode.group && _.exists(rowNode.childrenCache);\n            if (hasChildCache) {\n                var serverSideCache = rowNode.childrenCache;\n                serverSideCache.clearDisplayIndexes();\n            }\n            var hasDetailNode = rowNode.master && rowNode.detailNode;\n            if (hasDetailNode) {\n                rowNode.detailNode.clearRowTop();\n                rowNode.detailNode.setRowIndex(undefined);\n            }\n        });\n    };\n    ServerSideBlock.prototype.setDisplayIndexes = function (displayIndexSeq, virtualRowCount, nextRowTop) {\n        this.displayIndexStart = displayIndexSeq.peek();\n        this.blockTop = nextRowTop.value;\n        this.forEachRowNode(virtualRowCount, function (rowNode) {\n            // set this row\n            rowNode.setRowIndex(displayIndexSeq.next());\n            rowNode.setRowTop(nextRowTop.value);\n            nextRowTop.value += rowNode.rowHeight;\n            // set child for master / detail\n            var hasDetailRow = rowNode.master;\n            if (hasDetailRow) {\n                if (rowNode.expanded && rowNode.detailNode) {\n                    rowNode.detailNode.setRowIndex(displayIndexSeq.next());\n                    rowNode.detailNode.setRowTop(nextRowTop.value);\n                    nextRowTop.value += rowNode.detailNode.rowHeight;\n                }\n                else if (rowNode.detailNode) {\n                    rowNode.detailNode.clearRowTop();\n                    rowNode.detailNode.setRowIndex(undefined);\n                }\n            }\n            // set children for SSRM child rows\n            var hasChildCache = rowNode.group && _.exists(rowNode.childrenCache);\n            if (hasChildCache) {\n                var serverSideCache = rowNode.childrenCache;\n                if (rowNode.expanded) {\n                    serverSideCache.setDisplayIndexes(displayIndexSeq, nextRowTop);\n                }\n                else {\n                    // we need to clear the row tops, as the row renderer depends on\n                    // this to know if the row should be faded out\n                    serverSideCache.clearDisplayIndexes();\n                }\n            }\n        });\n        this.displayIndexEnd = displayIndexSeq.peek();\n        this.blockHeight = nextRowTop.value - this.blockTop;\n    };\n    ServerSideBlock.prototype.forEachRowNode = function (virtualRowCount, callback) {\n        var start = this.getStartRow();\n        var end = this.getEndRow();\n        for (var i = start; i <= end; i++) {\n            // the blocks can have extra rows in them, if they are the last block\n            // in the cache and the virtual row count doesn't divide evenly by the\n            if (i >= virtualRowCount) {\n                continue;\n            }\n            var rowNode = this.getRowUsingLocalIndex(i);\n            if (rowNode) {\n                callback(rowNode);\n            }\n        }\n    };\n    ServerSideBlock.prototype.createLoadParams = function () {\n        var groupKeys = this.createGroupKeys(this.parentRowNode);\n        var request = {\n            startRow: this.getStartRow(),\n            endRow: this.getEndRow(),\n            rowGroupCols: this.params.rowGroupCols,\n            valueCols: this.params.valueCols,\n            pivotCols: this.params.pivotCols,\n            pivotMode: this.params.pivotMode,\n            groupKeys: groupKeys,\n            filterModel: this.params.filterModel,\n            sortModel: this.params.sortModel\n        };\n        var params = {\n            successCallback: this.pageLoaded.bind(this, this.getVersion()),\n            failCallback: this.pageLoadFailed.bind(this),\n            request: request,\n            parentNode: this.parentRowNode,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        return params;\n    };\n    ServerSideBlock.prototype.isDisplayIndexInBlock = function (displayIndex) {\n        return displayIndex >= this.displayIndexStart && displayIndex < this.displayIndexEnd;\n    };\n    ServerSideBlock.prototype.isBlockBefore = function (displayIndex) {\n        return displayIndex >= this.displayIndexEnd;\n    };\n    ServerSideBlock.prototype.getDisplayIndexStart = function () {\n        return this.displayIndexStart;\n    };\n    ServerSideBlock.prototype.getDisplayIndexEnd = function () {\n        return this.displayIndexEnd;\n    };\n    ServerSideBlock.prototype.getBlockHeight = function () {\n        return this.blockHeight;\n    };\n    ServerSideBlock.prototype.getBlockTop = function () {\n        return this.blockTop;\n    };\n    ServerSideBlock.prototype.isGroupLevel = function () {\n        return this.groupLevel;\n    };\n    ServerSideBlock.prototype.getGroupField = function () {\n        return this.groupField;\n    };\n    ServerSideBlock.DefaultBlockSize = 100;\n    __decorate([\n        Autowired('rowRenderer')\n    ], ServerSideBlock.prototype, \"rowRenderer\", void 0);\n    __decorate([\n        Autowired('columnController')\n    ], ServerSideBlock.prototype, \"columnController\", void 0);\n    __decorate([\n        Autowired('valueService')\n    ], ServerSideBlock.prototype, \"valueService\", void 0);\n    __decorate([\n        Autowired('gridOptionsWrapper')\n    ], ServerSideBlock.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        Autowired('columnApi')\n    ], ServerSideBlock.prototype, \"columnApi\", void 0);\n    __decorate([\n        Autowired('gridApi')\n    ], ServerSideBlock.prototype, \"gridApi\", void 0);\n    __decorate([\n        PostConstruct\n    ], ServerSideBlock.prototype, \"init\", null);\n    __decorate([\n        __param(0, Qualifier('loggerFactory'))\n    ], ServerSideBlock.prototype, \"setBeans\", null);\n    return ServerSideBlock;\n}(RowNodeBlock));\nexport { ServerSideBlock };\n"]},"metadata":{},"sourceType":"module"}