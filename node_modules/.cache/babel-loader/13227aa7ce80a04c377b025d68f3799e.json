{"ast":null,"code":"import { _ } from '@ag-grid-community/core';\nimport numberFormatsFactory from './numberFormats';\nimport fontsFactory from './fonts';\nimport fillsFactory from './fills';\nimport bordersFactory from './borders';\nimport cellStylesXfsFactory from './cellStyleXfs';\nimport cellXfsFactory from './cellXfs';\nimport cellStylesFactory from './cellStyles';\nimport { numberFormatMap } from './numberFormat';\nimport { getFamilyId } from './font';\nimport { convertLegacyBorder } from './border';\nvar stylesMap;\nvar registeredNumberFmts;\nvar registeredFonts;\nvar registeredFills;\nvar registeredBorders;\nvar registeredCellStyleXfs;\nvar registeredCellXfs;\nvar registeredCellStyles;\n\nvar resetStylesheetValues = function resetStylesheetValues() {\n  stylesMap = {\n    base: 0\n  };\n  registeredNumberFmts = [];\n  registeredFonts = [{\n    name: 'Calibri',\n    size: 14,\n    colorTheme: '1',\n    family: 2,\n    scheme: 'minor'\n  }];\n  registeredFills = [{\n    patternType: 'none'\n  }, {\n    patternType: 'gray125'\n  }];\n  registeredBorders = [{\n    left: undefined,\n    right: undefined,\n    top: undefined,\n    bottom: undefined,\n    diagonal: undefined\n  }];\n  registeredCellStyleXfs = [{\n    borderId: 0,\n    fillId: 0,\n    fontId: 0,\n    numFmtId: 0\n  }];\n  registeredCellXfs = [{\n    borderId: 0,\n    fillId: 0,\n    fontId: 0,\n    numFmtId: 0,\n    xfId: 0\n  }];\n  registeredCellStyles = [{\n    builtinId: 0,\n    name: 'normal',\n    xfId: 0\n  }];\n};\n\nvar convertLegacyPattern = function convertLegacyPattern(name) {\n  var colorMap = {\n    None: 'none',\n    Solid: 'solid',\n    Gray50: 'mediumGray',\n    Gray75: 'darkGray',\n    Gray25: 'lightGray',\n    HorzStripe: 'darkHorizontal',\n    VertStripe: 'darkVertical',\n    ReverseDiagStripe: 'darkDown',\n    DiagStripe: 'darkUp',\n    DiagCross: 'darkGrid',\n    ThickDiagCross: 'darkTrellis',\n    ThinHorzStripe: 'lightHorizontal',\n    ThinVertStripe: 'lightVertical',\n    ThinReverseDiagStripe: 'lightDown',\n    ThinDiagStripe: 'lightUp',\n    ThinHorzCross: 'lightGrid',\n    ThinDiagCross: 'lightTrellis',\n    Gray125: 'gray125',\n    Gray0625: 'gray0625'\n  };\n\n  if (!name) {\n    return 'none';\n  }\n\n  return colorMap[name] || name;\n};\n\nexport var convertLegacyColor = function convertLegacyColor(color) {\n  if (color == undefined) {\n    return color;\n  }\n\n  if (color.charAt(0) === '#') {\n    color = color.substr(1);\n  }\n\n  return color.length === 6 ? '00' + color : color;\n};\n\nvar registerFill = function registerFill(fill) {\n  var convertedPattern = convertLegacyPattern(fill.pattern);\n  var convertedFillColor = convertLegacyColor(fill.color);\n  var convertedPatternColor = convertLegacyColor(fill.patternColor);\n\n  var pos = _.findIndex(registeredFills, function (currentFill) {\n    var patternType = currentFill.patternType,\n        fgRgb = currentFill.fgRgb,\n        bgRgb = currentFill.bgRgb;\n\n    if (patternType != convertedPattern || fgRgb != convertedFillColor || bgRgb != convertedPatternColor) {\n      return false;\n    }\n\n    return true;\n  });\n\n  if (pos === -1) {\n    pos = registeredFills.length;\n    registeredFills.push({\n      patternType: convertedPattern,\n      fgRgb: convertedFillColor,\n      bgRgb: convertedPatternColor\n    });\n  }\n\n  return pos;\n};\n\nvar registerNumberFmt = function registerNumberFmt(format) {\n  format = _.utf8_encode(format);\n\n  if (numberFormatMap[format]) {\n    return numberFormatMap[format];\n  }\n\n  var pos = _.findIndex(registeredNumberFmts, function (currentFormat) {\n    return currentFormat.formatCode === format;\n  });\n\n  if (pos === -1) {\n    pos = registeredNumberFmts.length + 164;\n    registeredNumberFmts.push({\n      formatCode: format,\n      numFmtId: pos\n    });\n  } else {\n    pos = registeredNumberFmts[pos].numFmtId;\n  }\n\n  return pos;\n};\n\nvar registerBorders = function registerBorders(borders) {\n  var borderBottom = borders.borderBottom,\n      borderTop = borders.borderTop,\n      borderLeft = borders.borderLeft,\n      borderRight = borders.borderRight;\n  var bottomStyle, topStyle, leftStyle, rightStyle;\n  var bottomColor, topColor, leftColor, rightColor;\n\n  if (borderLeft) {\n    leftStyle = convertLegacyBorder(borderLeft.lineStyle, borderLeft.weight);\n    leftColor = convertLegacyColor(borderLeft.color);\n  }\n\n  if (borderRight) {\n    rightStyle = convertLegacyBorder(borderRight.lineStyle, borderRight.weight);\n    rightColor = convertLegacyColor(borderRight.color);\n  }\n\n  if (borderBottom) {\n    bottomStyle = convertLegacyBorder(borderBottom.lineStyle, borderBottom.weight);\n    bottomColor = convertLegacyColor(borderBottom.color);\n  }\n\n  if (borderTop) {\n    topStyle = convertLegacyBorder(borderTop.lineStyle, borderTop.weight);\n    topColor = convertLegacyColor(borderTop.color);\n  }\n\n  var pos = _.findIndex(registeredBorders, function (currentBorder) {\n    var left = currentBorder.left,\n        right = currentBorder.right,\n        top = currentBorder.top,\n        bottom = currentBorder.bottom;\n\n    if (!left && (leftStyle || leftColor)) {\n      return false;\n    }\n\n    if (!right && (rightStyle || rightColor)) {\n      return false;\n    }\n\n    if (!top && (topStyle || topColor)) {\n      return false;\n    }\n\n    if (!bottom && (bottomStyle || bottomColor)) {\n      return false;\n    }\n\n    var _a = left || {},\n        clS = _a.style,\n        clC = _a.color;\n\n    var _b = right || {},\n        crS = _b.style,\n        crC = _b.color;\n\n    var _c = top || {},\n        ctS = _c.style,\n        ctC = _c.color;\n\n    var _d = bottom || {},\n        cbS = _d.style,\n        cbC = _d.color;\n\n    if (clS != leftStyle || clC != leftColor) {\n      return false;\n    }\n\n    if (crS != rightStyle || crC != rightColor) {\n      return false;\n    }\n\n    if (ctS != topStyle || ctC != topColor) {\n      return false;\n    }\n\n    if (cbS != bottomStyle || cbC != bottomColor) {\n      return false;\n    }\n\n    return true;\n  });\n\n  if (pos === -1) {\n    pos = registeredBorders.length;\n    registeredBorders.push({\n      left: {\n        style: leftStyle,\n        color: leftColor\n      },\n      right: {\n        style: rightStyle,\n        color: rightColor\n      },\n      top: {\n        style: topStyle,\n        color: topColor\n      },\n      bottom: {\n        style: bottomStyle,\n        color: bottomColor\n      },\n      diagonal: {\n        style: undefined,\n        color: undefined\n      }\n    });\n  }\n\n  return pos;\n};\n\nvar registerFont = function registerFont(font) {\n  var name = font.fontName,\n      color = font.color,\n      size = font.size,\n      bold = font.bold,\n      italic = font.italic,\n      outline = font.outline,\n      shadow = font.shadow,\n      strikeThrough = font.strikeThrough,\n      underline = font.underline,\n      family = font.family;\n  var utf8Name = name ? _.utf8_encode(name) : name;\n  var convertedColor = convertLegacyColor(color);\n  var familyId = getFamilyId(family);\n\n  var pos = _.findIndex(registeredFonts, function (currentFont) {\n    if (currentFont.name != utf8Name || currentFont.color != convertedColor || currentFont.size != size || currentFont.bold != bold || currentFont.italic != italic || currentFont.outline != outline || currentFont.shadow != shadow || currentFont.strike != strikeThrough || currentFont.underline != underline || currentFont.family != familyId) {\n      return false;\n    }\n\n    return true;\n  });\n\n  if (pos === -1) {\n    pos = registeredFonts.length;\n    registeredFonts.push({\n      name: utf8Name,\n      color: convertedColor,\n      size: size,\n      bold: bold,\n      italic: italic,\n      outline: outline,\n      shadow: shadow,\n      strike: strikeThrough,\n      underline: underline,\n      family: familyId\n    });\n  }\n\n  return pos;\n};\n\nvar registerStyle = function registerStyle(config) {\n  var id = config.id,\n      alignment = config.alignment,\n      borders = config.borders,\n      font = config.font,\n      interior = config.interior,\n      numberFormat = config.numberFormat,\n      protection = config.protection;\n  var currentFill = 0;\n  var currentBorder = 0;\n  var currentFont = 0;\n  var currentNumberFmt = 0;\n\n  if (!id || stylesMap[id] != undefined) {\n    return;\n  }\n\n  if (interior) {\n    currentFill = registerFill(interior);\n  }\n\n  if (borders) {\n    currentBorder = registerBorders(borders);\n  }\n\n  if (font) {\n    currentFont = registerFont(font);\n  }\n\n  if (numberFormat) {\n    currentNumberFmt = registerNumberFmt(numberFormat.format);\n  }\n\n  stylesMap[id] = registeredCellXfs.length;\n  registeredCellXfs.push({\n    alignment: alignment,\n    borderId: currentBorder || 0,\n    fillId: currentFill || 0,\n    fontId: currentFont || 0,\n    numFmtId: currentNumberFmt || 0,\n    protection: protection,\n    xfId: 0\n  });\n};\n\nvar stylesheetFactory = {\n  getTemplate: function getTemplate() {\n    var numberFormats = numberFormatsFactory.getTemplate(registeredNumberFmts);\n    var fonts = fontsFactory.getTemplate(registeredFonts);\n    var fills = fillsFactory.getTemplate(registeredFills);\n    var borders = bordersFactory.getTemplate(registeredBorders);\n    var cellStylesXfs = cellStylesXfsFactory.getTemplate(registeredCellStyleXfs);\n    var cellXfs = cellXfsFactory.getTemplate(registeredCellXfs);\n    var cellStyles = cellStylesFactory.getTemplate(registeredCellStyles);\n    resetStylesheetValues();\n    return {\n      name: 'styleSheet',\n      properties: {\n        rawMap: {\n          xmlns: 'http://schemas.openxmlformats.org/spreadsheetml/2006/main'\n        }\n      },\n      children: [numberFormats, fonts, fills, borders, cellStylesXfs, cellXfs, cellStyles, {\n        name: 'tableStyles',\n        properties: {\n          rawMap: {\n            count: 0,\n            defaultPivotStyle: 'PivotStyleLight16',\n            defaultTableStyle: 'TableStyleMedium2'\n          }\n        }\n      }]\n    };\n  }\n};\nexport var getStyleId = function getStyleId(name) {\n  return stylesMap[name] || 0;\n};\nexport var registerStyles = function registerStyles(styles) {\n  resetStylesheetValues();\n  styles.forEach(registerStyle);\n};\nexport default stylesheetFactory;","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/@ag-grid-enterprise/excel-export/dist/es6/excelExport/files/ooxml/styles/stylesheet.js"],"names":["_","numberFormatsFactory","fontsFactory","fillsFactory","bordersFactory","cellStylesXfsFactory","cellXfsFactory","cellStylesFactory","numberFormatMap","getFamilyId","convertLegacyBorder","stylesMap","registeredNumberFmts","registeredFonts","registeredFills","registeredBorders","registeredCellStyleXfs","registeredCellXfs","registeredCellStyles","resetStylesheetValues","base","name","size","colorTheme","family","scheme","patternType","left","undefined","right","top","bottom","diagonal","borderId","fillId","fontId","numFmtId","xfId","builtinId","convertLegacyPattern","colorMap","None","Solid","Gray50","Gray75","Gray25","HorzStripe","VertStripe","ReverseDiagStripe","DiagStripe","DiagCross","ThickDiagCross","ThinHorzStripe","ThinVertStripe","ThinReverseDiagStripe","ThinDiagStripe","ThinHorzCross","ThinDiagCross","Gray125","Gray0625","convertLegacyColor","color","charAt","substr","length","registerFill","fill","convertedPattern","pattern","convertedFillColor","convertedPatternColor","patternColor","pos","findIndex","currentFill","fgRgb","bgRgb","push","registerNumberFmt","format","utf8_encode","currentFormat","formatCode","registerBorders","borders","borderBottom","borderTop","borderLeft","borderRight","bottomStyle","topStyle","leftStyle","rightStyle","bottomColor","topColor","leftColor","rightColor","lineStyle","weight","currentBorder","_a","clS","style","clC","_b","crS","crC","_c","ctS","ctC","_d","cbS","cbC","registerFont","font","fontName","bold","italic","outline","shadow","strikeThrough","underline","utf8Name","convertedColor","familyId","currentFont","strike","registerStyle","config","id","alignment","interior","numberFormat","protection","currentNumberFmt","stylesheetFactory","getTemplate","numberFormats","fonts","fills","cellStylesXfs","cellXfs","cellStyles","properties","rawMap","xmlns","children","count","defaultPivotStyle","defaultTableStyle","getStyleId","registerStyles","styles","forEach"],"mappings":"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","sourcesContent":["import { _ } from '@ag-grid-community/core';\nimport numberFormatsFactory from './numberFormats';\nimport fontsFactory from './fonts';\nimport fillsFactory from './fills';\nimport bordersFactory from './borders';\nimport cellStylesXfsFactory from './cellStyleXfs';\nimport cellXfsFactory from './cellXfs';\nimport cellStylesFactory from './cellStyles';\nimport { numberFormatMap } from './numberFormat';\nimport { getFamilyId } from './font';\nimport { convertLegacyBorder } from './border';\nvar stylesMap;\nvar registeredNumberFmts;\nvar registeredFonts;\nvar registeredFills;\nvar registeredBorders;\nvar registeredCellStyleXfs;\nvar registeredCellXfs;\nvar registeredCellStyles;\nvar resetStylesheetValues = function () {\n    stylesMap = { base: 0 };\n    registeredNumberFmts = [];\n    registeredFonts = [{ name: 'Calibri', size: 14, colorTheme: '1', family: 2, scheme: 'minor' }];\n    registeredFills = [{ patternType: 'none', }, { patternType: 'gray125' }];\n    registeredBorders = [{ left: undefined, right: undefined, top: undefined, bottom: undefined, diagonal: undefined }];\n    registeredCellStyleXfs = [{ borderId: 0, fillId: 0, fontId: 0, numFmtId: 0 }];\n    registeredCellXfs = [{ borderId: 0, fillId: 0, fontId: 0, numFmtId: 0, xfId: 0 }];\n    registeredCellStyles = [{ builtinId: 0, name: 'normal', xfId: 0 }];\n};\nvar convertLegacyPattern = function (name) {\n    var colorMap = {\n        None: 'none',\n        Solid: 'solid',\n        Gray50: 'mediumGray',\n        Gray75: 'darkGray',\n        Gray25: 'lightGray',\n        HorzStripe: 'darkHorizontal',\n        VertStripe: 'darkVertical',\n        ReverseDiagStripe: 'darkDown',\n        DiagStripe: 'darkUp',\n        DiagCross: 'darkGrid',\n        ThickDiagCross: 'darkTrellis',\n        ThinHorzStripe: 'lightHorizontal',\n        ThinVertStripe: 'lightVertical',\n        ThinReverseDiagStripe: 'lightDown',\n        ThinDiagStripe: 'lightUp',\n        ThinHorzCross: 'lightGrid',\n        ThinDiagCross: 'lightTrellis',\n        Gray125: 'gray125',\n        Gray0625: 'gray0625'\n    };\n    if (!name) {\n        return 'none';\n    }\n    return colorMap[name] || name;\n};\nexport var convertLegacyColor = function (color) {\n    if (color == undefined) {\n        return color;\n    }\n    if (color.charAt(0) === '#') {\n        color = color.substr(1);\n    }\n    return color.length === 6 ? '00' + color : color;\n};\nvar registerFill = function (fill) {\n    var convertedPattern = convertLegacyPattern(fill.pattern);\n    var convertedFillColor = convertLegacyColor(fill.color);\n    var convertedPatternColor = convertLegacyColor(fill.patternColor);\n    var pos = _.findIndex(registeredFills, function (currentFill) {\n        var patternType = currentFill.patternType, fgRgb = currentFill.fgRgb, bgRgb = currentFill.bgRgb;\n        if (patternType != convertedPattern ||\n            fgRgb != convertedFillColor ||\n            bgRgb != convertedPatternColor) {\n            return false;\n        }\n        return true;\n    });\n    if (pos === -1) {\n        pos = registeredFills.length;\n        registeredFills.push({ patternType: convertedPattern, fgRgb: convertedFillColor, bgRgb: convertedPatternColor });\n    }\n    return pos;\n};\nvar registerNumberFmt = function (format) {\n    format = _.utf8_encode(format);\n    if (numberFormatMap[format]) {\n        return numberFormatMap[format];\n    }\n    var pos = _.findIndex(registeredNumberFmts, function (currentFormat) { return currentFormat.formatCode === format; });\n    if (pos === -1) {\n        pos = registeredNumberFmts.length + 164;\n        registeredNumberFmts.push({ formatCode: format, numFmtId: pos });\n    }\n    else {\n        pos = registeredNumberFmts[pos].numFmtId;\n    }\n    return pos;\n};\nvar registerBorders = function (borders) {\n    var borderBottom = borders.borderBottom, borderTop = borders.borderTop, borderLeft = borders.borderLeft, borderRight = borders.borderRight;\n    var bottomStyle, topStyle, leftStyle, rightStyle;\n    var bottomColor, topColor, leftColor, rightColor;\n    if (borderLeft) {\n        leftStyle = convertLegacyBorder(borderLeft.lineStyle, borderLeft.weight);\n        leftColor = convertLegacyColor(borderLeft.color);\n    }\n    if (borderRight) {\n        rightStyle = convertLegacyBorder(borderRight.lineStyle, borderRight.weight);\n        rightColor = convertLegacyColor(borderRight.color);\n    }\n    if (borderBottom) {\n        bottomStyle = convertLegacyBorder(borderBottom.lineStyle, borderBottom.weight);\n        bottomColor = convertLegacyColor(borderBottom.color);\n    }\n    if (borderTop) {\n        topStyle = convertLegacyBorder(borderTop.lineStyle, borderTop.weight);\n        topColor = convertLegacyColor(borderTop.color);\n    }\n    var pos = _.findIndex(registeredBorders, function (currentBorder) {\n        var left = currentBorder.left, right = currentBorder.right, top = currentBorder.top, bottom = currentBorder.bottom;\n        if (!left && (leftStyle || leftColor)) {\n            return false;\n        }\n        if (!right && (rightStyle || rightColor)) {\n            return false;\n        }\n        if (!top && (topStyle || topColor)) {\n            return false;\n        }\n        if (!bottom && (bottomStyle || bottomColor)) {\n            return false;\n        }\n        var _a = left || {}, clS = _a.style, clC = _a.color;\n        var _b = right || {}, crS = _b.style, crC = _b.color;\n        var _c = top || {}, ctS = _c.style, ctC = _c.color;\n        var _d = bottom || {}, cbS = _d.style, cbC = _d.color;\n        if (clS != leftStyle || clC != leftColor) {\n            return false;\n        }\n        if (crS != rightStyle || crC != rightColor) {\n            return false;\n        }\n        if (ctS != topStyle || ctC != topColor) {\n            return false;\n        }\n        if (cbS != bottomStyle || cbC != bottomColor) {\n            return false;\n        }\n        return true;\n    });\n    if (pos === -1) {\n        pos = registeredBorders.length;\n        registeredBorders.push({\n            left: {\n                style: leftStyle, color: leftColor\n            },\n            right: {\n                style: rightStyle, color: rightColor\n            },\n            top: {\n                style: topStyle, color: topColor\n            },\n            bottom: {\n                style: bottomStyle, color: bottomColor\n            },\n            diagonal: {\n                style: undefined,\n                color: undefined\n            }\n        });\n    }\n    return pos;\n};\nvar registerFont = function (font) {\n    var name = font.fontName, color = font.color, size = font.size, bold = font.bold, italic = font.italic, outline = font.outline, shadow = font.shadow, strikeThrough = font.strikeThrough, underline = font.underline, family = font.family;\n    var utf8Name = name ? _.utf8_encode(name) : name;\n    var convertedColor = convertLegacyColor(color);\n    var familyId = getFamilyId(family);\n    var pos = _.findIndex(registeredFonts, function (currentFont) {\n        if (currentFont.name != utf8Name ||\n            currentFont.color != convertedColor ||\n            currentFont.size != size ||\n            currentFont.bold != bold ||\n            currentFont.italic != italic ||\n            currentFont.outline != outline ||\n            currentFont.shadow != shadow ||\n            currentFont.strike != strikeThrough ||\n            currentFont.underline != underline ||\n            currentFont.family != familyId) {\n            return false;\n        }\n        return true;\n    });\n    if (pos === -1) {\n        pos = registeredFonts.length;\n        registeredFonts.push({\n            name: utf8Name,\n            color: convertedColor,\n            size: size,\n            bold: bold,\n            italic: italic,\n            outline: outline,\n            shadow: shadow,\n            strike: strikeThrough,\n            underline: underline,\n            family: familyId\n        });\n    }\n    return pos;\n};\nvar registerStyle = function (config) {\n    var id = config.id, alignment = config.alignment, borders = config.borders, font = config.font, interior = config.interior, numberFormat = config.numberFormat, protection = config.protection;\n    var currentFill = 0;\n    var currentBorder = 0;\n    var currentFont = 0;\n    var currentNumberFmt = 0;\n    if (!id || stylesMap[id] != undefined) {\n        return;\n    }\n    if (interior) {\n        currentFill = registerFill(interior);\n    }\n    if (borders) {\n        currentBorder = registerBorders(borders);\n    }\n    if (font) {\n        currentFont = registerFont(font);\n    }\n    if (numberFormat) {\n        currentNumberFmt = registerNumberFmt(numberFormat.format);\n    }\n    stylesMap[id] = registeredCellXfs.length;\n    registeredCellXfs.push({\n        alignment: alignment,\n        borderId: currentBorder || 0,\n        fillId: currentFill || 0,\n        fontId: currentFont || 0,\n        numFmtId: currentNumberFmt || 0,\n        protection: protection,\n        xfId: 0\n    });\n};\nvar stylesheetFactory = {\n    getTemplate: function () {\n        var numberFormats = numberFormatsFactory.getTemplate(registeredNumberFmts);\n        var fonts = fontsFactory.getTemplate(registeredFonts);\n        var fills = fillsFactory.getTemplate(registeredFills);\n        var borders = bordersFactory.getTemplate(registeredBorders);\n        var cellStylesXfs = cellStylesXfsFactory.getTemplate(registeredCellStyleXfs);\n        var cellXfs = cellXfsFactory.getTemplate(registeredCellXfs);\n        var cellStyles = cellStylesFactory.getTemplate(registeredCellStyles);\n        resetStylesheetValues();\n        return {\n            name: 'styleSheet',\n            properties: {\n                rawMap: {\n                    xmlns: 'http://schemas.openxmlformats.org/spreadsheetml/2006/main'\n                }\n            },\n            children: [\n                numberFormats,\n                fonts,\n                fills,\n                borders,\n                cellStylesXfs,\n                cellXfs,\n                cellStyles,\n                {\n                    name: 'tableStyles',\n                    properties: {\n                        rawMap: {\n                            count: 0,\n                            defaultPivotStyle: 'PivotStyleLight16',\n                            defaultTableStyle: 'TableStyleMedium2'\n                        }\n                    }\n                }\n            ]\n        };\n    }\n};\nexport var getStyleId = function (name) {\n    return stylesMap[name] || 0;\n};\nexport var registerStyles = function (styles) {\n    resetStylesheetValues();\n    styles.forEach(registerStyle);\n};\nexport default stylesheetFactory;\n"]},"metadata":{},"sourceType":"module"}