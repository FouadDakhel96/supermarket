{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Autowired, Bean, BeanStub, PostConstruct, _ } from \"@ag-grid-community/core\";\n\nvar AggFuncService =\n/** @class */\nfunction (_super) {\n  __extends(AggFuncService, _super);\n\n  function AggFuncService() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.aggFuncsMap = {};\n    _this.initialised = false;\n    return _this;\n  }\n\n  AggFuncService_1 = AggFuncService;\n\n  AggFuncService.prototype.init = function () {\n    if (this.initialised) {\n      return;\n    }\n\n    this.initialiseWithDefaultAggregations();\n    this.addAggFuncs(this.gridOptionsWrapper.getAggFuncs());\n  };\n\n  AggFuncService.prototype.initialiseWithDefaultAggregations = function () {\n    this.aggFuncsMap[AggFuncService_1.AGG_SUM] = aggSum;\n    this.aggFuncsMap[AggFuncService_1.AGG_FIRST] = aggFirst;\n    this.aggFuncsMap[AggFuncService_1.AGG_LAST] = aggLast;\n    this.aggFuncsMap[AggFuncService_1.AGG_MIN] = aggMin;\n    this.aggFuncsMap[AggFuncService_1.AGG_MAX] = aggMax;\n    this.aggFuncsMap[AggFuncService_1.AGG_COUNT] = aggCount;\n    this.aggFuncsMap[AggFuncService_1.AGG_AVG] = aggAvg;\n    this.initialised = true;\n  };\n\n  AggFuncService.prototype.getDefaultAggFunc = function (column) {\n    var allKeys = this.getFuncNames(column); // use 'sum' if it's a) allowed for the column and b) still registered\n    // (ie not removed by user)\n\n    var sumInKeysList = _.includes(allKeys, AggFuncService_1.AGG_SUM);\n\n    var sumInFuncs = _.exists(this.aggFuncsMap[AggFuncService_1.AGG_SUM]);\n\n    if (sumInKeysList && sumInFuncs) {\n      return AggFuncService_1.AGG_SUM;\n    }\n\n    return _.existsAndNotEmpty(allKeys) ? allKeys[0] : null;\n  };\n\n  AggFuncService.prototype.addAggFuncs = function (aggFuncs) {\n    _.iterateObject(aggFuncs, this.addAggFunc.bind(this));\n  };\n\n  AggFuncService.prototype.addAggFunc = function (key, aggFunc) {\n    this.init();\n    this.aggFuncsMap[key] = aggFunc;\n  };\n\n  AggFuncService.prototype.getAggFunc = function (name) {\n    this.init();\n    return this.aggFuncsMap[name];\n  };\n\n  AggFuncService.prototype.getFuncNames = function (column) {\n    var userAllowedFuncs = column.getColDef().allowedAggFuncs;\n\n    if (_.exists(userAllowedFuncs) && userAllowedFuncs) {\n      return userAllowedFuncs;\n    }\n\n    return Object.keys(this.aggFuncsMap).sort();\n  };\n\n  AggFuncService.prototype.clear = function () {\n    this.aggFuncsMap = {};\n  };\n\n  var AggFuncService_1;\n  AggFuncService.AGG_SUM = 'sum';\n  AggFuncService.AGG_FIRST = 'first';\n  AggFuncService.AGG_LAST = 'last';\n  AggFuncService.AGG_MIN = 'min';\n  AggFuncService.AGG_MAX = 'max';\n  AggFuncService.AGG_COUNT = 'count';\n  AggFuncService.AGG_AVG = 'avg';\n\n  __decorate([Autowired('gridOptionsWrapper')], AggFuncService.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([PostConstruct], AggFuncService.prototype, \"init\", null);\n\n  AggFuncService = AggFuncService_1 = __decorate([Bean('aggFuncService')], AggFuncService);\n  return AggFuncService;\n}(BeanStub);\n\nexport { AggFuncService };\n\nfunction aggSum(input) {\n  return input.filter(function (value) {\n    return typeof value === 'number';\n  }).reduce(function (sum, value) {\n    return sum === null ? value : sum + value;\n  }, null);\n}\n\nfunction aggFirst(input) {\n  return input.length > 0 ? input[0] : null;\n}\n\nfunction aggLast(input) {\n  return input.length > 0 ? _.last(input) : null;\n}\n\nfunction aggMin(input) {\n  return input.filter(function (value) {\n    return typeof value === 'number';\n  }).reduce(function (min, value) {\n    return min === null || value < min ? value : min;\n  }, null);\n}\n\nfunction aggMax(input) {\n  return input.filter(function (value) {\n    return typeof value === 'number';\n  }).reduce(function (max, value) {\n    return max === null || value > max ? value : max;\n  }, null);\n}\n\nfunction aggCount(input) {\n  var value = input.reduce(function (count, item) {\n    var isGroupAgg = _.exists(item) && typeof item.value === 'number';\n    return count + (isGroupAgg ? item.value : 1);\n  }, 0);\n  return {\n    value: value,\n    toString: function toString() {\n      return this.value.toString();\n    },\n    // used for sorting\n    toNumber: function toNumber() {\n      return this.value;\n    }\n  };\n} // the average function is tricky as the multiple levels require weighted averages\n// for the non-leaf node aggregations.\n\n\nfunction aggAvg(input) {\n  // the average will be the sum / count\n  var _a = input.reduce(function (_a, item) {\n    var sum = _a.sum,\n        count = _a.count;\n    var itemIsGroupResult = _.exists(item) && typeof item.value === 'number' && typeof item.count === 'number';\n\n    if (typeof item === 'number') {\n      return {\n        sum: sum + item,\n        count: count + 1\n      };\n    }\n\n    if (itemIsGroupResult) {\n      // we are aggregating groups, so we take the\n      // aggregated values to calculated a weighted average\n      return {\n        sum: sum + item.value * item.count,\n        count: count + item.count\n      };\n    }\n\n    return {\n      sum: sum,\n      count: count\n    };\n  }, {\n    sum: 0,\n    count: 0\n  }),\n      sum = _a.sum,\n      count = _a.count; // avoid divide by zero error\n\n\n  var value = count > 0 ? sum / count : null; // the result will be an object. when this cell is rendered, only the avg is shown.\n  // however when this cell is part of another aggregation, the count is also needed\n  // to create a weighted average for the next level.\n\n  return {\n    count: count,\n    value: value,\n    // the grid by default uses toString to render values for an object, so this\n    // is a trick to get the default cellRenderer to display the avg value\n    toString: function toString() {\n      if (typeof this.value === 'number') {\n        return this.value.toString();\n      }\n\n      return '';\n    },\n    // used for sorting\n    toNumber: function toNumber() {\n      return this.value;\n    }\n  };\n}","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/@ag-grid-enterprise/row-grouping/dist/es6/rowGrouping/aggFuncService.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Autowired","Bean","BeanStub","PostConstruct","_","AggFuncService","_super","_this","apply","aggFuncsMap","initialised","AggFuncService_1","init","initialiseWithDefaultAggregations","addAggFuncs","gridOptionsWrapper","getAggFuncs","AGG_SUM","aggSum","AGG_FIRST","aggFirst","AGG_LAST","aggLast","AGG_MIN","aggMin","AGG_MAX","aggMax","AGG_COUNT","aggCount","AGG_AVG","aggAvg","getDefaultAggFunc","column","allKeys","getFuncNames","sumInKeysList","includes","sumInFuncs","exists","existsAndNotEmpty","aggFuncs","iterateObject","addAggFunc","bind","aggFunc","getAggFunc","name","userAllowedFuncs","getColDef","allowedAggFuncs","keys","sort","clear","input","filter","value","reduce","sum","last","min","max","count","item","isGroupAgg","toString","toNumber","_a","itemIsGroupResult"],"mappings":"AAAA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,cAAa,GAAG,uBAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,cAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd;AAAiB,YAAIA,CAAC,CAACM,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAA1C;AAAwD,KAF9E;;AAGA,WAAOP,cAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnBF,IAAAA,cAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASO,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBT,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACU,SAAF,GAAcT,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACS,MAAP,CAAcV,CAAd,CAAb,IAAiCO,EAAE,CAACE,SAAH,GAAeT,CAAC,CAACS,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;AACH,GAJD;AAKH,CAZ2C,EAA5C;;AAaA,IAAII,UAAU,GAAI,QAAQ,KAAKA,UAAd,IAA6B,UAAUC,UAAV,EAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACnF,MAAIC,CAAC,GAAGC,SAAS,CAACC,MAAlB;AAAA,MAA0BC,CAAC,GAAGH,CAAC,GAAG,CAAJ,GAAQH,MAAR,GAAiBE,IAAI,KAAK,IAAT,GAAgBA,IAAI,GAAGd,MAAM,CAACmB,wBAAP,CAAgCP,MAAhC,EAAwCC,GAAxC,CAAvB,GAAsEC,IAArH;AAAA,MAA2HhB,CAA3H;AACA,MAAI,OAAOsB,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACC,QAAf,KAA4B,UAA/D,EAA2EH,CAAC,GAAGE,OAAO,CAACC,QAAR,CAAiBV,UAAjB,EAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,CAAJ,CAA3E,KACK,KAAK,IAAIQ,CAAC,GAAGX,UAAU,CAACM,MAAX,GAAoB,CAAjC,EAAoCK,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C;AAAiD,QAAIxB,CAAC,GAAGa,UAAU,CAACW,CAAD,CAAlB,EAAuBJ,CAAC,GAAG,CAACH,CAAC,GAAG,CAAJ,GAAQjB,CAAC,CAACoB,CAAD,CAAT,GAAeH,CAAC,GAAG,CAAJ,GAAQjB,CAAC,CAACc,MAAD,EAASC,GAAT,EAAcK,CAAd,CAAT,GAA4BpB,CAAC,CAACc,MAAD,EAASC,GAAT,CAA7C,KAA+DK,CAAnE;AAAxE;AACL,SAAOH,CAAC,GAAG,CAAJ,IAASG,CAAT,IAAclB,MAAM,CAACuB,cAAP,CAAsBX,MAAtB,EAA8BC,GAA9B,EAAmCK,CAAnC,CAAd,EAAqDA,CAA5D;AACH,CALD;;AAMA,SAASM,SAAT,EAAoBC,IAApB,EAA0BC,QAA1B,EAAoCC,aAApC,EAAmDC,CAAnD,QAA4D,yBAA5D;;AACA,IAAIC,cAAc;AAAG;AAAe,UAAUC,MAAV,EAAkB;AAClDlC,EAAAA,SAAS,CAACiC,cAAD,EAAiBC,MAAjB,CAAT;;AACA,WAASD,cAAT,GAA0B;AACtB,QAAIE,KAAK,GAAGD,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACE,KAAP,CAAa,IAAb,EAAmBhB,SAAnB,CAAnB,IAAoD,IAAhE;;AACAe,IAAAA,KAAK,CAACE,WAAN,GAAoB,EAApB;AACAF,IAAAA,KAAK,CAACG,WAAN,GAAoB,KAApB;AACA,WAAOH,KAAP;AACH;;AACDI,EAAAA,gBAAgB,GAAGN,cAAnB;;AACAA,EAAAA,cAAc,CAACrB,SAAf,CAAyB4B,IAAzB,GAAgC,YAAY;AACxC,QAAI,KAAKF,WAAT,EAAsB;AAClB;AACH;;AACD,SAAKG,iCAAL;AACA,SAAKC,WAAL,CAAiB,KAAKC,kBAAL,CAAwBC,WAAxB,EAAjB;AACH,GAND;;AAOAX,EAAAA,cAAc,CAACrB,SAAf,CAAyB6B,iCAAzB,GAA6D,YAAY;AACrE,SAAKJ,WAAL,CAAiBE,gBAAgB,CAACM,OAAlC,IAA6CC,MAA7C;AACA,SAAKT,WAAL,CAAiBE,gBAAgB,CAACQ,SAAlC,IAA+CC,QAA/C;AACA,SAAKX,WAAL,CAAiBE,gBAAgB,CAACU,QAAlC,IAA8CC,OAA9C;AACA,SAAKb,WAAL,CAAiBE,gBAAgB,CAACY,OAAlC,IAA6CC,MAA7C;AACA,SAAKf,WAAL,CAAiBE,gBAAgB,CAACc,OAAlC,IAA6CC,MAA7C;AACA,SAAKjB,WAAL,CAAiBE,gBAAgB,CAACgB,SAAlC,IAA+CC,QAA/C;AACA,SAAKnB,WAAL,CAAiBE,gBAAgB,CAACkB,OAAlC,IAA6CC,MAA7C;AACA,SAAKpB,WAAL,GAAmB,IAAnB;AACH,GATD;;AAUAL,EAAAA,cAAc,CAACrB,SAAf,CAAyB+C,iBAAzB,GAA6C,UAAUC,MAAV,EAAkB;AAC3D,QAAIC,OAAO,GAAG,KAAKC,YAAL,CAAkBF,MAAlB,CAAd,CAD2D,CAE3D;AACA;;AACA,QAAIG,aAAa,GAAG/B,CAAC,CAACgC,QAAF,CAAWH,OAAX,EAAoBtB,gBAAgB,CAACM,OAArC,CAApB;;AACA,QAAIoB,UAAU,GAAGjC,CAAC,CAACkC,MAAF,CAAS,KAAK7B,WAAL,CAAiBE,gBAAgB,CAACM,OAAlC,CAAT,CAAjB;;AACA,QAAIkB,aAAa,IAAIE,UAArB,EAAiC;AAC7B,aAAO1B,gBAAgB,CAACM,OAAxB;AACH;;AACD,WAAOb,CAAC,CAACmC,iBAAF,CAAoBN,OAApB,IAA+BA,OAAO,CAAC,CAAD,CAAtC,GAA4C,IAAnD;AACH,GAVD;;AAWA5B,EAAAA,cAAc,CAACrB,SAAf,CAAyB8B,WAAzB,GAAuC,UAAU0B,QAAV,EAAoB;AACvDpC,IAAAA,CAAC,CAACqC,aAAF,CAAgBD,QAAhB,EAA0B,KAAKE,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAA1B;AACH,GAFD;;AAGAtC,EAAAA,cAAc,CAACrB,SAAf,CAAyB0D,UAAzB,GAAsC,UAAUrD,GAAV,EAAeuD,OAAf,EAAwB;AAC1D,SAAKhC,IAAL;AACA,SAAKH,WAAL,CAAiBpB,GAAjB,IAAwBuD,OAAxB;AACH,GAHD;;AAIAvC,EAAAA,cAAc,CAACrB,SAAf,CAAyB6D,UAAzB,GAAsC,UAAUC,IAAV,EAAgB;AAClD,SAAKlC,IAAL;AACA,WAAO,KAAKH,WAAL,CAAiBqC,IAAjB,CAAP;AACH,GAHD;;AAIAzC,EAAAA,cAAc,CAACrB,SAAf,CAAyBkD,YAAzB,GAAwC,UAAUF,MAAV,EAAkB;AACtD,QAAIe,gBAAgB,GAAGf,MAAM,CAACgB,SAAP,GAAmBC,eAA1C;;AACA,QAAI7C,CAAC,CAACkC,MAAF,CAASS,gBAAT,KAA8BA,gBAAlC,EAAoD;AAChD,aAAOA,gBAAP;AACH;;AACD,WAAOvE,MAAM,CAAC0E,IAAP,CAAY,KAAKzC,WAAjB,EAA8B0C,IAA9B,EAAP;AACH,GAND;;AAOA9C,EAAAA,cAAc,CAACrB,SAAf,CAAyBoE,KAAzB,GAAiC,YAAY;AACzC,SAAK3C,WAAL,GAAmB,EAAnB;AACH,GAFD;;AAGA,MAAIE,gBAAJ;AACAN,EAAAA,cAAc,CAACY,OAAf,GAAyB,KAAzB;AACAZ,EAAAA,cAAc,CAACc,SAAf,GAA2B,OAA3B;AACAd,EAAAA,cAAc,CAACgB,QAAf,GAA0B,MAA1B;AACAhB,EAAAA,cAAc,CAACkB,OAAf,GAAyB,KAAzB;AACAlB,EAAAA,cAAc,CAACoB,OAAf,GAAyB,KAAzB;AACApB,EAAAA,cAAc,CAACsB,SAAf,GAA2B,OAA3B;AACAtB,EAAAA,cAAc,CAACwB,OAAf,GAAyB,KAAzB;;AACA3C,EAAAA,UAAU,CAAC,CACPc,SAAS,CAAC,oBAAD,CADF,CAAD,EAEPK,cAAc,CAACrB,SAFR,EAEmB,oBAFnB,EAEyC,KAAK,CAF9C,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPiB,aADO,CAAD,EAEPE,cAAc,CAACrB,SAFR,EAEmB,MAFnB,EAE2B,IAF3B,CAAV;;AAGAqB,EAAAA,cAAc,GAAGM,gBAAgB,GAAGzB,UAAU,CAAC,CAC3Ce,IAAI,CAAC,gBAAD,CADuC,CAAD,EAE3CI,cAF2C,CAA9C;AAGA,SAAOA,cAAP;AACH,CA5EmC,CA4ElCH,QA5EkC,CAApC;;AA6EA,SAASG,cAAT;;AACA,SAASa,MAAT,CAAgBmC,KAAhB,EAAuB;AACnB,SAAOA,KAAK,CACPC,MADE,CACK,UAAUC,KAAV,EAAiB;AAAE,WAAO,OAAOA,KAAP,KAAiB,QAAxB;AAAmC,GAD3D,EAEFC,MAFE,CAEK,UAAUC,GAAV,EAAeF,KAAf,EAAsB;AAAE,WAAOE,GAAG,KAAK,IAAR,GAAeF,KAAf,GAAuBE,GAAG,GAAGF,KAApC;AAA4C,GAFzE,EAE2E,IAF3E,CAAP;AAGH;;AACD,SAASnC,QAAT,CAAkBiC,KAAlB,EAAyB;AACrB,SAAOA,KAAK,CAAC5D,MAAN,GAAe,CAAf,GAAmB4D,KAAK,CAAC,CAAD,CAAxB,GAA8B,IAArC;AACH;;AACD,SAAS/B,OAAT,CAAiB+B,KAAjB,EAAwB;AACpB,SAAOA,KAAK,CAAC5D,MAAN,GAAe,CAAf,GAAmBW,CAAC,CAACsD,IAAF,CAAOL,KAAP,CAAnB,GAAmC,IAA1C;AACH;;AACD,SAAS7B,MAAT,CAAgB6B,KAAhB,EAAuB;AACnB,SAAOA,KAAK,CACPC,MADE,CACK,UAAUC,KAAV,EAAiB;AAAE,WAAO,OAAOA,KAAP,KAAiB,QAAxB;AAAmC,GAD3D,EAEFC,MAFE,CAEK,UAAUG,GAAV,EAAeJ,KAAf,EAAsB;AAAE,WAAOI,GAAG,KAAK,IAAR,IAAgBJ,KAAK,GAAGI,GAAxB,GAA8BJ,KAA9B,GAAsCI,GAA7C;AAAmD,GAFhF,EAEkF,IAFlF,CAAP;AAGH;;AACD,SAASjC,MAAT,CAAgB2B,KAAhB,EAAuB;AACnB,SAAOA,KAAK,CACPC,MADE,CACK,UAAUC,KAAV,EAAiB;AAAE,WAAO,OAAOA,KAAP,KAAiB,QAAxB;AAAmC,GAD3D,EAEFC,MAFE,CAEK,UAAUI,GAAV,EAAeL,KAAf,EAAsB;AAAE,WAAOK,GAAG,KAAK,IAAR,IAAgBL,KAAK,GAAGK,GAAxB,GAA8BL,KAA9B,GAAsCK,GAA7C;AAAmD,GAFhF,EAEkF,IAFlF,CAAP;AAGH;;AACD,SAAShC,QAAT,CAAkByB,KAAlB,EAAyB;AACrB,MAAIE,KAAK,GAAGF,KAAK,CAACG,MAAN,CAAa,UAAUK,KAAV,EAAiBC,IAAjB,EAAuB;AAC5C,QAAIC,UAAU,GAAG3D,CAAC,CAACkC,MAAF,CAASwB,IAAT,KAAkB,OAAOA,IAAI,CAACP,KAAZ,KAAsB,QAAzD;AACA,WAAOM,KAAK,IAAIE,UAAU,GAAGD,IAAI,CAACP,KAAR,GAAgB,CAA9B,CAAZ;AACH,GAHW,EAGT,CAHS,CAAZ;AAIA,SAAO;AACHA,IAAAA,KAAK,EAAEA,KADJ;AAEHS,IAAAA,QAAQ,EAAE,oBAAY;AAClB,aAAO,KAAKT,KAAL,CAAWS,QAAX,EAAP;AACH,KAJE;AAKH;AACAC,IAAAA,QAAQ,EAAE,oBAAY;AAClB,aAAO,KAAKV,KAAZ;AACH;AARE,GAAP;AAUH,C,CACD;AACA;;;AACA,SAASzB,MAAT,CAAgBuB,KAAhB,EAAuB;AACnB;AACA,MAAIa,EAAE,GAAGb,KAAK,CAACG,MAAN,CAAa,UAAUU,EAAV,EAAcJ,IAAd,EAAoB;AACtC,QAAIL,GAAG,GAAGS,EAAE,CAACT,GAAb;AAAA,QAAkBI,KAAK,GAAGK,EAAE,CAACL,KAA7B;AACA,QAAIM,iBAAiB,GAAG/D,CAAC,CAACkC,MAAF,CAASwB,IAAT,KACpB,OAAOA,IAAI,CAACP,KAAZ,KAAsB,QADF,IAEpB,OAAOO,IAAI,CAACD,KAAZ,KAAsB,QAF1B;;AAGA,QAAI,OAAOC,IAAP,KAAgB,QAApB,EAA8B;AAC1B,aAAO;AAAEL,QAAAA,GAAG,EAAEA,GAAG,GAAGK,IAAb;AAAmBD,QAAAA,KAAK,EAAEA,KAAK,GAAG;AAAlC,OAAP;AACH;;AACD,QAAIM,iBAAJ,EAAuB;AACnB;AACA;AACA,aAAO;AACHV,QAAAA,GAAG,EAAEA,GAAG,GAAGK,IAAI,CAACP,KAAL,GAAaO,IAAI,CAACD,KAD1B;AAEHA,QAAAA,KAAK,EAAEA,KAAK,GAAGC,IAAI,CAACD;AAFjB,OAAP;AAIH;;AACD,WAAO;AAAEJ,MAAAA,GAAG,EAAEA,GAAP;AAAYI,MAAAA,KAAK,EAAEA;AAAnB,KAAP;AACH,GAjBQ,EAiBN;AAAEJ,IAAAA,GAAG,EAAE,CAAP;AAAUI,IAAAA,KAAK,EAAE;AAAjB,GAjBM,CAAT;AAAA,MAiB0BJ,GAAG,GAAGS,EAAE,CAACT,GAjBnC;AAAA,MAiBwCI,KAAK,GAAGK,EAAE,CAACL,KAjBnD,CAFmB,CAoBnB;;;AACA,MAAIN,KAAK,GAAGM,KAAK,GAAG,CAAR,GAAYJ,GAAG,GAAGI,KAAlB,GAA0B,IAAtC,CArBmB,CAsBnB;AACA;AACA;;AACA,SAAO;AACHA,IAAAA,KAAK,EAAEA,KADJ;AAEHN,IAAAA,KAAK,EAAEA,KAFJ;AAGH;AACA;AACAS,IAAAA,QAAQ,EAAE,oBAAY;AAClB,UAAI,OAAO,KAAKT,KAAZ,KAAsB,QAA1B,EAAoC;AAChC,eAAO,KAAKA,KAAL,CAAWS,QAAX,EAAP;AACH;;AACD,aAAO,EAAP;AACH,KAVE;AAWH;AACAC,IAAAA,QAAQ,EAAE,oBAAY;AAClB,aAAO,KAAKV,KAAZ;AACH;AAdE,GAAP;AAgBH","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Autowired, Bean, BeanStub, PostConstruct, _ } from \"@ag-grid-community/core\";\nvar AggFuncService = /** @class */ (function (_super) {\n    __extends(AggFuncService, _super);\n    function AggFuncService() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.aggFuncsMap = {};\n        _this.initialised = false;\n        return _this;\n    }\n    AggFuncService_1 = AggFuncService;\n    AggFuncService.prototype.init = function () {\n        if (this.initialised) {\n            return;\n        }\n        this.initialiseWithDefaultAggregations();\n        this.addAggFuncs(this.gridOptionsWrapper.getAggFuncs());\n    };\n    AggFuncService.prototype.initialiseWithDefaultAggregations = function () {\n        this.aggFuncsMap[AggFuncService_1.AGG_SUM] = aggSum;\n        this.aggFuncsMap[AggFuncService_1.AGG_FIRST] = aggFirst;\n        this.aggFuncsMap[AggFuncService_1.AGG_LAST] = aggLast;\n        this.aggFuncsMap[AggFuncService_1.AGG_MIN] = aggMin;\n        this.aggFuncsMap[AggFuncService_1.AGG_MAX] = aggMax;\n        this.aggFuncsMap[AggFuncService_1.AGG_COUNT] = aggCount;\n        this.aggFuncsMap[AggFuncService_1.AGG_AVG] = aggAvg;\n        this.initialised = true;\n    };\n    AggFuncService.prototype.getDefaultAggFunc = function (column) {\n        var allKeys = this.getFuncNames(column);\n        // use 'sum' if it's a) allowed for the column and b) still registered\n        // (ie not removed by user)\n        var sumInKeysList = _.includes(allKeys, AggFuncService_1.AGG_SUM);\n        var sumInFuncs = _.exists(this.aggFuncsMap[AggFuncService_1.AGG_SUM]);\n        if (sumInKeysList && sumInFuncs) {\n            return AggFuncService_1.AGG_SUM;\n        }\n        return _.existsAndNotEmpty(allKeys) ? allKeys[0] : null;\n    };\n    AggFuncService.prototype.addAggFuncs = function (aggFuncs) {\n        _.iterateObject(aggFuncs, this.addAggFunc.bind(this));\n    };\n    AggFuncService.prototype.addAggFunc = function (key, aggFunc) {\n        this.init();\n        this.aggFuncsMap[key] = aggFunc;\n    };\n    AggFuncService.prototype.getAggFunc = function (name) {\n        this.init();\n        return this.aggFuncsMap[name];\n    };\n    AggFuncService.prototype.getFuncNames = function (column) {\n        var userAllowedFuncs = column.getColDef().allowedAggFuncs;\n        if (_.exists(userAllowedFuncs) && userAllowedFuncs) {\n            return userAllowedFuncs;\n        }\n        return Object.keys(this.aggFuncsMap).sort();\n    };\n    AggFuncService.prototype.clear = function () {\n        this.aggFuncsMap = {};\n    };\n    var AggFuncService_1;\n    AggFuncService.AGG_SUM = 'sum';\n    AggFuncService.AGG_FIRST = 'first';\n    AggFuncService.AGG_LAST = 'last';\n    AggFuncService.AGG_MIN = 'min';\n    AggFuncService.AGG_MAX = 'max';\n    AggFuncService.AGG_COUNT = 'count';\n    AggFuncService.AGG_AVG = 'avg';\n    __decorate([\n        Autowired('gridOptionsWrapper')\n    ], AggFuncService.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        PostConstruct\n    ], AggFuncService.prototype, \"init\", null);\n    AggFuncService = AggFuncService_1 = __decorate([\n        Bean('aggFuncService')\n    ], AggFuncService);\n    return AggFuncService;\n}(BeanStub));\nexport { AggFuncService };\nfunction aggSum(input) {\n    return input\n        .filter(function (value) { return typeof value === 'number'; })\n        .reduce(function (sum, value) { return sum === null ? value : sum + value; }, null);\n}\nfunction aggFirst(input) {\n    return input.length > 0 ? input[0] : null;\n}\nfunction aggLast(input) {\n    return input.length > 0 ? _.last(input) : null;\n}\nfunction aggMin(input) {\n    return input\n        .filter(function (value) { return typeof value === 'number'; })\n        .reduce(function (min, value) { return min === null || value < min ? value : min; }, null);\n}\nfunction aggMax(input) {\n    return input\n        .filter(function (value) { return typeof value === 'number'; })\n        .reduce(function (max, value) { return max === null || value > max ? value : max; }, null);\n}\nfunction aggCount(input) {\n    var value = input.reduce(function (count, item) {\n        var isGroupAgg = _.exists(item) && typeof item.value === 'number';\n        return count + (isGroupAgg ? item.value : 1);\n    }, 0);\n    return {\n        value: value,\n        toString: function () {\n            return this.value.toString();\n        },\n        // used for sorting\n        toNumber: function () {\n            return this.value;\n        }\n    };\n}\n// the average function is tricky as the multiple levels require weighted averages\n// for the non-leaf node aggregations.\nfunction aggAvg(input) {\n    // the average will be the sum / count\n    var _a = input.reduce(function (_a, item) {\n        var sum = _a.sum, count = _a.count;\n        var itemIsGroupResult = _.exists(item) &&\n            typeof item.value === 'number' &&\n            typeof item.count === 'number';\n        if (typeof item === 'number') {\n            return { sum: sum + item, count: count + 1 };\n        }\n        if (itemIsGroupResult) {\n            // we are aggregating groups, so we take the\n            // aggregated values to calculated a weighted average\n            return {\n                sum: sum + item.value * item.count,\n                count: count + item.count\n            };\n        }\n        return { sum: sum, count: count };\n    }, { sum: 0, count: 0 }), sum = _a.sum, count = _a.count;\n    // avoid divide by zero error\n    var value = count > 0 ? sum / count : null;\n    // the result will be an object. when this cell is rendered, only the avg is shown.\n    // however when this cell is part of another aggregation, the count is also needed\n    // to create a weighted average for the next level.\n    return {\n        count: count,\n        value: value,\n        // the grid by default uses toString to render values for an object, so this\n        // is a trick to get the default cellRenderer to display the avg value\n        toString: function () {\n            if (typeof this.value === 'number') {\n                return this.value.toString();\n            }\n            return '';\n        },\n        // used for sorting\n        toNumber: function () {\n            return this.value;\n        }\n    };\n}\n"]},"metadata":{},"sourceType":"module"}