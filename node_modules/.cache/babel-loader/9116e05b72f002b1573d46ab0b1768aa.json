{"ast":null,"code":"import { convertLegacyColor } from './stylesheet';\n\nvar getBorderColor = function getBorderColor(color) {\n  return {\n    name: 'color',\n    properties: {\n      rawMap: {\n        rgb: convertLegacyColor(color || '#000000')\n      }\n    }\n  };\n};\n\nvar borderFactory = {\n  getTemplate: function getTemplate(border) {\n    var left = border.left,\n        right = border.right,\n        top = border.top,\n        bottom = border.bottom,\n        diagonal = border.diagonal;\n    var leftChildren = left ? [getBorderColor(left.color)] : undefined;\n    var rightChildren = right ? [getBorderColor(right.color)] : undefined;\n    var topChildren = top ? [getBorderColor(top.color)] : undefined;\n    var bottomChildren = bottom ? [getBorderColor(bottom.color)] : undefined;\n    var diagonalChildren = diagonal ? [getBorderColor(diagonal.color)] : undefined;\n    return {\n      name: 'border',\n      children: [{\n        name: 'left',\n        properties: {\n          rawMap: {\n            style: left && left.style\n          }\n        },\n        children: leftChildren\n      }, {\n        name: 'right',\n        properties: {\n          rawMap: {\n            style: right && right.style\n          }\n        },\n        children: rightChildren\n      }, {\n        name: 'top',\n        properties: {\n          rawMap: {\n            style: top && top.style\n          }\n        },\n        children: topChildren\n      }, {\n        name: 'bottom',\n        properties: {\n          rawMap: {\n            style: bottom && bottom.style\n          }\n        },\n        children: bottomChildren\n      }, {\n        name: 'diagonal',\n        properties: {\n          rawMap: {\n            style: diagonal && diagonal.style\n          }\n        },\n        children: diagonalChildren\n      }]\n    };\n  }\n};\nexport default borderFactory;\n\nvar getWeightName = function getWeightName(value) {\n  if (value === 1) {\n    return 'thin';\n  }\n\n  if (value === 2) {\n    return 'medium';\n  }\n\n  if (value === 3) {\n    return 'thick';\n  }\n\n  return 'hair';\n};\n\nvar mappedNames = {\n  None: 'None',\n  Dot: 'Dotted',\n  Dash: 'Dashed',\n  Double: 'Double',\n  DashDot: 'DashDot',\n  DashDotDot: 'DashDotDot',\n  SlantDashDot: 'SlantDashDot'\n};\nvar mediumBorders = ['Dashed', 'DashDot', 'DashDotDot'];\nexport var convertLegacyBorder = function convertLegacyBorder(type, weight) {\n  // Legacy Types are: None, Continuous, Dash, Dot, DashDot, DashDotDot, SlantDashDot, and Double\n  // Weight represents: 0—Hairline, 1—Thin , 2—Medium, 3—Thick\n  // New types: none, thin, medium, dashed, dotted, thick, double, hair, mediumDashed, dashDot, mediumDashDot,\n  // dashDotDot, mediumDashDotDot, slantDashDot\n  var namedWeight = getWeightName(weight);\n  var mappedName = mappedNames[type];\n\n  if (!type) {\n    return 'thin';\n  }\n\n  if (type === 'Continuous') {\n    return namedWeight;\n  }\n\n  if (namedWeight === 'medium' && mediumBorders.indexOf(mappedName) > 0) {\n    return \"medium\" + mappedName;\n  }\n\n  return mappedName.charAt(0).toLowerCase() + mappedName.substr(1);\n};","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/@ag-grid-enterprise/excel-export/dist/es6/excelExport/files/ooxml/styles/border.js"],"names":["convertLegacyColor","getBorderColor","color","name","properties","rawMap","rgb","borderFactory","getTemplate","border","left","right","top","bottom","diagonal","leftChildren","undefined","rightChildren","topChildren","bottomChildren","diagonalChildren","children","style","getWeightName","value","mappedNames","None","Dot","Dash","Double","DashDot","DashDotDot","SlantDashDot","mediumBorders","convertLegacyBorder","type","weight","namedWeight","mappedName","indexOf","charAt","toLowerCase","substr"],"mappings":"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","sourcesContent":["import { convertLegacyColor } from './stylesheet';\nvar getBorderColor = function (color) {\n    return {\n        name: 'color',\n        properties: {\n            rawMap: {\n                rgb: convertLegacyColor(color || '#000000')\n            }\n        }\n    };\n};\nvar borderFactory = {\n    getTemplate: function (border) {\n        var left = border.left, right = border.right, top = border.top, bottom = border.bottom, diagonal = border.diagonal;\n        var leftChildren = left ? [getBorderColor(left.color)] : undefined;\n        var rightChildren = right ? [getBorderColor(right.color)] : undefined;\n        var topChildren = top ? [getBorderColor(top.color)] : undefined;\n        var bottomChildren = bottom ? [getBorderColor(bottom.color)] : undefined;\n        var diagonalChildren = diagonal ? [getBorderColor(diagonal.color)] : undefined;\n        return {\n            name: 'border',\n            children: [{\n                    name: 'left',\n                    properties: { rawMap: { style: left && left.style } },\n                    children: leftChildren\n                }, {\n                    name: 'right',\n                    properties: { rawMap: { style: right && right.style } },\n                    children: rightChildren\n                }, {\n                    name: 'top',\n                    properties: { rawMap: { style: top && top.style } },\n                    children: topChildren\n                }, {\n                    name: 'bottom',\n                    properties: { rawMap: { style: bottom && bottom.style } },\n                    children: bottomChildren\n                }, {\n                    name: 'diagonal',\n                    properties: { rawMap: { style: diagonal && diagonal.style } },\n                    children: diagonalChildren\n                }]\n        };\n    }\n};\nexport default borderFactory;\nvar getWeightName = function (value) {\n    if (value === 1) {\n        return 'thin';\n    }\n    if (value === 2) {\n        return 'medium';\n    }\n    if (value === 3) {\n        return 'thick';\n    }\n    return 'hair';\n};\nvar mappedNames = {\n    None: 'None',\n    Dot: 'Dotted',\n    Dash: 'Dashed',\n    Double: 'Double',\n    DashDot: 'DashDot',\n    DashDotDot: 'DashDotDot',\n    SlantDashDot: 'SlantDashDot'\n};\nvar mediumBorders = ['Dashed', 'DashDot', 'DashDotDot'];\nexport var convertLegacyBorder = function (type, weight) {\n    // Legacy Types are: None, Continuous, Dash, Dot, DashDot, DashDotDot, SlantDashDot, and Double\n    // Weight represents: 0—Hairline, 1—Thin , 2—Medium, 3—Thick\n    // New types: none, thin, medium, dashed, dotted, thick, double, hair, mediumDashed, dashDot, mediumDashDot,\n    // dashDotDot, mediumDashDotDot, slantDashDot\n    var namedWeight = getWeightName(weight);\n    var mappedName = mappedNames[type];\n    if (!type) {\n        return 'thin';\n    }\n    if (type === 'Continuous') {\n        return namedWeight;\n    }\n    if (namedWeight === 'medium' && mediumBorders.indexOf(mappedName) > 0) {\n        return \"medium\" + mappedName;\n    }\n    return mappedName.charAt(0).toLowerCase() + mappedName.substr(1);\n};\n"]},"metadata":{},"sourceType":"module"}