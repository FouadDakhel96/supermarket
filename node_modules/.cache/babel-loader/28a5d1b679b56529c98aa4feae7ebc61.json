{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { CellComp } from \"./cellComp\";\nimport { RowNode } from \"../entities/rowNode\";\nimport { Events } from \"../events\";\nimport { Component } from \"../widgets/component\";\nimport { Constants } from \"../constants\";\nimport { ModuleNames } from \"../modules/moduleNames\";\nimport { ModuleRegistry } from \"../modules/moduleRegistry\";\nimport { _ } from \"../utils\";\n\nvar RowComp =\n/** @class */\nfunction (_super) {\n  __extends(RowComp, _super);\n\n  function RowComp(parentScope, bodyContainerComp, pinnedLeftContainerComp, pinnedRightContainerComp, fullWidthContainerComp, rowNode, beans, animateIn, useAnimationFrameForCreate, printLayout, embedFullWidth) {\n    var _this = _super.call(this) || this;\n\n    _this.eAllRowContainers = [];\n    _this.active = true;\n    _this.rowContainerReadyCount = 0;\n    _this.refreshNeeded = false;\n    _this.columnRefreshPending = false;\n    _this.cellComps = {}; // for animations, there are bits we want done in the next VM turn, to all DOM to update first.\n    // instead of each row doing a setTimeout(func,0), we put the functions here and the rowRenderer\n    // executes them all in one timeout\n\n    _this.createSecondPassFuncs = []; // these get called before the row is destroyed - they set up the DOM for the remove animation (ie they\n    // set the DOM up for the animation), then the delayedDestroyFunctions get called when the animation is\n    // complete (ie removes from the dom).\n\n    _this.removeFirstPassFuncs = []; // for animations, these functions get called 400ms after the row is cleared, called by the rowRenderer\n    // so each row isn't setting up it's own timeout\n\n    _this.removeSecondPassFuncs = [];\n    _this.initialised = false;\n    _this.elementOrderChanged = false;\n    _this.lastMouseDownOnDragger = false;\n    _this.parentScope = parentScope;\n    _this.beans = beans;\n    _this.bodyContainerComp = bodyContainerComp;\n    _this.pinnedLeftContainerComp = pinnedLeftContainerComp;\n    _this.pinnedRightContainerComp = pinnedRightContainerComp;\n    _this.fullWidthContainerComp = fullWidthContainerComp;\n    _this.rowNode = rowNode;\n    _this.rowIsEven = _this.rowNode.rowIndex % 2 === 0;\n    _this.paginationPage = _this.beans.paginationProxy.getCurrentPage();\n    _this.useAnimationFrameForCreate = useAnimationFrameForCreate;\n    _this.printLayout = printLayout;\n    _this.embedFullWidth = embedFullWidth;\n\n    _this.setAnimateFlags(animateIn);\n\n    return _this;\n  }\n\n  RowComp.prototype.init = function () {\n    var _this = this;\n\n    this.rowFocused = this.beans.focusController.isRowFocused(this.rowNode.rowIndex, this.rowNode.rowPinned);\n    this.scope = this.createChildScopeOrNull(this.rowNode.data);\n    this.setupRowContainers();\n    this.addListeners();\n\n    if (this.slideRowIn) {\n      this.createSecondPassFuncs.push(function () {\n        _this.onTopChanged();\n      });\n    }\n\n    if (this.fadeRowIn) {\n      this.createSecondPassFuncs.push(function () {\n        _this.eAllRowContainers.forEach(function (eRow) {\n          return _.removeCssClass(eRow, 'ag-opacity-zero');\n        });\n      });\n    }\n  };\n\n  RowComp.prototype.createTemplate = function (contents, extraCssClass) {\n    if (extraCssClass === void 0) {\n      extraCssClass = null;\n    }\n\n    var templateParts = [];\n    var rowHeight = this.rowNode.rowHeight;\n    var rowClasses = this.getInitialRowClasses(extraCssClass).join(' ');\n\n    var rowIdSanitised = _.escape(this.rowNode.id);\n\n    var userRowStyles = this.preProcessStylesFromGridOptions();\n    var businessKey = this.getRowBusinessKey();\n\n    var businessKeySanitised = _.escape(businessKey);\n\n    var rowTopStyle = this.getInitialRowTopStyle();\n    var rowIdx = this.rowNode.getRowIndexString();\n    var headerRowCount = this.beans.headerNavigationService.getHeaderRowCount();\n    templateParts.push(\"<div\");\n    templateParts.push(\" role=\\\"row\\\"\");\n    templateParts.push(\" row-index=\\\"\" + rowIdx + \"\\\" aria-rowindex=\\\"\" + (headerRowCount + this.rowNode.rowIndex + 1) + \"\\\"\");\n    templateParts.push(rowIdSanitised ? \" row-id=\\\"\" + rowIdSanitised + \"\\\"\" : \"\");\n    templateParts.push(businessKey ? \" row-business-key=\\\"\" + businessKeySanitised + \"\\\"\" : \"\");\n    templateParts.push(\" comp-id=\\\"\" + this.getCompId() + \"\\\"\");\n    templateParts.push(\" class=\\\"\" + rowClasses + \"\\\"\");\n    templateParts.push(\" style=\\\"height: \" + rowHeight + \"px; \" + rowTopStyle + \" \" + userRowStyles + \"\\\">\"); // add in the template for the cells\n\n    templateParts.push(contents);\n    templateParts.push(\"</div>\");\n    return templateParts.join('');\n  };\n\n  RowComp.prototype.getCellForCol = function (column) {\n    var cellComp = this.cellComps[column.getColId()];\n    return cellComp ? cellComp.getGui() : null;\n  };\n\n  RowComp.prototype.afterFlush = function () {\n    if (this.initialised) {\n      return;\n    }\n\n    this.initialised = true;\n    this.executeProcessRowPostCreateFunc();\n  };\n\n  RowComp.prototype.executeProcessRowPostCreateFunc = function () {\n    var func = this.beans.gridOptionsWrapper.getProcessRowPostCreateFunc();\n\n    if (!func) {\n      return;\n    }\n\n    var params = {\n      eRow: this.eBodyRow,\n      ePinnedLeftRow: this.ePinnedLeftRow,\n      ePinnedRightRow: this.ePinnedRightRow,\n      node: this.rowNode,\n      api: this.beans.gridOptionsWrapper.getApi(),\n      rowIndex: this.rowNode.rowIndex,\n      addRenderedRowListener: this.addEventListener.bind(this),\n      columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n      context: this.beans.gridOptionsWrapper.getContext()\n    };\n    func(params);\n  };\n\n  RowComp.prototype.getInitialRowTopStyle = function () {\n    // print layout uses normal flow layout for row positioning\n    if (this.printLayout) {\n      return '';\n    } // if sliding in, we take the old row top. otherwise we just set the current row top.\n\n\n    var pixels = this.slideRowIn ? this.roundRowTopToBounds(this.rowNode.oldRowTop) : this.rowNode.rowTop;\n    var afterPaginationPixels = this.applyPaginationOffset(pixels);\n    var afterScalingPixels = this.beans.maxDivHeightScaler.getRealPixelPosition(afterPaginationPixels);\n    var isSuppressRowTransform = this.beans.gridOptionsWrapper.isSuppressRowTransform();\n    return isSuppressRowTransform ? \"top: \" + afterScalingPixels + \"px; \" : \"transform: translateY(\" + afterScalingPixels + \"px);\";\n  };\n\n  RowComp.prototype.getRowBusinessKey = function () {\n    var businessKeyForNodeFunc = this.beans.gridOptionsWrapper.getBusinessKeyForNodeFunc();\n\n    if (typeof businessKeyForNodeFunc !== 'function') {\n      return;\n    }\n\n    return businessKeyForNodeFunc(this.rowNode);\n  };\n\n  RowComp.prototype.areAllContainersReady = function () {\n    return this.rowContainerReadyCount === 3;\n  };\n\n  RowComp.prototype.lazyCreateCells = function (cols, eRow) {\n    if (!this.active) {\n      return;\n    }\n\n    var cellTemplatesAndComps = this.createCells(cols);\n    eRow.innerHTML = cellTemplatesAndComps.template;\n    this.callAfterRowAttachedOnCells(cellTemplatesAndComps.cellComps, eRow);\n    this.rowContainerReadyCount++;\n\n    if (this.areAllContainersReady() && this.refreshNeeded) {\n      this.refreshCells();\n    }\n  };\n\n  RowComp.prototype.createRowContainer = function (rowContainerComp, cols, callback) {\n    var _this = this;\n\n    var useAnimationsFrameForCreate = this.useAnimationFrameForCreate;\n    var cellTemplatesAndComps = useAnimationsFrameForCreate ? {\n      cellComps: [],\n      template: ''\n    } : this.createCells(cols);\n    var rowTemplate = this.createTemplate(cellTemplatesAndComps.template); // the RowRenderer is probably inserting many rows. rather than inserting each template one\n    // at a time, the grid inserts all rows together - so the callback here is called by the\n    // rowRenderer when all RowComps are created, then all the HTML is inserted in one go,\n    // and then all the callbacks are called. this is NOT done in an animation frame.\n\n    rowContainerComp.appendRowTemplate(rowTemplate, function () {\n      var eRow = rowContainerComp.getRowElement(_this.getCompId());\n\n      _this.afterRowAttached(rowContainerComp, eRow);\n\n      callback(eRow);\n\n      if (useAnimationsFrameForCreate) {\n        _this.beans.taskQueue.createTask(_this.lazyCreateCells.bind(_this, cols, eRow), _this.rowNode.rowIndex, 'createTasksP1');\n      } else {\n        _this.callAfterRowAttachedOnCells(cellTemplatesAndComps.cellComps, eRow);\n\n        _this.rowContainerReadyCount = 3;\n      }\n    });\n  };\n\n  RowComp.prototype.createChildScopeOrNull = function (data) {\n    var isAngularCompileRows = this.beans.gridOptionsWrapper.isAngularCompileRows();\n\n    if (!isAngularCompileRows) {\n      return null;\n    }\n\n    var newChildScope = this.parentScope.$new();\n    newChildScope.data = __assign({}, data);\n    newChildScope.rowNode = this.rowNode;\n    newChildScope.context = this.beans.gridOptionsWrapper.getContext();\n    this.addDestroyFunc(function () {\n      newChildScope.$destroy();\n      newChildScope.data = null;\n      newChildScope.rowNode = null;\n      newChildScope.context = null;\n    });\n    return newChildScope;\n  };\n\n  RowComp.prototype.setupRowContainers = function () {\n    var isFullWidthCell = this.rowNode.isFullWidthCell();\n    var isDetailCell = this.beans.doingMasterDetail && this.rowNode.detail;\n    var pivotMode = this.beans.columnController.isPivotMode(); // we only use full width for groups, not footers. it wouldn't make sense to include footers if not looking\n    // for totals. if users complain about this, then we should introduce a new property 'footerUseEntireRow'\n    // so each can be set independently (as a customer complained about footers getting full width, hence\n    // introducing this logic)\n\n    var isGroupRow = this.rowNode.group && !this.rowNode.footer;\n    var isFullWidthGroup = isGroupRow && this.beans.gridOptionsWrapper.isGroupUseEntireRow(pivotMode);\n\n    if (this.rowNode.stub) {\n      this.createFullWidthRows(RowComp.LOADING_CELL_RENDERER, RowComp.LOADING_CELL_RENDERER_COMP_NAME);\n    } else if (isDetailCell) {\n      this.createFullWidthRows(RowComp.DETAIL_CELL_RENDERER, RowComp.DETAIL_CELL_RENDERER_COMP_NAME);\n    } else if (isFullWidthCell) {\n      this.createFullWidthRows(RowComp.FULL_WIDTH_CELL_RENDERER, null);\n    } else if (isFullWidthGroup) {\n      this.createFullWidthRows(RowComp.GROUP_ROW_RENDERER, RowComp.GROUP_ROW_RENDERER_COMP_NAME);\n    } else {\n      this.setupNormalRowContainers();\n    }\n  };\n\n  RowComp.prototype.setupNormalRowContainers = function () {\n    var _this = this;\n\n    var centerCols;\n    var leftCols = [];\n    var rightCols = [];\n\n    if (this.printLayout) {\n      centerCols = this.beans.columnController.getAllDisplayedColumns();\n    } else {\n      centerCols = this.beans.columnController.getAllDisplayedCenterVirtualColumnsForRow(this.rowNode);\n      leftCols = this.beans.columnController.getDisplayedLeftColumnsForRow(this.rowNode);\n      rightCols = this.beans.columnController.getDisplayedRightColumnsForRow(this.rowNode);\n    }\n\n    this.createRowContainer(this.bodyContainerComp, centerCols, function (eRow) {\n      return _this.eBodyRow = eRow;\n    });\n    this.createRowContainer(this.pinnedRightContainerComp, rightCols, function (eRow) {\n      return _this.ePinnedRightRow = eRow;\n    });\n    this.createRowContainer(this.pinnedLeftContainerComp, leftCols, function (eRow) {\n      return _this.ePinnedLeftRow = eRow;\n    });\n  };\n\n  RowComp.prototype.createFullWidthRows = function (type, name) {\n    var _this = this;\n\n    this.fullWidthRow = true;\n\n    if (this.embedFullWidth) {\n      this.createFullWidthRowContainer(this.bodyContainerComp, null, null, type, name, function (eRow) {\n        _this.eFullWidthRowBody = eRow;\n      }, function (cellRenderer) {\n        _this.fullWidthRowComponentBody = cellRenderer;\n      }); // printLayout doesn't put components into the pinned sections\n\n      if (this.printLayout) {\n        return;\n      }\n\n      this.createFullWidthRowContainer(this.pinnedLeftContainerComp, Constants.PINNED_LEFT, 'ag-cell-last-left-pinned', type, name, function (eRow) {\n        _this.eFullWidthRowLeft = eRow;\n      }, function (cellRenderer) {\n        _this.fullWidthRowComponentLeft = cellRenderer;\n      });\n      this.createFullWidthRowContainer(this.pinnedRightContainerComp, Constants.PINNED_RIGHT, 'ag-cell-first-right-pinned', type, name, function (eRow) {\n        _this.eFullWidthRowRight = eRow;\n      }, function (cellRenderer) {\n        _this.fullWidthRowComponentRight = cellRenderer;\n      });\n    } else {\n      // otherwise we add to the fullWidth container as normal\n      // let previousFullWidth = ensureDomOrder ? this.lastPlacedElements.eFullWidth : null;\n      this.createFullWidthRowContainer(this.fullWidthContainerComp, null, null, type, name, function (eRow) {\n        _this.eFullWidthRow = eRow;\n      }, function (cellRenderer) {\n        _this.fullWidthRowComponent = cellRenderer;\n      });\n    }\n  };\n\n  RowComp.prototype.setAnimateFlags = function (animateIn) {\n    if (animateIn) {\n      var oldRowTopExists = _.exists(this.rowNode.oldRowTop); // if the row had a previous position, we slide it in (animate row top)\n\n\n      this.slideRowIn = oldRowTopExists; // if the row had no previous position, we fade it in (animate\n\n      this.fadeRowIn = !oldRowTopExists;\n    } else {\n      this.slideRowIn = false;\n      this.fadeRowIn = false;\n    }\n  };\n\n  RowComp.prototype.isEditing = function () {\n    return this.editingRow;\n  };\n\n  RowComp.prototype.stopRowEditing = function (cancel) {\n    this.stopEditing(cancel);\n  };\n\n  RowComp.prototype.isFullWidth = function () {\n    return this.fullWidthRow;\n  };\n\n  RowComp.prototype.refreshFullWidth = function () {\n    var _this = this; // returns 'true' if refresh succeeded\n\n\n    var tryRefresh = function tryRefresh(eRow, eCellComp, pinned) {\n      if (!eRow || !eCellComp) {\n        return true;\n      } // no refresh needed\n      // no refresh method present, so can't refresh, hard refresh needed\n\n\n      if (!eCellComp.refresh) {\n        return false;\n      }\n\n      var params = _this.createFullWidthParams(eRow, pinned);\n\n      var refreshSucceeded = eCellComp.refresh(params);\n      return refreshSucceeded;\n    };\n\n    var normalSuccess = tryRefresh(this.eFullWidthRow, this.fullWidthRowComponent, null);\n    var bodySuccess = tryRefresh(this.eFullWidthRowBody, this.fullWidthRowComponentBody, null);\n    var leftSuccess = tryRefresh(this.eFullWidthRowLeft, this.fullWidthRowComponentLeft, Constants.PINNED_LEFT);\n    var rightSuccess = tryRefresh(this.eFullWidthRowRight, this.fullWidthRowComponentRight, Constants.PINNED_RIGHT);\n    var allFullWidthRowsRefreshed = normalSuccess && bodySuccess && leftSuccess && rightSuccess;\n    return allFullWidthRowsRefreshed;\n  };\n\n  RowComp.prototype.addListeners = function () {\n    this.addManagedListener(this.rowNode, RowNode.EVENT_HEIGHT_CHANGED, this.onRowHeightChanged.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_ROW_SELECTED, this.onRowSelected.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_ROW_INDEX_CHANGED, this.onRowIndexChanged.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_TOP_CHANGED, this.onTopChanged.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_EXPANDED_CHANGED, this.onExpandedChanged.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_DATA_CHANGED, this.onRowNodeDataChanged.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_CELL_CHANGED, this.onRowNodeCellChanged.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_HIGHLIGHT_CHANGED, this.onRowNodeHighlightChanged.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_DRAGGING_CHANGED, this.onRowNodeDraggingChanged.bind(this));\n    var eventService = this.beans.eventService;\n    this.addManagedListener(eventService, Events.EVENT_HEIGHT_SCALE_CHANGED, this.onTopChanged.bind(this));\n    this.addManagedListener(eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this));\n    this.addManagedListener(eventService, Events.EVENT_VIRTUAL_COLUMNS_CHANGED, this.onVirtualColumnsChanged.bind(this));\n    this.addManagedListener(eventService, Events.EVENT_COLUMN_RESIZED, this.onColumnResized.bind(this));\n    this.addManagedListener(eventService, Events.EVENT_CELL_FOCUSED, this.onCellFocusChanged.bind(this));\n    this.addManagedListener(eventService, Events.EVENT_PAGINATION_CHANGED, this.onPaginationChanged.bind(this));\n    this.addManagedListener(eventService, Events.EVENT_MODEL_UPDATED, this.onModelUpdated.bind(this));\n    this.addManagedListener(eventService, Events.EVENT_COLUMN_MOVED, this.onColumnMoved.bind(this));\n    this.addListenersForCellComps();\n  };\n\n  RowComp.prototype.addListenersForCellComps = function () {\n    var _this = this;\n\n    this.addManagedListener(this.rowNode, RowNode.EVENT_ROW_INDEX_CHANGED, function () {\n      _this.forEachCellComp(function (cellComp) {\n        return cellComp.onRowIndexChanged();\n      });\n    });\n    this.addManagedListener(this.rowNode, RowNode.EVENT_CELL_CHANGED, function (event) {\n      _this.forEachCellComp(function (cellComp) {\n        return cellComp.onCellChanged(event);\n      });\n    });\n  };\n\n  RowComp.prototype.onRowNodeDataChanged = function (event) {\n    // if this is an update, we want to refresh, as this will allow the user to put in a transition\n    // into the cellRenderer refresh method. otherwise this might be completely new data, in which case\n    // we will want to completely replace the cells\n    this.forEachCellComp(function (cellComp) {\n      return cellComp.refreshCell({\n        suppressFlash: !event.update,\n        newData: !event.update\n      });\n    }); // check for selected also, as this could be after lazy loading of the row data, in which case\n    // the id might of just gotten set inside the row and the row selected state may of changed\n    // as a result. this is what happens when selected rows are loaded in virtual pagination.\n    // - niall note - since moving to the stub component, this may no longer be true, as replacing\n    // the stub component now replaces the entire row\n\n    this.onRowSelected(); // as data has changed, then the style and class needs to be recomputed\n\n    this.postProcessCss();\n  };\n\n  RowComp.prototype.onRowNodeCellChanged = function () {\n    // as data has changed, then the style and class needs to be recomputed\n    this.postProcessCss();\n  };\n\n  RowComp.prototype.postProcessCss = function () {\n    this.postProcessStylesFromGridOptions();\n    this.postProcessClassesFromGridOptions();\n    this.postProcessRowClassRules();\n    this.postProcessRowDragging();\n  };\n\n  RowComp.prototype.onRowNodeHighlightChanged = function () {\n    var highlighted = this.rowNode.highlighted;\n    this.eAllRowContainers.forEach(function (row) {\n      _.removeCssClass(row, 'ag-row-highlight-above');\n\n      _.removeCssClass(row, 'ag-row-highlight-below');\n\n      if (highlighted) {\n        _.addCssClass(row, 'ag-row-highlight-' + highlighted);\n      }\n    });\n  };\n\n  RowComp.prototype.onRowNodeDraggingChanged = function () {\n    this.postProcessRowDragging();\n  };\n\n  RowComp.prototype.postProcessRowDragging = function () {\n    var dragging = this.rowNode.dragging;\n    this.eAllRowContainers.forEach(function (row) {\n      return _.addOrRemoveCssClass(row, 'ag-row-dragging', dragging);\n    });\n  };\n\n  RowComp.prototype.onExpandedChanged = function () {\n    var rowNode = this.rowNode;\n    this.eAllRowContainers.forEach(function (row) {\n      return _.addOrRemoveCssClass(row, 'ag-row-group-expanded', rowNode.expanded);\n    });\n    this.eAllRowContainers.forEach(function (row) {\n      return _.addOrRemoveCssClass(row, 'ag-row-group-contracted', !rowNode.expanded);\n    });\n  };\n\n  RowComp.prototype.onDisplayedColumnsChanged = function () {\n    if (this.fullWidthRow) {\n      return;\n    }\n\n    this.refreshCells();\n  };\n\n  RowComp.prototype.destroyFullWidthComponents = function () {\n    if (this.fullWidthRowComponent) {\n      this.beans.detailRowCompCache.addOrDestroy(this.rowNode, null, this.fullWidthRowComponent);\n      this.fullWidthRowComponent = null;\n    }\n\n    if (this.fullWidthRowComponentBody) {\n      this.beans.detailRowCompCache.addOrDestroy(this.rowNode, null, this.fullWidthRowComponentBody);\n      this.fullWidthRowComponent = null;\n    }\n\n    if (this.fullWidthRowComponentLeft) {\n      this.beans.detailRowCompCache.addOrDestroy(this.rowNode, Constants.PINNED_LEFT, this.fullWidthRowComponentLeft);\n      this.fullWidthRowComponentLeft = null;\n    }\n\n    if (this.fullWidthRowComponentRight) {\n      this.beans.detailRowCompCache.addOrDestroy(this.rowNode, Constants.PINNED_RIGHT, this.fullWidthRowComponentRight);\n      this.fullWidthRowComponent = null;\n    }\n  };\n\n  RowComp.prototype.getContainerForCell = function (pinnedType) {\n    switch (pinnedType) {\n      case Constants.PINNED_LEFT:\n        return this.ePinnedLeftRow;\n\n      case Constants.PINNED_RIGHT:\n        return this.ePinnedRightRow;\n\n      default:\n        return this.eBodyRow;\n    }\n  };\n\n  RowComp.prototype.onVirtualColumnsChanged = function () {\n    if (this.fullWidthRow) {\n      return;\n    }\n\n    this.refreshCells();\n  };\n\n  RowComp.prototype.onColumnResized = function () {\n    if (this.fullWidthRow) {\n      return;\n    }\n\n    this.refreshCells();\n  };\n\n  RowComp.prototype.refreshCells = function () {\n    if (!this.areAllContainersReady()) {\n      this.refreshNeeded = true;\n      return;\n    }\n\n    var suppressAnimationFrame = this.beans.gridOptionsWrapper.isSuppressAnimationFrame();\n    var skipAnimationFrame = suppressAnimationFrame || this.printLayout;\n\n    if (skipAnimationFrame) {\n      this.refreshCellsInAnimationFrame();\n    } else {\n      if (this.columnRefreshPending) {\n        return;\n      }\n\n      this.beans.taskQueue.createTask(this.refreshCellsInAnimationFrame.bind(this), this.rowNode.rowIndex, 'createTasksP1');\n    }\n  };\n\n  RowComp.prototype.refreshCellsInAnimationFrame = function () {\n    if (!this.active) {\n      return;\n    }\n\n    this.columnRefreshPending = false;\n    var centerCols;\n    var leftCols;\n    var rightCols;\n\n    if (this.printLayout) {\n      centerCols = this.beans.columnController.getAllDisplayedColumns();\n      leftCols = [];\n      rightCols = [];\n    } else {\n      centerCols = this.beans.columnController.getAllDisplayedCenterVirtualColumnsForRow(this.rowNode);\n      leftCols = this.beans.columnController.getDisplayedLeftColumnsForRow(this.rowNode);\n      rightCols = this.beans.columnController.getDisplayedRightColumnsForRow(this.rowNode);\n    }\n\n    this.insertCellsIntoContainer(this.eBodyRow, centerCols);\n    this.insertCellsIntoContainer(this.ePinnedLeftRow, leftCols);\n    this.insertCellsIntoContainer(this.ePinnedRightRow, rightCols);\n    this.elementOrderChanged = false;\n    var colIdsToRemove = Object.keys(this.cellComps);\n    centerCols.forEach(function (col) {\n      return _.removeFromArray(colIdsToRemove, col.getId());\n    });\n    leftCols.forEach(function (col) {\n      return _.removeFromArray(colIdsToRemove, col.getId());\n    });\n    rightCols.forEach(function (col) {\n      return _.removeFromArray(colIdsToRemove, col.getId());\n    }); // we never remove editing cells, as this would cause the cells to loose their values while editing\n    // as the grid is scrolling horizontally.\n\n    var eligibleToBeRemoved = colIdsToRemove.filter(this.isCellEligibleToBeRemoved.bind(this)); // remove old cells from gui, but we don't destroy them, we might use them again\n\n    this.removeRenderedCells(eligibleToBeRemoved);\n  };\n\n  RowComp.prototype.onColumnMoved = function () {\n    this.elementOrderChanged = true;\n  };\n\n  RowComp.prototype.removeRenderedCells = function (colIds) {\n    var _this = this;\n\n    colIds.forEach(function (key) {\n      var cellComp = _this.cellComps[key]; // could be old reference, ie removed cell\n\n      if (_.missing(cellComp)) {\n        return;\n      }\n\n      cellComp.detach();\n      cellComp.destroy();\n      _this.cellComps[key] = null;\n    });\n  };\n\n  RowComp.prototype.isCellEligibleToBeRemoved = function (indexStr) {\n    var displayedColumns = this.beans.columnController.getAllDisplayedColumns();\n    var REMOVE_CELL = true;\n    var KEEP_CELL = false;\n    var renderedCell = this.cellComps[indexStr]; // always remove the cell if it's not rendered or if it's in the wrong pinned location\n\n    if (!renderedCell || this.isCellInWrongRow(renderedCell)) {\n      return REMOVE_CELL;\n    } // we want to try and keep editing and focused cells\n\n\n    var editing = renderedCell.isEditing();\n    var focused = this.beans.focusController.isCellFocused(renderedCell.getCellPosition());\n    var mightWantToKeepCell = editing || focused;\n\n    if (mightWantToKeepCell) {\n      var column = renderedCell.getColumn();\n      var cellStillDisplayed = displayedColumns.indexOf(column) >= 0;\n      return cellStillDisplayed ? KEEP_CELL : REMOVE_CELL;\n    }\n\n    return REMOVE_CELL;\n  };\n\n  RowComp.prototype.ensureCellInCorrectContainer = function (cellComp) {\n    // for print layout, we always put cells into centre, otherwise we put in correct pinned section\n    if (this.printLayout) {\n      return;\n    }\n\n    var element = cellComp.getGui();\n    var column = cellComp.getColumn();\n    var pinnedType = column.getPinned();\n    var eContainer = this.getContainerForCell(pinnedType); // if in wrong container, remove it\n\n    var eOldContainer = cellComp.getParentRow();\n    var inWrongRow = eOldContainer !== eContainer;\n\n    if (inWrongRow) {\n      // take out from old row\n      if (eOldContainer) {\n        eOldContainer.removeChild(element);\n      }\n\n      eContainer.appendChild(element);\n      cellComp.setParentRow(eContainer);\n      this.elementOrderChanged = true;\n    }\n  };\n\n  RowComp.prototype.isCellInWrongRow = function (cellComp) {\n    var column = cellComp.getColumn();\n    var rowWeWant = this.getContainerForCell(column.getPinned());\n    var oldRow = cellComp.getParentRow(); // if in wrong container, remove it\n\n    return oldRow !== rowWeWant;\n  };\n\n  RowComp.prototype.insertCellsIntoContainer = function (eRow, cols) {\n    var _this = this;\n\n    if (!eRow) {\n      return;\n    }\n\n    var cellTemplates = [];\n    var newCellComps = [];\n    cols.forEach(function (col) {\n      var colId = col.getId();\n      var existingCell = _this.cellComps[colId];\n\n      if (existingCell) {\n        _this.ensureCellInCorrectContainer(existingCell);\n      } else {\n        _this.createNewCell(col, eRow, cellTemplates, newCellComps);\n      }\n    });\n\n    if (cellTemplates.length > 0) {\n      _.appendHtml(eRow, cellTemplates.join(''));\n\n      this.callAfterRowAttachedOnCells(newCellComps, eRow);\n    }\n\n    if (this.elementOrderChanged && this.beans.gridOptionsWrapper.isEnsureDomOrder()) {\n      var correctChildOrder = cols.map(function (col) {\n        return _this.getCellForCol(col);\n      });\n\n      _.setDomChildOrder(eRow, correctChildOrder);\n    }\n  };\n\n  RowComp.prototype.addDomData = function (eRowContainer) {\n    var gow = this.beans.gridOptionsWrapper;\n    gow.setDomData(eRowContainer, RowComp.DOM_DATA_KEY_RENDERED_ROW, this);\n    this.addDestroyFunc(function () {\n      gow.setDomData(eRowContainer, RowComp.DOM_DATA_KEY_RENDERED_ROW, null);\n    });\n  };\n\n  RowComp.prototype.createNewCell = function (col, eContainer, cellTemplates, newCellComps) {\n    var newCellComp = new CellComp(this.scope, this.beans, col, this.rowNode, this, false, this.printLayout);\n    var cellTemplate = newCellComp.getCreateTemplate();\n    cellTemplates.push(cellTemplate);\n    newCellComps.push(newCellComp);\n    this.cellComps[col.getId()] = newCellComp;\n    newCellComp.setParentRow(eContainer);\n    this.elementOrderChanged = true;\n  };\n\n  RowComp.prototype.onMouseEvent = function (eventName, mouseEvent) {\n    switch (eventName) {\n      case 'dblclick':\n        this.onRowDblClick(mouseEvent);\n        break;\n\n      case 'click':\n        this.onRowClick(mouseEvent);\n        break;\n\n      case 'mousedown':\n        this.onRowMouseDown(mouseEvent);\n        break;\n    }\n  };\n\n  RowComp.prototype.createRowEvent = function (type, domEvent) {\n    return {\n      type: type,\n      node: this.rowNode,\n      data: this.rowNode.data,\n      rowIndex: this.rowNode.rowIndex,\n      rowPinned: this.rowNode.rowPinned,\n      context: this.beans.gridOptionsWrapper.getContext(),\n      api: this.beans.gridOptionsWrapper.getApi(),\n      columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n      event: domEvent\n    };\n  };\n\n  RowComp.prototype.createRowEventWithSource = function (type, domEvent) {\n    var event = this.createRowEvent(type, domEvent); // when first developing this, we included the rowComp in the event.\n    // this seems very weird. so when introducing the event types, i left the 'source'\n    // out of the type, and just include the source in the two places where this event\n    // was fired (rowClicked and rowDoubleClicked). it doesn't make sense for any\n    // users to be using this, as the rowComp isn't an object we expose, so would be\n    // very surprising if a user was using it.\n\n    event.source = this;\n    return event;\n  };\n\n  RowComp.prototype.onRowDblClick = function (mouseEvent) {\n    if (_.isStopPropagationForAgGrid(mouseEvent)) {\n      return;\n    }\n\n    var agEvent = this.createRowEventWithSource(Events.EVENT_ROW_DOUBLE_CLICKED, mouseEvent);\n    this.beans.eventService.dispatchEvent(agEvent);\n  };\n\n  RowComp.prototype.onRowMouseDown = function (mouseEvent) {\n    this.lastMouseDownOnDragger = _.isElementChildOfClass(mouseEvent.target, 'ag-row-drag', 3);\n  };\n\n  RowComp.prototype.onRowClick = function (mouseEvent) {\n    var stop = _.isStopPropagationForAgGrid(mouseEvent) || this.lastMouseDownOnDragger;\n\n    if (stop) {\n      return;\n    }\n\n    var agEvent = this.createRowEventWithSource(Events.EVENT_ROW_CLICKED, mouseEvent);\n    this.beans.eventService.dispatchEvent(agEvent); // ctrlKey for windows, metaKey for Apple\n\n    var multiSelectKeyPressed = mouseEvent.ctrlKey || mouseEvent.metaKey;\n    var shiftKeyPressed = mouseEvent.shiftKey;\n\n    if ( // we do not allow selecting groups by clicking (as the click here expands the group), or if it's a detail row,\n    // so return if it's a group row\n    this.rowNode.group || // this is needed so we don't unselect other rows when we click this row, eg if this row is not selectable,\n    // and we click it, the selection should not change (ie any currently selected row should stay selected)\n    !this.rowNode.selectable || // we also don't allow selection of pinned rows\n    this.rowNode.rowPinned || // if no selection method enabled, do nothing\n    !this.beans.gridOptionsWrapper.isRowSelection() || // if click selection suppressed, do nothing\n    this.beans.gridOptionsWrapper.isSuppressRowClickSelection()) {\n      return;\n    }\n\n    var multiSelectOnClick = this.beans.gridOptionsWrapper.isRowMultiSelectWithClick();\n    var rowDeselectionWithCtrl = this.beans.gridOptionsWrapper.isRowDeselection();\n\n    if (this.rowNode.isSelected()) {\n      if (multiSelectOnClick) {\n        this.rowNode.setSelectedParams({\n          newValue: false\n        });\n      } else if (multiSelectKeyPressed) {\n        if (rowDeselectionWithCtrl) {\n          this.rowNode.setSelectedParams({\n            newValue: false\n          });\n        }\n      } else {\n        // selected with no multi key, must make sure anything else is unselected\n        this.rowNode.setSelectedParams({\n          newValue: true,\n          clearSelection: true\n        });\n      }\n    } else {\n      var clearSelection = multiSelectOnClick ? false : !multiSelectKeyPressed;\n      this.rowNode.setSelectedParams({\n        newValue: true,\n        clearSelection: clearSelection,\n        rangeSelect: shiftKeyPressed\n      });\n    }\n  };\n\n  RowComp.prototype.createFullWidthRowContainer = function (rowContainerComp, pinned, extraCssClass, cellRendererType, cellRendererName, eRowCallback, cellRendererCallback) {\n    var _this = this;\n\n    var rowTemplate = this.createTemplate('', extraCssClass);\n    rowContainerComp.appendRowTemplate(rowTemplate, function () {\n      var eRow = rowContainerComp.getRowElement(_this.getCompId());\n\n      var params = _this.createFullWidthParams(eRow, pinned);\n\n      var callback = function callback(cellRenderer) {\n        if (_this.isAlive()) {\n          var gui = cellRenderer.getGui();\n          eRow.appendChild(gui);\n          cellRendererCallback(cellRenderer);\n        } else {\n          _this.beans.context.destroyBean(cellRenderer);\n        }\n      }; // if doing master detail, it's possible we have a cached row comp from last time detail was displayed\n\n\n      var cachedRowComp = _this.beans.detailRowCompCache.get(_this.rowNode, pinned);\n\n      if (cachedRowComp) {\n        callback(cachedRowComp);\n      } else {\n        var res = _this.beans.userComponentFactory.newFullWidthCellRenderer(params, cellRendererType, cellRendererName);\n\n        if (!res) {\n          var masterDetailModuleLoaded = ModuleRegistry.isRegistered(ModuleNames.MasterDetailModule);\n\n          if (cellRendererName === 'agDetailCellRenderer' && !masterDetailModuleLoaded) {\n            console.warn(\"ag-Grid: cell renderer agDetailCellRenderer (for master detail) not found. Did you forget to include the master detail module?\");\n          } else {\n            console.error(\"ag-Grid: fullWidthCellRenderer \" + cellRendererName + \" not found\");\n          }\n\n          return;\n        }\n\n        res.then(callback);\n      }\n\n      _this.afterRowAttached(rowContainerComp, eRow);\n\n      eRowCallback(eRow);\n\n      _this.angular1Compile(eRow);\n    });\n  };\n\n  RowComp.prototype.angular1Compile = function (element) {\n    if (!this.scope) {\n      return;\n    }\n\n    this.beans.$compile(element)(this.scope);\n  };\n\n  RowComp.prototype.createFullWidthParams = function (eRow, pinned) {\n    var params = {\n      fullWidth: true,\n      data: this.rowNode.data,\n      node: this.rowNode,\n      value: this.rowNode.key,\n      $scope: this.scope ? this.scope : this.parentScope,\n      $compile: this.beans.$compile,\n      rowIndex: this.rowNode.rowIndex,\n      api: this.beans.gridOptionsWrapper.getApi(),\n      columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n      context: this.beans.gridOptionsWrapper.getContext(),\n      // these need to be taken out, as part of 'afterAttached' now\n      eGridCell: eRow,\n      eParentOfValue: eRow,\n      pinned: pinned,\n      addRenderedRowListener: this.addEventListener.bind(this)\n    };\n    return params;\n  };\n\n  RowComp.prototype.getInitialRowClasses = function (extraCssClass) {\n    var classes = [];\n    var isTreeData = this.beans.gridOptionsWrapper.isTreeData();\n    var rowNode = this.rowNode;\n\n    if (_.exists(extraCssClass)) {\n      classes.push(extraCssClass);\n    }\n\n    classes.push('ag-row');\n    classes.push(this.rowFocused ? 'ag-row-focus' : 'ag-row-no-focus');\n\n    if (this.fadeRowIn) {\n      classes.push('ag-opacity-zero');\n    }\n\n    classes.push(this.rowIsEven ? 'ag-row-even' : 'ag-row-odd');\n\n    if (rowNode.isRowPinned()) {\n      classes.push('ag-row-pinned');\n    }\n\n    if (rowNode.isSelected()) {\n      classes.push('ag-row-selected');\n    }\n\n    if (rowNode.group) {\n      classes.push('ag-row-group'); // if a group, put the level of the group in\n\n      classes.push('ag-row-level-' + rowNode.level);\n\n      if (rowNode.footer) {\n        classes.push('ag-row-footer');\n      }\n    } else {\n      // if a leaf, and a parent exists, put a level of the parent, else put level of 0 for top level item\n      classes.push('ag-row-level-' + (rowNode.parent ? rowNode.parent.level + 1 : '0'));\n    }\n\n    if (rowNode.stub) {\n      classes.push('ag-row-loading');\n    }\n\n    if (this.fullWidthRow) {\n      classes.push('ag-full-width-row');\n    }\n\n    var addExpandedClass = isTreeData ? // if doing tree data, we add the expanded classes if any children, as any node can be a parent\n    rowNode.allChildrenCount : // if normal row grouping, we add expanded classes to groups only\n    rowNode.group && !rowNode.footer;\n\n    if (addExpandedClass) {\n      classes.push(rowNode.expanded ? 'ag-row-group-expanded' : 'ag-row-group-contracted');\n    }\n\n    if (rowNode.dragging) {\n      classes.push('ag-row-dragging');\n    }\n\n    _.pushAll(classes, this.processClassesFromGridOptions());\n\n    _.pushAll(classes, this.preProcessRowClassRules()); // we use absolute position unless we are doing print layout\n\n\n    classes.push(this.printLayout ? 'ag-row-position-relative' : 'ag-row-position-absolute');\n    this.firstRowOnPage = this.isFirstRowOnPage();\n    this.lastRowOnPage = this.isLastRowOnPage();\n\n    if (this.firstRowOnPage) {\n      classes.push('ag-row-first');\n    }\n\n    if (this.lastRowOnPage) {\n      classes.push('ag-row-last');\n    }\n\n    return classes;\n  };\n\n  RowComp.prototype.isFirstRowOnPage = function () {\n    return this.rowNode.rowIndex === this.beans.paginationProxy.getPageFirstRow();\n  };\n\n  RowComp.prototype.isLastRowOnPage = function () {\n    return this.rowNode.rowIndex === this.beans.paginationProxy.getPageLastRow();\n  };\n\n  RowComp.prototype.onModelUpdated = function () {\n    var newFirst = this.isFirstRowOnPage();\n    var newLast = this.isLastRowOnPage();\n\n    if (this.firstRowOnPage !== newFirst) {\n      this.firstRowOnPage = newFirst;\n      this.eAllRowContainers.forEach(function (row) {\n        return _.addOrRemoveCssClass(row, 'ag-row-first', newFirst);\n      });\n    }\n\n    if (this.lastRowOnPage !== newLast) {\n      this.lastRowOnPage = newLast;\n      this.eAllRowContainers.forEach(function (row) {\n        return _.addOrRemoveCssClass(row, 'ag-row-last', newLast);\n      });\n    }\n  };\n\n  RowComp.prototype.preProcessRowClassRules = function () {\n    var res = [];\n    this.processRowClassRules(function (className) {\n      res.push(className);\n    }, function (className) {// not catered for, if creating, no need\n      // to remove class as it was never there\n    });\n    return res;\n  };\n\n  RowComp.prototype.processRowClassRules = function (onApplicableClass, onNotApplicableClass) {\n    this.beans.stylingService.processClassRules(this.beans.gridOptionsWrapper.rowClassRules(), {\n      value: undefined,\n      colDef: undefined,\n      data: this.rowNode.data,\n      node: this.rowNode,\n      rowIndex: this.rowNode.rowIndex,\n      api: this.beans.gridOptionsWrapper.getApi(),\n      columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n      $scope: this.scope,\n      context: this.beans.gridOptionsWrapper.getContext()\n    }, onApplicableClass, onNotApplicableClass);\n  };\n\n  RowComp.prototype.stopEditing = function (cancel) {\n    if (cancel === void 0) {\n      cancel = false;\n    }\n\n    this.forEachCellComp(function (renderedCell) {\n      renderedCell.stopEditing(cancel);\n    });\n\n    if (!this.editingRow) {\n      return;\n    }\n\n    if (!cancel) {\n      var event_1 = this.createRowEvent(Events.EVENT_ROW_VALUE_CHANGED);\n      this.beans.eventService.dispatchEvent(event_1);\n    }\n\n    this.setEditingRow(false);\n  };\n\n  RowComp.prototype.setEditingRow = function (value) {\n    this.editingRow = value;\n    this.eAllRowContainers.forEach(function (row) {\n      return _.addOrRemoveCssClass(row, 'ag-row-editing', value);\n    });\n    var event = value ? this.createRowEvent(Events.EVENT_ROW_EDITING_STARTED) : this.createRowEvent(Events.EVENT_ROW_EDITING_STOPPED);\n    this.beans.eventService.dispatchEvent(event);\n  };\n\n  RowComp.prototype.startRowEditing = function (keyPress, charPress, sourceRenderedCell) {\n    if (keyPress === void 0) {\n      keyPress = null;\n    }\n\n    if (charPress === void 0) {\n      charPress = null;\n    }\n\n    if (sourceRenderedCell === void 0) {\n      sourceRenderedCell = null;\n    } // don't do it if already editing\n\n\n    if (this.editingRow) {\n      return;\n    }\n\n    this.forEachCellComp(function (renderedCell) {\n      var cellStartedEdit = renderedCell === sourceRenderedCell;\n\n      if (cellStartedEdit) {\n        renderedCell.startEditingIfEnabled(keyPress, charPress, cellStartedEdit);\n      } else {\n        renderedCell.startEditingIfEnabled(null, null, cellStartedEdit);\n      }\n    });\n    this.setEditingRow(true);\n  };\n\n  RowComp.prototype.forEachCellComp = function (callback) {\n    _.iterateObject(this.cellComps, function (key, cellComp) {\n      if (!cellComp) {\n        return;\n      }\n\n      callback(cellComp);\n    });\n  };\n\n  RowComp.prototype.postProcessClassesFromGridOptions = function () {\n    var _this = this;\n\n    var cssClasses = this.processClassesFromGridOptions();\n\n    if (!cssClasses || !cssClasses.length) {\n      return;\n    }\n\n    cssClasses.forEach(function (classStr) {\n      _this.eAllRowContainers.forEach(function (row) {\n        return _.addCssClass(row, classStr);\n      });\n    });\n  };\n\n  RowComp.prototype.postProcessRowClassRules = function () {\n    var _this = this;\n\n    this.processRowClassRules(function (className) {\n      _this.eAllRowContainers.forEach(function (row) {\n        return _.addCssClass(row, className);\n      });\n    }, function (className) {\n      _this.eAllRowContainers.forEach(function (row) {\n        return _.removeCssClass(row, className);\n      });\n    });\n  };\n\n  RowComp.prototype.processClassesFromGridOptions = function () {\n    var res = [];\n\n    var process = function process(rowCls) {\n      if (typeof rowCls === 'string') {\n        res.push(rowCls);\n      } else if (Array.isArray(rowCls)) {\n        rowCls.forEach(function (e) {\n          return res.push(e);\n        });\n      }\n    }; // part 1 - rowClass\n\n\n    var rowClass = this.beans.gridOptionsWrapper.getRowClass();\n\n    if (rowClass) {\n      if (typeof rowClass === 'function') {\n        console.warn('ag-Grid: rowClass should not be a function, please use getRowClass instead');\n        return;\n      }\n\n      process(rowClass);\n    } // part 2 - rowClassFunc\n\n\n    var rowClassFunc = this.beans.gridOptionsWrapper.getRowClassFunc();\n\n    if (rowClassFunc) {\n      var params = {\n        node: this.rowNode,\n        data: this.rowNode.data,\n        rowIndex: this.rowNode.rowIndex,\n        context: this.beans.gridOptionsWrapper.getContext(),\n        api: this.beans.gridOptionsWrapper.getApi()\n      };\n      var rowClassFuncResult = rowClassFunc(params);\n      process(rowClassFuncResult);\n    }\n\n    return res;\n  };\n\n  RowComp.prototype.preProcessStylesFromGridOptions = function () {\n    var rowStyles = this.processStylesFromGridOptions();\n    return _.cssStyleObjectToMarkup(rowStyles);\n  };\n\n  RowComp.prototype.postProcessStylesFromGridOptions = function () {\n    var rowStyles = this.processStylesFromGridOptions();\n    this.eAllRowContainers.forEach(function (row) {\n      return _.addStylesToElement(row, rowStyles);\n    });\n  };\n\n  RowComp.prototype.processStylesFromGridOptions = function () {\n    // part 1 - rowStyle\n    var rowStyle = this.beans.gridOptionsWrapper.getRowStyle();\n\n    if (rowStyle && typeof rowStyle === 'function') {\n      console.warn('ag-Grid: rowStyle should be an object of key/value styles, not be a function, use getRowStyle() instead');\n      return;\n    } // part 1 - rowStyleFunc\n\n\n    var rowStyleFunc = this.beans.gridOptionsWrapper.getRowStyleFunc();\n    var rowStyleFuncResult;\n\n    if (rowStyleFunc) {\n      var params = {\n        data: this.rowNode.data,\n        node: this.rowNode,\n        api: this.beans.gridOptionsWrapper.getApi(),\n        context: this.beans.gridOptionsWrapper.getContext(),\n        $scope: this.scope\n      };\n      rowStyleFuncResult = rowStyleFunc(params);\n    }\n\n    return _.assign({}, rowStyle, rowStyleFuncResult);\n  };\n\n  RowComp.prototype.createCells = function (cols) {\n    var _this = this;\n\n    var templateParts = [];\n    var newCellComps = [];\n    cols.forEach(function (col) {\n      var newCellComp = new CellComp(_this.scope, _this.beans, col, _this.rowNode, _this, false, _this.printLayout);\n      var cellTemplate = newCellComp.getCreateTemplate();\n      templateParts.push(cellTemplate);\n      newCellComps.push(newCellComp);\n      _this.cellComps[col.getId()] = newCellComp;\n    });\n    var templateAndComps = {\n      template: templateParts.join(''),\n      cellComps: newCellComps\n    };\n    return templateAndComps;\n  };\n\n  RowComp.prototype.onRowSelected = function () {\n    var selected = this.rowNode.isSelected();\n    this.eAllRowContainers.forEach(function (row) {\n      return _.addOrRemoveCssClass(row, 'ag-row-selected', selected);\n    });\n  }; // called:\n  // + after row created for first time\n  // + after horizontal scroll, so new cells due to column virtualisation\n\n\n  RowComp.prototype.callAfterRowAttachedOnCells = function (newCellComps, eRow) {\n    var _this = this;\n\n    newCellComps.forEach(function (cellComp) {\n      cellComp.setParentRow(eRow);\n      cellComp.afterAttached(); // if we are editing the row, then the cell needs to turn\n      // into edit mode\n\n      if (_this.editingRow) {\n        cellComp.startEditingIfEnabled();\n      }\n    });\n  };\n\n  RowComp.prototype.afterRowAttached = function (rowContainerComp, eRow) {\n    var _this = this;\n\n    this.addDomData(eRow);\n    this.removeSecondPassFuncs.push(function () {\n      rowContainerComp.removeRowElement(eRow);\n    });\n    this.removeFirstPassFuncs.push(function () {\n      if (_.exists(_this.rowNode.rowTop)) {\n        // the row top is updated anyway, however we set it here again\n        // to something more reasonable for the animation - ie if the\n        // row top is 10000px away, the row will flash out, so this\n        // gives it a rounded value, so row animates out more slowly\n        var rowTop = _this.roundRowTopToBounds(_this.rowNode.rowTop);\n\n        _this.setRowTop(rowTop);\n      } else {\n        _.addCssClass(eRow, 'ag-opacity-zero');\n      }\n    });\n    this.eAllRowContainers.push(eRow); // adding hover functionality adds listener to this row, so we\n    // do it lazily in an animation frame\n\n    if (this.useAnimationFrameForCreate) {\n      this.beans.taskQueue.createTask(this.addHoverFunctionality.bind(this, eRow), this.rowNode.rowIndex, 'createTasksP2');\n    } else {\n      this.addHoverFunctionality(eRow);\n    }\n  };\n\n  RowComp.prototype.addHoverFunctionality = function (eRow) {\n    var _this = this; // because we use animation frames to do this, it's possible the row no longer exists\n    // by the time we get to add it\n\n\n    if (!this.active) {\n      return;\n    } // because mouseenter and mouseleave do not propagate, we cannot listen on the gridPanel\n    // like we do for all the other mouse events.\n    // because of the pinning, we cannot simply add / remove the class based on the eRow. we\n    // have to check all eRow's (body & pinned). so the trick is if any of the rows gets a\n    // mouse hover, it sets such in the rowNode, and then all three reflect the change as\n    // all are listening for event on the row node.\n    // step 1 - add listener, to set flag on row node\n\n\n    this.addManagedListener(eRow, 'mouseenter', function () {\n      return _this.rowNode.onMouseEnter();\n    });\n    this.addManagedListener(eRow, 'mouseleave', function () {\n      return _this.rowNode.onMouseLeave();\n    }); // step 2 - listen for changes on row node (which any eRow can trigger)\n\n    this.addManagedListener(this.rowNode, RowNode.EVENT_MOUSE_ENTER, function () {\n      // if hover turned off, we don't add the class. we do this here so that if the application\n      // toggles this property mid way, we remove the hover form the last row, but we stop\n      // adding hovers from that point onwards.\n      if (!_this.beans.gridOptionsWrapper.isSuppressRowHoverHighlight()) {\n        _.addCssClass(eRow, 'ag-row-hover');\n      }\n    });\n    this.addManagedListener(this.rowNode, RowNode.EVENT_MOUSE_LEAVE, function () {\n      _.removeCssClass(eRow, 'ag-row-hover');\n    });\n  }; // for animation, we don't want to animate entry or exit to a very far away pixel,\n  // otherwise the row would move so fast, it would appear to disappear. so this method\n  // moves the row closer to the viewport if it is far away, so the row slide in / out\n  // at a speed the user can see.\n\n\n  RowComp.prototype.roundRowTopToBounds = function (rowTop) {\n    var range = this.beans.gridPanel.getVScrollPosition();\n    var minPixel = this.applyPaginationOffset(range.top, true) - 100;\n    var maxPixel = this.applyPaginationOffset(range.bottom, true) + 100;\n    return Math.min(Math.max(minPixel, rowTop), maxPixel);\n  };\n\n  RowComp.prototype.getFrameworkOverrides = function () {\n    return this.beans.frameworkOverrides;\n  };\n\n  RowComp.prototype.onRowHeightChanged = function () {\n    // check for exists first - if the user is resetting the row height, then\n    // it will be null (or undefined) momentarily until the next time the flatten\n    // stage is called where the row will then update again with a new height\n    if (_.exists(this.rowNode.rowHeight)) {\n      var heightPx_1 = this.rowNode.rowHeight + \"px\";\n      this.eAllRowContainers.forEach(function (row) {\n        return row.style.height = heightPx_1;\n      });\n    }\n  };\n\n  RowComp.prototype.addEventListener = function (eventType, listener) {\n    if (eventType === 'renderedRowRemoved' || eventType === 'rowRemoved') {\n      eventType = Events.EVENT_VIRTUAL_ROW_REMOVED;\n      console.warn('ag-Grid: Since version 11, event renderedRowRemoved is now called ' + Events.EVENT_VIRTUAL_ROW_REMOVED);\n    }\n\n    _super.prototype.addEventListener.call(this, eventType, listener);\n  };\n\n  RowComp.prototype.removeEventListener = function (eventType, listener) {\n    if (eventType === 'renderedRowRemoved' || eventType === 'rowRemoved') {\n      eventType = Events.EVENT_VIRTUAL_ROW_REMOVED;\n      console.warn('ag-Grid: Since version 11, event renderedRowRemoved and rowRemoved is now called ' + Events.EVENT_VIRTUAL_ROW_REMOVED);\n    }\n\n    _super.prototype.removeEventListener.call(this, eventType, listener);\n  }; // note - this is NOT called by context, as we don't wire / unwire the CellComp for performance reasons.\n\n\n  RowComp.prototype.destroy = function (animate) {\n    if (animate === void 0) {\n      animate = false;\n    }\n\n    this.active = false; // why do we have this method? shouldn't everything below be added as a destroy func beside\n    // the corresponding create logic?\n\n    this.destroyFullWidthComponents();\n\n    if (animate) {\n      this.removeFirstPassFuncs.forEach(function (func) {\n        return func();\n      });\n      this.removeSecondPassFuncs.push(this.destroyContainingCells.bind(this));\n    } else {\n      this.destroyContainingCells(); // we are not animating, so execute the second stage of removal now.\n      // we call getAndClear, so that they are only called once\n\n      var delayedDestroyFunctions = this.getAndClearDelayedDestroyFunctions();\n      delayedDestroyFunctions.forEach(function (func) {\n        return func();\n      });\n    }\n\n    var event = this.createRowEvent(Events.EVENT_VIRTUAL_ROW_REMOVED);\n    this.dispatchEvent(event);\n    this.beans.eventService.dispatchEvent(event);\n\n    _super.prototype.destroy.call(this);\n  };\n\n  RowComp.prototype.destroyContainingCells = function () {\n    this.forEachCellComp(function (renderedCell) {\n      return renderedCell.destroy();\n    });\n    this.destroyFullWidthComponents();\n  }; // we clear so that the functions are never executed twice\n\n\n  RowComp.prototype.getAndClearDelayedDestroyFunctions = function () {\n    var result = this.removeSecondPassFuncs;\n    this.removeSecondPassFuncs = [];\n    return result;\n  };\n\n  RowComp.prototype.onCellFocusChanged = function () {\n    var rowFocused = this.beans.focusController.isRowFocused(this.rowNode.rowIndex, this.rowNode.rowPinned);\n\n    if (rowFocused !== this.rowFocused) {\n      this.eAllRowContainers.forEach(function (row) {\n        return _.addOrRemoveCssClass(row, 'ag-row-focus', rowFocused);\n      });\n      this.eAllRowContainers.forEach(function (row) {\n        return _.addOrRemoveCssClass(row, 'ag-row-no-focus', !rowFocused);\n      });\n      this.rowFocused = rowFocused;\n    } // if we are editing, then moving the focus out of a row will stop editing\n\n\n    if (!rowFocused && this.editingRow) {\n      this.stopEditing(false);\n    }\n  };\n\n  RowComp.prototype.onPaginationChanged = function () {\n    var currentPage = this.beans.paginationProxy.getCurrentPage(); // it is possible this row is in the new page, but the page number has changed, which means\n    // it needs to reposition itself relative to the new page\n\n    if (this.paginationPage !== currentPage) {\n      this.paginationPage = currentPage;\n      this.onTopChanged();\n    }\n  };\n\n  RowComp.prototype.onTopChanged = function () {\n    this.setRowTop(this.rowNode.rowTop);\n  }; // applies pagination offset, eg if on second page, and page height is 500px, then removes\n  // 500px from the top position, so a row with rowTop 600px is displayed at location 100px.\n  // reverse will take the offset away rather than add.\n\n\n  RowComp.prototype.applyPaginationOffset = function (topPx, reverse) {\n    if (reverse === void 0) {\n      reverse = false;\n    }\n\n    if (this.rowNode.isRowPinned()) {\n      return topPx;\n    }\n\n    var pixelOffset = this.beans.paginationProxy.getPixelOffset();\n    var multiplier = reverse ? 1 : -1;\n    return topPx + pixelOffset * multiplier;\n  };\n\n  RowComp.prototype.setRowTop = function (pixels) {\n    // print layout uses normal flow layout for row positioning\n    if (this.printLayout) {\n      return;\n    } // need to make sure rowTop is not null, as this can happen if the node was once\n    // visible (ie parent group was expanded) but is now not visible\n\n\n    if (_.exists(pixels)) {\n      var afterPaginationPixels = this.applyPaginationOffset(pixels);\n      var afterScalingPixels = this.beans.maxDivHeightScaler.getRealPixelPosition(afterPaginationPixels);\n      var topPx_1 = afterScalingPixels + \"px\";\n\n      if (this.beans.gridOptionsWrapper.isSuppressRowTransform()) {\n        this.eAllRowContainers.forEach(function (row) {\n          return row.style.top = topPx_1;\n        });\n      } else {\n        this.eAllRowContainers.forEach(function (row) {\n          return row.style.transform = \"translateY(\" + topPx_1 + \")\";\n        });\n      }\n    }\n  }; // we clear so that the functions are never executed twice\n\n\n  RowComp.prototype.getAndClearNextVMTurnFunctions = function () {\n    var result = this.createSecondPassFuncs;\n    this.createSecondPassFuncs = [];\n    return result;\n  };\n\n  RowComp.prototype.getRowNode = function () {\n    return this.rowNode;\n  };\n\n  RowComp.prototype.getRenderedCellForColumn = function (column) {\n    var _this = this;\n\n    var cellComp = this.cellComps[column.getColId()];\n\n    if (cellComp) {\n      return cellComp;\n    }\n\n    var spanList = Object.keys(this.cellComps).map(function (name) {\n      return _this.cellComps[name];\n    }).filter(function (cmp) {\n      return cmp && cmp.getColSpanningList().indexOf(column) !== -1;\n    });\n    return spanList.length ? spanList[0] : undefined;\n  };\n\n  RowComp.prototype.onRowIndexChanged = function () {\n    // we only bother updating if the rowIndex is present. if it is not present, it means this row\n    // is child of a group node, and the group node was closed, it's the only way to have no row index.\n    // when this happens, row is about to be de-rendered, so we don't care, rowComp is about to die!\n    if (this.rowNode.rowIndex != null) {\n      this.onCellFocusChanged();\n      this.updateRowIndexes();\n    }\n  };\n\n  RowComp.prototype.updateRowIndexes = function () {\n    var _this = this;\n\n    var rowIndexStr = this.rowNode.getRowIndexString();\n    var rowIsEven = this.rowNode.rowIndex % 2 === 0;\n    var rowIsEvenChanged = this.rowIsEven !== rowIsEven;\n    var headerRowCount = this.beans.headerNavigationService.getHeaderRowCount();\n\n    if (rowIsEvenChanged) {\n      this.rowIsEven = rowIsEven;\n    }\n\n    this.eAllRowContainers.forEach(function (eRow) {\n      eRow.setAttribute('row-index', rowIndexStr);\n      eRow.setAttribute('aria-rowindex', (headerRowCount + _this.rowNode.rowIndex + 1).toString());\n\n      if (!rowIsEvenChanged) {\n        return;\n      }\n\n      _.addOrRemoveCssClass(eRow, 'ag-row-even', rowIsEven);\n\n      _.addOrRemoveCssClass(eRow, 'ag-row-odd', !rowIsEven);\n    });\n  };\n\n  RowComp.prototype.ensureDomOrder = function () {\n    var sides = [{\n      el: this.getBodyRowElement(),\n      ct: this.bodyContainerComp\n    }, {\n      el: this.getPinnedLeftRowElement(),\n      ct: this.pinnedLeftContainerComp\n    }, {\n      el: this.getPinnedRightRowElement(),\n      ct: this.pinnedRightContainerComp\n    }, {\n      el: this.getFullWidthRowElement(),\n      ct: this.fullWidthContainerComp\n    }];\n    sides.forEach(function (side) {\n      if (!side.el) {\n        return;\n      }\n\n      side.ct.ensureDomOrder(side.el);\n    });\n  }; // returns the pinned left container, either the normal one, or the embedded full with one if exists\n\n\n  RowComp.prototype.getPinnedLeftRowElement = function () {\n    return this.ePinnedLeftRow ? this.ePinnedLeftRow : this.eFullWidthRowLeft;\n  }; // returns the pinned right container, either the normal one, or the embedded full with one if exists\n\n\n  RowComp.prototype.getPinnedRightRowElement = function () {\n    return this.ePinnedRightRow ? this.ePinnedRightRow : this.eFullWidthRowRight;\n  }; // returns the body container, either the normal one, or the embedded full with one if exists\n\n\n  RowComp.prototype.getBodyRowElement = function () {\n    return this.eBodyRow ? this.eBodyRow : this.eFullWidthRowBody;\n  }; // returns the full width container\n\n\n  RowComp.prototype.getFullWidthRowElement = function () {\n    return this.eFullWidthRow;\n  };\n\n  RowComp.DOM_DATA_KEY_RENDERED_ROW = 'renderedRow';\n  RowComp.FULL_WIDTH_CELL_RENDERER = 'fullWidthCellRenderer';\n  RowComp.GROUP_ROW_RENDERER = 'groupRowRenderer';\n  RowComp.GROUP_ROW_RENDERER_COMP_NAME = 'agGroupRowRenderer';\n  RowComp.LOADING_CELL_RENDERER = 'loadingCellRenderer';\n  RowComp.LOADING_CELL_RENDERER_COMP_NAME = 'agLoadingCellRenderer';\n  RowComp.DETAIL_CELL_RENDERER = 'detailCellRenderer';\n  RowComp.DETAIL_CELL_RENDERER_COMP_NAME = 'agDetailCellRenderer';\n  return RowComp;\n}(Component);\n\nexport { RowComp };","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/@ag-grid-community/core/dist/es6/rendering/rowComp.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","CellComp","RowNode","Events","Component","Constants","ModuleNames","ModuleRegistry","_","RowComp","_super","parentScope","bodyContainerComp","pinnedLeftContainerComp","pinnedRightContainerComp","fullWidthContainerComp","rowNode","beans","animateIn","useAnimationFrameForCreate","printLayout","embedFullWidth","_this","eAllRowContainers","active","rowContainerReadyCount","refreshNeeded","columnRefreshPending","cellComps","createSecondPassFuncs","removeFirstPassFuncs","removeSecondPassFuncs","initialised","elementOrderChanged","lastMouseDownOnDragger","rowIsEven","rowIndex","paginationPage","paginationProxy","getCurrentPage","setAnimateFlags","init","rowFocused","focusController","isRowFocused","rowPinned","scope","createChildScopeOrNull","data","setupRowContainers","addListeners","slideRowIn","push","onTopChanged","fadeRowIn","forEach","eRow","removeCssClass","createTemplate","contents","extraCssClass","templateParts","rowHeight","rowClasses","getInitialRowClasses","join","rowIdSanitised","escape","id","userRowStyles","preProcessStylesFromGridOptions","businessKey","getRowBusinessKey","businessKeySanitised","rowTopStyle","getInitialRowTopStyle","rowIdx","getRowIndexString","headerRowCount","headerNavigationService","getHeaderRowCount","getCompId","getCellForCol","column","cellComp","getColId","getGui","afterFlush","executeProcessRowPostCreateFunc","func","gridOptionsWrapper","getProcessRowPostCreateFunc","params","eBodyRow","ePinnedLeftRow","ePinnedRightRow","node","api","getApi","addRenderedRowListener","addEventListener","bind","columnApi","getColumnApi","context","getContext","pixels","roundRowTopToBounds","oldRowTop","rowTop","afterPaginationPixels","applyPaginationOffset","afterScalingPixels","maxDivHeightScaler","getRealPixelPosition","isSuppressRowTransform","businessKeyForNodeFunc","getBusinessKeyForNodeFunc","areAllContainersReady","lazyCreateCells","cols","cellTemplatesAndComps","createCells","innerHTML","template","callAfterRowAttachedOnCells","refreshCells","createRowContainer","rowContainerComp","callback","useAnimationsFrameForCreate","rowTemplate","appendRowTemplate","getRowElement","afterRowAttached","taskQueue","createTask","isAngularCompileRows","newChildScope","$new","addDestroyFunc","$destroy","isFullWidthCell","isDetailCell","doingMasterDetail","detail","pivotMode","columnController","isPivotMode","isGroupRow","group","footer","isFullWidthGroup","isGroupUseEntireRow","stub","createFullWidthRows","LOADING_CELL_RENDERER","LOADING_CELL_RENDERER_COMP_NAME","DETAIL_CELL_RENDERER","DETAIL_CELL_RENDERER_COMP_NAME","FULL_WIDTH_CELL_RENDERER","GROUP_ROW_RENDERER","GROUP_ROW_RENDERER_COMP_NAME","setupNormalRowContainers","centerCols","leftCols","rightCols","getAllDisplayedColumns","getAllDisplayedCenterVirtualColumnsForRow","getDisplayedLeftColumnsForRow","getDisplayedRightColumnsForRow","type","name","fullWidthRow","createFullWidthRowContainer","eFullWidthRowBody","cellRenderer","fullWidthRowComponentBody","PINNED_LEFT","eFullWidthRowLeft","fullWidthRowComponentLeft","PINNED_RIGHT","eFullWidthRowRight","fullWidthRowComponentRight","eFullWidthRow","fullWidthRowComponent","oldRowTopExists","exists","isEditing","editingRow","stopRowEditing","cancel","stopEditing","isFullWidth","refreshFullWidth","tryRefresh","eCellComp","pinned","refresh","createFullWidthParams","refreshSucceeded","normalSuccess","bodySuccess","leftSuccess","rightSuccess","allFullWidthRowsRefreshed","addManagedListener","EVENT_HEIGHT_CHANGED","onRowHeightChanged","EVENT_ROW_SELECTED","onRowSelected","EVENT_ROW_INDEX_CHANGED","onRowIndexChanged","EVENT_TOP_CHANGED","EVENT_EXPANDED_CHANGED","onExpandedChanged","EVENT_DATA_CHANGED","onRowNodeDataChanged","EVENT_CELL_CHANGED","onRowNodeCellChanged","EVENT_HIGHLIGHT_CHANGED","onRowNodeHighlightChanged","EVENT_DRAGGING_CHANGED","onRowNodeDraggingChanged","eventService","EVENT_HEIGHT_SCALE_CHANGED","EVENT_DISPLAYED_COLUMNS_CHANGED","onDisplayedColumnsChanged","EVENT_VIRTUAL_COLUMNS_CHANGED","onVirtualColumnsChanged","EVENT_COLUMN_RESIZED","onColumnResized","EVENT_CELL_FOCUSED","onCellFocusChanged","EVENT_PAGINATION_CHANGED","onPaginationChanged","EVENT_MODEL_UPDATED","onModelUpdated","EVENT_COLUMN_MOVED","onColumnMoved","addListenersForCellComps","forEachCellComp","event","onCellChanged","refreshCell","suppressFlash","update","newData","postProcessCss","postProcessStylesFromGridOptions","postProcessClassesFromGridOptions","postProcessRowClassRules","postProcessRowDragging","highlighted","row","addCssClass","dragging","addOrRemoveCssClass","expanded","destroyFullWidthComponents","detailRowCompCache","addOrDestroy","getContainerForCell","pinnedType","suppressAnimationFrame","isSuppressAnimationFrame","skipAnimationFrame","refreshCellsInAnimationFrame","insertCellsIntoContainer","colIdsToRemove","keys","col","removeFromArray","getId","eligibleToBeRemoved","filter","isCellEligibleToBeRemoved","removeRenderedCells","colIds","key","missing","detach","destroy","indexStr","displayedColumns","REMOVE_CELL","KEEP_CELL","renderedCell","isCellInWrongRow","editing","focused","isCellFocused","getCellPosition","mightWantToKeepCell","getColumn","cellStillDisplayed","indexOf","ensureCellInCorrectContainer","element","getPinned","eContainer","eOldContainer","getParentRow","inWrongRow","removeChild","appendChild","setParentRow","rowWeWant","oldRow","cellTemplates","newCellComps","colId","existingCell","createNewCell","appendHtml","isEnsureDomOrder","correctChildOrder","map","setDomChildOrder","addDomData","eRowContainer","gow","setDomData","DOM_DATA_KEY_RENDERED_ROW","newCellComp","cellTemplate","getCreateTemplate","onMouseEvent","eventName","mouseEvent","onRowDblClick","onRowClick","onRowMouseDown","createRowEvent","domEvent","createRowEventWithSource","source","isStopPropagationForAgGrid","agEvent","EVENT_ROW_DOUBLE_CLICKED","dispatchEvent","isElementChildOfClass","target","stop","EVENT_ROW_CLICKED","multiSelectKeyPressed","ctrlKey","metaKey","shiftKeyPressed","shiftKey","selectable","isRowSelection","isSuppressRowClickSelection","multiSelectOnClick","isRowMultiSelectWithClick","rowDeselectionWithCtrl","isRowDeselection","isSelected","setSelectedParams","newValue","clearSelection","rangeSelect","cellRendererType","cellRendererName","eRowCallback","cellRendererCallback","isAlive","gui","destroyBean","cachedRowComp","get","res","userComponentFactory","newFullWidthCellRenderer","masterDetailModuleLoaded","isRegistered","MasterDetailModule","console","warn","error","then","angular1Compile","$compile","fullWidth","value","$scope","eGridCell","eParentOfValue","classes","isTreeData","isRowPinned","level","parent","addExpandedClass","allChildrenCount","pushAll","processClassesFromGridOptions","preProcessRowClassRules","firstRowOnPage","isFirstRowOnPage","lastRowOnPage","isLastRowOnPage","getPageFirstRow","getPageLastRow","newFirst","newLast","processRowClassRules","className","onApplicableClass","onNotApplicableClass","stylingService","processClassRules","rowClassRules","undefined","colDef","event_1","EVENT_ROW_VALUE_CHANGED","setEditingRow","EVENT_ROW_EDITING_STARTED","EVENT_ROW_EDITING_STOPPED","startRowEditing","keyPress","charPress","sourceRenderedCell","cellStartedEdit","startEditingIfEnabled","iterateObject","cssClasses","classStr","process","rowCls","isArray","e","rowClass","getRowClass","rowClassFunc","getRowClassFunc","rowClassFuncResult","rowStyles","processStylesFromGridOptions","cssStyleObjectToMarkup","addStylesToElement","rowStyle","getRowStyle","rowStyleFunc","getRowStyleFunc","rowStyleFuncResult","templateAndComps","selected","afterAttached","removeRowElement","setRowTop","addHoverFunctionality","onMouseEnter","onMouseLeave","EVENT_MOUSE_ENTER","isSuppressRowHoverHighlight","EVENT_MOUSE_LEAVE","range","gridPanel","getVScrollPosition","minPixel","top","maxPixel","bottom","Math","min","max","getFrameworkOverrides","frameworkOverrides","heightPx_1","style","height","eventType","listener","EVENT_VIRTUAL_ROW_REMOVED","removeEventListener","animate","destroyContainingCells","delayedDestroyFunctions","getAndClearDelayedDestroyFunctions","result","currentPage","topPx","reverse","pixelOffset","getPixelOffset","multiplier","topPx_1","transform","getAndClearNextVMTurnFunctions","getRowNode","getRenderedCellForColumn","spanList","cmp","getColSpanningList","updateRowIndexes","rowIndexStr","rowIsEvenChanged","setAttribute","toString","ensureDomOrder","sides","el","getBodyRowElement","ct","getPinnedLeftRowElement","getPinnedRightRowElement","getFullWidthRowElement","side"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { CellComp } from \"./cellComp\";\nimport { RowNode } from \"../entities/rowNode\";\nimport { Events } from \"../events\";\nimport { Component } from \"../widgets/component\";\nimport { Constants } from \"../constants\";\nimport { ModuleNames } from \"../modules/moduleNames\";\nimport { ModuleRegistry } from \"../modules/moduleRegistry\";\nimport { _ } from \"../utils\";\nvar RowComp = /** @class */ (function (_super) {\n    __extends(RowComp, _super);\n    function RowComp(parentScope, bodyContainerComp, pinnedLeftContainerComp, pinnedRightContainerComp, fullWidthContainerComp, rowNode, beans, animateIn, useAnimationFrameForCreate, printLayout, embedFullWidth) {\n        var _this = _super.call(this) || this;\n        _this.eAllRowContainers = [];\n        _this.active = true;\n        _this.rowContainerReadyCount = 0;\n        _this.refreshNeeded = false;\n        _this.columnRefreshPending = false;\n        _this.cellComps = {};\n        // for animations, there are bits we want done in the next VM turn, to all DOM to update first.\n        // instead of each row doing a setTimeout(func,0), we put the functions here and the rowRenderer\n        // executes them all in one timeout\n        _this.createSecondPassFuncs = [];\n        // these get called before the row is destroyed - they set up the DOM for the remove animation (ie they\n        // set the DOM up for the animation), then the delayedDestroyFunctions get called when the animation is\n        // complete (ie removes from the dom).\n        _this.removeFirstPassFuncs = [];\n        // for animations, these functions get called 400ms after the row is cleared, called by the rowRenderer\n        // so each row isn't setting up it's own timeout\n        _this.removeSecondPassFuncs = [];\n        _this.initialised = false;\n        _this.elementOrderChanged = false;\n        _this.lastMouseDownOnDragger = false;\n        _this.parentScope = parentScope;\n        _this.beans = beans;\n        _this.bodyContainerComp = bodyContainerComp;\n        _this.pinnedLeftContainerComp = pinnedLeftContainerComp;\n        _this.pinnedRightContainerComp = pinnedRightContainerComp;\n        _this.fullWidthContainerComp = fullWidthContainerComp;\n        _this.rowNode = rowNode;\n        _this.rowIsEven = _this.rowNode.rowIndex % 2 === 0;\n        _this.paginationPage = _this.beans.paginationProxy.getCurrentPage();\n        _this.useAnimationFrameForCreate = useAnimationFrameForCreate;\n        _this.printLayout = printLayout;\n        _this.embedFullWidth = embedFullWidth;\n        _this.setAnimateFlags(animateIn);\n        return _this;\n    }\n    RowComp.prototype.init = function () {\n        var _this = this;\n        this.rowFocused = this.beans.focusController.isRowFocused(this.rowNode.rowIndex, this.rowNode.rowPinned);\n        this.scope = this.createChildScopeOrNull(this.rowNode.data);\n        this.setupRowContainers();\n        this.addListeners();\n        if (this.slideRowIn) {\n            this.createSecondPassFuncs.push(function () {\n                _this.onTopChanged();\n            });\n        }\n        if (this.fadeRowIn) {\n            this.createSecondPassFuncs.push(function () {\n                _this.eAllRowContainers.forEach(function (eRow) { return _.removeCssClass(eRow, 'ag-opacity-zero'); });\n            });\n        }\n    };\n    RowComp.prototype.createTemplate = function (contents, extraCssClass) {\n        if (extraCssClass === void 0) { extraCssClass = null; }\n        var templateParts = [];\n        var rowHeight = this.rowNode.rowHeight;\n        var rowClasses = this.getInitialRowClasses(extraCssClass).join(' ');\n        var rowIdSanitised = _.escape(this.rowNode.id);\n        var userRowStyles = this.preProcessStylesFromGridOptions();\n        var businessKey = this.getRowBusinessKey();\n        var businessKeySanitised = _.escape(businessKey);\n        var rowTopStyle = this.getInitialRowTopStyle();\n        var rowIdx = this.rowNode.getRowIndexString();\n        var headerRowCount = this.beans.headerNavigationService.getHeaderRowCount();\n        templateParts.push(\"<div\");\n        templateParts.push(\" role=\\\"row\\\"\");\n        templateParts.push(\" row-index=\\\"\" + rowIdx + \"\\\" aria-rowindex=\\\"\" + (headerRowCount + this.rowNode.rowIndex + 1) + \"\\\"\");\n        templateParts.push(rowIdSanitised ? \" row-id=\\\"\" + rowIdSanitised + \"\\\"\" : \"\");\n        templateParts.push(businessKey ? \" row-business-key=\\\"\" + businessKeySanitised + \"\\\"\" : \"\");\n        templateParts.push(\" comp-id=\\\"\" + this.getCompId() + \"\\\"\");\n        templateParts.push(\" class=\\\"\" + rowClasses + \"\\\"\");\n        templateParts.push(\" style=\\\"height: \" + rowHeight + \"px; \" + rowTopStyle + \" \" + userRowStyles + \"\\\">\");\n        // add in the template for the cells\n        templateParts.push(contents);\n        templateParts.push(\"</div>\");\n        return templateParts.join('');\n    };\n    RowComp.prototype.getCellForCol = function (column) {\n        var cellComp = this.cellComps[column.getColId()];\n        return cellComp ? cellComp.getGui() : null;\n    };\n    RowComp.prototype.afterFlush = function () {\n        if (this.initialised) {\n            return;\n        }\n        this.initialised = true;\n        this.executeProcessRowPostCreateFunc();\n    };\n    RowComp.prototype.executeProcessRowPostCreateFunc = function () {\n        var func = this.beans.gridOptionsWrapper.getProcessRowPostCreateFunc();\n        if (!func) {\n            return;\n        }\n        var params = {\n            eRow: this.eBodyRow,\n            ePinnedLeftRow: this.ePinnedLeftRow,\n            ePinnedRightRow: this.ePinnedRightRow,\n            node: this.rowNode,\n            api: this.beans.gridOptionsWrapper.getApi(),\n            rowIndex: this.rowNode.rowIndex,\n            addRenderedRowListener: this.addEventListener.bind(this),\n            columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n            context: this.beans.gridOptionsWrapper.getContext()\n        };\n        func(params);\n    };\n    RowComp.prototype.getInitialRowTopStyle = function () {\n        // print layout uses normal flow layout for row positioning\n        if (this.printLayout) {\n            return '';\n        }\n        // if sliding in, we take the old row top. otherwise we just set the current row top.\n        var pixels = this.slideRowIn ? this.roundRowTopToBounds(this.rowNode.oldRowTop) : this.rowNode.rowTop;\n        var afterPaginationPixels = this.applyPaginationOffset(pixels);\n        var afterScalingPixels = this.beans.maxDivHeightScaler.getRealPixelPosition(afterPaginationPixels);\n        var isSuppressRowTransform = this.beans.gridOptionsWrapper.isSuppressRowTransform();\n        return isSuppressRowTransform ? \"top: \" + afterScalingPixels + \"px; \" : \"transform: translateY(\" + afterScalingPixels + \"px);\";\n    };\n    RowComp.prototype.getRowBusinessKey = function () {\n        var businessKeyForNodeFunc = this.beans.gridOptionsWrapper.getBusinessKeyForNodeFunc();\n        if (typeof businessKeyForNodeFunc !== 'function') {\n            return;\n        }\n        return businessKeyForNodeFunc(this.rowNode);\n    };\n    RowComp.prototype.areAllContainersReady = function () {\n        return this.rowContainerReadyCount === 3;\n    };\n    RowComp.prototype.lazyCreateCells = function (cols, eRow) {\n        if (!this.active) {\n            return;\n        }\n        var cellTemplatesAndComps = this.createCells(cols);\n        eRow.innerHTML = cellTemplatesAndComps.template;\n        this.callAfterRowAttachedOnCells(cellTemplatesAndComps.cellComps, eRow);\n        this.rowContainerReadyCount++;\n        if (this.areAllContainersReady() && this.refreshNeeded) {\n            this.refreshCells();\n        }\n    };\n    RowComp.prototype.createRowContainer = function (rowContainerComp, cols, callback) {\n        var _this = this;\n        var useAnimationsFrameForCreate = this.useAnimationFrameForCreate;\n        var cellTemplatesAndComps = useAnimationsFrameForCreate ? { cellComps: [], template: '' } : this.createCells(cols);\n        var rowTemplate = this.createTemplate(cellTemplatesAndComps.template);\n        // the RowRenderer is probably inserting many rows. rather than inserting each template one\n        // at a time, the grid inserts all rows together - so the callback here is called by the\n        // rowRenderer when all RowComps are created, then all the HTML is inserted in one go,\n        // and then all the callbacks are called. this is NOT done in an animation frame.\n        rowContainerComp.appendRowTemplate(rowTemplate, function () {\n            var eRow = rowContainerComp.getRowElement(_this.getCompId());\n            _this.afterRowAttached(rowContainerComp, eRow);\n            callback(eRow);\n            if (useAnimationsFrameForCreate) {\n                _this.beans.taskQueue.createTask(_this.lazyCreateCells.bind(_this, cols, eRow), _this.rowNode.rowIndex, 'createTasksP1');\n            }\n            else {\n                _this.callAfterRowAttachedOnCells(cellTemplatesAndComps.cellComps, eRow);\n                _this.rowContainerReadyCount = 3;\n            }\n        });\n    };\n    RowComp.prototype.createChildScopeOrNull = function (data) {\n        var isAngularCompileRows = this.beans.gridOptionsWrapper.isAngularCompileRows();\n        if (!isAngularCompileRows) {\n            return null;\n        }\n        var newChildScope = this.parentScope.$new();\n        newChildScope.data = __assign({}, data);\n        newChildScope.rowNode = this.rowNode;\n        newChildScope.context = this.beans.gridOptionsWrapper.getContext();\n        this.addDestroyFunc(function () {\n            newChildScope.$destroy();\n            newChildScope.data = null;\n            newChildScope.rowNode = null;\n            newChildScope.context = null;\n        });\n        return newChildScope;\n    };\n    RowComp.prototype.setupRowContainers = function () {\n        var isFullWidthCell = this.rowNode.isFullWidthCell();\n        var isDetailCell = this.beans.doingMasterDetail && this.rowNode.detail;\n        var pivotMode = this.beans.columnController.isPivotMode();\n        // we only use full width for groups, not footers. it wouldn't make sense to include footers if not looking\n        // for totals. if users complain about this, then we should introduce a new property 'footerUseEntireRow'\n        // so each can be set independently (as a customer complained about footers getting full width, hence\n        // introducing this logic)\n        var isGroupRow = this.rowNode.group && !this.rowNode.footer;\n        var isFullWidthGroup = isGroupRow && this.beans.gridOptionsWrapper.isGroupUseEntireRow(pivotMode);\n        if (this.rowNode.stub) {\n            this.createFullWidthRows(RowComp.LOADING_CELL_RENDERER, RowComp.LOADING_CELL_RENDERER_COMP_NAME);\n        }\n        else if (isDetailCell) {\n            this.createFullWidthRows(RowComp.DETAIL_CELL_RENDERER, RowComp.DETAIL_CELL_RENDERER_COMP_NAME);\n        }\n        else if (isFullWidthCell) {\n            this.createFullWidthRows(RowComp.FULL_WIDTH_CELL_RENDERER, null);\n        }\n        else if (isFullWidthGroup) {\n            this.createFullWidthRows(RowComp.GROUP_ROW_RENDERER, RowComp.GROUP_ROW_RENDERER_COMP_NAME);\n        }\n        else {\n            this.setupNormalRowContainers();\n        }\n    };\n    RowComp.prototype.setupNormalRowContainers = function () {\n        var _this = this;\n        var centerCols;\n        var leftCols = [];\n        var rightCols = [];\n        if (this.printLayout) {\n            centerCols = this.beans.columnController.getAllDisplayedColumns();\n        }\n        else {\n            centerCols = this.beans.columnController.getAllDisplayedCenterVirtualColumnsForRow(this.rowNode);\n            leftCols = this.beans.columnController.getDisplayedLeftColumnsForRow(this.rowNode);\n            rightCols = this.beans.columnController.getDisplayedRightColumnsForRow(this.rowNode);\n        }\n        this.createRowContainer(this.bodyContainerComp, centerCols, function (eRow) { return _this.eBodyRow = eRow; });\n        this.createRowContainer(this.pinnedRightContainerComp, rightCols, function (eRow) { return _this.ePinnedRightRow = eRow; });\n        this.createRowContainer(this.pinnedLeftContainerComp, leftCols, function (eRow) { return _this.ePinnedLeftRow = eRow; });\n    };\n    RowComp.prototype.createFullWidthRows = function (type, name) {\n        var _this = this;\n        this.fullWidthRow = true;\n        if (this.embedFullWidth) {\n            this.createFullWidthRowContainer(this.bodyContainerComp, null, null, type, name, function (eRow) {\n                _this.eFullWidthRowBody = eRow;\n            }, function (cellRenderer) {\n                _this.fullWidthRowComponentBody = cellRenderer;\n            });\n            // printLayout doesn't put components into the pinned sections\n            if (this.printLayout) {\n                return;\n            }\n            this.createFullWidthRowContainer(this.pinnedLeftContainerComp, Constants.PINNED_LEFT, 'ag-cell-last-left-pinned', type, name, function (eRow) {\n                _this.eFullWidthRowLeft = eRow;\n            }, function (cellRenderer) {\n                _this.fullWidthRowComponentLeft = cellRenderer;\n            });\n            this.createFullWidthRowContainer(this.pinnedRightContainerComp, Constants.PINNED_RIGHT, 'ag-cell-first-right-pinned', type, name, function (eRow) {\n                _this.eFullWidthRowRight = eRow;\n            }, function (cellRenderer) {\n                _this.fullWidthRowComponentRight = cellRenderer;\n            });\n        }\n        else {\n            // otherwise we add to the fullWidth container as normal\n            // let previousFullWidth = ensureDomOrder ? this.lastPlacedElements.eFullWidth : null;\n            this.createFullWidthRowContainer(this.fullWidthContainerComp, null, null, type, name, function (eRow) {\n                _this.eFullWidthRow = eRow;\n            }, function (cellRenderer) {\n                _this.fullWidthRowComponent = cellRenderer;\n            });\n        }\n    };\n    RowComp.prototype.setAnimateFlags = function (animateIn) {\n        if (animateIn) {\n            var oldRowTopExists = _.exists(this.rowNode.oldRowTop);\n            // if the row had a previous position, we slide it in (animate row top)\n            this.slideRowIn = oldRowTopExists;\n            // if the row had no previous position, we fade it in (animate\n            this.fadeRowIn = !oldRowTopExists;\n        }\n        else {\n            this.slideRowIn = false;\n            this.fadeRowIn = false;\n        }\n    };\n    RowComp.prototype.isEditing = function () {\n        return this.editingRow;\n    };\n    RowComp.prototype.stopRowEditing = function (cancel) {\n        this.stopEditing(cancel);\n    };\n    RowComp.prototype.isFullWidth = function () {\n        return this.fullWidthRow;\n    };\n    RowComp.prototype.refreshFullWidth = function () {\n        var _this = this;\n        // returns 'true' if refresh succeeded\n        var tryRefresh = function (eRow, eCellComp, pinned) {\n            if (!eRow || !eCellComp) {\n                return true;\n            } // no refresh needed\n            // no refresh method present, so can't refresh, hard refresh needed\n            if (!eCellComp.refresh) {\n                return false;\n            }\n            var params = _this.createFullWidthParams(eRow, pinned);\n            var refreshSucceeded = eCellComp.refresh(params);\n            return refreshSucceeded;\n        };\n        var normalSuccess = tryRefresh(this.eFullWidthRow, this.fullWidthRowComponent, null);\n        var bodySuccess = tryRefresh(this.eFullWidthRowBody, this.fullWidthRowComponentBody, null);\n        var leftSuccess = tryRefresh(this.eFullWidthRowLeft, this.fullWidthRowComponentLeft, Constants.PINNED_LEFT);\n        var rightSuccess = tryRefresh(this.eFullWidthRowRight, this.fullWidthRowComponentRight, Constants.PINNED_RIGHT);\n        var allFullWidthRowsRefreshed = normalSuccess && bodySuccess && leftSuccess && rightSuccess;\n        return allFullWidthRowsRefreshed;\n    };\n    RowComp.prototype.addListeners = function () {\n        this.addManagedListener(this.rowNode, RowNode.EVENT_HEIGHT_CHANGED, this.onRowHeightChanged.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_ROW_SELECTED, this.onRowSelected.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_ROW_INDEX_CHANGED, this.onRowIndexChanged.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_TOP_CHANGED, this.onTopChanged.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_EXPANDED_CHANGED, this.onExpandedChanged.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_DATA_CHANGED, this.onRowNodeDataChanged.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_CELL_CHANGED, this.onRowNodeCellChanged.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_HIGHLIGHT_CHANGED, this.onRowNodeHighlightChanged.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_DRAGGING_CHANGED, this.onRowNodeDraggingChanged.bind(this));\n        var eventService = this.beans.eventService;\n        this.addManagedListener(eventService, Events.EVENT_HEIGHT_SCALE_CHANGED, this.onTopChanged.bind(this));\n        this.addManagedListener(eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this));\n        this.addManagedListener(eventService, Events.EVENT_VIRTUAL_COLUMNS_CHANGED, this.onVirtualColumnsChanged.bind(this));\n        this.addManagedListener(eventService, Events.EVENT_COLUMN_RESIZED, this.onColumnResized.bind(this));\n        this.addManagedListener(eventService, Events.EVENT_CELL_FOCUSED, this.onCellFocusChanged.bind(this));\n        this.addManagedListener(eventService, Events.EVENT_PAGINATION_CHANGED, this.onPaginationChanged.bind(this));\n        this.addManagedListener(eventService, Events.EVENT_MODEL_UPDATED, this.onModelUpdated.bind(this));\n        this.addManagedListener(eventService, Events.EVENT_COLUMN_MOVED, this.onColumnMoved.bind(this));\n        this.addListenersForCellComps();\n    };\n    RowComp.prototype.addListenersForCellComps = function () {\n        var _this = this;\n        this.addManagedListener(this.rowNode, RowNode.EVENT_ROW_INDEX_CHANGED, function () {\n            _this.forEachCellComp(function (cellComp) { return cellComp.onRowIndexChanged(); });\n        });\n        this.addManagedListener(this.rowNode, RowNode.EVENT_CELL_CHANGED, function (event) {\n            _this.forEachCellComp(function (cellComp) { return cellComp.onCellChanged(event); });\n        });\n    };\n    RowComp.prototype.onRowNodeDataChanged = function (event) {\n        // if this is an update, we want to refresh, as this will allow the user to put in a transition\n        // into the cellRenderer refresh method. otherwise this might be completely new data, in which case\n        // we will want to completely replace the cells\n        this.forEachCellComp(function (cellComp) {\n            return cellComp.refreshCell({\n                suppressFlash: !event.update,\n                newData: !event.update\n            });\n        });\n        // check for selected also, as this could be after lazy loading of the row data, in which case\n        // the id might of just gotten set inside the row and the row selected state may of changed\n        // as a result. this is what happens when selected rows are loaded in virtual pagination.\n        // - niall note - since moving to the stub component, this may no longer be true, as replacing\n        // the stub component now replaces the entire row\n        this.onRowSelected();\n        // as data has changed, then the style and class needs to be recomputed\n        this.postProcessCss();\n    };\n    RowComp.prototype.onRowNodeCellChanged = function () {\n        // as data has changed, then the style and class needs to be recomputed\n        this.postProcessCss();\n    };\n    RowComp.prototype.postProcessCss = function () {\n        this.postProcessStylesFromGridOptions();\n        this.postProcessClassesFromGridOptions();\n        this.postProcessRowClassRules();\n        this.postProcessRowDragging();\n    };\n    RowComp.prototype.onRowNodeHighlightChanged = function () {\n        var highlighted = this.rowNode.highlighted;\n        this.eAllRowContainers.forEach(function (row) {\n            _.removeCssClass(row, 'ag-row-highlight-above');\n            _.removeCssClass(row, 'ag-row-highlight-below');\n            if (highlighted) {\n                _.addCssClass(row, 'ag-row-highlight-' + highlighted);\n            }\n        });\n    };\n    RowComp.prototype.onRowNodeDraggingChanged = function () {\n        this.postProcessRowDragging();\n    };\n    RowComp.prototype.postProcessRowDragging = function () {\n        var dragging = this.rowNode.dragging;\n        this.eAllRowContainers.forEach(function (row) { return _.addOrRemoveCssClass(row, 'ag-row-dragging', dragging); });\n    };\n    RowComp.prototype.onExpandedChanged = function () {\n        var rowNode = this.rowNode;\n        this.eAllRowContainers.forEach(function (row) { return _.addOrRemoveCssClass(row, 'ag-row-group-expanded', rowNode.expanded); });\n        this.eAllRowContainers.forEach(function (row) { return _.addOrRemoveCssClass(row, 'ag-row-group-contracted', !rowNode.expanded); });\n    };\n    RowComp.prototype.onDisplayedColumnsChanged = function () {\n        if (this.fullWidthRow) {\n            return;\n        }\n        this.refreshCells();\n    };\n    RowComp.prototype.destroyFullWidthComponents = function () {\n        if (this.fullWidthRowComponent) {\n            this.beans.detailRowCompCache.addOrDestroy(this.rowNode, null, this.fullWidthRowComponent);\n            this.fullWidthRowComponent = null;\n        }\n        if (this.fullWidthRowComponentBody) {\n            this.beans.detailRowCompCache.addOrDestroy(this.rowNode, null, this.fullWidthRowComponentBody);\n            this.fullWidthRowComponent = null;\n        }\n        if (this.fullWidthRowComponentLeft) {\n            this.beans.detailRowCompCache.addOrDestroy(this.rowNode, Constants.PINNED_LEFT, this.fullWidthRowComponentLeft);\n            this.fullWidthRowComponentLeft = null;\n        }\n        if (this.fullWidthRowComponentRight) {\n            this.beans.detailRowCompCache.addOrDestroy(this.rowNode, Constants.PINNED_RIGHT, this.fullWidthRowComponentRight);\n            this.fullWidthRowComponent = null;\n        }\n    };\n    RowComp.prototype.getContainerForCell = function (pinnedType) {\n        switch (pinnedType) {\n            case Constants.PINNED_LEFT: return this.ePinnedLeftRow;\n            case Constants.PINNED_RIGHT: return this.ePinnedRightRow;\n            default: return this.eBodyRow;\n        }\n    };\n    RowComp.prototype.onVirtualColumnsChanged = function () {\n        if (this.fullWidthRow) {\n            return;\n        }\n        this.refreshCells();\n    };\n    RowComp.prototype.onColumnResized = function () {\n        if (this.fullWidthRow) {\n            return;\n        }\n        this.refreshCells();\n    };\n    RowComp.prototype.refreshCells = function () {\n        if (!this.areAllContainersReady()) {\n            this.refreshNeeded = true;\n            return;\n        }\n        var suppressAnimationFrame = this.beans.gridOptionsWrapper.isSuppressAnimationFrame();\n        var skipAnimationFrame = suppressAnimationFrame || this.printLayout;\n        if (skipAnimationFrame) {\n            this.refreshCellsInAnimationFrame();\n        }\n        else {\n            if (this.columnRefreshPending) {\n                return;\n            }\n            this.beans.taskQueue.createTask(this.refreshCellsInAnimationFrame.bind(this), this.rowNode.rowIndex, 'createTasksP1');\n        }\n    };\n    RowComp.prototype.refreshCellsInAnimationFrame = function () {\n        if (!this.active) {\n            return;\n        }\n        this.columnRefreshPending = false;\n        var centerCols;\n        var leftCols;\n        var rightCols;\n        if (this.printLayout) {\n            centerCols = this.beans.columnController.getAllDisplayedColumns();\n            leftCols = [];\n            rightCols = [];\n        }\n        else {\n            centerCols = this.beans.columnController.getAllDisplayedCenterVirtualColumnsForRow(this.rowNode);\n            leftCols = this.beans.columnController.getDisplayedLeftColumnsForRow(this.rowNode);\n            rightCols = this.beans.columnController.getDisplayedRightColumnsForRow(this.rowNode);\n        }\n        this.insertCellsIntoContainer(this.eBodyRow, centerCols);\n        this.insertCellsIntoContainer(this.ePinnedLeftRow, leftCols);\n        this.insertCellsIntoContainer(this.ePinnedRightRow, rightCols);\n        this.elementOrderChanged = false;\n        var colIdsToRemove = Object.keys(this.cellComps);\n        centerCols.forEach(function (col) { return _.removeFromArray(colIdsToRemove, col.getId()); });\n        leftCols.forEach(function (col) { return _.removeFromArray(colIdsToRemove, col.getId()); });\n        rightCols.forEach(function (col) { return _.removeFromArray(colIdsToRemove, col.getId()); });\n        // we never remove editing cells, as this would cause the cells to loose their values while editing\n        // as the grid is scrolling horizontally.\n        var eligibleToBeRemoved = colIdsToRemove.filter(this.isCellEligibleToBeRemoved.bind(this));\n        // remove old cells from gui, but we don't destroy them, we might use them again\n        this.removeRenderedCells(eligibleToBeRemoved);\n    };\n    RowComp.prototype.onColumnMoved = function () {\n        this.elementOrderChanged = true;\n    };\n    RowComp.prototype.removeRenderedCells = function (colIds) {\n        var _this = this;\n        colIds.forEach(function (key) {\n            var cellComp = _this.cellComps[key];\n            // could be old reference, ie removed cell\n            if (_.missing(cellComp)) {\n                return;\n            }\n            cellComp.detach();\n            cellComp.destroy();\n            _this.cellComps[key] = null;\n        });\n    };\n    RowComp.prototype.isCellEligibleToBeRemoved = function (indexStr) {\n        var displayedColumns = this.beans.columnController.getAllDisplayedColumns();\n        var REMOVE_CELL = true;\n        var KEEP_CELL = false;\n        var renderedCell = this.cellComps[indexStr];\n        // always remove the cell if it's not rendered or if it's in the wrong pinned location\n        if (!renderedCell || this.isCellInWrongRow(renderedCell)) {\n            return REMOVE_CELL;\n        }\n        // we want to try and keep editing and focused cells\n        var editing = renderedCell.isEditing();\n        var focused = this.beans.focusController.isCellFocused(renderedCell.getCellPosition());\n        var mightWantToKeepCell = editing || focused;\n        if (mightWantToKeepCell) {\n            var column = renderedCell.getColumn();\n            var cellStillDisplayed = displayedColumns.indexOf(column) >= 0;\n            return cellStillDisplayed ? KEEP_CELL : REMOVE_CELL;\n        }\n        return REMOVE_CELL;\n    };\n    RowComp.prototype.ensureCellInCorrectContainer = function (cellComp) {\n        // for print layout, we always put cells into centre, otherwise we put in correct pinned section\n        if (this.printLayout) {\n            return;\n        }\n        var element = cellComp.getGui();\n        var column = cellComp.getColumn();\n        var pinnedType = column.getPinned();\n        var eContainer = this.getContainerForCell(pinnedType);\n        // if in wrong container, remove it\n        var eOldContainer = cellComp.getParentRow();\n        var inWrongRow = eOldContainer !== eContainer;\n        if (inWrongRow) {\n            // take out from old row\n            if (eOldContainer) {\n                eOldContainer.removeChild(element);\n            }\n            eContainer.appendChild(element);\n            cellComp.setParentRow(eContainer);\n            this.elementOrderChanged = true;\n        }\n    };\n    RowComp.prototype.isCellInWrongRow = function (cellComp) {\n        var column = cellComp.getColumn();\n        var rowWeWant = this.getContainerForCell(column.getPinned());\n        var oldRow = cellComp.getParentRow(); // if in wrong container, remove it\n        return oldRow !== rowWeWant;\n    };\n    RowComp.prototype.insertCellsIntoContainer = function (eRow, cols) {\n        var _this = this;\n        if (!eRow) {\n            return;\n        }\n        var cellTemplates = [];\n        var newCellComps = [];\n        cols.forEach(function (col) {\n            var colId = col.getId();\n            var existingCell = _this.cellComps[colId];\n            if (existingCell) {\n                _this.ensureCellInCorrectContainer(existingCell);\n            }\n            else {\n                _this.createNewCell(col, eRow, cellTemplates, newCellComps);\n            }\n        });\n        if (cellTemplates.length > 0) {\n            _.appendHtml(eRow, cellTemplates.join(''));\n            this.callAfterRowAttachedOnCells(newCellComps, eRow);\n        }\n        if (this.elementOrderChanged && this.beans.gridOptionsWrapper.isEnsureDomOrder()) {\n            var correctChildOrder = cols.map(function (col) { return _this.getCellForCol(col); });\n            _.setDomChildOrder(eRow, correctChildOrder);\n        }\n    };\n    RowComp.prototype.addDomData = function (eRowContainer) {\n        var gow = this.beans.gridOptionsWrapper;\n        gow.setDomData(eRowContainer, RowComp.DOM_DATA_KEY_RENDERED_ROW, this);\n        this.addDestroyFunc(function () {\n            gow.setDomData(eRowContainer, RowComp.DOM_DATA_KEY_RENDERED_ROW, null);\n        });\n    };\n    RowComp.prototype.createNewCell = function (col, eContainer, cellTemplates, newCellComps) {\n        var newCellComp = new CellComp(this.scope, this.beans, col, this.rowNode, this, false, this.printLayout);\n        var cellTemplate = newCellComp.getCreateTemplate();\n        cellTemplates.push(cellTemplate);\n        newCellComps.push(newCellComp);\n        this.cellComps[col.getId()] = newCellComp;\n        newCellComp.setParentRow(eContainer);\n        this.elementOrderChanged = true;\n    };\n    RowComp.prototype.onMouseEvent = function (eventName, mouseEvent) {\n        switch (eventName) {\n            case 'dblclick':\n                this.onRowDblClick(mouseEvent);\n                break;\n            case 'click':\n                this.onRowClick(mouseEvent);\n                break;\n            case 'mousedown':\n                this.onRowMouseDown(mouseEvent);\n                break;\n        }\n    };\n    RowComp.prototype.createRowEvent = function (type, domEvent) {\n        return {\n            type: type,\n            node: this.rowNode,\n            data: this.rowNode.data,\n            rowIndex: this.rowNode.rowIndex,\n            rowPinned: this.rowNode.rowPinned,\n            context: this.beans.gridOptionsWrapper.getContext(),\n            api: this.beans.gridOptionsWrapper.getApi(),\n            columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n            event: domEvent\n        };\n    };\n    RowComp.prototype.createRowEventWithSource = function (type, domEvent) {\n        var event = this.createRowEvent(type, domEvent);\n        // when first developing this, we included the rowComp in the event.\n        // this seems very weird. so when introducing the event types, i left the 'source'\n        // out of the type, and just include the source in the two places where this event\n        // was fired (rowClicked and rowDoubleClicked). it doesn't make sense for any\n        // users to be using this, as the rowComp isn't an object we expose, so would be\n        // very surprising if a user was using it.\n        event.source = this;\n        return event;\n    };\n    RowComp.prototype.onRowDblClick = function (mouseEvent) {\n        if (_.isStopPropagationForAgGrid(mouseEvent)) {\n            return;\n        }\n        var agEvent = this.createRowEventWithSource(Events.EVENT_ROW_DOUBLE_CLICKED, mouseEvent);\n        this.beans.eventService.dispatchEvent(agEvent);\n    };\n    RowComp.prototype.onRowMouseDown = function (mouseEvent) {\n        this.lastMouseDownOnDragger = _.isElementChildOfClass(mouseEvent.target, 'ag-row-drag', 3);\n    };\n    RowComp.prototype.onRowClick = function (mouseEvent) {\n        var stop = _.isStopPropagationForAgGrid(mouseEvent) || this.lastMouseDownOnDragger;\n        if (stop) {\n            return;\n        }\n        var agEvent = this.createRowEventWithSource(Events.EVENT_ROW_CLICKED, mouseEvent);\n        this.beans.eventService.dispatchEvent(agEvent);\n        // ctrlKey for windows, metaKey for Apple\n        var multiSelectKeyPressed = mouseEvent.ctrlKey || mouseEvent.metaKey;\n        var shiftKeyPressed = mouseEvent.shiftKey;\n        if (\n        // we do not allow selecting groups by clicking (as the click here expands the group), or if it's a detail row,\n        // so return if it's a group row\n        this.rowNode.group ||\n            // this is needed so we don't unselect other rows when we click this row, eg if this row is not selectable,\n            // and we click it, the selection should not change (ie any currently selected row should stay selected)\n            !this.rowNode.selectable ||\n            // we also don't allow selection of pinned rows\n            this.rowNode.rowPinned ||\n            // if no selection method enabled, do nothing\n            !this.beans.gridOptionsWrapper.isRowSelection() ||\n            // if click selection suppressed, do nothing\n            this.beans.gridOptionsWrapper.isSuppressRowClickSelection()) {\n            return;\n        }\n        var multiSelectOnClick = this.beans.gridOptionsWrapper.isRowMultiSelectWithClick();\n        var rowDeselectionWithCtrl = this.beans.gridOptionsWrapper.isRowDeselection();\n        if (this.rowNode.isSelected()) {\n            if (multiSelectOnClick) {\n                this.rowNode.setSelectedParams({ newValue: false });\n            }\n            else if (multiSelectKeyPressed) {\n                if (rowDeselectionWithCtrl) {\n                    this.rowNode.setSelectedParams({ newValue: false });\n                }\n            }\n            else {\n                // selected with no multi key, must make sure anything else is unselected\n                this.rowNode.setSelectedParams({ newValue: true, clearSelection: true });\n            }\n        }\n        else {\n            var clearSelection = multiSelectOnClick ? false : !multiSelectKeyPressed;\n            this.rowNode.setSelectedParams({ newValue: true, clearSelection: clearSelection, rangeSelect: shiftKeyPressed });\n        }\n    };\n    RowComp.prototype.createFullWidthRowContainer = function (rowContainerComp, pinned, extraCssClass, cellRendererType, cellRendererName, eRowCallback, cellRendererCallback) {\n        var _this = this;\n        var rowTemplate = this.createTemplate('', extraCssClass);\n        rowContainerComp.appendRowTemplate(rowTemplate, function () {\n            var eRow = rowContainerComp.getRowElement(_this.getCompId());\n            var params = _this.createFullWidthParams(eRow, pinned);\n            var callback = function (cellRenderer) {\n                if (_this.isAlive()) {\n                    var gui = cellRenderer.getGui();\n                    eRow.appendChild(gui);\n                    cellRendererCallback(cellRenderer);\n                }\n                else {\n                    _this.beans.context.destroyBean(cellRenderer);\n                }\n            };\n            // if doing master detail, it's possible we have a cached row comp from last time detail was displayed\n            var cachedRowComp = _this.beans.detailRowCompCache.get(_this.rowNode, pinned);\n            if (cachedRowComp) {\n                callback(cachedRowComp);\n            }\n            else {\n                var res = _this.beans.userComponentFactory.newFullWidthCellRenderer(params, cellRendererType, cellRendererName);\n                if (!res) {\n                    var masterDetailModuleLoaded = ModuleRegistry.isRegistered(ModuleNames.MasterDetailModule);\n                    if (cellRendererName === 'agDetailCellRenderer' && !masterDetailModuleLoaded) {\n                        console.warn(\"ag-Grid: cell renderer agDetailCellRenderer (for master detail) not found. Did you forget to include the master detail module?\");\n                    }\n                    else {\n                        console.error(\"ag-Grid: fullWidthCellRenderer \" + cellRendererName + \" not found\");\n                    }\n                    return;\n                }\n                res.then(callback);\n            }\n            _this.afterRowAttached(rowContainerComp, eRow);\n            eRowCallback(eRow);\n            _this.angular1Compile(eRow);\n        });\n    };\n    RowComp.prototype.angular1Compile = function (element) {\n        if (!this.scope) {\n            return;\n        }\n        this.beans.$compile(element)(this.scope);\n    };\n    RowComp.prototype.createFullWidthParams = function (eRow, pinned) {\n        var params = {\n            fullWidth: true,\n            data: this.rowNode.data,\n            node: this.rowNode,\n            value: this.rowNode.key,\n            $scope: this.scope ? this.scope : this.parentScope,\n            $compile: this.beans.$compile,\n            rowIndex: this.rowNode.rowIndex,\n            api: this.beans.gridOptionsWrapper.getApi(),\n            columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n            context: this.beans.gridOptionsWrapper.getContext(),\n            // these need to be taken out, as part of 'afterAttached' now\n            eGridCell: eRow,\n            eParentOfValue: eRow,\n            pinned: pinned,\n            addRenderedRowListener: this.addEventListener.bind(this)\n        };\n        return params;\n    };\n    RowComp.prototype.getInitialRowClasses = function (extraCssClass) {\n        var classes = [];\n        var isTreeData = this.beans.gridOptionsWrapper.isTreeData();\n        var rowNode = this.rowNode;\n        if (_.exists(extraCssClass)) {\n            classes.push(extraCssClass);\n        }\n        classes.push('ag-row');\n        classes.push(this.rowFocused ? 'ag-row-focus' : 'ag-row-no-focus');\n        if (this.fadeRowIn) {\n            classes.push('ag-opacity-zero');\n        }\n        classes.push(this.rowIsEven ? 'ag-row-even' : 'ag-row-odd');\n        if (rowNode.isRowPinned()) {\n            classes.push('ag-row-pinned');\n        }\n        if (rowNode.isSelected()) {\n            classes.push('ag-row-selected');\n        }\n        if (rowNode.group) {\n            classes.push('ag-row-group');\n            // if a group, put the level of the group in\n            classes.push('ag-row-level-' + rowNode.level);\n            if (rowNode.footer) {\n                classes.push('ag-row-footer');\n            }\n        }\n        else {\n            // if a leaf, and a parent exists, put a level of the parent, else put level of 0 for top level item\n            classes.push('ag-row-level-' + (rowNode.parent ? (rowNode.parent.level + 1) : '0'));\n        }\n        if (rowNode.stub) {\n            classes.push('ag-row-loading');\n        }\n        if (this.fullWidthRow) {\n            classes.push('ag-full-width-row');\n        }\n        var addExpandedClass = isTreeData ?\n            // if doing tree data, we add the expanded classes if any children, as any node can be a parent\n            rowNode.allChildrenCount :\n            // if normal row grouping, we add expanded classes to groups only\n            rowNode.group && !rowNode.footer;\n        if (addExpandedClass) {\n            classes.push(rowNode.expanded ? 'ag-row-group-expanded' : 'ag-row-group-contracted');\n        }\n        if (rowNode.dragging) {\n            classes.push('ag-row-dragging');\n        }\n        _.pushAll(classes, this.processClassesFromGridOptions());\n        _.pushAll(classes, this.preProcessRowClassRules());\n        // we use absolute position unless we are doing print layout\n        classes.push(this.printLayout ? 'ag-row-position-relative' : 'ag-row-position-absolute');\n        this.firstRowOnPage = this.isFirstRowOnPage();\n        this.lastRowOnPage = this.isLastRowOnPage();\n        if (this.firstRowOnPage) {\n            classes.push('ag-row-first');\n        }\n        if (this.lastRowOnPage) {\n            classes.push('ag-row-last');\n        }\n        return classes;\n    };\n    RowComp.prototype.isFirstRowOnPage = function () {\n        return this.rowNode.rowIndex === this.beans.paginationProxy.getPageFirstRow();\n    };\n    RowComp.prototype.isLastRowOnPage = function () {\n        return this.rowNode.rowIndex === this.beans.paginationProxy.getPageLastRow();\n    };\n    RowComp.prototype.onModelUpdated = function () {\n        var newFirst = this.isFirstRowOnPage();\n        var newLast = this.isLastRowOnPage();\n        if (this.firstRowOnPage !== newFirst) {\n            this.firstRowOnPage = newFirst;\n            this.eAllRowContainers.forEach(function (row) { return _.addOrRemoveCssClass(row, 'ag-row-first', newFirst); });\n        }\n        if (this.lastRowOnPage !== newLast) {\n            this.lastRowOnPage = newLast;\n            this.eAllRowContainers.forEach(function (row) { return _.addOrRemoveCssClass(row, 'ag-row-last', newLast); });\n        }\n    };\n    RowComp.prototype.preProcessRowClassRules = function () {\n        var res = [];\n        this.processRowClassRules(function (className) {\n            res.push(className);\n        }, function (className) {\n            // not catered for, if creating, no need\n            // to remove class as it was never there\n        });\n        return res;\n    };\n    RowComp.prototype.processRowClassRules = function (onApplicableClass, onNotApplicableClass) {\n        this.beans.stylingService.processClassRules(this.beans.gridOptionsWrapper.rowClassRules(), {\n            value: undefined,\n            colDef: undefined,\n            data: this.rowNode.data,\n            node: this.rowNode,\n            rowIndex: this.rowNode.rowIndex,\n            api: this.beans.gridOptionsWrapper.getApi(),\n            columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n            $scope: this.scope,\n            context: this.beans.gridOptionsWrapper.getContext()\n        }, onApplicableClass, onNotApplicableClass);\n    };\n    RowComp.prototype.stopEditing = function (cancel) {\n        if (cancel === void 0) { cancel = false; }\n        this.forEachCellComp(function (renderedCell) {\n            renderedCell.stopEditing(cancel);\n        });\n        if (!this.editingRow) {\n            return;\n        }\n        if (!cancel) {\n            var event_1 = this.createRowEvent(Events.EVENT_ROW_VALUE_CHANGED);\n            this.beans.eventService.dispatchEvent(event_1);\n        }\n        this.setEditingRow(false);\n    };\n    RowComp.prototype.setEditingRow = function (value) {\n        this.editingRow = value;\n        this.eAllRowContainers.forEach(function (row) { return _.addOrRemoveCssClass(row, 'ag-row-editing', value); });\n        var event = value ?\n            this.createRowEvent(Events.EVENT_ROW_EDITING_STARTED)\n            : this.createRowEvent(Events.EVENT_ROW_EDITING_STOPPED);\n        this.beans.eventService.dispatchEvent(event);\n    };\n    RowComp.prototype.startRowEditing = function (keyPress, charPress, sourceRenderedCell) {\n        if (keyPress === void 0) { keyPress = null; }\n        if (charPress === void 0) { charPress = null; }\n        if (sourceRenderedCell === void 0) { sourceRenderedCell = null; }\n        // don't do it if already editing\n        if (this.editingRow) {\n            return;\n        }\n        this.forEachCellComp(function (renderedCell) {\n            var cellStartedEdit = renderedCell === sourceRenderedCell;\n            if (cellStartedEdit) {\n                renderedCell.startEditingIfEnabled(keyPress, charPress, cellStartedEdit);\n            }\n            else {\n                renderedCell.startEditingIfEnabled(null, null, cellStartedEdit);\n            }\n        });\n        this.setEditingRow(true);\n    };\n    RowComp.prototype.forEachCellComp = function (callback) {\n        _.iterateObject(this.cellComps, function (key, cellComp) {\n            if (!cellComp) {\n                return;\n            }\n            callback(cellComp);\n        });\n    };\n    RowComp.prototype.postProcessClassesFromGridOptions = function () {\n        var _this = this;\n        var cssClasses = this.processClassesFromGridOptions();\n        if (!cssClasses || !cssClasses.length) {\n            return;\n        }\n        cssClasses.forEach(function (classStr) {\n            _this.eAllRowContainers.forEach(function (row) { return _.addCssClass(row, classStr); });\n        });\n    };\n    RowComp.prototype.postProcessRowClassRules = function () {\n        var _this = this;\n        this.processRowClassRules(function (className) {\n            _this.eAllRowContainers.forEach(function (row) { return _.addCssClass(row, className); });\n        }, function (className) {\n            _this.eAllRowContainers.forEach(function (row) { return _.removeCssClass(row, className); });\n        });\n    };\n    RowComp.prototype.processClassesFromGridOptions = function () {\n        var res = [];\n        var process = function (rowCls) {\n            if (typeof rowCls === 'string') {\n                res.push(rowCls);\n            }\n            else if (Array.isArray(rowCls)) {\n                rowCls.forEach(function (e) { return res.push(e); });\n            }\n        };\n        // part 1 - rowClass\n        var rowClass = this.beans.gridOptionsWrapper.getRowClass();\n        if (rowClass) {\n            if (typeof rowClass === 'function') {\n                console.warn('ag-Grid: rowClass should not be a function, please use getRowClass instead');\n                return;\n            }\n            process(rowClass);\n        }\n        // part 2 - rowClassFunc\n        var rowClassFunc = this.beans.gridOptionsWrapper.getRowClassFunc();\n        if (rowClassFunc) {\n            var params = {\n                node: this.rowNode,\n                data: this.rowNode.data,\n                rowIndex: this.rowNode.rowIndex,\n                context: this.beans.gridOptionsWrapper.getContext(),\n                api: this.beans.gridOptionsWrapper.getApi()\n            };\n            var rowClassFuncResult = rowClassFunc(params);\n            process(rowClassFuncResult);\n        }\n        return res;\n    };\n    RowComp.prototype.preProcessStylesFromGridOptions = function () {\n        var rowStyles = this.processStylesFromGridOptions();\n        return _.cssStyleObjectToMarkup(rowStyles);\n    };\n    RowComp.prototype.postProcessStylesFromGridOptions = function () {\n        var rowStyles = this.processStylesFromGridOptions();\n        this.eAllRowContainers.forEach(function (row) { return _.addStylesToElement(row, rowStyles); });\n    };\n    RowComp.prototype.processStylesFromGridOptions = function () {\n        // part 1 - rowStyle\n        var rowStyle = this.beans.gridOptionsWrapper.getRowStyle();\n        if (rowStyle && typeof rowStyle === 'function') {\n            console.warn('ag-Grid: rowStyle should be an object of key/value styles, not be a function, use getRowStyle() instead');\n            return;\n        }\n        // part 1 - rowStyleFunc\n        var rowStyleFunc = this.beans.gridOptionsWrapper.getRowStyleFunc();\n        var rowStyleFuncResult;\n        if (rowStyleFunc) {\n            var params = {\n                data: this.rowNode.data,\n                node: this.rowNode,\n                api: this.beans.gridOptionsWrapper.getApi(),\n                context: this.beans.gridOptionsWrapper.getContext(),\n                $scope: this.scope\n            };\n            rowStyleFuncResult = rowStyleFunc(params);\n        }\n        return _.assign({}, rowStyle, rowStyleFuncResult);\n    };\n    RowComp.prototype.createCells = function (cols) {\n        var _this = this;\n        var templateParts = [];\n        var newCellComps = [];\n        cols.forEach(function (col) {\n            var newCellComp = new CellComp(_this.scope, _this.beans, col, _this.rowNode, _this, false, _this.printLayout);\n            var cellTemplate = newCellComp.getCreateTemplate();\n            templateParts.push(cellTemplate);\n            newCellComps.push(newCellComp);\n            _this.cellComps[col.getId()] = newCellComp;\n        });\n        var templateAndComps = {\n            template: templateParts.join(''),\n            cellComps: newCellComps\n        };\n        return templateAndComps;\n    };\n    RowComp.prototype.onRowSelected = function () {\n        var selected = this.rowNode.isSelected();\n        this.eAllRowContainers.forEach(function (row) { return _.addOrRemoveCssClass(row, 'ag-row-selected', selected); });\n    };\n    // called:\n    // + after row created for first time\n    // + after horizontal scroll, so new cells due to column virtualisation\n    RowComp.prototype.callAfterRowAttachedOnCells = function (newCellComps, eRow) {\n        var _this = this;\n        newCellComps.forEach(function (cellComp) {\n            cellComp.setParentRow(eRow);\n            cellComp.afterAttached();\n            // if we are editing the row, then the cell needs to turn\n            // into edit mode\n            if (_this.editingRow) {\n                cellComp.startEditingIfEnabled();\n            }\n        });\n    };\n    RowComp.prototype.afterRowAttached = function (rowContainerComp, eRow) {\n        var _this = this;\n        this.addDomData(eRow);\n        this.removeSecondPassFuncs.push(function () {\n            rowContainerComp.removeRowElement(eRow);\n        });\n        this.removeFirstPassFuncs.push(function () {\n            if (_.exists(_this.rowNode.rowTop)) {\n                // the row top is updated anyway, however we set it here again\n                // to something more reasonable for the animation - ie if the\n                // row top is 10000px away, the row will flash out, so this\n                // gives it a rounded value, so row animates out more slowly\n                var rowTop = _this.roundRowTopToBounds(_this.rowNode.rowTop);\n                _this.setRowTop(rowTop);\n            }\n            else {\n                _.addCssClass(eRow, 'ag-opacity-zero');\n            }\n        });\n        this.eAllRowContainers.push(eRow);\n        // adding hover functionality adds listener to this row, so we\n        // do it lazily in an animation frame\n        if (this.useAnimationFrameForCreate) {\n            this.beans.taskQueue.createTask(this.addHoverFunctionality.bind(this, eRow), this.rowNode.rowIndex, 'createTasksP2');\n        }\n        else {\n            this.addHoverFunctionality(eRow);\n        }\n    };\n    RowComp.prototype.addHoverFunctionality = function (eRow) {\n        var _this = this;\n        // because we use animation frames to do this, it's possible the row no longer exists\n        // by the time we get to add it\n        if (!this.active) {\n            return;\n        }\n        // because mouseenter and mouseleave do not propagate, we cannot listen on the gridPanel\n        // like we do for all the other mouse events.\n        // because of the pinning, we cannot simply add / remove the class based on the eRow. we\n        // have to check all eRow's (body & pinned). so the trick is if any of the rows gets a\n        // mouse hover, it sets such in the rowNode, and then all three reflect the change as\n        // all are listening for event on the row node.\n        // step 1 - add listener, to set flag on row node\n        this.addManagedListener(eRow, 'mouseenter', function () { return _this.rowNode.onMouseEnter(); });\n        this.addManagedListener(eRow, 'mouseleave', function () { return _this.rowNode.onMouseLeave(); });\n        // step 2 - listen for changes on row node (which any eRow can trigger)\n        this.addManagedListener(this.rowNode, RowNode.EVENT_MOUSE_ENTER, function () {\n            // if hover turned off, we don't add the class. we do this here so that if the application\n            // toggles this property mid way, we remove the hover form the last row, but we stop\n            // adding hovers from that point onwards.\n            if (!_this.beans.gridOptionsWrapper.isSuppressRowHoverHighlight()) {\n                _.addCssClass(eRow, 'ag-row-hover');\n            }\n        });\n        this.addManagedListener(this.rowNode, RowNode.EVENT_MOUSE_LEAVE, function () {\n            _.removeCssClass(eRow, 'ag-row-hover');\n        });\n    };\n    // for animation, we don't want to animate entry or exit to a very far away pixel,\n    // otherwise the row would move so fast, it would appear to disappear. so this method\n    // moves the row closer to the viewport if it is far away, so the row slide in / out\n    // at a speed the user can see.\n    RowComp.prototype.roundRowTopToBounds = function (rowTop) {\n        var range = this.beans.gridPanel.getVScrollPosition();\n        var minPixel = this.applyPaginationOffset(range.top, true) - 100;\n        var maxPixel = this.applyPaginationOffset(range.bottom, true) + 100;\n        return Math.min(Math.max(minPixel, rowTop), maxPixel);\n    };\n    RowComp.prototype.getFrameworkOverrides = function () {\n        return this.beans.frameworkOverrides;\n    };\n    RowComp.prototype.onRowHeightChanged = function () {\n        // check for exists first - if the user is resetting the row height, then\n        // it will be null (or undefined) momentarily until the next time the flatten\n        // stage is called where the row will then update again with a new height\n        if (_.exists(this.rowNode.rowHeight)) {\n            var heightPx_1 = this.rowNode.rowHeight + \"px\";\n            this.eAllRowContainers.forEach(function (row) { return row.style.height = heightPx_1; });\n        }\n    };\n    RowComp.prototype.addEventListener = function (eventType, listener) {\n        if (eventType === 'renderedRowRemoved' || eventType === 'rowRemoved') {\n            eventType = Events.EVENT_VIRTUAL_ROW_REMOVED;\n            console.warn('ag-Grid: Since version 11, event renderedRowRemoved is now called ' + Events.EVENT_VIRTUAL_ROW_REMOVED);\n        }\n        _super.prototype.addEventListener.call(this, eventType, listener);\n    };\n    RowComp.prototype.removeEventListener = function (eventType, listener) {\n        if (eventType === 'renderedRowRemoved' || eventType === 'rowRemoved') {\n            eventType = Events.EVENT_VIRTUAL_ROW_REMOVED;\n            console.warn('ag-Grid: Since version 11, event renderedRowRemoved and rowRemoved is now called ' + Events.EVENT_VIRTUAL_ROW_REMOVED);\n        }\n        _super.prototype.removeEventListener.call(this, eventType, listener);\n    };\n    // note - this is NOT called by context, as we don't wire / unwire the CellComp for performance reasons.\n    RowComp.prototype.destroy = function (animate) {\n        if (animate === void 0) { animate = false; }\n        this.active = false;\n        // why do we have this method? shouldn't everything below be added as a destroy func beside\n        // the corresponding create logic?\n        this.destroyFullWidthComponents();\n        if (animate) {\n            this.removeFirstPassFuncs.forEach(function (func) { return func(); });\n            this.removeSecondPassFuncs.push(this.destroyContainingCells.bind(this));\n        }\n        else {\n            this.destroyContainingCells();\n            // we are not animating, so execute the second stage of removal now.\n            // we call getAndClear, so that they are only called once\n            var delayedDestroyFunctions = this.getAndClearDelayedDestroyFunctions();\n            delayedDestroyFunctions.forEach(function (func) { return func(); });\n        }\n        var event = this.createRowEvent(Events.EVENT_VIRTUAL_ROW_REMOVED);\n        this.dispatchEvent(event);\n        this.beans.eventService.dispatchEvent(event);\n        _super.prototype.destroy.call(this);\n    };\n    RowComp.prototype.destroyContainingCells = function () {\n        this.forEachCellComp(function (renderedCell) { return renderedCell.destroy(); });\n        this.destroyFullWidthComponents();\n    };\n    // we clear so that the functions are never executed twice\n    RowComp.prototype.getAndClearDelayedDestroyFunctions = function () {\n        var result = this.removeSecondPassFuncs;\n        this.removeSecondPassFuncs = [];\n        return result;\n    };\n    RowComp.prototype.onCellFocusChanged = function () {\n        var rowFocused = this.beans.focusController.isRowFocused(this.rowNode.rowIndex, this.rowNode.rowPinned);\n        if (rowFocused !== this.rowFocused) {\n            this.eAllRowContainers.forEach(function (row) { return _.addOrRemoveCssClass(row, 'ag-row-focus', rowFocused); });\n            this.eAllRowContainers.forEach(function (row) { return _.addOrRemoveCssClass(row, 'ag-row-no-focus', !rowFocused); });\n            this.rowFocused = rowFocused;\n        }\n        // if we are editing, then moving the focus out of a row will stop editing\n        if (!rowFocused && this.editingRow) {\n            this.stopEditing(false);\n        }\n    };\n    RowComp.prototype.onPaginationChanged = function () {\n        var currentPage = this.beans.paginationProxy.getCurrentPage();\n        // it is possible this row is in the new page, but the page number has changed, which means\n        // it needs to reposition itself relative to the new page\n        if (this.paginationPage !== currentPage) {\n            this.paginationPage = currentPage;\n            this.onTopChanged();\n        }\n    };\n    RowComp.prototype.onTopChanged = function () {\n        this.setRowTop(this.rowNode.rowTop);\n    };\n    // applies pagination offset, eg if on second page, and page height is 500px, then removes\n    // 500px from the top position, so a row with rowTop 600px is displayed at location 100px.\n    // reverse will take the offset away rather than add.\n    RowComp.prototype.applyPaginationOffset = function (topPx, reverse) {\n        if (reverse === void 0) { reverse = false; }\n        if (this.rowNode.isRowPinned()) {\n            return topPx;\n        }\n        var pixelOffset = this.beans.paginationProxy.getPixelOffset();\n        var multiplier = reverse ? 1 : -1;\n        return topPx + (pixelOffset * multiplier);\n    };\n    RowComp.prototype.setRowTop = function (pixels) {\n        // print layout uses normal flow layout for row positioning\n        if (this.printLayout) {\n            return;\n        }\n        // need to make sure rowTop is not null, as this can happen if the node was once\n        // visible (ie parent group was expanded) but is now not visible\n        if (_.exists(pixels)) {\n            var afterPaginationPixels = this.applyPaginationOffset(pixels);\n            var afterScalingPixels = this.beans.maxDivHeightScaler.getRealPixelPosition(afterPaginationPixels);\n            var topPx_1 = afterScalingPixels + \"px\";\n            if (this.beans.gridOptionsWrapper.isSuppressRowTransform()) {\n                this.eAllRowContainers.forEach(function (row) { return row.style.top = topPx_1; });\n            }\n            else {\n                this.eAllRowContainers.forEach(function (row) { return row.style.transform = \"translateY(\" + topPx_1 + \")\"; });\n            }\n        }\n    };\n    // we clear so that the functions are never executed twice\n    RowComp.prototype.getAndClearNextVMTurnFunctions = function () {\n        var result = this.createSecondPassFuncs;\n        this.createSecondPassFuncs = [];\n        return result;\n    };\n    RowComp.prototype.getRowNode = function () {\n        return this.rowNode;\n    };\n    RowComp.prototype.getRenderedCellForColumn = function (column) {\n        var _this = this;\n        var cellComp = this.cellComps[column.getColId()];\n        if (cellComp) {\n            return cellComp;\n        }\n        var spanList = Object.keys(this.cellComps)\n            .map(function (name) { return _this.cellComps[name]; })\n            .filter(function (cmp) { return cmp && cmp.getColSpanningList().indexOf(column) !== -1; });\n        return spanList.length ? spanList[0] : undefined;\n    };\n    RowComp.prototype.onRowIndexChanged = function () {\n        // we only bother updating if the rowIndex is present. if it is not present, it means this row\n        // is child of a group node, and the group node was closed, it's the only way to have no row index.\n        // when this happens, row is about to be de-rendered, so we don't care, rowComp is about to die!\n        if (this.rowNode.rowIndex != null) {\n            this.onCellFocusChanged();\n            this.updateRowIndexes();\n        }\n    };\n    RowComp.prototype.updateRowIndexes = function () {\n        var _this = this;\n        var rowIndexStr = this.rowNode.getRowIndexString();\n        var rowIsEven = this.rowNode.rowIndex % 2 === 0;\n        var rowIsEvenChanged = this.rowIsEven !== rowIsEven;\n        var headerRowCount = this.beans.headerNavigationService.getHeaderRowCount();\n        if (rowIsEvenChanged) {\n            this.rowIsEven = rowIsEven;\n        }\n        this.eAllRowContainers.forEach(function (eRow) {\n            eRow.setAttribute('row-index', rowIndexStr);\n            eRow.setAttribute('aria-rowindex', (headerRowCount + _this.rowNode.rowIndex + 1).toString());\n            if (!rowIsEvenChanged) {\n                return;\n            }\n            _.addOrRemoveCssClass(eRow, 'ag-row-even', rowIsEven);\n            _.addOrRemoveCssClass(eRow, 'ag-row-odd', !rowIsEven);\n        });\n    };\n    RowComp.prototype.ensureDomOrder = function () {\n        var sides = [\n            {\n                el: this.getBodyRowElement(),\n                ct: this.bodyContainerComp\n            },\n            {\n                el: this.getPinnedLeftRowElement(),\n                ct: this.pinnedLeftContainerComp\n            }, {\n                el: this.getPinnedRightRowElement(),\n                ct: this.pinnedRightContainerComp\n            }, {\n                el: this.getFullWidthRowElement(),\n                ct: this.fullWidthContainerComp\n            }\n        ];\n        sides.forEach(function (side) {\n            if (!side.el) {\n                return;\n            }\n            side.ct.ensureDomOrder(side.el);\n        });\n    };\n    // returns the pinned left container, either the normal one, or the embedded full with one if exists\n    RowComp.prototype.getPinnedLeftRowElement = function () {\n        return this.ePinnedLeftRow ? this.ePinnedLeftRow : this.eFullWidthRowLeft;\n    };\n    // returns the pinned right container, either the normal one, or the embedded full with one if exists\n    RowComp.prototype.getPinnedRightRowElement = function () {\n        return this.ePinnedRightRow ? this.ePinnedRightRow : this.eFullWidthRowRight;\n    };\n    // returns the body container, either the normal one, or the embedded full with one if exists\n    RowComp.prototype.getBodyRowElement = function () {\n        return this.eBodyRow ? this.eBodyRow : this.eFullWidthRowBody;\n    };\n    // returns the full width container\n    RowComp.prototype.getFullWidthRowElement = function () {\n        return this.eFullWidthRow;\n    };\n    RowComp.DOM_DATA_KEY_RENDERED_ROW = 'renderedRow';\n    RowComp.FULL_WIDTH_CELL_RENDERER = 'fullWidthCellRenderer';\n    RowComp.GROUP_ROW_RENDERER = 'groupRowRenderer';\n    RowComp.GROUP_ROW_RENDERER_COMP_NAME = 'agGroupRowRenderer';\n    RowComp.LOADING_CELL_RENDERER = 'loadingCellRenderer';\n    RowComp.LOADING_CELL_RENDERER_COMP_NAME = 'agLoadingCellRenderer';\n    RowComp.DETAIL_CELL_RENDERER = 'detailCellRenderer';\n    RowComp.DETAIL_CELL_RENDERER_COMP_NAME = 'agDetailCellRenderer';\n    return RowComp;\n}(Component));\nexport { RowComp };\n"]},"metadata":{},"sourceType":"module"}