{"ast":null,"code":"var __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n};\n\nimport { getExcelColumnName } from './worksheet';\nimport cellFactory from './cell';\n\nvar addEmptyCells = function addEmptyCells(cells, rowIdx) {\n  var mergeMap = [];\n  var posCounter = 0;\n\n  for (var i = 0; i < cells.length; i++) {\n    var cell = cells[i];\n\n    if (cell.mergeAcross) {\n      mergeMap.push({\n        pos: i,\n        excelPos: posCounter\n      });\n      posCounter += cells[i].mergeAcross;\n    }\n\n    posCounter++;\n  }\n\n  if (mergeMap.length) {\n    for (var i = mergeMap.length - 1; i >= 0; i--) {\n      var mergedCells = [];\n      var cell = cells[mergeMap[i].pos];\n\n      for (var j = 1; j <= cell.mergeAcross; j++) {\n        mergedCells.push({\n          ref: \"\" + getExcelColumnName(mergeMap[i].excelPos + 1 + j) + (rowIdx + 1),\n          styleId: cell.styleId,\n          data: {\n            type: 'empty',\n            value: null\n          }\n        });\n      }\n\n      if (mergedCells.length) {\n        cells.splice.apply(cells, __spreadArrays([mergeMap[i].pos + 1, 0], mergedCells));\n      }\n    }\n  }\n};\n\nvar rowFactory = {\n  getTemplate: function getTemplate(config, idx) {\n    var index = config.index,\n        collapsed = config.collapsed,\n        hidden = config.hidden,\n        height = config.height,\n        s = config.s,\n        _a = config.cells,\n        cells = _a === void 0 ? [] : _a;\n    addEmptyCells(cells, idx);\n    var children = cells.map(cellFactory.getTemplate);\n    return {\n      name: \"row\",\n      properties: {\n        rawMap: {\n          r: index,\n          collapsed: collapsed,\n          hidden: hidden ? '1' : '0',\n          ht: height,\n          customHeight: height != null ? '1' : '0',\n          s: s,\n          customFormat: s != null ? '1' : '0'\n        }\n      },\n      children: children\n    };\n  }\n};\nexport default rowFactory;","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/@ag-grid-enterprise/excel-export/dist/es6/excelExport/files/ooxml/row.js"],"names":["__spreadArrays","s","i","il","arguments","length","r","Array","k","a","j","jl","getExcelColumnName","cellFactory","addEmptyCells","cells","rowIdx","mergeMap","posCounter","cell","mergeAcross","push","pos","excelPos","mergedCells","ref","styleId","data","type","value","splice","apply","rowFactory","getTemplate","config","idx","index","collapsed","hidden","height","_a","children","map","name","properties","rawMap","ht","customHeight","customFormat"],"mappings":"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","sourcesContent":["var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { getExcelColumnName } from './worksheet';\nimport cellFactory from './cell';\nvar addEmptyCells = function (cells, rowIdx) {\n    var mergeMap = [];\n    var posCounter = 0;\n    for (var i = 0; i < cells.length; i++) {\n        var cell = cells[i];\n        if (cell.mergeAcross) {\n            mergeMap.push({\n                pos: i,\n                excelPos: posCounter\n            });\n            posCounter += cells[i].mergeAcross;\n        }\n        posCounter++;\n    }\n    if (mergeMap.length) {\n        for (var i = mergeMap.length - 1; i >= 0; i--) {\n            var mergedCells = [];\n            var cell = cells[mergeMap[i].pos];\n            for (var j = 1; j <= cell.mergeAcross; j++) {\n                mergedCells.push({\n                    ref: \"\" + getExcelColumnName(mergeMap[i].excelPos + 1 + j) + (rowIdx + 1),\n                    styleId: cell.styleId,\n                    data: { type: 'empty', value: null }\n                });\n            }\n            if (mergedCells.length) {\n                cells.splice.apply(cells, __spreadArrays([mergeMap[i].pos + 1, 0], mergedCells));\n            }\n        }\n    }\n};\nvar rowFactory = {\n    getTemplate: function (config, idx) {\n        var index = config.index, collapsed = config.collapsed, hidden = config.hidden, height = config.height, s = config.s, _a = config.cells, cells = _a === void 0 ? [] : _a;\n        addEmptyCells(cells, idx);\n        var children = cells.map(cellFactory.getTemplate);\n        return {\n            name: \"row\",\n            properties: {\n                rawMap: {\n                    r: index,\n                    collapsed: collapsed,\n                    hidden: hidden ? '1' : '0',\n                    ht: height,\n                    customHeight: height != null ? '1' : '0',\n                    s: s,\n                    customFormat: s != null ? '1' : '0'\n                }\n            },\n            children: children\n        };\n    }\n};\nexport default rowFactory;\n"]},"metadata":{},"sourceType":"module"}