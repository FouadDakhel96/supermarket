{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Bean, PostConstruct, Autowired } from \"../context/context\";\nimport { AnimateSlideCellRenderer } from \"./cellRenderers/animateSlideCellRenderer\";\nimport { AnimateShowChangeCellRenderer } from \"./cellRenderers/animateShowChangeCellRenderer\";\nimport { GroupCellRenderer } from \"./cellRenderers/groupCellRenderer\";\nimport { _ } from '../utils';\n\nvar CellRendererFactory =\n/** @class */\nfunction () {\n  function CellRendererFactory() {\n    this.cellRendererMap = {};\n  }\n\n  CellRendererFactory_1 = CellRendererFactory;\n\n  CellRendererFactory.prototype.init = function () {\n    this.cellRendererMap[CellRendererFactory_1.ANIMATE_SLIDE] = AnimateSlideCellRenderer;\n    this.cellRendererMap[CellRendererFactory_1.ANIMATE_SHOW_CHANGE] = AnimateShowChangeCellRenderer;\n    this.cellRendererMap[CellRendererFactory_1.GROUP] = GroupCellRenderer; // this.registerRenderersFromGridOptions();\n  }; // private registerRenderersFromGridOptions(): void {\n  //     let userProvidedCellRenderers = this.gridOptionsWrapper.getCellRenderers();\n  //     _.iterateObject(userProvidedCellRenderers, (key: string, cellRenderer: {new(): ICellRenderer} | ICellRendererFunc)=> {\n  //         this.addCellRenderer(key, cellRenderer);\n  //     });\n  // }\n\n\n  CellRendererFactory.prototype.addCellRenderer = function (key, cellRenderer) {\n    this.cellRendererMap[key] = cellRenderer;\n  };\n\n  CellRendererFactory.prototype.getCellRenderer = function (key) {\n    var result = this.cellRendererMap[key];\n\n    if (_.missing(result)) {\n      console.warn('ag-Grid: unable to find cellRenderer for key ' + key);\n      return null;\n    }\n\n    return result;\n  };\n\n  var CellRendererFactory_1;\n  CellRendererFactory.ANIMATE_SLIDE = 'animateSlide';\n  CellRendererFactory.ANIMATE_SHOW_CHANGE = 'animateShowChange';\n  CellRendererFactory.GROUP = 'group';\n\n  __decorate([Autowired('gridOptionsWrapper')], CellRendererFactory.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([Autowired('expressionService')], CellRendererFactory.prototype, \"expressionService\", void 0);\n\n  __decorate([Autowired('eventService')], CellRendererFactory.prototype, \"eventService\", void 0);\n\n  __decorate([PostConstruct], CellRendererFactory.prototype, \"init\", null);\n\n  CellRendererFactory = CellRendererFactory_1 = __decorate([Bean('cellRendererFactory')], CellRendererFactory);\n  return CellRendererFactory;\n}();\n\nexport { CellRendererFactory };","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/@ag-grid-community/core/dist/es6/rendering/cellRendererFactory.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","Bean","PostConstruct","Autowired","AnimateSlideCellRenderer","AnimateShowChangeCellRenderer","GroupCellRenderer","_","CellRendererFactory","cellRendererMap","CellRendererFactory_1","prototype","init","ANIMATE_SLIDE","ANIMATE_SHOW_CHANGE","GROUP","addCellRenderer","cellRenderer","getCellRenderer","result","missing","console","warn"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Bean, PostConstruct, Autowired } from \"../context/context\";\nimport { AnimateSlideCellRenderer } from \"./cellRenderers/animateSlideCellRenderer\";\nimport { AnimateShowChangeCellRenderer } from \"./cellRenderers/animateShowChangeCellRenderer\";\nimport { GroupCellRenderer } from \"./cellRenderers/groupCellRenderer\";\nimport { _ } from '../utils';\nvar CellRendererFactory = /** @class */ (function () {\n    function CellRendererFactory() {\n        this.cellRendererMap = {};\n    }\n    CellRendererFactory_1 = CellRendererFactory;\n    CellRendererFactory.prototype.init = function () {\n        this.cellRendererMap[CellRendererFactory_1.ANIMATE_SLIDE] = AnimateSlideCellRenderer;\n        this.cellRendererMap[CellRendererFactory_1.ANIMATE_SHOW_CHANGE] = AnimateShowChangeCellRenderer;\n        this.cellRendererMap[CellRendererFactory_1.GROUP] = GroupCellRenderer;\n        // this.registerRenderersFromGridOptions();\n    };\n    // private registerRenderersFromGridOptions(): void {\n    //     let userProvidedCellRenderers = this.gridOptionsWrapper.getCellRenderers();\n    //     _.iterateObject(userProvidedCellRenderers, (key: string, cellRenderer: {new(): ICellRenderer} | ICellRendererFunc)=> {\n    //         this.addCellRenderer(key, cellRenderer);\n    //     });\n    // }\n    CellRendererFactory.prototype.addCellRenderer = function (key, cellRenderer) {\n        this.cellRendererMap[key] = cellRenderer;\n    };\n    CellRendererFactory.prototype.getCellRenderer = function (key) {\n        var result = this.cellRendererMap[key];\n        if (_.missing(result)) {\n            console.warn('ag-Grid: unable to find cellRenderer for key ' + key);\n            return null;\n        }\n        return result;\n    };\n    var CellRendererFactory_1;\n    CellRendererFactory.ANIMATE_SLIDE = 'animateSlide';\n    CellRendererFactory.ANIMATE_SHOW_CHANGE = 'animateShowChange';\n    CellRendererFactory.GROUP = 'group';\n    __decorate([\n        Autowired('gridOptionsWrapper')\n    ], CellRendererFactory.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        Autowired('expressionService')\n    ], CellRendererFactory.prototype, \"expressionService\", void 0);\n    __decorate([\n        Autowired('eventService')\n    ], CellRendererFactory.prototype, \"eventService\", void 0);\n    __decorate([\n        PostConstruct\n    ], CellRendererFactory.prototype, \"init\", null);\n    CellRendererFactory = CellRendererFactory_1 = __decorate([\n        Bean('cellRendererFactory')\n    ], CellRendererFactory);\n    return CellRendererFactory;\n}());\nexport { CellRendererFactory };\n"]},"metadata":{},"sourceType":"module"}