{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { GridOptionsWrapper } from '../gridOptionsWrapper';\nimport { Autowired, Optional, PostConstruct } from '../context/context';\nimport { Events } from '../events';\nimport { Constants } from '../constants';\nimport { RowContainerComponent } from '../rendering/rowContainerComponent';\nimport { RowComp } from '../rendering/rowComp';\nimport { TouchListener } from '../widgets/touchListener';\nimport { RowDragFeature } from './rowDragFeature';\nimport { Component } from '../widgets/component';\nimport { RefSelector } from '../widgets/componentAnnotations';\nimport { ModuleRegistry } from '../modules/moduleRegistry';\nimport { ModuleNames } from '../modules/moduleNames';\nimport { _ } from \"../utils\"; // in the html below, it is important that there are no white space between some of the divs, as if there is white space,\n// it won't render correctly in safari, as safari renders white space as a gap\n\nvar GRID_PANEL_NORMAL_TEMPLATE =\n/* html */\n\"<div class=\\\"ag-root ag-unselectable\\\" role=\\\"grid\\\" unselectable=\\\"on\\\">\\n        <ag-header-root ref=\\\"headerRoot\\\" unselectable=\\\"on\\\"></ag-header-root>\\n        <div class=\\\"ag-floating-top\\\" ref=\\\"eTop\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\">\\n            <div class=\\\"ag-pinned-left-floating-top\\\" ref=\\\"eLeftTop\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            <div class=\\\"ag-floating-top-viewport\\\" ref=\\\"eTopViewport\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\">\\n                <div class=\\\"ag-floating-top-container\\\" ref=\\\"eTopContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            </div>\\n            <div class=\\\"ag-pinned-right-floating-top\\\" ref=\\\"eRightTop\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            <div class=\\\"ag-floating-top-full-width-container\\\" ref=\\\"eTopFullWidthContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n        </div>\\n        <div class=\\\"ag-body-viewport\\\" ref=\\\"eBodyViewport\\\" role=\\\"presentation\\\">\\n            <div class=\\\"ag-pinned-left-cols-container\\\" ref=\\\"eLeftContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            <div class=\\\"ag-center-cols-clipper\\\" ref=\\\"eCenterColsClipper\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\">\\n                <div class=\\\"ag-center-cols-viewport\\\" ref=\\\"eCenterViewport\\\" role=\\\"presentation\\\">\\n                    <div class=\\\"ag-center-cols-container\\\" ref=\\\"eCenterContainer\\\" role=\\\"rowgroup\\\" unselectable=\\\"on\\\"></div>\\n                </div>\\n            </div>\\n            <div class=\\\"ag-pinned-right-cols-container\\\" ref=\\\"eRightContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            <div class=\\\"ag-full-width-container\\\" ref=\\\"eFullWidthContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n        </div>\\n        <div class=\\\"ag-floating-bottom\\\" ref=\\\"eBottom\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\">\\n            <div class=\\\"ag-pinned-left-floating-bottom\\\" ref=\\\"eLeftBottom\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            <div class=\\\"ag-floating-bottom-viewport\\\" ref=\\\"eBottomViewport\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\">\\n                <div class=\\\"ag-floating-bottom-container\\\" ref=\\\"eBottomContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            </div>\\n            <div class=\\\"ag-pinned-right-floating-bottom\\\" ref=\\\"eRightBottom\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            <div class=\\\"ag-floating-bottom-full-width-container\\\" ref=\\\"eBottomFullWidthContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n        </div>\\n        <div class=\\\"ag-body-horizontal-scroll\\\" ref=\\\"eHorizontalScrollBody\\\" aria-hidden=\\\"true\\\">\\n            <div class=\\\"ag-horizontal-left-spacer\\\" ref=\\\"eHorizontalLeftSpacer\\\"></div>\\n            <div class=\\\"ag-body-horizontal-scroll-viewport\\\" ref=\\\"eBodyHorizontalScrollViewport\\\">\\n                <div class=\\\"ag-body-horizontal-scroll-container\\\" ref=\\\"eBodyHorizontalScrollContainer\\\"></div>\\n            </div>\\n            <div class=\\\"ag-horizontal-right-spacer\\\" ref=\\\"eHorizontalRightSpacer\\\"></div>\\n        </div>\\n        <ag-overlay-wrapper ref=\\\"overlayWrapper\\\"></ag-overlay-wrapper>\\n    </div>\";\n\nvar GridPanel =\n/** @class */\nfunction (_super) {\n  __extends(GridPanel, _super);\n\n  function GridPanel() {\n    var _this = _super.call(this, GRID_PANEL_NORMAL_TEMPLATE) || this;\n\n    _this.scrollLeft = -1;\n    _this.scrollTop = -1;\n    _this.resetLastHorizontalScrollElementDebounced = _.debounce(_this.resetLastHorizontalScrollElement.bind(_this), 500);\n    return _this;\n  }\n\n  GridPanel.prototype.getVScrollPosition = function () {\n    var result = {\n      top: this.eBodyViewport.scrollTop,\n      bottom: this.eBodyViewport.scrollTop + this.eBodyViewport.offsetHeight\n    };\n    return result;\n  };\n\n  GridPanel.prototype.getHScrollPosition = function () {\n    var result = {\n      left: this.eCenterViewport.scrollLeft,\n      right: this.eCenterViewport.scrollLeft + this.eCenterViewport.offsetWidth\n    };\n    return result;\n  };\n\n  GridPanel.prototype.onRowDataChanged = function () {\n    this.showOrHideOverlay();\n  };\n\n  GridPanel.prototype.showOrHideOverlay = function () {\n    var isEmpty = this.paginationProxy.isEmpty();\n    var isSuppressNoRowsOverlay = this.gridOptionsWrapper.isSuppressNoRowsOverlay();\n    var method = isEmpty && !isSuppressNoRowsOverlay ? 'showNoRowsOverlay' : 'hideOverlay';\n    this[method]();\n  };\n\n  GridPanel.prototype.onNewColumnsLoaded = function () {\n    // hide overlay if columns and rows exist, this can happen if columns are loaded after data.\n    // this problem exists before of the race condition between the services (column controller in this case)\n    // and the view (grid panel). if the model beans were all initialised first, and then the view beans second,\n    // this race condition would not happen.\n    if (this.beans.columnController.isReady() && !this.paginationProxy.isEmpty()) {\n      this.hideOverlay();\n    }\n  };\n\n  GridPanel.prototype.init = function () {\n    var _this = this;\n\n    this.scrollWidth = this.gridOptionsWrapper.getScrollbarWidth();\n    this.enableRtl = this.gridOptionsWrapper.isEnableRtl();\n    this.printLayout = this.gridOptionsWrapper.getDomLayout() === Constants.DOM_LAYOUT_PRINT; // these elements have different CSS when layout changes\n\n    this.gridOptionsWrapper.addLayoutElement(this.getGui());\n    this.gridOptionsWrapper.addLayoutElement(this.eBodyViewport);\n    this.suppressScrollOnFloatingRow();\n    this.setupRowAnimationCssClass();\n    this.buildRowContainerComponents();\n    this.addEventListeners();\n    this.addDragListeners();\n    this.addScrollListener();\n\n    if (this.gridOptionsWrapper.isRowModelDefault() && !this.gridOptionsWrapper.getRowData()) {\n      this.showLoadingOverlay();\n    }\n\n    this.setCellTextSelection(this.gridOptionsWrapper.isEnableCellTextSelect());\n    this.setPinnedContainerSize();\n    this.setHeaderAndFloatingHeights();\n    this.disableBrowserDragging();\n    this.addMouseListeners();\n    this.addKeyboardEvents();\n    this.addBodyViewportListener();\n    this.addStopEditingWhenGridLosesFocus();\n    this.mockContextMenuForIPad();\n    this.addRowDragListener();\n\n    if (this.$scope) {\n      this.addAngularApplyCheck();\n    }\n\n    this.onDisplayedColumnsWidthChanged();\n    this.gridApi.registerGridComp(this);\n    this.alignedGridsService.registerGridComp(this);\n    this.headerRootComp.registerGridComp(this);\n    this.navigationService.registerGridComp(this);\n    this.headerNavigationService.registerGridComp(this);\n    this.heightScaler.registerGridComp(this);\n    this.autoHeightCalculator.registerGridComp(this);\n    this.columnAnimationService.registerGridComp(this);\n    this.autoWidthCalculator.registerGridComp(this);\n    this.paginationAutoPageSizeService.registerGridComp(this);\n    this.mouseEventService.registerGridComp(this);\n    this.beans.registerGridComp(this);\n    this.rowRenderer.registerGridComp(this);\n\n    if (this.rangeController) {\n      this.rangeController.registerGridComp(this);\n    }\n\n    [this.eCenterViewport, this.eBodyViewport].forEach(function (viewport) {\n      var unsubscribeFromResize = _this.resizeObserverService.observeResize(viewport, _this.onCenterViewportResized.bind(_this));\n\n      _this.addDestroyFunc(function () {\n        return unsubscribeFromResize();\n      });\n    });\n    [this.eTop, this.eBodyViewport, this.eBottom].forEach(function (element) {\n      _this.addManagedListener(element, 'focusin', function () {\n        _.addCssClass(element, 'ag-has-focus');\n      });\n\n      _this.addManagedListener(element, 'focusout', function (e) {\n        if (!element.contains(e.relatedTarget)) {\n          _.removeCssClass(element, 'ag-has-focus');\n        }\n      });\n    });\n  };\n\n  GridPanel.prototype.onDomLayoutChanged = function () {\n    var newPrintLayout = this.gridOptionsWrapper.getDomLayout() === Constants.DOM_LAYOUT_PRINT;\n\n    if (this.printLayout !== newPrintLayout) {\n      this.printLayout = newPrintLayout;\n      this.setWidthsOfContainers(); // pinned containers are always hidden for print layout\n\n      this.setPinnedContainerSize();\n    }\n  };\n\n  GridPanel.prototype.onCenterViewportResized = function () {\n    if (_.isVisible(this.eCenterViewport)) {\n      this.checkViewportAndScrolls();\n      this.beans.columnController.refreshFlexedColumns(this.getCenterWidth());\n    } else {\n      this.bodyHeight = 0;\n    }\n  }; // used by ColumnAnimationService\n\n\n  GridPanel.prototype.setColumnMovingCss = function (moving) {\n    this.addOrRemoveCssClass('ag-column-moving', moving);\n  };\n\n  GridPanel.prototype.setCellTextSelection = function (selectable) {\n    if (selectable === void 0) {\n      selectable = false;\n    }\n\n    [this.eTop, this.eBodyViewport, this.eBottom].forEach(function (ct) {\n      return _.addOrRemoveCssClass(ct, 'ag-selectable', selectable);\n    });\n  };\n\n  GridPanel.prototype.addRowDragListener = function () {\n    this.rowDragFeature = this.createManagedBean(new RowDragFeature(this.eBodyViewport, this));\n    this.dragAndDropService.addDropTarget(this.rowDragFeature);\n  };\n\n  GridPanel.prototype.getRowDragFeature = function () {\n    return this.rowDragFeature;\n  };\n\n  GridPanel.prototype.addStopEditingWhenGridLosesFocus = function () {\n    var _this = this;\n\n    if (!this.gridOptionsWrapper.isStopEditingWhenGridLosesFocus()) {\n      return;\n    }\n\n    var viewports = [this.eBodyViewport, this.eBottom, this.eTop];\n\n    var focusOutListener = function (event) {\n      // this is the element the focus is moving to\n      var elementWithFocus = event.relatedTarget;\n\n      if (_.getTabIndex(elementWithFocus) === null) {\n        _this.rowRenderer.stopEditing();\n\n        return;\n      }\n\n      var clickInsideGrid = viewports.some(function (viewport) {\n        return viewport.contains(elementWithFocus);\n      });\n\n      if (!clickInsideGrid) {\n        var popupService = _this.beans.popupService;\n        clickInsideGrid = popupService.getActivePopups().some(function (popup) {\n          return popup.contains(elementWithFocus);\n        }) || popupService.isElementWithinCustomPopup(elementWithFocus);\n      }\n\n      if (!clickInsideGrid) {\n        _this.rowRenderer.stopEditing();\n      }\n    };\n\n    viewports.forEach(function (viewport) {\n      return _this.addManagedListener(viewport, 'focusout', focusOutListener);\n    });\n  };\n\n  GridPanel.prototype.addAngularApplyCheck = function () {\n    var _this = this; // this makes sure if we queue up requests, we only execute oe\n\n\n    var applyTriggered = false;\n\n    var listener = function () {\n      // only need to do one apply at a time\n      if (applyTriggered) {\n        return;\n      }\n\n      applyTriggered = true; // mark 'need apply' to true\n\n      window.setTimeout(function () {\n        applyTriggered = false;\n\n        _this.$scope.$apply();\n      }, 0);\n    }; // these are the events we need to do an apply after - these are the ones that can end up\n    // with columns added or removed\n\n\n    this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, listener);\n    this.addManagedListener(this.eventService, Events.EVENT_VIRTUAL_COLUMNS_CHANGED, listener);\n  }; // if we do not do this, then the user can select a pic in the grid (eg an image in a custom cell renderer)\n  // and then that will start the browser native drag n' drop, which messes up with our own drag and drop.\n\n\n  GridPanel.prototype.disableBrowserDragging = function () {\n    this.addGuiEventListener('dragstart', function (event) {\n      if (event.target instanceof HTMLImageElement) {\n        event.preventDefault();\n        return false;\n      }\n    });\n  };\n\n  GridPanel.prototype.addEventListeners = function () {\n    this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, this.onDisplayedColumnsWidthChanged.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_PINNED_ROW_DATA_CHANGED, this.setHeaderAndFloatingHeights.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_ROW_DATA_CHANGED, this.onRowDataChanged.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_ROW_DATA_UPDATED, this.onRowDataChanged.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_NEW_COLUMNS_LOADED, this.onNewColumnsLoaded.bind(this));\n    this.addManagedListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_HEADER_HEIGHT, this.setHeaderAndFloatingHeights.bind(this));\n    this.addManagedListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_PIVOT_HEADER_HEIGHT, this.setHeaderAndFloatingHeights.bind(this));\n    this.addManagedListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_GROUP_HEADER_HEIGHT, this.setHeaderAndFloatingHeights.bind(this));\n    this.addManagedListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_PIVOT_GROUP_HEADER_HEIGHT, this.setHeaderAndFloatingHeights.bind(this));\n    this.addManagedListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_FLOATING_FILTERS_HEIGHT, this.setHeaderAndFloatingHeights.bind(this));\n    this.addManagedListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_DOM_LAYOUT, this.onDomLayoutChanged.bind(this));\n  };\n\n  GridPanel.prototype.addDragListeners = function () {\n    var _this = this;\n\n    if (!this.gridOptionsWrapper.isEnableRangeSelection() || // no range selection if no property\n    _.missing(this.rangeController) // no range selection if not enterprise version\n    ) {\n        return;\n      }\n\n    var containers = [this.eLeftContainer, this.eRightContainer, this.eCenterContainer, this.eTop, this.eBottom];\n    containers.forEach(function (container) {\n      var params = {\n        eElement: container,\n        onDragStart: _this.rangeController.onDragStart.bind(_this.rangeController),\n        onDragStop: _this.rangeController.onDragStop.bind(_this.rangeController),\n        onDragging: _this.rangeController.onDragging.bind(_this.rangeController)\n      };\n\n      _this.dragService.addDragSource(params);\n\n      _this.addDestroyFunc(function () {\n        return _this.dragService.removeDragSource(params);\n      });\n    });\n  };\n\n  GridPanel.prototype.addMouseListeners = function () {\n    var _this = this;\n\n    var eventNames = ['click', 'mousedown', 'dblclick', 'contextmenu', 'mouseover', 'mouseout'];\n    eventNames.forEach(function (eventName) {\n      var listener = _this.processMouseEvent.bind(_this, eventName);\n\n      _this.eAllCellContainers.forEach(function (container) {\n        return _this.addManagedListener(container, eventName, listener);\n      });\n    });\n  };\n\n  GridPanel.prototype.addKeyboardEvents = function () {\n    var _this = this;\n\n    var eventNames = ['keydown', 'keypress'];\n    eventNames.forEach(function (eventName) {\n      var listener = _this.processKeyboardEvent.bind(_this, eventName);\n\n      _this.eAllCellContainers.forEach(function (container) {\n        _this.addManagedListener(container, eventName, listener);\n      });\n    });\n  };\n\n  GridPanel.prototype.addBodyViewportListener = function () {\n    var _this = this; // we want to listen for clicks directly on the eBodyViewport, so the user has a way of showing\n    // the context menu if no rows or columns are displayed, or user simply clicks outside of a cell\n\n\n    var listener = function (mouseEvent) {\n      var target = _.getTarget(mouseEvent);\n\n      if (target === _this.eBodyViewport || target === _this.eCenterViewport) {\n        // show it\n        _this.onContextMenu(mouseEvent, null, null, null, null);\n\n        _this.preventDefaultOnContextMenu(mouseEvent);\n      }\n    };\n\n    this.addManagedListener(this.eBodyViewport, 'contextmenu', listener);\n  }; // + rangeController - used to know when to scroll when user is dragging outside the\n  // main viewport while doing a range selection\n\n\n  GridPanel.prototype.getBodyClientRect = function () {\n    if (!this.eBodyViewport) {\n      return;\n    }\n\n    return this.eBodyViewport.getBoundingClientRect();\n  };\n\n  GridPanel.prototype.getRowForEvent = function (event) {\n    var sourceElement = _.getTarget(event);\n\n    while (sourceElement) {\n      var renderedRow = this.gridOptionsWrapper.getDomData(sourceElement, RowComp.DOM_DATA_KEY_RENDERED_ROW);\n\n      if (renderedRow) {\n        return renderedRow;\n      }\n\n      sourceElement = sourceElement.parentElement;\n    }\n\n    return null;\n  };\n\n  GridPanel.prototype.processKeyboardEvent = function (eventName, keyboardEvent) {\n    var cellComp = _.getCellCompForEvent(this.gridOptionsWrapper, keyboardEvent);\n\n    if (!cellComp || keyboardEvent.defaultPrevented) {\n      return;\n    }\n\n    var rowNode = cellComp.getRenderedRow().getRowNode();\n    var column = cellComp.getColumn();\n    var editing = cellComp.isEditing();\n    var gridProcessingAllowed = !_.isUserSuppressingKeyboardEvent(this.gridOptionsWrapper, keyboardEvent, rowNode, column, editing);\n\n    if (gridProcessingAllowed) {\n      switch (eventName) {\n        case 'keydown':\n          // first see if it's a scroll key, page up / down, home / end etc\n          var wasScrollKey = !editing && this.navigationService.handlePageScrollingKey(keyboardEvent); // if not a scroll key, then we pass onto cell\n\n          if (!wasScrollKey) {\n            cellComp.onKeyDown(keyboardEvent);\n          } // perform clipboard and undo / redo operations\n\n\n          this.doGridOperations(keyboardEvent, cellComp);\n          break;\n\n        case 'keypress':\n          cellComp.onKeyPress(keyboardEvent);\n          break;\n      }\n    }\n\n    if (eventName === 'keydown') {\n      var cellKeyDownEvent = cellComp.createEvent(keyboardEvent, Events.EVENT_CELL_KEY_DOWN);\n      this.beans.eventService.dispatchEvent(cellKeyDownEvent);\n    }\n\n    if (eventName === 'keypress') {\n      var cellKeyPressEvent = cellComp.createEvent(keyboardEvent, Events.EVENT_CELL_KEY_PRESS);\n      this.beans.eventService.dispatchEvent(cellKeyPressEvent);\n    }\n  };\n\n  GridPanel.prototype.doGridOperations = function (keyboardEvent, cellComp) {\n    // check if ctrl or meta key pressed\n    if (!keyboardEvent.ctrlKey && !keyboardEvent.metaKey) {\n      return;\n    } // if the cell the event came from is editing, then we do not\n    // want to do the default shortcut keys, otherwise the editor\n    // (eg a text field) would not be able to do the normal cut/copy/paste\n\n\n    if (cellComp.isEditing()) {\n      return;\n    } // for copy / paste, we don't want to execute when the event\n    // was from a child grid (happens in master detail)\n\n\n    if (!this.mouseEventService.isEventFromThisGrid(keyboardEvent)) {\n      return;\n    }\n\n    switch (keyboardEvent.which) {\n      case Constants.KEY_A:\n        return this.onCtrlAndA(keyboardEvent);\n\n      case Constants.KEY_C:\n        return this.onCtrlAndC(keyboardEvent);\n\n      case Constants.KEY_V:\n        return this.onCtrlAndV();\n\n      case Constants.KEY_D:\n        return this.onCtrlAndD(keyboardEvent);\n\n      case Constants.KEY_Z:\n        return keyboardEvent.shiftKey ? this.undoRedoService.redo() : this.undoRedoService.undo();\n\n      case Constants.KEY_Y:\n        return this.undoRedoService.redo();\n    }\n  }; // gets called by rowRenderer when new data loaded, as it will want to scroll to the top\n\n\n  GridPanel.prototype.scrollToTop = function () {\n    this.eBodyViewport.scrollTop = 0;\n  };\n\n  GridPanel.prototype.processMouseEvent = function (eventName, mouseEvent) {\n    if (!this.mouseEventService.isEventFromThisGrid(mouseEvent) || _.isStopPropagationForAgGrid(mouseEvent)) {\n      return;\n    }\n\n    var rowComp = this.getRowForEvent(mouseEvent);\n    var cellComp = this.mouseEventService.getRenderedCellForEvent(mouseEvent);\n\n    if (eventName === \"contextmenu\") {\n      this.preventDefaultOnContextMenu(mouseEvent);\n      this.handleContextMenuMouseEvent(mouseEvent, null, rowComp, cellComp);\n    } else {\n      if (cellComp) {\n        cellComp.onMouseEvent(eventName, mouseEvent);\n      }\n\n      if (rowComp) {\n        rowComp.onMouseEvent(eventName, mouseEvent);\n      }\n    }\n  };\n\n  GridPanel.prototype.mockContextMenuForIPad = function () {\n    var _this = this; // we do NOT want this when not in iPad, otherwise we will be doing\n\n\n    if (!_.isIOSUserAgent()) {\n      return;\n    }\n\n    this.eAllCellContainers.forEach(function (container) {\n      var touchListener = new TouchListener(container);\n\n      var longTapListener = function (event) {\n        var rowComp = _this.getRowForEvent(event.touchEvent);\n\n        var cellComp = _this.mouseEventService.getRenderedCellForEvent(event.touchEvent);\n\n        _this.handleContextMenuMouseEvent(null, event.touchEvent, rowComp, cellComp);\n      };\n\n      _this.addManagedListener(touchListener, TouchListener.EVENT_LONG_TAP, longTapListener);\n\n      _this.addDestroyFunc(function () {\n        return touchListener.destroy();\n      });\n    });\n  };\n\n  GridPanel.prototype.handleContextMenuMouseEvent = function (mouseEvent, touchEvent, rowComp, cellComp) {\n    var rowNode = rowComp ? rowComp.getRowNode() : null;\n    var column = cellComp ? cellComp.getColumn() : null;\n    var value = null;\n\n    if (column) {\n      var event_1 = mouseEvent ? mouseEvent : touchEvent;\n      cellComp.dispatchCellContextMenuEvent(event_1);\n      value = this.valueService.getValue(column, rowNode);\n    }\n\n    this.onContextMenu(mouseEvent, touchEvent, rowNode, column, value);\n  };\n\n  GridPanel.prototype.onContextMenu = function (mouseEvent, touchEvent, rowNode, column, value) {\n    // to allow us to debug in chrome, we ignore the event if ctrl is pressed.\n    // not everyone wants this, so first 'if' below allows to turn this hack off.\n    if (!this.gridOptionsWrapper.isAllowContextMenuWithControlKey()) {\n      // then do the check\n      if (mouseEvent && (mouseEvent.ctrlKey || mouseEvent.metaKey)) {\n        return;\n      }\n    }\n\n    if (this.contextMenuFactory && !this.gridOptionsWrapper.isSuppressContextMenu()) {\n      var eventOrTouch = mouseEvent ? mouseEvent : touchEvent.touches[0];\n\n      if (this.contextMenuFactory.showMenu(rowNode, column, value, eventOrTouch)) {\n        var event_2 = mouseEvent ? mouseEvent : touchEvent;\n        event_2.preventDefault();\n      }\n    }\n  };\n\n  GridPanel.prototype.preventDefaultOnContextMenu = function (mouseEvent) {\n    // if we don't do this, then middle click will never result in a 'click' event, as 'mousedown'\n    // will be consumed by the browser to mean 'scroll' (as you can scroll with the middle mouse\n    // button in the browser). so this property allows the user to receive middle button clicks if\n    // they want.\n    var gridOptionsWrapper = this.gridOptionsWrapper;\n    var which = mouseEvent.which;\n\n    if (gridOptionsWrapper.isPreventDefaultOnContextMenu() || gridOptionsWrapper.isSuppressMiddleClickScrolls() && which === 2) {\n      mouseEvent.preventDefault();\n    }\n  };\n\n  GridPanel.prototype.onCtrlAndA = function (event) {\n    var _a = this,\n        beans = _a.beans,\n        pinnedRowModel = _a.pinnedRowModel,\n        paginationProxy = _a.paginationProxy,\n        rangeController = _a.rangeController;\n\n    var PINNED_BOTTOM = Constants.PINNED_BOTTOM,\n        PINNED_TOP = Constants.PINNED_TOP;\n\n    if (rangeController && paginationProxy.isRowsToRender()) {\n      var _b = [pinnedRowModel.isEmpty(PINNED_TOP), pinnedRowModel.isEmpty(PINNED_BOTTOM)],\n          isEmptyPinnedTop = _b[0],\n          isEmptyPinnedBottom = _b[1];\n      var floatingStart = isEmptyPinnedTop ? null : PINNED_TOP;\n      var floatingEnd = void 0;\n      var rowEnd = void 0;\n\n      if (isEmptyPinnedBottom) {\n        floatingEnd = null;\n        rowEnd = this.paginationProxy.getRowCount() - 1;\n      } else {\n        floatingEnd = PINNED_BOTTOM;\n        rowEnd = pinnedRowModel.getPinnedBottomRowData().length - 1;\n      }\n\n      var allDisplayedColumns = beans.columnController.getAllDisplayedColumns();\n\n      if (_.missingOrEmpty(allDisplayedColumns)) {\n        return;\n      }\n\n      rangeController.setCellRange({\n        rowStartIndex: 0,\n        rowStartPinned: floatingStart,\n        rowEndIndex: rowEnd,\n        rowEndPinned: floatingEnd,\n        columnStart: allDisplayedColumns[0],\n        columnEnd: _.last(allDisplayedColumns)\n      });\n    }\n\n    event.preventDefault();\n  };\n\n  GridPanel.prototype.onCtrlAndC = function (event) {\n    if (!this.clipboardService || this.gridOptionsWrapper.isEnableCellTextSelection()) {\n      return;\n    }\n\n    this.clipboardService.copyToClipboard();\n    event.preventDefault();\n  };\n\n  GridPanel.prototype.onCtrlAndV = function () {\n    if (ModuleRegistry.isRegistered(ModuleNames.ClipboardModule) && !this.gridOptionsWrapper.isSuppressClipboardPaste()) {\n      this.clipboardService.pasteFromClipboard();\n    }\n  };\n\n  GridPanel.prototype.onCtrlAndD = function (event) {\n    if (ModuleRegistry.isRegistered(ModuleNames.ClipboardModule) && !this.gridOptionsWrapper.isSuppressClipboardPaste()) {\n      this.clipboardService.copyRangeDown();\n    }\n\n    event.preventDefault();\n  }; // Valid values for position are bottom, middle and top\n  // position should be {'top','middle','bottom', or undefined/null}.\n  // if undefined/null, then the grid will to the minimal amount of scrolling,\n  // eg if grid needs to scroll up, it scrolls until row is on top,\n  //    if grid needs to scroll down, it scrolls until row is on bottom,\n  //    if row is already in view, grid does not scroll\n\n\n  GridPanel.prototype.ensureIndexVisible = function (index, position) {\n    // if for print or auto height, everything is always visible\n    if (this.printLayout) {\n      return;\n    }\n\n    var rowCount = this.paginationProxy.getRowCount();\n\n    if (typeof index !== 'number' || index < 0 || index >= rowCount) {\n      console.warn('invalid row index for ensureIndexVisible: ' + index);\n      return;\n    }\n\n    this.paginationProxy.goToPageWithIndex(index);\n    var rowNode = this.paginationProxy.getRow(index);\n    var rowGotShiftedDuringOperation;\n\n    do {\n      var startingRowTop = rowNode.rowTop;\n      var startingRowHeight = rowNode.rowHeight;\n      var paginationOffset = this.paginationProxy.getPixelOffset();\n      var rowTopPixel = rowNode.rowTop - paginationOffset;\n      var rowBottomPixel = rowTopPixel + rowNode.rowHeight;\n      var scrollPosition = this.getVScrollPosition();\n      var heightOffset = this.heightScaler.getOffset();\n      var vScrollTop = scrollPosition.top + heightOffset;\n      var vScrollBottom = scrollPosition.bottom + heightOffset;\n      var viewportHeight = vScrollBottom - vScrollTop; // work out the pixels for top, middle and bottom up front,\n      // make the if/else below easier to read\n\n      var pxTop = this.heightScaler.getScrollPositionForPixel(rowTopPixel);\n      var pxBottom = this.heightScaler.getScrollPositionForPixel(rowBottomPixel - viewportHeight); // make sure if middle, the row is not outside the top of the grid\n\n      var pxMiddle = Math.min((pxTop + pxBottom) / 2, rowTopPixel);\n      var rowBelowViewport = vScrollTop > rowTopPixel;\n      var rowAboveViewport = vScrollBottom < rowBottomPixel;\n      var newScrollPosition = null;\n\n      if (position === 'top') {\n        newScrollPosition = pxTop;\n      } else if (position === 'bottom') {\n        newScrollPosition = pxBottom;\n      } else if (position === 'middle') {\n        newScrollPosition = pxMiddle;\n      } else if (rowBelowViewport) {\n        // if row is before, scroll up with row at top\n        newScrollPosition = pxTop;\n      } else if (rowAboveViewport) {\n        // if row is below, scroll down with row at bottom\n        newScrollPosition = pxBottom;\n      }\n\n      if (newScrollPosition !== null) {\n        this.eBodyViewport.scrollTop = newScrollPosition;\n        this.rowRenderer.redrawAfterScroll();\n      } // the row can get shifted if during the rendering (during rowRenderer.redrawAfterScroll()),\n      // the height of a row changes due to lazy calculation of row heights when using\n      // colDef.autoHeight or gridOptions.getRowHeight.\n      // if row was shifted, then the position we scrolled to is incorrect.\n\n\n      rowGotShiftedDuringOperation = startingRowTop !== rowNode.rowTop || startingRowHeight !== rowNode.rowHeight;\n    } while (rowGotShiftedDuringOperation); // so when we return back to user, the cells have rendered\n\n\n    this.animationFrameService.flushAllFrames();\n  }; // + moveColumnController\n\n\n  GridPanel.prototype.getCenterWidth = function () {\n    return this.eCenterViewport.clientWidth;\n  };\n\n  GridPanel.prototype.isVerticalScrollShowing = function () {\n    var isAlwaysShowVerticalScroll = this.gridOptionsWrapper.isAlwaysShowVerticalScroll();\n\n    _.addOrRemoveCssClass(this.eBodyViewport, 'ag-force-vertical-scroll', isAlwaysShowVerticalScroll);\n\n    return isAlwaysShowVerticalScroll || _.isVerticalScrollShowing(this.eBodyViewport);\n  };\n\n  GridPanel.prototype.isHorizontalScrollShowing = function () {\n    return _.isHorizontalScrollShowing(this.eCenterViewport);\n  }; // gets called every time the viewport size changes. we use this to check visibility of scrollbars\n  // in the grid panel, and also to check size and position of viewport for row and column virtualisation.\n\n\n  GridPanel.prototype.checkViewportAndScrolls = function () {\n    // results in updating anything that depends on scroll showing\n    this.updateScrollVisibleService(); // fires event if height changes, used by PaginationService, HeightScalerService, RowRenderer\n\n    this.checkBodyHeight(); // check for virtual columns for ColumnController\n\n    this.onHorizontalViewportChanged();\n    this.setPinnedContainerSize(); // this is to cater for AG-3274, where grid is removed from the dom and then inserted back in again.\n    // (which happens with some implementations of tabbing). this can result in horizontal scroll getting\n    // reset back to the left, however no scroll event is fired. so we need to get header to also scroll\n    // back to the left to be kept in sync.\n    // adding and removing the grid from the DOM both resets the scroll position and\n    // triggers a resize event, so notify listeners if the scroll position has changed\n\n    if (this.scrollLeft !== this.getCenterViewportScrollLeft()) {\n      this.onBodyHorizontalScroll(this.eCenterViewport);\n    }\n  };\n\n  GridPanel.prototype.updateScrollVisibleService = function () {\n    // because of column animation (which takes 200ms), we have to do this twice.\n    // eg if user removes cols anywhere except at the RHS, then the cols on the RHS\n    // will animate to the left to fill the gap. this animation means just after\n    // the cols are removed, the remaining cols are still in the original location\n    // at the start of the animation, so pre animation the H scrollbar is still needed,\n    // but post animation it is not.\n    this.updateScrollVisibleServiceImpl();\n    setTimeout(this.updateScrollVisibleServiceImpl.bind(this), 500);\n  };\n\n  GridPanel.prototype.updateScrollVisibleServiceImpl = function () {\n    var params = {\n      horizontalScrollShowing: false,\n      verticalScrollShowing: false\n    };\n    params.verticalScrollShowing = this.isVerticalScrollShowing();\n    params.horizontalScrollShowing = this.isHorizontalScrollShowing();\n    this.scrollVisibleService.setScrollsVisible(params);\n    this.setHorizontalScrollVisible(params.horizontalScrollShowing);\n    this.setVerticalScrollPaddingVisible(params.verticalScrollShowing);\n  };\n\n  GridPanel.prototype.setHorizontalScrollVisible = function (visible) {\n    var isSuppressHorizontalScroll = this.gridOptionsWrapper.isSuppressHorizontalScroll();\n    var scrollSize = visible ? this.gridOptionsWrapper.getScrollbarWidth() || 0 : 0;\n    var scrollContainerSize = !isSuppressHorizontalScroll ? scrollSize : 0;\n    var addIEPadding = _.isBrowserIE() && visible;\n    this.eCenterViewport.style.height = \"calc(100% + \" + scrollSize + \"px)\";\n\n    _.setFixedHeight(this.eHorizontalScrollBody, scrollContainerSize); // we have to add an extra pixel to the scroller viewport on IE because\n    // if the container has the same size as the scrollbar, the scroll button won't work\n\n\n    _.setFixedHeight(this.eBodyHorizontalScrollViewport, scrollContainerSize + (addIEPadding ? 1 : 0));\n\n    _.setFixedHeight(this.eBodyHorizontalScrollContainer, scrollContainerSize);\n  };\n\n  GridPanel.prototype.setVerticalScrollPaddingVisible = function (show) {\n    var scroller = show ? 'scroll' : 'hidden';\n    this.eTop.style.overflowY = this.eBottom.style.overflowY = scroller;\n    this.setFakeHScrollSpacerWidths();\n  };\n\n  GridPanel.prototype.updateRowCount = function () {\n    var headerCount = this.headerNavigationService.getHeaderRowCount();\n    var rowCount = this.paginationProxy.getRowCount();\n    var total = (headerCount + rowCount).toString();\n    this.getGui().setAttribute('aria-rowcount', total);\n  };\n\n  GridPanel.prototype.updateColumnCount = function () {\n    var columns = this.columnController.getAllDisplayedColumns();\n    this.getGui().setAttribute('aria-colcount', columns.length.toString());\n  };\n\n  GridPanel.prototype.ensureColumnVisible = function (key) {\n    var column = this.columnController.getGridColumn(key);\n\n    if (!column) {\n      return;\n    }\n\n    if (column.isPinned()) {\n      console.warn('calling ensureIndexVisible on a ' + column.getPinned() + ' pinned column doesn\\'t make sense for column ' + column.getColId());\n      return;\n    }\n\n    if (!this.columnController.isColumnDisplayed(column)) {\n      console.warn('column is not currently visible');\n      return;\n    }\n\n    var colLeftPixel = column.getLeft();\n    var colRightPixel = colLeftPixel + column.getActualWidth();\n    var viewportWidth = this.eCenterViewport.clientWidth;\n    var scrollPosition = this.getCenterViewportScrollLeft();\n    var bodyWidth = this.columnController.getBodyContainerWidth();\n    var viewportLeftPixel;\n    var viewportRightPixel; // the logic of working out left and right viewport px is both here and in the ColumnController,\n    // need to refactor it out to one place\n\n    if (this.enableRtl) {\n      viewportLeftPixel = bodyWidth - scrollPosition - viewportWidth;\n      viewportRightPixel = bodyWidth - scrollPosition;\n    } else {\n      viewportLeftPixel = scrollPosition;\n      viewportRightPixel = viewportWidth + scrollPosition;\n    }\n\n    var viewportScrolledPastCol = viewportLeftPixel > colLeftPixel;\n    var viewportScrolledBeforeCol = viewportRightPixel < colRightPixel;\n    var colToSmallForViewport = viewportWidth < column.getActualWidth();\n    var alignColToLeft = viewportScrolledPastCol || colToSmallForViewport;\n    var alignColToRight = viewportScrolledBeforeCol;\n    var newScrollPosition = this.getCenterViewportScrollLeft();\n\n    if (alignColToLeft || alignColToRight) {\n      if (this.enableRtl) {\n        newScrollPosition = alignColToLeft ? bodyWidth - viewportWidth - colLeftPixel : bodyWidth - colRightPixel;\n      } else {\n        newScrollPosition = alignColToLeft ? colLeftPixel : colRightPixel - viewportWidth;\n      }\n\n      this.setCenterViewportScrollLeft(newScrollPosition);\n    } else {} // otherwise, col is already in view, so do nothing\n    // this will happen anyway, as the move will cause a 'scroll' event on the body, however\n    // it is possible that the ensureColumnVisible method is called from within ag-Grid and\n    // the caller will need to have the columns rendered to continue, which will be before\n    // the event has been worked on (which is the case for cell navigation).\n\n\n    this.onHorizontalViewportChanged(); // so when we return back to user, the cells have rendered\n\n    this.animationFrameService.flushAllFrames();\n  };\n\n  GridPanel.prototype.showLoadingOverlay = function () {\n    if (!this.gridOptionsWrapper.isSuppressLoadingOverlay()) {\n      this.overlayWrapper.showLoadingOverlay();\n    }\n  };\n\n  GridPanel.prototype.showNoRowsOverlay = function () {\n    if (!this.gridOptionsWrapper.isSuppressNoRowsOverlay()) {\n      this.overlayWrapper.showNoRowsOverlay();\n    }\n  };\n\n  GridPanel.prototype.hideOverlay = function () {\n    this.overlayWrapper.hideOverlay();\n  }; // method will call itself if no available width. this covers if the grid\n  // isn't visible, but is just about to be visible.\n\n\n  GridPanel.prototype.sizeColumnsToFit = function (nextTimeout) {\n    var _this = this;\n\n    var availableWidth = this.eBodyViewport.clientWidth;\n\n    if (availableWidth > 0) {\n      this.columnController.sizeColumnsToFit(availableWidth, \"sizeColumnsToFit\");\n      return;\n    }\n\n    if (nextTimeout === undefined) {\n      window.setTimeout(function () {\n        _this.sizeColumnsToFit(100);\n      }, 0);\n    } else if (nextTimeout === 100) {\n      window.setTimeout(function () {\n        _this.sizeColumnsToFit(500);\n      }, 100);\n    } else if (nextTimeout === 500) {\n      window.setTimeout(function () {\n        _this.sizeColumnsToFit(-1);\n      }, 500);\n    } else {\n      console.warn('ag-Grid: tried to call sizeColumnsToFit() but the grid is coming back with ' + 'zero width, maybe the grid is not visible yet on the screen?');\n    }\n  }; // used by autoWidthCalculator and autoHeightCalculator\n\n\n  GridPanel.prototype.getCenterContainer = function () {\n    return this.eCenterContainer;\n  };\n\n  GridPanel.prototype.getDropTargetBodyContainers = function () {\n    return [this.eCenterViewport, this.eTopViewport, this.eBottomViewport];\n  };\n\n  GridPanel.prototype.getDropTargetLeftContainers = function () {\n    return [this.eLeftContainer, this.eLeftBottom, this.eLeftTop];\n  };\n\n  GridPanel.prototype.getDropTargetRightContainers = function () {\n    return [this.eRightContainer, this.eRightBottom, this.eRightTop];\n  };\n\n  GridPanel.prototype.buildRowContainerComponents = function () {\n    var _this = this;\n\n    this.eAllCellContainers = [this.eLeftContainer, this.eRightContainer, this.eCenterContainer, this.eTop, this.eBottom, this.eFullWidthContainer];\n    this.rowContainerComponents = {\n      body: new RowContainerComponent({\n        eContainer: this.eCenterContainer,\n        eWrapper: this.eCenterColsClipper,\n        eViewport: this.eBodyViewport\n      }),\n      fullWidth: new RowContainerComponent({\n        eContainer: this.eFullWidthContainer\n      }),\n      pinnedLeft: new RowContainerComponent({\n        eContainer: this.eLeftContainer\n      }),\n      pinnedRight: new RowContainerComponent({\n        eContainer: this.eRightContainer\n      }),\n      floatingTop: new RowContainerComponent({\n        eContainer: this.eTopContainer\n      }),\n      floatingTopPinnedLeft: new RowContainerComponent({\n        eContainer: this.eLeftTop\n      }),\n      floatingTopPinnedRight: new RowContainerComponent({\n        eContainer: this.eRightTop\n      }),\n      floatingTopFullWidth: new RowContainerComponent({\n        eContainer: this.eTopFullWidthContainer,\n        hideWhenNoChildren: true\n      }),\n      floatingBottom: new RowContainerComponent({\n        eContainer: this.eBottomContainer\n      }),\n      floatingBottomPinnedLeft: new RowContainerComponent({\n        eContainer: this.eLeftBottom\n      }),\n      floatingBottomPinnedRight: new RowContainerComponent({\n        eContainer: this.eRightBottom\n      }),\n      floatingBottomFullWidth: new RowContainerComponent({\n        eContainer: this.eBottomFullWidthContainer,\n        hideWhenNoChildren: true\n      })\n    };\n\n    _.iterateObject(this.rowContainerComponents, function (key, container) {\n      if (container) {\n        _this.getContext().createBean(container);\n      }\n    });\n  };\n\n  GridPanel.prototype.setupRowAnimationCssClass = function () {\n    var _this = this;\n\n    var listener = function () {\n      // we don't want to use row animation if scaling, as rows jump strangely as you scroll,\n      // when scaling and doing row animation.\n      var animateRows = _this.gridOptionsWrapper.isAnimateRows() && !_this.heightScaler.isScaling();\n\n      _.addOrRemoveCssClass(_this.eBodyViewport, 'ag-row-animation', animateRows);\n\n      _.addOrRemoveCssClass(_this.eBodyViewport, 'ag-row-no-animation', !animateRows);\n    };\n\n    listener();\n    this.addManagedListener(this.eventService, Events.EVENT_HEIGHT_SCALE_CHANGED, listener);\n  }; // when editing a pinned row, if the cell is half outside the scrollable area, the browser can\n  // scroll the column into view. we do not want this, the pinned sections should never scroll.\n  // so we listen to scrolls on these containers and reset the scroll if we find one.\n\n\n  GridPanel.prototype.suppressScrollOnFloatingRow = function () {\n    var _this = this;\n\n    var resetTopScroll = function () {\n      return _this.eTopViewport.scrollLeft = 0;\n    };\n\n    var resetBottomScroll = function () {\n      return _this.eTopViewport.scrollLeft = 0;\n    };\n\n    this.addManagedListener(this.eTopViewport, 'scroll', resetTopScroll);\n    this.addManagedListener(this.eBottomViewport, 'scroll', resetBottomScroll);\n  };\n\n  GridPanel.prototype.getRowContainers = function () {\n    return this.rowContainerComponents;\n  };\n\n  GridPanel.prototype.getFloatingTopBottom = function () {\n    return [this.eTop, this.eBottom];\n  };\n\n  GridPanel.prototype.onDisplayedColumnsChanged = function () {\n    this.setPinnedContainerSize();\n    this.setHeaderAndFloatingHeights();\n    this.onHorizontalViewportChanged();\n    this.updateScrollVisibleService();\n    this.updateColumnCount();\n  };\n\n  GridPanel.prototype.onDisplayedColumnsWidthChanged = function () {\n    this.setWidthsOfContainers();\n    this.onHorizontalViewportChanged();\n    this.updateScrollVisibleService();\n\n    if (this.enableRtl) {\n      // because RTL is all backwards, a change in the width of the row\n      // can cause a change in the scroll position, without a scroll event,\n      // because the scroll position in RTL is a function that depends on\n      // the width. to be convinced of this, take out this line, enable RTL,\n      // scroll all the way to the left and then resize a column\n      this.horizontallyScrollHeaderCenterAndFloatingCenter();\n    }\n  };\n\n  GridPanel.prototype.setWidthsOfContainers = function () {\n    this.setCenterWidth();\n    this.setPinnedContainerSize();\n  };\n\n  GridPanel.prototype.setCenterWidth = function () {\n    var _a = this,\n        headerRootComp = _a.headerRootComp,\n        columnController = _a.columnController;\n\n    var width = columnController.getBodyContainerWidth();\n\n    if (this.printLayout) {\n      var pinnedContainerWidths = columnController.getPinnedLeftContainerWidth() + columnController.getPinnedRightContainerWidth();\n      width += pinnedContainerWidths;\n    }\n\n    headerRootComp.setHeaderContainerWidth(width);\n    var widthPx = width + \"px\";\n    this.eCenterContainer.style.width = widthPx;\n    this.eBottomContainer.style.width = widthPx;\n    this.eTopContainer.style.width = widthPx;\n\n    if (!this.printLayout) {\n      this.eBodyHorizontalScrollContainer.style.width = widthPx;\n    }\n  };\n\n  GridPanel.prototype.setPinnedLeftWidth = function () {\n    var _this = this;\n\n    var oldPinning = this.pinningLeft;\n    var widthOfCols = this.columnController.getPinnedLeftContainerWidth();\n    var newPinning = this.pinningLeft = !this.printLayout && widthOfCols > 0;\n    var containers = [this.eLeftContainer, this.eLeftTop, this.eLeftBottom];\n\n    if (oldPinning !== newPinning) {\n      this.headerRootComp.setLeftVisible(newPinning);\n    }\n\n    containers.forEach(function (e) {\n      return _.setDisplayed(e, _this.pinningLeft);\n    });\n\n    if (newPinning) {\n      containers.forEach(function (ct) {\n        return _.setFixedWidth(ct, widthOfCols);\n      });\n    }\n  };\n\n  GridPanel.prototype.setPinnedRightWidth = function () {\n    var oldPinning = this.pinningRight;\n    var widthOfCols = this.columnController.getPinnedRightContainerWidth();\n    var newPinning = this.pinningRight = !this.printLayout && widthOfCols > 0;\n    var containers = [this.eRightContainer, this.eRightTop, this.eRightBottom];\n\n    if (oldPinning !== newPinning) {\n      this.headerRootComp.setRightVisible(newPinning);\n    }\n\n    containers.forEach(function (ct) {\n      return _.setDisplayed(ct, newPinning);\n    });\n\n    if (newPinning) {\n      containers.forEach(function (ct) {\n        return _.setFixedWidth(ct, widthOfCols);\n      });\n    }\n  };\n\n  GridPanel.prototype.setPinnedContainerSize = function () {\n    this.setPinnedLeftWidth();\n    this.setPinnedRightWidth();\n    this.setFakeHScrollSpacerWidths();\n  };\n\n  GridPanel.prototype.setFakeHScrollSpacerWidths = function () {\n    // we pad the right based on a) if cols are pinned to the right and\n    // b) if v scroll is showing on the right (normal position of scroll)\n    var rightSpacing = this.columnController.getPinnedRightContainerWidth();\n    var scrollOnRight = !this.enableRtl && this.isVerticalScrollShowing();\n\n    if (scrollOnRight) {\n      rightSpacing += this.scrollWidth;\n    }\n\n    _.setFixedWidth(this.eHorizontalRightSpacer, rightSpacing);\n\n    _.addOrRemoveCssClass(this.eHorizontalRightSpacer, 'ag-scroller-corner', rightSpacing <= this.scrollWidth); // we pad the left based on a) if cols are pinned to the left and\n    // b) if v scroll is showing on the left (happens in LTR layout only)\n\n\n    var leftSpacing = this.columnController.getPinnedLeftContainerWidth();\n    var scrollOnLeft = this.enableRtl && this.isVerticalScrollShowing();\n\n    if (scrollOnLeft) {\n      leftSpacing += this.scrollWidth;\n    }\n\n    _.setFixedWidth(this.eHorizontalLeftSpacer, leftSpacing);\n\n    _.addOrRemoveCssClass(this.eHorizontalLeftSpacer, 'ag-scroller-corner', leftSpacing <= this.scrollWidth);\n  };\n\n  GridPanel.prototype.checkBodyHeight = function () {\n    var bodyHeight = this.eBodyViewport.clientHeight;\n\n    if (this.bodyHeight !== bodyHeight) {\n      this.bodyHeight = bodyHeight;\n      var event_3 = {\n        type: Events.EVENT_BODY_HEIGHT_CHANGED,\n        api: this.gridApi,\n        columnApi: this.columnApi\n      };\n      this.eventService.dispatchEvent(event_3);\n    }\n  };\n\n  GridPanel.prototype.setHeaderAndFloatingHeights = function () {\n    var _a = this,\n        columnController = _a.columnController,\n        gridOptionsWrapper = _a.gridOptionsWrapper,\n        pinnedRowModel = _a.pinnedRowModel,\n        eTop = _a.eTop,\n        eBottom = _a.eBottom;\n\n    var numberOfFloating = 0;\n    var headerRowCount = columnController.getHeaderRowCount();\n    var totalHeaderHeight;\n    var groupHeight;\n    var headerHeight;\n\n    if (columnController.isPivotMode()) {\n      groupHeight = gridOptionsWrapper.getPivotGroupHeaderHeight();\n      headerHeight = gridOptionsWrapper.getPivotHeaderHeight();\n    } else {\n      var hasFloatingFilters = columnController.hasFloatingFilters();\n\n      if (hasFloatingFilters) {\n        headerRowCount++;\n        numberOfFloating = 1;\n      }\n\n      groupHeight = gridOptionsWrapper.getGroupHeaderHeight();\n      headerHeight = gridOptionsWrapper.getHeaderHeight();\n    }\n\n    var numberOfNonGroups = 1 + numberOfFloating;\n    var numberOfGroups = headerRowCount - numberOfNonGroups;\n    totalHeaderHeight = numberOfFloating * gridOptionsWrapper.getFloatingFiltersHeight();\n    totalHeaderHeight += numberOfGroups * groupHeight;\n    totalHeaderHeight += headerHeight;\n    this.headerRootComp.setHeight(totalHeaderHeight);\n    var floatingTopHeight = pinnedRowModel.getPinnedTopTotalHeight();\n\n    if (floatingTopHeight) {\n      // adding 1px for cell bottom border\n      floatingTopHeight += 1;\n    }\n\n    var floatingBottomHeight = pinnedRowModel.getPinnedBottomTotalHeight();\n\n    if (floatingBottomHeight) {\n      // adding 1px for cell bottom border\n      floatingBottomHeight += 1;\n    }\n\n    var floatingTopHeightString = floatingTopHeight + \"px\";\n    var floatingBottomHeightString = floatingBottomHeight + \"px\";\n    eTop.style.minHeight = floatingTopHeightString;\n    eTop.style.height = floatingTopHeightString;\n    eTop.style.display = floatingTopHeight ? 'inherit' : 'none';\n    eBottom.style.minHeight = floatingBottomHeightString;\n    eBottom.style.height = floatingBottomHeightString;\n    eBottom.style.display = floatingBottomHeight ? 'inherit' : 'none';\n    this.checkBodyHeight();\n  };\n\n  GridPanel.prototype.getBodyHeight = function () {\n    return this.bodyHeight;\n  }; // called by scrollHorizontally method and alignedGridsService\n\n\n  GridPanel.prototype.setHorizontalScrollPosition = function (hScrollPosition) {\n    this.eCenterViewport.scrollLeft = hScrollPosition; // we need to manually do the event handling (rather than wait for the event)\n    // for the alignedGridsService, as if we don't, the aligned grid service gets\n    // notified async, and then it's 'consuming' flag doesn't get used right, and\n    // we can end up with an infinite loop\n\n    this.doHorizontalScroll(hScrollPosition);\n  };\n\n  GridPanel.prototype.setVerticalScrollPosition = function (vScrollPosition) {\n    this.eBodyViewport.scrollTop = vScrollPosition;\n  }; // called by the headerRootComp and moveColumnController\n\n\n  GridPanel.prototype.scrollHorizontally = function (pixels) {\n    var oldScrollPosition = this.eCenterViewport.scrollLeft;\n    this.setHorizontalScrollPosition(oldScrollPosition + pixels);\n    return this.eCenterViewport.scrollLeft - oldScrollPosition;\n  }; // called by rowDragFeature\n\n\n  GridPanel.prototype.scrollVertically = function (pixels) {\n    var oldScrollPosition = this.eBodyViewport.scrollTop;\n    this.setVerticalScrollPosition(oldScrollPosition + pixels);\n    return this.eBodyViewport.scrollTop - oldScrollPosition;\n  };\n\n  GridPanel.prototype.addScrollListener = function () {\n    this.addManagedListener(this.eCenterViewport, 'scroll', this.onCenterViewportScroll.bind(this));\n    this.addManagedListener(this.eBodyHorizontalScrollViewport, 'scroll', this.onFakeHorizontalScroll.bind(this));\n    this.addManagedListener(this.eBodyViewport, 'scroll', this.onVerticalScroll.bind(this));\n  };\n\n  GridPanel.prototype.onVerticalScroll = function () {\n    var scrollTop = this.eBodyViewport.scrollTop;\n    this.animationFrameService.setScrollTop(scrollTop);\n    this.scrollTop = scrollTop;\n    this.redrawRowsAfterScroll();\n  };\n\n  GridPanel.prototype.isControllingScroll = function (eDiv) {\n    if (!this.lastHorizontalScrollElement) {\n      this.lastHorizontalScrollElement = eDiv;\n      return true;\n    }\n\n    return eDiv === this.lastHorizontalScrollElement;\n  };\n\n  GridPanel.prototype.onFakeHorizontalScroll = function () {\n    if (!this.isControllingScroll(this.eBodyHorizontalScrollViewport)) {\n      return;\n    }\n\n    this.onBodyHorizontalScroll(this.eBodyHorizontalScrollViewport);\n  };\n\n  GridPanel.prototype.onCenterViewportScroll = function () {\n    if (!this.isControllingScroll(this.eCenterViewport)) {\n      return;\n    }\n\n    this.onBodyHorizontalScroll(this.eCenterViewport);\n  };\n\n  GridPanel.prototype.onBodyHorizontalScroll = function (eSource) {\n    var _a = this.eCenterViewport,\n        scrollWidth = _a.scrollWidth,\n        clientWidth = _a.clientWidth; // in chrome, fractions can be in the scroll left, eg 250.342234 - which messes up our 'scrollWentPastBounds'\n    // formula. so we floor it to allow the formula to work.\n\n    var scrollLeft = Math.floor(_.getScrollLeft(eSource, this.enableRtl)); // touch devices allow elastic scroll - which temporally scrolls the panel outside of the viewport\n    // (eg user uses touch to go to the left of the grid, but drags past the left, the rows will actually\n    // scroll past the left until the user releases the mouse). when this happens, we want ignore the scroll,\n    // as otherwise it was causing the rows and header to flicker.\n    // sometimes when scrolling, we got values that extended the maximum scroll allowed. we used to\n    // ignore these scrolls. problem is the max scroll position could be skipped (eg the previous scroll event\n    // could be 10px before the max position, and then current scroll event could be 20px after the max position).\n    // if we just ignored the last event, we would be setting the scroll to 10px before the max position, when in\n    // actual fact the user has exceeded the max scroll and thus scroll should be set to the max.\n\n    var minScroll = 0;\n    var maxScroll = scrollWidth - clientWidth;\n\n    if (scrollLeft < minScroll) {\n      scrollLeft = minScroll;\n    } else if (scrollLeft > maxScroll) {\n      scrollLeft = maxScroll;\n    }\n\n    this.doHorizontalScroll(scrollLeft);\n    this.resetLastHorizontalScrollElementDebounced();\n  };\n\n  GridPanel.prototype.resetLastHorizontalScrollElement = function () {\n    this.lastHorizontalScrollElement = null;\n  };\n\n  GridPanel.prototype.doHorizontalScroll = function (scrollLeft) {\n    this.scrollLeft = scrollLeft;\n    var event = {\n      type: Events.EVENT_BODY_SCROLL,\n      api: this.gridApi,\n      columnApi: this.columnApi,\n      direction: 'horizontal',\n      left: this.scrollLeft,\n      top: this.scrollTop\n    };\n    this.eventService.dispatchEvent(event);\n    this.horizontallyScrollHeaderCenterAndFloatingCenter(scrollLeft);\n    this.onHorizontalViewportChanged();\n  };\n\n  GridPanel.prototype.redrawRowsAfterScroll = function () {\n    var event = {\n      type: Events.EVENT_BODY_SCROLL,\n      direction: 'vertical',\n      api: this.gridApi,\n      columnApi: this.columnApi,\n      left: this.scrollLeft,\n      top: this.scrollTop\n    };\n    this.eventService.dispatchEvent(event);\n  }; // this gets called whenever a change in the viewport, so we can inform column controller it has to work\n  // out the virtual columns again. gets called from following locations:\n  // + ensureColVisible, scroll, init, layoutChanged, displayedColumnsChanged, API (doLayout)\n\n\n  GridPanel.prototype.onHorizontalViewportChanged = function () {\n    var scrollWidth = this.eCenterViewport.clientWidth;\n    var scrollPosition = this.getCenterViewportScrollLeft();\n    this.columnController.setVirtualViewportPosition(scrollWidth, scrollPosition);\n  };\n\n  GridPanel.prototype.getCenterViewportScrollLeft = function () {\n    // we defer to a util, as how you calculated scrollLeft when doing RTL depends on the browser\n    return _.getScrollLeft(this.eCenterViewport, this.enableRtl);\n  };\n\n  GridPanel.prototype.setCenterViewportScrollLeft = function (value) {\n    // we defer to a util, as how you calculated scrollLeft when doing RTL depends on the browser\n    _.setScrollLeft(this.eCenterViewport, value, this.enableRtl);\n  };\n\n  GridPanel.prototype.horizontallyScrollHeaderCenterAndFloatingCenter = function (scrollLeft) {\n    if (scrollLeft === undefined) {\n      scrollLeft = this.getCenterViewportScrollLeft();\n    }\n\n    var offset = this.enableRtl ? scrollLeft : -scrollLeft;\n    var _a = this.eCenterViewport,\n        clientWidth = _a.clientWidth,\n        scrollWidth = _a.scrollWidth;\n    var scrollWentPastBounds = Math.abs(offset) + clientWidth > scrollWidth;\n\n    if (scrollWentPastBounds || this.enableRtl && offset < 0 || !this.enableRtl && offset > 0) {\n      return;\n    }\n\n    this.headerRootComp.setHorizontalScroll(offset);\n    this.eBottomContainer.style.transform = \"translateX(\" + offset + \"px)\";\n    this.eTopContainer.style.transform = \"translateX(\" + offset + \"px)\";\n    var partner = this.lastHorizontalScrollElement === this.eCenterViewport ? this.eBodyHorizontalScrollViewport : this.eCenterViewport;\n\n    _.setScrollLeft(partner, scrollLeft, this.enableRtl);\n  }; // + rangeController\n\n\n  GridPanel.prototype.addScrollEventListener = function (listener) {\n    this.eBodyViewport.addEventListener('scroll', listener);\n  }; // + rangeController\n\n\n  GridPanel.prototype.removeScrollEventListener = function (listener) {\n    this.eBodyViewport.removeEventListener('scroll', listener);\n  };\n\n  __decorate([Autowired('alignedGridsService')], GridPanel.prototype, \"alignedGridsService\", void 0);\n\n  __decorate([Autowired('gridOptionsWrapper')], GridPanel.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([Autowired('rowRenderer')], GridPanel.prototype, \"rowRenderer\", void 0);\n\n  __decorate([Autowired('pinnedRowModel')], GridPanel.prototype, \"pinnedRowModel\", void 0);\n\n  __decorate([Autowired('animationFrameService')], GridPanel.prototype, \"animationFrameService\", void 0);\n\n  __decorate([Autowired('navigationService')], GridPanel.prototype, \"navigationService\", void 0);\n\n  __decorate([Autowired('autoHeightCalculator')], GridPanel.prototype, \"autoHeightCalculator\", void 0);\n\n  __decorate([Autowired('columnAnimationService')], GridPanel.prototype, \"columnAnimationService\", void 0);\n\n  __decorate([Autowired('autoWidthCalculator')], GridPanel.prototype, \"autoWidthCalculator\", void 0);\n\n  __decorate([Autowired('paginationAutoPageSizeService')], GridPanel.prototype, \"paginationAutoPageSizeService\", void 0);\n\n  __decorate([Autowired('beans')], GridPanel.prototype, \"beans\", void 0);\n\n  __decorate([Autowired('paginationProxy')], GridPanel.prototype, \"paginationProxy\", void 0);\n\n  __decorate([Autowired('columnApi')], GridPanel.prototype, \"columnApi\", void 0);\n\n  __decorate([Autowired('gridApi')], GridPanel.prototype, \"gridApi\", void 0);\n\n  __decorate([Autowired('dragService')], GridPanel.prototype, \"dragService\", void 0);\n\n  __decorate([Autowired('mouseEventService')], GridPanel.prototype, \"mouseEventService\", void 0);\n\n  __decorate([Autowired('$scope')], GridPanel.prototype, \"$scope\", void 0);\n\n  __decorate([Autowired('scrollVisibleService')], GridPanel.prototype, \"scrollVisibleService\", void 0);\n\n  __decorate([Autowired('valueService')], GridPanel.prototype, \"valueService\", void 0);\n\n  __decorate([Autowired('dragAndDropService')], GridPanel.prototype, \"dragAndDropService\", void 0);\n\n  __decorate([Autowired('maxDivHeightScaler')], GridPanel.prototype, \"heightScaler\", void 0);\n\n  __decorate([Autowired('resizeObserverService')], GridPanel.prototype, \"resizeObserverService\", void 0);\n\n  __decorate([Autowired('undoRedoService')], GridPanel.prototype, \"undoRedoService\", void 0);\n\n  __decorate([Autowired('columnController')], GridPanel.prototype, \"columnController\", void 0);\n\n  __decorate([Autowired('headerNavigationService')], GridPanel.prototype, \"headerNavigationService\", void 0);\n\n  __decorate([Optional('rangeController')], GridPanel.prototype, \"rangeController\", void 0);\n\n  __decorate([Optional('contextMenuFactory')], GridPanel.prototype, \"contextMenuFactory\", void 0);\n\n  __decorate([Optional('clipboardService')], GridPanel.prototype, \"clipboardService\", void 0);\n\n  __decorate([RefSelector('eBodyViewport')], GridPanel.prototype, \"eBodyViewport\", void 0);\n\n  __decorate([RefSelector('eCenterContainer')], GridPanel.prototype, \"eCenterContainer\", void 0);\n\n  __decorate([RefSelector('eCenterViewport')], GridPanel.prototype, \"eCenterViewport\", void 0);\n\n  __decorate([RefSelector('eLeftContainer')], GridPanel.prototype, \"eLeftContainer\", void 0);\n\n  __decorate([RefSelector('eRightContainer')], GridPanel.prototype, \"eRightContainer\", void 0);\n\n  __decorate([RefSelector('eCenterColsClipper')], GridPanel.prototype, \"eCenterColsClipper\", void 0);\n\n  __decorate([RefSelector('eHorizontalScrollBody')], GridPanel.prototype, \"eHorizontalScrollBody\", void 0);\n\n  __decorate([RefSelector('eHorizontalLeftSpacer')], GridPanel.prototype, \"eHorizontalLeftSpacer\", void 0);\n\n  __decorate([RefSelector('eHorizontalRightSpacer')], GridPanel.prototype, \"eHorizontalRightSpacer\", void 0);\n\n  __decorate([RefSelector('eBodyHorizontalScrollViewport')], GridPanel.prototype, \"eBodyHorizontalScrollViewport\", void 0);\n\n  __decorate([RefSelector('eBodyHorizontalScrollContainer')], GridPanel.prototype, \"eBodyHorizontalScrollContainer\", void 0);\n\n  __decorate([RefSelector('eFullWidthContainer')], GridPanel.prototype, \"eFullWidthContainer\", void 0);\n\n  __decorate([RefSelector('eTop')], GridPanel.prototype, \"eTop\", void 0);\n\n  __decorate([RefSelector('eLeftTop')], GridPanel.prototype, \"eLeftTop\", void 0);\n\n  __decorate([RefSelector('eRightTop')], GridPanel.prototype, \"eRightTop\", void 0);\n\n  __decorate([RefSelector('eTopContainer')], GridPanel.prototype, \"eTopContainer\", void 0);\n\n  __decorate([RefSelector('eTopViewport')], GridPanel.prototype, \"eTopViewport\", void 0);\n\n  __decorate([RefSelector('eTopFullWidthContainer')], GridPanel.prototype, \"eTopFullWidthContainer\", void 0);\n\n  __decorate([RefSelector('eBottom')], GridPanel.prototype, \"eBottom\", void 0);\n\n  __decorate([RefSelector('eLeftBottom')], GridPanel.prototype, \"eLeftBottom\", void 0);\n\n  __decorate([RefSelector('eRightBottom')], GridPanel.prototype, \"eRightBottom\", void 0);\n\n  __decorate([RefSelector('eBottomContainer')], GridPanel.prototype, \"eBottomContainer\", void 0);\n\n  __decorate([RefSelector('eBottomViewport')], GridPanel.prototype, \"eBottomViewport\", void 0);\n\n  __decorate([RefSelector('eBottomFullWidthContainer')], GridPanel.prototype, \"eBottomFullWidthContainer\", void 0);\n\n  __decorate([RefSelector('headerRoot')], GridPanel.prototype, \"headerRootComp\", void 0);\n\n  __decorate([RefSelector('overlayWrapper')], GridPanel.prototype, \"overlayWrapper\", void 0);\n\n  __decorate([PostConstruct], GridPanel.prototype, \"init\", null);\n\n  return GridPanel;\n}(Component);\n\nexport { GridPanel };","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/@ag-grid-community/core/dist/es6/gridPanel/gridPanel.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","GridOptionsWrapper","Autowired","Optional","PostConstruct","Events","Constants","RowContainerComponent","RowComp","TouchListener","RowDragFeature","Component","RefSelector","ModuleRegistry","ModuleNames","_","GRID_PANEL_NORMAL_TEMPLATE","GridPanel","_super","_this","call","scrollLeft","scrollTop","resetLastHorizontalScrollElementDebounced","debounce","resetLastHorizontalScrollElement","bind","getVScrollPosition","result","top","eBodyViewport","bottom","offsetHeight","getHScrollPosition","left","eCenterViewport","right","offsetWidth","onRowDataChanged","showOrHideOverlay","isEmpty","paginationProxy","isSuppressNoRowsOverlay","gridOptionsWrapper","method","onNewColumnsLoaded","beans","columnController","isReady","hideOverlay","init","scrollWidth","getScrollbarWidth","enableRtl","isEnableRtl","printLayout","getDomLayout","DOM_LAYOUT_PRINT","addLayoutElement","getGui","suppressScrollOnFloatingRow","setupRowAnimationCssClass","buildRowContainerComponents","addEventListeners","addDragListeners","addScrollListener","isRowModelDefault","getRowData","showLoadingOverlay","setCellTextSelection","isEnableCellTextSelect","setPinnedContainerSize","setHeaderAndFloatingHeights","disableBrowserDragging","addMouseListeners","addKeyboardEvents","addBodyViewportListener","addStopEditingWhenGridLosesFocus","mockContextMenuForIPad","addRowDragListener","$scope","addAngularApplyCheck","onDisplayedColumnsWidthChanged","gridApi","registerGridComp","alignedGridsService","headerRootComp","navigationService","headerNavigationService","heightScaler","autoHeightCalculator","columnAnimationService","autoWidthCalculator","paginationAutoPageSizeService","mouseEventService","rowRenderer","rangeController","forEach","viewport","unsubscribeFromResize","resizeObserverService","observeResize","onCenterViewportResized","addDestroyFunc","eTop","eBottom","element","addManagedListener","addCssClass","e","contains","relatedTarget","removeCssClass","onDomLayoutChanged","newPrintLayout","setWidthsOfContainers","isVisible","checkViewportAndScrolls","refreshFlexedColumns","getCenterWidth","bodyHeight","setColumnMovingCss","moving","addOrRemoveCssClass","selectable","ct","rowDragFeature","createManagedBean","dragAndDropService","addDropTarget","getRowDragFeature","isStopEditingWhenGridLosesFocus","viewports","focusOutListener","event","elementWithFocus","getTabIndex","stopEditing","clickInsideGrid","some","popupService","getActivePopups","popup","isElementWithinCustomPopup","applyTriggered","listener","window","setTimeout","$apply","eventService","EVENT_DISPLAYED_COLUMNS_CHANGED","EVENT_VIRTUAL_COLUMNS_CHANGED","addGuiEventListener","HTMLImageElement","preventDefault","onDisplayedColumnsChanged","EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED","EVENT_PINNED_ROW_DATA_CHANGED","EVENT_ROW_DATA_CHANGED","EVENT_ROW_DATA_UPDATED","EVENT_NEW_COLUMNS_LOADED","PROP_HEADER_HEIGHT","PROP_PIVOT_HEADER_HEIGHT","PROP_GROUP_HEADER_HEIGHT","PROP_PIVOT_GROUP_HEADER_HEIGHT","PROP_FLOATING_FILTERS_HEIGHT","PROP_DOM_LAYOUT","isEnableRangeSelection","missing","containers","eLeftContainer","eRightContainer","eCenterContainer","container","params","eElement","onDragStart","onDragStop","onDragging","dragService","addDragSource","removeDragSource","eventNames","eventName","processMouseEvent","eAllCellContainers","processKeyboardEvent","mouseEvent","getTarget","onContextMenu","preventDefaultOnContextMenu","getBodyClientRect","getBoundingClientRect","getRowForEvent","sourceElement","renderedRow","getDomData","DOM_DATA_KEY_RENDERED_ROW","parentElement","keyboardEvent","cellComp","getCellCompForEvent","defaultPrevented","rowNode","getRenderedRow","getRowNode","column","getColumn","editing","isEditing","gridProcessingAllowed","isUserSuppressingKeyboardEvent","wasScrollKey","handlePageScrollingKey","onKeyDown","doGridOperations","onKeyPress","cellKeyDownEvent","createEvent","EVENT_CELL_KEY_DOWN","dispatchEvent","cellKeyPressEvent","EVENT_CELL_KEY_PRESS","ctrlKey","metaKey","isEventFromThisGrid","which","KEY_A","onCtrlAndA","KEY_C","onCtrlAndC","KEY_V","onCtrlAndV","KEY_D","onCtrlAndD","KEY_Z","shiftKey","undoRedoService","redo","undo","KEY_Y","scrollToTop","isStopPropagationForAgGrid","rowComp","getRenderedCellForEvent","handleContextMenuMouseEvent","onMouseEvent","isIOSUserAgent","touchListener","longTapListener","touchEvent","EVENT_LONG_TAP","destroy","value","event_1","dispatchCellContextMenuEvent","valueService","getValue","isAllowContextMenuWithControlKey","contextMenuFactory","isSuppressContextMenu","eventOrTouch","touches","showMenu","event_2","isPreventDefaultOnContextMenu","isSuppressMiddleClickScrolls","_a","pinnedRowModel","PINNED_BOTTOM","PINNED_TOP","isRowsToRender","_b","isEmptyPinnedTop","isEmptyPinnedBottom","floatingStart","floatingEnd","rowEnd","getRowCount","getPinnedBottomRowData","allDisplayedColumns","getAllDisplayedColumns","missingOrEmpty","setCellRange","rowStartIndex","rowStartPinned","rowEndIndex","rowEndPinned","columnStart","columnEnd","last","clipboardService","isEnableCellTextSelection","copyToClipboard","isRegistered","ClipboardModule","isSuppressClipboardPaste","pasteFromClipboard","copyRangeDown","ensureIndexVisible","index","position","rowCount","console","warn","goToPageWithIndex","getRow","rowGotShiftedDuringOperation","startingRowTop","rowTop","startingRowHeight","rowHeight","paginationOffset","getPixelOffset","rowTopPixel","rowBottomPixel","scrollPosition","heightOffset","getOffset","vScrollTop","vScrollBottom","viewportHeight","pxTop","getScrollPositionForPixel","pxBottom","pxMiddle","Math","min","rowBelowViewport","rowAboveViewport","newScrollPosition","redrawAfterScroll","animationFrameService","flushAllFrames","clientWidth","isVerticalScrollShowing","isAlwaysShowVerticalScroll","isHorizontalScrollShowing","updateScrollVisibleService","checkBodyHeight","onHorizontalViewportChanged","getCenterViewportScrollLeft","onBodyHorizontalScroll","updateScrollVisibleServiceImpl","horizontalScrollShowing","verticalScrollShowing","scrollVisibleService","setScrollsVisible","setHorizontalScrollVisible","setVerticalScrollPaddingVisible","visible","isSuppressHorizontalScroll","scrollSize","scrollContainerSize","addIEPadding","isBrowserIE","style","height","setFixedHeight","eHorizontalScrollBody","eBodyHorizontalScrollViewport","eBodyHorizontalScrollContainer","show","scroller","overflowY","setFakeHScrollSpacerWidths","updateRowCount","headerCount","getHeaderRowCount","total","toString","setAttribute","updateColumnCount","columns","ensureColumnVisible","getGridColumn","isPinned","getPinned","getColId","isColumnDisplayed","colLeftPixel","getLeft","colRightPixel","getActualWidth","viewportWidth","bodyWidth","getBodyContainerWidth","viewportLeftPixel","viewportRightPixel","viewportScrolledPastCol","viewportScrolledBeforeCol","colToSmallForViewport","alignColToLeft","alignColToRight","setCenterViewportScrollLeft","isSuppressLoadingOverlay","overlayWrapper","showNoRowsOverlay","sizeColumnsToFit","nextTimeout","availableWidth","undefined","getCenterContainer","getDropTargetBodyContainers","eTopViewport","eBottomViewport","getDropTargetLeftContainers","eLeftBottom","eLeftTop","getDropTargetRightContainers","eRightBottom","eRightTop","eFullWidthContainer","rowContainerComponents","body","eContainer","eWrapper","eCenterColsClipper","eViewport","fullWidth","pinnedLeft","pinnedRight","floatingTop","eTopContainer","floatingTopPinnedLeft","floatingTopPinnedRight","floatingTopFullWidth","eTopFullWidthContainer","hideWhenNoChildren","floatingBottom","eBottomContainer","floatingBottomPinnedLeft","floatingBottomPinnedRight","floatingBottomFullWidth","eBottomFullWidthContainer","iterateObject","getContext","createBean","animateRows","isAnimateRows","isScaling","EVENT_HEIGHT_SCALE_CHANGED","resetTopScroll","resetBottomScroll","getRowContainers","getFloatingTopBottom","horizontallyScrollHeaderCenterAndFloatingCenter","setCenterWidth","width","pinnedContainerWidths","getPinnedLeftContainerWidth","getPinnedRightContainerWidth","setHeaderContainerWidth","widthPx","setPinnedLeftWidth","oldPinning","pinningLeft","widthOfCols","newPinning","setLeftVisible","setDisplayed","setFixedWidth","setPinnedRightWidth","pinningRight","setRightVisible","rightSpacing","scrollOnRight","eHorizontalRightSpacer","leftSpacing","scrollOnLeft","eHorizontalLeftSpacer","clientHeight","event_3","type","EVENT_BODY_HEIGHT_CHANGED","api","columnApi","numberOfFloating","headerRowCount","totalHeaderHeight","groupHeight","headerHeight","isPivotMode","getPivotGroupHeaderHeight","getPivotHeaderHeight","hasFloatingFilters","getGroupHeaderHeight","getHeaderHeight","numberOfNonGroups","numberOfGroups","getFloatingFiltersHeight","setHeight","floatingTopHeight","getPinnedTopTotalHeight","floatingBottomHeight","getPinnedBottomTotalHeight","floatingTopHeightString","floatingBottomHeightString","minHeight","display","getBodyHeight","setHorizontalScrollPosition","hScrollPosition","doHorizontalScroll","setVerticalScrollPosition","vScrollPosition","scrollHorizontally","pixels","oldScrollPosition","scrollVertically","onCenterViewportScroll","onFakeHorizontalScroll","onVerticalScroll","setScrollTop","redrawRowsAfterScroll","isControllingScroll","eDiv","lastHorizontalScrollElement","eSource","floor","getScrollLeft","minScroll","maxScroll","EVENT_BODY_SCROLL","direction","setVirtualViewportPosition","setScrollLeft","offset","scrollWentPastBounds","abs","setHorizontalScroll","transform","partner","addScrollEventListener","addEventListener","removeScrollEventListener","removeEventListener"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { GridOptionsWrapper } from '../gridOptionsWrapper';\nimport { Autowired, Optional, PostConstruct } from '../context/context';\nimport { Events } from '../events';\nimport { Constants } from '../constants';\nimport { RowContainerComponent } from '../rendering/rowContainerComponent';\nimport { RowComp } from '../rendering/rowComp';\nimport { TouchListener } from '../widgets/touchListener';\nimport { RowDragFeature } from './rowDragFeature';\nimport { Component } from '../widgets/component';\nimport { RefSelector } from '../widgets/componentAnnotations';\nimport { ModuleRegistry } from '../modules/moduleRegistry';\nimport { ModuleNames } from '../modules/moduleNames';\nimport { _ } from \"../utils\";\n// in the html below, it is important that there are no white space between some of the divs, as if there is white space,\n// it won't render correctly in safari, as safari renders white space as a gap\nvar GRID_PANEL_NORMAL_TEMPLATE = /* html */ \"<div class=\\\"ag-root ag-unselectable\\\" role=\\\"grid\\\" unselectable=\\\"on\\\">\\n        <ag-header-root ref=\\\"headerRoot\\\" unselectable=\\\"on\\\"></ag-header-root>\\n        <div class=\\\"ag-floating-top\\\" ref=\\\"eTop\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\">\\n            <div class=\\\"ag-pinned-left-floating-top\\\" ref=\\\"eLeftTop\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            <div class=\\\"ag-floating-top-viewport\\\" ref=\\\"eTopViewport\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\">\\n                <div class=\\\"ag-floating-top-container\\\" ref=\\\"eTopContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            </div>\\n            <div class=\\\"ag-pinned-right-floating-top\\\" ref=\\\"eRightTop\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            <div class=\\\"ag-floating-top-full-width-container\\\" ref=\\\"eTopFullWidthContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n        </div>\\n        <div class=\\\"ag-body-viewport\\\" ref=\\\"eBodyViewport\\\" role=\\\"presentation\\\">\\n            <div class=\\\"ag-pinned-left-cols-container\\\" ref=\\\"eLeftContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            <div class=\\\"ag-center-cols-clipper\\\" ref=\\\"eCenterColsClipper\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\">\\n                <div class=\\\"ag-center-cols-viewport\\\" ref=\\\"eCenterViewport\\\" role=\\\"presentation\\\">\\n                    <div class=\\\"ag-center-cols-container\\\" ref=\\\"eCenterContainer\\\" role=\\\"rowgroup\\\" unselectable=\\\"on\\\"></div>\\n                </div>\\n            </div>\\n            <div class=\\\"ag-pinned-right-cols-container\\\" ref=\\\"eRightContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            <div class=\\\"ag-full-width-container\\\" ref=\\\"eFullWidthContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n        </div>\\n        <div class=\\\"ag-floating-bottom\\\" ref=\\\"eBottom\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\">\\n            <div class=\\\"ag-pinned-left-floating-bottom\\\" ref=\\\"eLeftBottom\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            <div class=\\\"ag-floating-bottom-viewport\\\" ref=\\\"eBottomViewport\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\">\\n                <div class=\\\"ag-floating-bottom-container\\\" ref=\\\"eBottomContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            </div>\\n            <div class=\\\"ag-pinned-right-floating-bottom\\\" ref=\\\"eRightBottom\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            <div class=\\\"ag-floating-bottom-full-width-container\\\" ref=\\\"eBottomFullWidthContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n        </div>\\n        <div class=\\\"ag-body-horizontal-scroll\\\" ref=\\\"eHorizontalScrollBody\\\" aria-hidden=\\\"true\\\">\\n            <div class=\\\"ag-horizontal-left-spacer\\\" ref=\\\"eHorizontalLeftSpacer\\\"></div>\\n            <div class=\\\"ag-body-horizontal-scroll-viewport\\\" ref=\\\"eBodyHorizontalScrollViewport\\\">\\n                <div class=\\\"ag-body-horizontal-scroll-container\\\" ref=\\\"eBodyHorizontalScrollContainer\\\"></div>\\n            </div>\\n            <div class=\\\"ag-horizontal-right-spacer\\\" ref=\\\"eHorizontalRightSpacer\\\"></div>\\n        </div>\\n        <ag-overlay-wrapper ref=\\\"overlayWrapper\\\"></ag-overlay-wrapper>\\n    </div>\";\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super.call(this, GRID_PANEL_NORMAL_TEMPLATE) || this;\n        _this.scrollLeft = -1;\n        _this.scrollTop = -1;\n        _this.resetLastHorizontalScrollElementDebounced = _.debounce(_this.resetLastHorizontalScrollElement.bind(_this), 500);\n        return _this;\n    }\n    GridPanel.prototype.getVScrollPosition = function () {\n        var result = {\n            top: this.eBodyViewport.scrollTop,\n            bottom: this.eBodyViewport.scrollTop + this.eBodyViewport.offsetHeight\n        };\n        return result;\n    };\n    GridPanel.prototype.getHScrollPosition = function () {\n        var result = {\n            left: this.eCenterViewport.scrollLeft,\n            right: this.eCenterViewport.scrollLeft + this.eCenterViewport.offsetWidth\n        };\n        return result;\n    };\n    GridPanel.prototype.onRowDataChanged = function () {\n        this.showOrHideOverlay();\n    };\n    GridPanel.prototype.showOrHideOverlay = function () {\n        var isEmpty = this.paginationProxy.isEmpty();\n        var isSuppressNoRowsOverlay = this.gridOptionsWrapper.isSuppressNoRowsOverlay();\n        var method = isEmpty && !isSuppressNoRowsOverlay ? 'showNoRowsOverlay' : 'hideOverlay';\n        this[method]();\n    };\n    GridPanel.prototype.onNewColumnsLoaded = function () {\n        // hide overlay if columns and rows exist, this can happen if columns are loaded after data.\n        // this problem exists before of the race condition between the services (column controller in this case)\n        // and the view (grid panel). if the model beans were all initialised first, and then the view beans second,\n        // this race condition would not happen.\n        if (this.beans.columnController.isReady() && !this.paginationProxy.isEmpty()) {\n            this.hideOverlay();\n        }\n    };\n    GridPanel.prototype.init = function () {\n        var _this = this;\n        this.scrollWidth = this.gridOptionsWrapper.getScrollbarWidth();\n        this.enableRtl = this.gridOptionsWrapper.isEnableRtl();\n        this.printLayout = this.gridOptionsWrapper.getDomLayout() === Constants.DOM_LAYOUT_PRINT;\n        // these elements have different CSS when layout changes\n        this.gridOptionsWrapper.addLayoutElement(this.getGui());\n        this.gridOptionsWrapper.addLayoutElement(this.eBodyViewport);\n        this.suppressScrollOnFloatingRow();\n        this.setupRowAnimationCssClass();\n        this.buildRowContainerComponents();\n        this.addEventListeners();\n        this.addDragListeners();\n        this.addScrollListener();\n        if (this.gridOptionsWrapper.isRowModelDefault() && !this.gridOptionsWrapper.getRowData()) {\n            this.showLoadingOverlay();\n        }\n        this.setCellTextSelection(this.gridOptionsWrapper.isEnableCellTextSelect());\n        this.setPinnedContainerSize();\n        this.setHeaderAndFloatingHeights();\n        this.disableBrowserDragging();\n        this.addMouseListeners();\n        this.addKeyboardEvents();\n        this.addBodyViewportListener();\n        this.addStopEditingWhenGridLosesFocus();\n        this.mockContextMenuForIPad();\n        this.addRowDragListener();\n        if (this.$scope) {\n            this.addAngularApplyCheck();\n        }\n        this.onDisplayedColumnsWidthChanged();\n        this.gridApi.registerGridComp(this);\n        this.alignedGridsService.registerGridComp(this);\n        this.headerRootComp.registerGridComp(this);\n        this.navigationService.registerGridComp(this);\n        this.headerNavigationService.registerGridComp(this);\n        this.heightScaler.registerGridComp(this);\n        this.autoHeightCalculator.registerGridComp(this);\n        this.columnAnimationService.registerGridComp(this);\n        this.autoWidthCalculator.registerGridComp(this);\n        this.paginationAutoPageSizeService.registerGridComp(this);\n        this.mouseEventService.registerGridComp(this);\n        this.beans.registerGridComp(this);\n        this.rowRenderer.registerGridComp(this);\n        if (this.rangeController) {\n            this.rangeController.registerGridComp(this);\n        }\n        [this.eCenterViewport, this.eBodyViewport].forEach(function (viewport) {\n            var unsubscribeFromResize = _this.resizeObserverService.observeResize(viewport, _this.onCenterViewportResized.bind(_this));\n            _this.addDestroyFunc(function () { return unsubscribeFromResize(); });\n        });\n        [this.eTop, this.eBodyViewport, this.eBottom].forEach(function (element) {\n            _this.addManagedListener(element, 'focusin', function () {\n                _.addCssClass(element, 'ag-has-focus');\n            });\n            _this.addManagedListener(element, 'focusout', function (e) {\n                if (!element.contains(e.relatedTarget)) {\n                    _.removeCssClass(element, 'ag-has-focus');\n                }\n            });\n        });\n    };\n    GridPanel.prototype.onDomLayoutChanged = function () {\n        var newPrintLayout = this.gridOptionsWrapper.getDomLayout() === Constants.DOM_LAYOUT_PRINT;\n        if (this.printLayout !== newPrintLayout) {\n            this.printLayout = newPrintLayout;\n            this.setWidthsOfContainers();\n            // pinned containers are always hidden for print layout\n            this.setPinnedContainerSize();\n        }\n    };\n    GridPanel.prototype.onCenterViewportResized = function () {\n        if (_.isVisible(this.eCenterViewport)) {\n            this.checkViewportAndScrolls();\n            this.beans.columnController.refreshFlexedColumns(this.getCenterWidth());\n        }\n        else {\n            this.bodyHeight = 0;\n        }\n    };\n    // used by ColumnAnimationService\n    GridPanel.prototype.setColumnMovingCss = function (moving) {\n        this.addOrRemoveCssClass('ag-column-moving', moving);\n    };\n    GridPanel.prototype.setCellTextSelection = function (selectable) {\n        if (selectable === void 0) { selectable = false; }\n        [this.eTop, this.eBodyViewport, this.eBottom]\n            .forEach(function (ct) { return _.addOrRemoveCssClass(ct, 'ag-selectable', selectable); });\n    };\n    GridPanel.prototype.addRowDragListener = function () {\n        this.rowDragFeature = this.createManagedBean(new RowDragFeature(this.eBodyViewport, this));\n        this.dragAndDropService.addDropTarget(this.rowDragFeature);\n    };\n    GridPanel.prototype.getRowDragFeature = function () {\n        return this.rowDragFeature;\n    };\n    GridPanel.prototype.addStopEditingWhenGridLosesFocus = function () {\n        var _this = this;\n        if (!this.gridOptionsWrapper.isStopEditingWhenGridLosesFocus()) {\n            return;\n        }\n        var viewports = [this.eBodyViewport, this.eBottom, this.eTop];\n        var focusOutListener = function (event) {\n            // this is the element the focus is moving to\n            var elementWithFocus = event.relatedTarget;\n            if (_.getTabIndex(elementWithFocus) === null) {\n                _this.rowRenderer.stopEditing();\n                return;\n            }\n            var clickInsideGrid = viewports.some(function (viewport) { return viewport.contains(elementWithFocus); });\n            if (!clickInsideGrid) {\n                var popupService = _this.beans.popupService;\n                clickInsideGrid =\n                    popupService.getActivePopups().some(function (popup) { return popup.contains(elementWithFocus); }) ||\n                        popupService.isElementWithinCustomPopup(elementWithFocus);\n            }\n            if (!clickInsideGrid) {\n                _this.rowRenderer.stopEditing();\n            }\n        };\n        viewports.forEach(function (viewport) { return _this.addManagedListener(viewport, 'focusout', focusOutListener); });\n    };\n    GridPanel.prototype.addAngularApplyCheck = function () {\n        var _this = this;\n        // this makes sure if we queue up requests, we only execute oe\n        var applyTriggered = false;\n        var listener = function () {\n            // only need to do one apply at a time\n            if (applyTriggered) {\n                return;\n            }\n            applyTriggered = true; // mark 'need apply' to true\n            window.setTimeout(function () {\n                applyTriggered = false;\n                _this.$scope.$apply();\n            }, 0);\n        };\n        // these are the events we need to do an apply after - these are the ones that can end up\n        // with columns added or removed\n        this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, listener);\n        this.addManagedListener(this.eventService, Events.EVENT_VIRTUAL_COLUMNS_CHANGED, listener);\n    };\n    // if we do not do this, then the user can select a pic in the grid (eg an image in a custom cell renderer)\n    // and then that will start the browser native drag n' drop, which messes up with our own drag and drop.\n    GridPanel.prototype.disableBrowserDragging = function () {\n        this.addGuiEventListener('dragstart', function (event) {\n            if (event.target instanceof HTMLImageElement) {\n                event.preventDefault();\n                return false;\n            }\n        });\n    };\n    GridPanel.prototype.addEventListeners = function () {\n        this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this));\n        this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, this.onDisplayedColumnsWidthChanged.bind(this));\n        this.addManagedListener(this.eventService, Events.EVENT_PINNED_ROW_DATA_CHANGED, this.setHeaderAndFloatingHeights.bind(this));\n        this.addManagedListener(this.eventService, Events.EVENT_ROW_DATA_CHANGED, this.onRowDataChanged.bind(this));\n        this.addManagedListener(this.eventService, Events.EVENT_ROW_DATA_UPDATED, this.onRowDataChanged.bind(this));\n        this.addManagedListener(this.eventService, Events.EVENT_NEW_COLUMNS_LOADED, this.onNewColumnsLoaded.bind(this));\n        this.addManagedListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_HEADER_HEIGHT, this.setHeaderAndFloatingHeights.bind(this));\n        this.addManagedListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_PIVOT_HEADER_HEIGHT, this.setHeaderAndFloatingHeights.bind(this));\n        this.addManagedListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_GROUP_HEADER_HEIGHT, this.setHeaderAndFloatingHeights.bind(this));\n        this.addManagedListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_PIVOT_GROUP_HEADER_HEIGHT, this.setHeaderAndFloatingHeights.bind(this));\n        this.addManagedListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_FLOATING_FILTERS_HEIGHT, this.setHeaderAndFloatingHeights.bind(this));\n        this.addManagedListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_DOM_LAYOUT, this.onDomLayoutChanged.bind(this));\n    };\n    GridPanel.prototype.addDragListeners = function () {\n        var _this = this;\n        if (!this.gridOptionsWrapper.isEnableRangeSelection() || // no range selection if no property\n            _.missing(this.rangeController) // no range selection if not enterprise version\n        ) {\n            return;\n        }\n        var containers = [\n            this.eLeftContainer,\n            this.eRightContainer,\n            this.eCenterContainer,\n            this.eTop,\n            this.eBottom\n        ];\n        containers.forEach(function (container) {\n            var params = {\n                eElement: container,\n                onDragStart: _this.rangeController.onDragStart.bind(_this.rangeController),\n                onDragStop: _this.rangeController.onDragStop.bind(_this.rangeController),\n                onDragging: _this.rangeController.onDragging.bind(_this.rangeController)\n            };\n            _this.dragService.addDragSource(params);\n            _this.addDestroyFunc(function () { return _this.dragService.removeDragSource(params); });\n        });\n    };\n    GridPanel.prototype.addMouseListeners = function () {\n        var _this = this;\n        var eventNames = ['click', 'mousedown', 'dblclick', 'contextmenu', 'mouseover', 'mouseout'];\n        eventNames.forEach(function (eventName) {\n            var listener = _this.processMouseEvent.bind(_this, eventName);\n            _this.eAllCellContainers.forEach(function (container) {\n                return _this.addManagedListener(container, eventName, listener);\n            });\n        });\n    };\n    GridPanel.prototype.addKeyboardEvents = function () {\n        var _this = this;\n        var eventNames = ['keydown', 'keypress'];\n        eventNames.forEach(function (eventName) {\n            var listener = _this.processKeyboardEvent.bind(_this, eventName);\n            _this.eAllCellContainers.forEach(function (container) {\n                _this.addManagedListener(container, eventName, listener);\n            });\n        });\n    };\n    GridPanel.prototype.addBodyViewportListener = function () {\n        var _this = this;\n        // we want to listen for clicks directly on the eBodyViewport, so the user has a way of showing\n        // the context menu if no rows or columns are displayed, or user simply clicks outside of a cell\n        var listener = function (mouseEvent) {\n            var target = _.getTarget(mouseEvent);\n            if (target === _this.eBodyViewport || target === _this.eCenterViewport) {\n                // show it\n                _this.onContextMenu(mouseEvent, null, null, null, null);\n                _this.preventDefaultOnContextMenu(mouseEvent);\n            }\n        };\n        this.addManagedListener(this.eBodyViewport, 'contextmenu', listener);\n    };\n    // + rangeController - used to know when to scroll when user is dragging outside the\n    // main viewport while doing a range selection\n    GridPanel.prototype.getBodyClientRect = function () {\n        if (!this.eBodyViewport) {\n            return;\n        }\n        return this.eBodyViewport.getBoundingClientRect();\n    };\n    GridPanel.prototype.getRowForEvent = function (event) {\n        var sourceElement = _.getTarget(event);\n        while (sourceElement) {\n            var renderedRow = this.gridOptionsWrapper.getDomData(sourceElement, RowComp.DOM_DATA_KEY_RENDERED_ROW);\n            if (renderedRow) {\n                return renderedRow;\n            }\n            sourceElement = sourceElement.parentElement;\n        }\n        return null;\n    };\n    GridPanel.prototype.processKeyboardEvent = function (eventName, keyboardEvent) {\n        var cellComp = _.getCellCompForEvent(this.gridOptionsWrapper, keyboardEvent);\n        if (!cellComp || keyboardEvent.defaultPrevented) {\n            return;\n        }\n        var rowNode = cellComp.getRenderedRow().getRowNode();\n        var column = cellComp.getColumn();\n        var editing = cellComp.isEditing();\n        var gridProcessingAllowed = !_.isUserSuppressingKeyboardEvent(this.gridOptionsWrapper, keyboardEvent, rowNode, column, editing);\n        if (gridProcessingAllowed) {\n            switch (eventName) {\n                case 'keydown':\n                    // first see if it's a scroll key, page up / down, home / end etc\n                    var wasScrollKey = !editing && this.navigationService.handlePageScrollingKey(keyboardEvent);\n                    // if not a scroll key, then we pass onto cell\n                    if (!wasScrollKey) {\n                        cellComp.onKeyDown(keyboardEvent);\n                    }\n                    // perform clipboard and undo / redo operations\n                    this.doGridOperations(keyboardEvent, cellComp);\n                    break;\n                case 'keypress':\n                    cellComp.onKeyPress(keyboardEvent);\n                    break;\n            }\n        }\n        if (eventName === 'keydown') {\n            var cellKeyDownEvent = cellComp.createEvent(keyboardEvent, Events.EVENT_CELL_KEY_DOWN);\n            this.beans.eventService.dispatchEvent(cellKeyDownEvent);\n        }\n        if (eventName === 'keypress') {\n            var cellKeyPressEvent = cellComp.createEvent(keyboardEvent, Events.EVENT_CELL_KEY_PRESS);\n            this.beans.eventService.dispatchEvent(cellKeyPressEvent);\n        }\n    };\n    GridPanel.prototype.doGridOperations = function (keyboardEvent, cellComp) {\n        // check if ctrl or meta key pressed\n        if (!keyboardEvent.ctrlKey && !keyboardEvent.metaKey) {\n            return;\n        }\n        // if the cell the event came from is editing, then we do not\n        // want to do the default shortcut keys, otherwise the editor\n        // (eg a text field) would not be able to do the normal cut/copy/paste\n        if (cellComp.isEditing()) {\n            return;\n        }\n        // for copy / paste, we don't want to execute when the event\n        // was from a child grid (happens in master detail)\n        if (!this.mouseEventService.isEventFromThisGrid(keyboardEvent)) {\n            return;\n        }\n        switch (keyboardEvent.which) {\n            case Constants.KEY_A:\n                return this.onCtrlAndA(keyboardEvent);\n            case Constants.KEY_C:\n                return this.onCtrlAndC(keyboardEvent);\n            case Constants.KEY_V:\n                return this.onCtrlAndV();\n            case Constants.KEY_D:\n                return this.onCtrlAndD(keyboardEvent);\n            case Constants.KEY_Z:\n                return keyboardEvent.shiftKey ? this.undoRedoService.redo() : this.undoRedoService.undo();\n            case Constants.KEY_Y:\n                return this.undoRedoService.redo();\n        }\n    };\n    // gets called by rowRenderer when new data loaded, as it will want to scroll to the top\n    GridPanel.prototype.scrollToTop = function () {\n        this.eBodyViewport.scrollTop = 0;\n    };\n    GridPanel.prototype.processMouseEvent = function (eventName, mouseEvent) {\n        if (!this.mouseEventService.isEventFromThisGrid(mouseEvent) ||\n            _.isStopPropagationForAgGrid(mouseEvent)) {\n            return;\n        }\n        var rowComp = this.getRowForEvent(mouseEvent);\n        var cellComp = this.mouseEventService.getRenderedCellForEvent(mouseEvent);\n        if (eventName === \"contextmenu\") {\n            this.preventDefaultOnContextMenu(mouseEvent);\n            this.handleContextMenuMouseEvent(mouseEvent, null, rowComp, cellComp);\n        }\n        else {\n            if (cellComp) {\n                cellComp.onMouseEvent(eventName, mouseEvent);\n            }\n            if (rowComp) {\n                rowComp.onMouseEvent(eventName, mouseEvent);\n            }\n        }\n    };\n    GridPanel.prototype.mockContextMenuForIPad = function () {\n        var _this = this;\n        // we do NOT want this when not in iPad, otherwise we will be doing\n        if (!_.isIOSUserAgent()) {\n            return;\n        }\n        this.eAllCellContainers.forEach(function (container) {\n            var touchListener = new TouchListener(container);\n            var longTapListener = function (event) {\n                var rowComp = _this.getRowForEvent(event.touchEvent);\n                var cellComp = _this.mouseEventService.getRenderedCellForEvent(event.touchEvent);\n                _this.handleContextMenuMouseEvent(null, event.touchEvent, rowComp, cellComp);\n            };\n            _this.addManagedListener(touchListener, TouchListener.EVENT_LONG_TAP, longTapListener);\n            _this.addDestroyFunc(function () { return touchListener.destroy(); });\n        });\n    };\n    GridPanel.prototype.handleContextMenuMouseEvent = function (mouseEvent, touchEvent, rowComp, cellComp) {\n        var rowNode = rowComp ? rowComp.getRowNode() : null;\n        var column = cellComp ? cellComp.getColumn() : null;\n        var value = null;\n        if (column) {\n            var event_1 = mouseEvent ? mouseEvent : touchEvent;\n            cellComp.dispatchCellContextMenuEvent(event_1);\n            value = this.valueService.getValue(column, rowNode);\n        }\n        this.onContextMenu(mouseEvent, touchEvent, rowNode, column, value);\n    };\n    GridPanel.prototype.onContextMenu = function (mouseEvent, touchEvent, rowNode, column, value) {\n        // to allow us to debug in chrome, we ignore the event if ctrl is pressed.\n        // not everyone wants this, so first 'if' below allows to turn this hack off.\n        if (!this.gridOptionsWrapper.isAllowContextMenuWithControlKey()) {\n            // then do the check\n            if (mouseEvent && (mouseEvent.ctrlKey || mouseEvent.metaKey)) {\n                return;\n            }\n        }\n        if (this.contextMenuFactory && !this.gridOptionsWrapper.isSuppressContextMenu()) {\n            var eventOrTouch = mouseEvent ? mouseEvent : touchEvent.touches[0];\n            if (this.contextMenuFactory.showMenu(rowNode, column, value, eventOrTouch)) {\n                var event_2 = mouseEvent ? mouseEvent : touchEvent;\n                event_2.preventDefault();\n            }\n        }\n    };\n    GridPanel.prototype.preventDefaultOnContextMenu = function (mouseEvent) {\n        // if we don't do this, then middle click will never result in a 'click' event, as 'mousedown'\n        // will be consumed by the browser to mean 'scroll' (as you can scroll with the middle mouse\n        // button in the browser). so this property allows the user to receive middle button clicks if\n        // they want.\n        var gridOptionsWrapper = this.gridOptionsWrapper;\n        var which = mouseEvent.which;\n        if (gridOptionsWrapper.isPreventDefaultOnContextMenu() ||\n            (gridOptionsWrapper.isSuppressMiddleClickScrolls() && which === 2)) {\n            mouseEvent.preventDefault();\n        }\n    };\n    GridPanel.prototype.onCtrlAndA = function (event) {\n        var _a = this, beans = _a.beans, pinnedRowModel = _a.pinnedRowModel, paginationProxy = _a.paginationProxy, rangeController = _a.rangeController;\n        var PINNED_BOTTOM = Constants.PINNED_BOTTOM, PINNED_TOP = Constants.PINNED_TOP;\n        if (rangeController && paginationProxy.isRowsToRender()) {\n            var _b = [\n                pinnedRowModel.isEmpty(PINNED_TOP),\n                pinnedRowModel.isEmpty(PINNED_BOTTOM)\n            ], isEmptyPinnedTop = _b[0], isEmptyPinnedBottom = _b[1];\n            var floatingStart = isEmptyPinnedTop ? null : PINNED_TOP;\n            var floatingEnd = void 0;\n            var rowEnd = void 0;\n            if (isEmptyPinnedBottom) {\n                floatingEnd = null;\n                rowEnd = this.paginationProxy.getRowCount() - 1;\n            }\n            else {\n                floatingEnd = PINNED_BOTTOM;\n                rowEnd = pinnedRowModel.getPinnedBottomRowData().length - 1;\n            }\n            var allDisplayedColumns = beans.columnController.getAllDisplayedColumns();\n            if (_.missingOrEmpty(allDisplayedColumns)) {\n                return;\n            }\n            rangeController.setCellRange({\n                rowStartIndex: 0,\n                rowStartPinned: floatingStart,\n                rowEndIndex: rowEnd,\n                rowEndPinned: floatingEnd,\n                columnStart: allDisplayedColumns[0],\n                columnEnd: _.last(allDisplayedColumns)\n            });\n        }\n        event.preventDefault();\n    };\n    GridPanel.prototype.onCtrlAndC = function (event) {\n        if (!this.clipboardService || this.gridOptionsWrapper.isEnableCellTextSelection()) {\n            return;\n        }\n        this.clipboardService.copyToClipboard();\n        event.preventDefault();\n    };\n    GridPanel.prototype.onCtrlAndV = function () {\n        if (ModuleRegistry.isRegistered(ModuleNames.ClipboardModule) && !this.gridOptionsWrapper.isSuppressClipboardPaste()) {\n            this.clipboardService.pasteFromClipboard();\n        }\n    };\n    GridPanel.prototype.onCtrlAndD = function (event) {\n        if (ModuleRegistry.isRegistered(ModuleNames.ClipboardModule) && !this.gridOptionsWrapper.isSuppressClipboardPaste()) {\n            this.clipboardService.copyRangeDown();\n        }\n        event.preventDefault();\n    };\n    // Valid values for position are bottom, middle and top\n    // position should be {'top','middle','bottom', or undefined/null}.\n    // if undefined/null, then the grid will to the minimal amount of scrolling,\n    // eg if grid needs to scroll up, it scrolls until row is on top,\n    //    if grid needs to scroll down, it scrolls until row is on bottom,\n    //    if row is already in view, grid does not scroll\n    GridPanel.prototype.ensureIndexVisible = function (index, position) {\n        // if for print or auto height, everything is always visible\n        if (this.printLayout) {\n            return;\n        }\n        var rowCount = this.paginationProxy.getRowCount();\n        if (typeof index !== 'number' || index < 0 || index >= rowCount) {\n            console.warn('invalid row index for ensureIndexVisible: ' + index);\n            return;\n        }\n        this.paginationProxy.goToPageWithIndex(index);\n        var rowNode = this.paginationProxy.getRow(index);\n        var rowGotShiftedDuringOperation;\n        do {\n            var startingRowTop = rowNode.rowTop;\n            var startingRowHeight = rowNode.rowHeight;\n            var paginationOffset = this.paginationProxy.getPixelOffset();\n            var rowTopPixel = rowNode.rowTop - paginationOffset;\n            var rowBottomPixel = rowTopPixel + rowNode.rowHeight;\n            var scrollPosition = this.getVScrollPosition();\n            var heightOffset = this.heightScaler.getOffset();\n            var vScrollTop = scrollPosition.top + heightOffset;\n            var vScrollBottom = scrollPosition.bottom + heightOffset;\n            var viewportHeight = vScrollBottom - vScrollTop;\n            // work out the pixels for top, middle and bottom up front,\n            // make the if/else below easier to read\n            var pxTop = this.heightScaler.getScrollPositionForPixel(rowTopPixel);\n            var pxBottom = this.heightScaler.getScrollPositionForPixel(rowBottomPixel - viewportHeight);\n            // make sure if middle, the row is not outside the top of the grid\n            var pxMiddle = Math.min((pxTop + pxBottom) / 2, rowTopPixel);\n            var rowBelowViewport = vScrollTop > rowTopPixel;\n            var rowAboveViewport = vScrollBottom < rowBottomPixel;\n            var newScrollPosition = null;\n            if (position === 'top') {\n                newScrollPosition = pxTop;\n            }\n            else if (position === 'bottom') {\n                newScrollPosition = pxBottom;\n            }\n            else if (position === 'middle') {\n                newScrollPosition = pxMiddle;\n            }\n            else if (rowBelowViewport) {\n                // if row is before, scroll up with row at top\n                newScrollPosition = pxTop;\n            }\n            else if (rowAboveViewport) {\n                // if row is below, scroll down with row at bottom\n                newScrollPosition = pxBottom;\n            }\n            if (newScrollPosition !== null) {\n                this.eBodyViewport.scrollTop = newScrollPosition;\n                this.rowRenderer.redrawAfterScroll();\n            }\n            // the row can get shifted if during the rendering (during rowRenderer.redrawAfterScroll()),\n            // the height of a row changes due to lazy calculation of row heights when using\n            // colDef.autoHeight or gridOptions.getRowHeight.\n            // if row was shifted, then the position we scrolled to is incorrect.\n            rowGotShiftedDuringOperation = (startingRowTop !== rowNode.rowTop)\n                || (startingRowHeight !== rowNode.rowHeight);\n        } while (rowGotShiftedDuringOperation);\n        // so when we return back to user, the cells have rendered\n        this.animationFrameService.flushAllFrames();\n    };\n    // + moveColumnController\n    GridPanel.prototype.getCenterWidth = function () {\n        return this.eCenterViewport.clientWidth;\n    };\n    GridPanel.prototype.isVerticalScrollShowing = function () {\n        var isAlwaysShowVerticalScroll = this.gridOptionsWrapper.isAlwaysShowVerticalScroll();\n        _.addOrRemoveCssClass(this.eBodyViewport, 'ag-force-vertical-scroll', isAlwaysShowVerticalScroll);\n        return isAlwaysShowVerticalScroll || _.isVerticalScrollShowing(this.eBodyViewport);\n    };\n    GridPanel.prototype.isHorizontalScrollShowing = function () {\n        return _.isHorizontalScrollShowing(this.eCenterViewport);\n    };\n    // gets called every time the viewport size changes. we use this to check visibility of scrollbars\n    // in the grid panel, and also to check size and position of viewport for row and column virtualisation.\n    GridPanel.prototype.checkViewportAndScrolls = function () {\n        // results in updating anything that depends on scroll showing\n        this.updateScrollVisibleService();\n        // fires event if height changes, used by PaginationService, HeightScalerService, RowRenderer\n        this.checkBodyHeight();\n        // check for virtual columns for ColumnController\n        this.onHorizontalViewportChanged();\n        this.setPinnedContainerSize();\n        // this is to cater for AG-3274, where grid is removed from the dom and then inserted back in again.\n        // (which happens with some implementations of tabbing). this can result in horizontal scroll getting\n        // reset back to the left, however no scroll event is fired. so we need to get header to also scroll\n        // back to the left to be kept in sync.\n        // adding and removing the grid from the DOM both resets the scroll position and\n        // triggers a resize event, so notify listeners if the scroll position has changed\n        if (this.scrollLeft !== this.getCenterViewportScrollLeft()) {\n            this.onBodyHorizontalScroll(this.eCenterViewport);\n        }\n    };\n    GridPanel.prototype.updateScrollVisibleService = function () {\n        // because of column animation (which takes 200ms), we have to do this twice.\n        // eg if user removes cols anywhere except at the RHS, then the cols on the RHS\n        // will animate to the left to fill the gap. this animation means just after\n        // the cols are removed, the remaining cols are still in the original location\n        // at the start of the animation, so pre animation the H scrollbar is still needed,\n        // but post animation it is not.\n        this.updateScrollVisibleServiceImpl();\n        setTimeout(this.updateScrollVisibleServiceImpl.bind(this), 500);\n    };\n    GridPanel.prototype.updateScrollVisibleServiceImpl = function () {\n        var params = {\n            horizontalScrollShowing: false,\n            verticalScrollShowing: false\n        };\n        params.verticalScrollShowing = this.isVerticalScrollShowing();\n        params.horizontalScrollShowing = this.isHorizontalScrollShowing();\n        this.scrollVisibleService.setScrollsVisible(params);\n        this.setHorizontalScrollVisible(params.horizontalScrollShowing);\n        this.setVerticalScrollPaddingVisible(params.verticalScrollShowing);\n    };\n    GridPanel.prototype.setHorizontalScrollVisible = function (visible) {\n        var isSuppressHorizontalScroll = this.gridOptionsWrapper.isSuppressHorizontalScroll();\n        var scrollSize = visible ? (this.gridOptionsWrapper.getScrollbarWidth() || 0) : 0;\n        var scrollContainerSize = !isSuppressHorizontalScroll ? scrollSize : 0;\n        var addIEPadding = _.isBrowserIE() && visible;\n        this.eCenterViewport.style.height = \"calc(100% + \" + scrollSize + \"px)\";\n        _.setFixedHeight(this.eHorizontalScrollBody, scrollContainerSize);\n        // we have to add an extra pixel to the scroller viewport on IE because\n        // if the container has the same size as the scrollbar, the scroll button won't work\n        _.setFixedHeight(this.eBodyHorizontalScrollViewport, scrollContainerSize + (addIEPadding ? 1 : 0));\n        _.setFixedHeight(this.eBodyHorizontalScrollContainer, scrollContainerSize);\n    };\n    GridPanel.prototype.setVerticalScrollPaddingVisible = function (show) {\n        var scroller = show ? 'scroll' : 'hidden';\n        this.eTop.style.overflowY = this.eBottom.style.overflowY = scroller;\n        this.setFakeHScrollSpacerWidths();\n    };\n    GridPanel.prototype.updateRowCount = function () {\n        var headerCount = this.headerNavigationService.getHeaderRowCount();\n        var rowCount = this.paginationProxy.getRowCount();\n        var total = (headerCount + rowCount).toString();\n        this.getGui().setAttribute('aria-rowcount', total);\n    };\n    GridPanel.prototype.updateColumnCount = function () {\n        var columns = this.columnController.getAllDisplayedColumns();\n        this.getGui().setAttribute('aria-colcount', columns.length.toString());\n    };\n    GridPanel.prototype.ensureColumnVisible = function (key) {\n        var column = this.columnController.getGridColumn(key);\n        if (!column) {\n            return;\n        }\n        if (column.isPinned()) {\n            console.warn('calling ensureIndexVisible on a ' + column.getPinned() + ' pinned column doesn\\'t make sense for column ' + column.getColId());\n            return;\n        }\n        if (!this.columnController.isColumnDisplayed(column)) {\n            console.warn('column is not currently visible');\n            return;\n        }\n        var colLeftPixel = column.getLeft();\n        var colRightPixel = colLeftPixel + column.getActualWidth();\n        var viewportWidth = this.eCenterViewport.clientWidth;\n        var scrollPosition = this.getCenterViewportScrollLeft();\n        var bodyWidth = this.columnController.getBodyContainerWidth();\n        var viewportLeftPixel;\n        var viewportRightPixel;\n        // the logic of working out left and right viewport px is both here and in the ColumnController,\n        // need to refactor it out to one place\n        if (this.enableRtl) {\n            viewportLeftPixel = bodyWidth - scrollPosition - viewportWidth;\n            viewportRightPixel = bodyWidth - scrollPosition;\n        }\n        else {\n            viewportLeftPixel = scrollPosition;\n            viewportRightPixel = viewportWidth + scrollPosition;\n        }\n        var viewportScrolledPastCol = viewportLeftPixel > colLeftPixel;\n        var viewportScrolledBeforeCol = viewportRightPixel < colRightPixel;\n        var colToSmallForViewport = viewportWidth < column.getActualWidth();\n        var alignColToLeft = viewportScrolledPastCol || colToSmallForViewport;\n        var alignColToRight = viewportScrolledBeforeCol;\n        var newScrollPosition = this.getCenterViewportScrollLeft();\n        if (alignColToLeft || alignColToRight) {\n            if (this.enableRtl) {\n                newScrollPosition = alignColToLeft ? (bodyWidth - viewportWidth - colLeftPixel) : (bodyWidth - colRightPixel);\n            }\n            else {\n                newScrollPosition = alignColToLeft ? colLeftPixel : (colRightPixel - viewportWidth);\n            }\n            this.setCenterViewportScrollLeft(newScrollPosition);\n        }\n        else {\n            // otherwise, col is already in view, so do nothing\n        }\n        // this will happen anyway, as the move will cause a 'scroll' event on the body, however\n        // it is possible that the ensureColumnVisible method is called from within ag-Grid and\n        // the caller will need to have the columns rendered to continue, which will be before\n        // the event has been worked on (which is the case for cell navigation).\n        this.onHorizontalViewportChanged();\n        // so when we return back to user, the cells have rendered\n        this.animationFrameService.flushAllFrames();\n    };\n    GridPanel.prototype.showLoadingOverlay = function () {\n        if (!this.gridOptionsWrapper.isSuppressLoadingOverlay()) {\n            this.overlayWrapper.showLoadingOverlay();\n        }\n    };\n    GridPanel.prototype.showNoRowsOverlay = function () {\n        if (!this.gridOptionsWrapper.isSuppressNoRowsOverlay()) {\n            this.overlayWrapper.showNoRowsOverlay();\n        }\n    };\n    GridPanel.prototype.hideOverlay = function () {\n        this.overlayWrapper.hideOverlay();\n    };\n    // method will call itself if no available width. this covers if the grid\n    // isn't visible, but is just about to be visible.\n    GridPanel.prototype.sizeColumnsToFit = function (nextTimeout) {\n        var _this = this;\n        var availableWidth = this.eBodyViewport.clientWidth;\n        if (availableWidth > 0) {\n            this.columnController.sizeColumnsToFit(availableWidth, \"sizeColumnsToFit\");\n            return;\n        }\n        if (nextTimeout === undefined) {\n            window.setTimeout(function () {\n                _this.sizeColumnsToFit(100);\n            }, 0);\n        }\n        else if (nextTimeout === 100) {\n            window.setTimeout(function () {\n                _this.sizeColumnsToFit(500);\n            }, 100);\n        }\n        else if (nextTimeout === 500) {\n            window.setTimeout(function () {\n                _this.sizeColumnsToFit(-1);\n            }, 500);\n        }\n        else {\n            console.warn('ag-Grid: tried to call sizeColumnsToFit() but the grid is coming back with ' +\n                'zero width, maybe the grid is not visible yet on the screen?');\n        }\n    };\n    // used by autoWidthCalculator and autoHeightCalculator\n    GridPanel.prototype.getCenterContainer = function () {\n        return this.eCenterContainer;\n    };\n    GridPanel.prototype.getDropTargetBodyContainers = function () {\n        return [this.eCenterViewport, this.eTopViewport, this.eBottomViewport];\n    };\n    GridPanel.prototype.getDropTargetLeftContainers = function () {\n        return [this.eLeftContainer, this.eLeftBottom, this.eLeftTop];\n    };\n    GridPanel.prototype.getDropTargetRightContainers = function () {\n        return [this.eRightContainer, this.eRightBottom, this.eRightTop];\n    };\n    GridPanel.prototype.buildRowContainerComponents = function () {\n        var _this = this;\n        this.eAllCellContainers = [\n            this.eLeftContainer, this.eRightContainer, this.eCenterContainer,\n            this.eTop, this.eBottom, this.eFullWidthContainer\n        ];\n        this.rowContainerComponents = {\n            body: new RowContainerComponent({\n                eContainer: this.eCenterContainer,\n                eWrapper: this.eCenterColsClipper,\n                eViewport: this.eBodyViewport\n            }),\n            fullWidth: new RowContainerComponent({\n                eContainer: this.eFullWidthContainer\n            }),\n            pinnedLeft: new RowContainerComponent({ eContainer: this.eLeftContainer }),\n            pinnedRight: new RowContainerComponent({ eContainer: this.eRightContainer }),\n            floatingTop: new RowContainerComponent({ eContainer: this.eTopContainer }),\n            floatingTopPinnedLeft: new RowContainerComponent({ eContainer: this.eLeftTop }),\n            floatingTopPinnedRight: new RowContainerComponent({ eContainer: this.eRightTop }),\n            floatingTopFullWidth: new RowContainerComponent({\n                eContainer: this.eTopFullWidthContainer,\n                hideWhenNoChildren: true\n            }),\n            floatingBottom: new RowContainerComponent({ eContainer: this.eBottomContainer }),\n            floatingBottomPinnedLeft: new RowContainerComponent({ eContainer: this.eLeftBottom }),\n            floatingBottomPinnedRight: new RowContainerComponent({ eContainer: this.eRightBottom }),\n            floatingBottomFullWidth: new RowContainerComponent({\n                eContainer: this.eBottomFullWidthContainer,\n                hideWhenNoChildren: true\n            }),\n        };\n        _.iterateObject(this.rowContainerComponents, function (key, container) {\n            if (container) {\n                _this.getContext().createBean(container);\n            }\n        });\n    };\n    GridPanel.prototype.setupRowAnimationCssClass = function () {\n        var _this = this;\n        var listener = function () {\n            // we don't want to use row animation if scaling, as rows jump strangely as you scroll,\n            // when scaling and doing row animation.\n            var animateRows = _this.gridOptionsWrapper.isAnimateRows() && !_this.heightScaler.isScaling();\n            _.addOrRemoveCssClass(_this.eBodyViewport, 'ag-row-animation', animateRows);\n            _.addOrRemoveCssClass(_this.eBodyViewport, 'ag-row-no-animation', !animateRows);\n        };\n        listener();\n        this.addManagedListener(this.eventService, Events.EVENT_HEIGHT_SCALE_CHANGED, listener);\n    };\n    // when editing a pinned row, if the cell is half outside the scrollable area, the browser can\n    // scroll the column into view. we do not want this, the pinned sections should never scroll.\n    // so we listen to scrolls on these containers and reset the scroll if we find one.\n    GridPanel.prototype.suppressScrollOnFloatingRow = function () {\n        var _this = this;\n        var resetTopScroll = function () { return _this.eTopViewport.scrollLeft = 0; };\n        var resetBottomScroll = function () { return _this.eTopViewport.scrollLeft = 0; };\n        this.addManagedListener(this.eTopViewport, 'scroll', resetTopScroll);\n        this.addManagedListener(this.eBottomViewport, 'scroll', resetBottomScroll);\n    };\n    GridPanel.prototype.getRowContainers = function () {\n        return this.rowContainerComponents;\n    };\n    GridPanel.prototype.getFloatingTopBottom = function () {\n        return [this.eTop, this.eBottom];\n    };\n    GridPanel.prototype.onDisplayedColumnsChanged = function () {\n        this.setPinnedContainerSize();\n        this.setHeaderAndFloatingHeights();\n        this.onHorizontalViewportChanged();\n        this.updateScrollVisibleService();\n        this.updateColumnCount();\n    };\n    GridPanel.prototype.onDisplayedColumnsWidthChanged = function () {\n        this.setWidthsOfContainers();\n        this.onHorizontalViewportChanged();\n        this.updateScrollVisibleService();\n        if (this.enableRtl) {\n            // because RTL is all backwards, a change in the width of the row\n            // can cause a change in the scroll position, without a scroll event,\n            // because the scroll position in RTL is a function that depends on\n            // the width. to be convinced of this, take out this line, enable RTL,\n            // scroll all the way to the left and then resize a column\n            this.horizontallyScrollHeaderCenterAndFloatingCenter();\n        }\n    };\n    GridPanel.prototype.setWidthsOfContainers = function () {\n        this.setCenterWidth();\n        this.setPinnedContainerSize();\n    };\n    GridPanel.prototype.setCenterWidth = function () {\n        var _a = this, headerRootComp = _a.headerRootComp, columnController = _a.columnController;\n        var width = columnController.getBodyContainerWidth();\n        if (this.printLayout) {\n            var pinnedContainerWidths = columnController.getPinnedLeftContainerWidth()\n                + columnController.getPinnedRightContainerWidth();\n            width += pinnedContainerWidths;\n        }\n        headerRootComp.setHeaderContainerWidth(width);\n        var widthPx = width + \"px\";\n        this.eCenterContainer.style.width = widthPx;\n        this.eBottomContainer.style.width = widthPx;\n        this.eTopContainer.style.width = widthPx;\n        if (!this.printLayout) {\n            this.eBodyHorizontalScrollContainer.style.width = widthPx;\n        }\n    };\n    GridPanel.prototype.setPinnedLeftWidth = function () {\n        var _this = this;\n        var oldPinning = this.pinningLeft;\n        var widthOfCols = this.columnController.getPinnedLeftContainerWidth();\n        var newPinning = this.pinningLeft = !this.printLayout && widthOfCols > 0;\n        var containers = [this.eLeftContainer, this.eLeftTop, this.eLeftBottom];\n        if (oldPinning !== newPinning) {\n            this.headerRootComp.setLeftVisible(newPinning);\n        }\n        containers.forEach(function (e) { return _.setDisplayed(e, _this.pinningLeft); });\n        if (newPinning) {\n            containers.forEach(function (ct) { return _.setFixedWidth(ct, widthOfCols); });\n        }\n    };\n    GridPanel.prototype.setPinnedRightWidth = function () {\n        var oldPinning = this.pinningRight;\n        var widthOfCols = this.columnController.getPinnedRightContainerWidth();\n        var newPinning = this.pinningRight = !this.printLayout && widthOfCols > 0;\n        var containers = [this.eRightContainer, this.eRightTop, this.eRightBottom];\n        if (oldPinning !== newPinning) {\n            this.headerRootComp.setRightVisible(newPinning);\n        }\n        containers.forEach(function (ct) { return _.setDisplayed(ct, newPinning); });\n        if (newPinning) {\n            containers.forEach(function (ct) { return _.setFixedWidth(ct, widthOfCols); });\n        }\n    };\n    GridPanel.prototype.setPinnedContainerSize = function () {\n        this.setPinnedLeftWidth();\n        this.setPinnedRightWidth();\n        this.setFakeHScrollSpacerWidths();\n    };\n    GridPanel.prototype.setFakeHScrollSpacerWidths = function () {\n        // we pad the right based on a) if cols are pinned to the right and\n        // b) if v scroll is showing on the right (normal position of scroll)\n        var rightSpacing = this.columnController.getPinnedRightContainerWidth();\n        var scrollOnRight = !this.enableRtl && this.isVerticalScrollShowing();\n        if (scrollOnRight) {\n            rightSpacing += this.scrollWidth;\n        }\n        _.setFixedWidth(this.eHorizontalRightSpacer, rightSpacing);\n        _.addOrRemoveCssClass(this.eHorizontalRightSpacer, 'ag-scroller-corner', rightSpacing <= this.scrollWidth);\n        // we pad the left based on a) if cols are pinned to the left and\n        // b) if v scroll is showing on the left (happens in LTR layout only)\n        var leftSpacing = this.columnController.getPinnedLeftContainerWidth();\n        var scrollOnLeft = this.enableRtl && this.isVerticalScrollShowing();\n        if (scrollOnLeft) {\n            leftSpacing += this.scrollWidth;\n        }\n        _.setFixedWidth(this.eHorizontalLeftSpacer, leftSpacing);\n        _.addOrRemoveCssClass(this.eHorizontalLeftSpacer, 'ag-scroller-corner', leftSpacing <= this.scrollWidth);\n    };\n    GridPanel.prototype.checkBodyHeight = function () {\n        var bodyHeight = this.eBodyViewport.clientHeight;\n        if (this.bodyHeight !== bodyHeight) {\n            this.bodyHeight = bodyHeight;\n            var event_3 = {\n                type: Events.EVENT_BODY_HEIGHT_CHANGED,\n                api: this.gridApi,\n                columnApi: this.columnApi\n            };\n            this.eventService.dispatchEvent(event_3);\n        }\n    };\n    GridPanel.prototype.setHeaderAndFloatingHeights = function () {\n        var _a = this, columnController = _a.columnController, gridOptionsWrapper = _a.gridOptionsWrapper, pinnedRowModel = _a.pinnedRowModel, eTop = _a.eTop, eBottom = _a.eBottom;\n        var numberOfFloating = 0;\n        var headerRowCount = columnController.getHeaderRowCount();\n        var totalHeaderHeight;\n        var groupHeight;\n        var headerHeight;\n        if (columnController.isPivotMode()) {\n            groupHeight = gridOptionsWrapper.getPivotGroupHeaderHeight();\n            headerHeight = gridOptionsWrapper.getPivotHeaderHeight();\n        }\n        else {\n            var hasFloatingFilters = columnController.hasFloatingFilters();\n            if (hasFloatingFilters) {\n                headerRowCount++;\n                numberOfFloating = 1;\n            }\n            groupHeight = gridOptionsWrapper.getGroupHeaderHeight();\n            headerHeight = gridOptionsWrapper.getHeaderHeight();\n        }\n        var numberOfNonGroups = 1 + numberOfFloating;\n        var numberOfGroups = headerRowCount - numberOfNonGroups;\n        totalHeaderHeight = numberOfFloating * gridOptionsWrapper.getFloatingFiltersHeight();\n        totalHeaderHeight += numberOfGroups * groupHeight;\n        totalHeaderHeight += headerHeight;\n        this.headerRootComp.setHeight(totalHeaderHeight);\n        var floatingTopHeight = pinnedRowModel.getPinnedTopTotalHeight();\n        if (floatingTopHeight) {\n            // adding 1px for cell bottom border\n            floatingTopHeight += 1;\n        }\n        var floatingBottomHeight = pinnedRowModel.getPinnedBottomTotalHeight();\n        if (floatingBottomHeight) {\n            // adding 1px for cell bottom border\n            floatingBottomHeight += 1;\n        }\n        var floatingTopHeightString = floatingTopHeight + \"px\";\n        var floatingBottomHeightString = floatingBottomHeight + \"px\";\n        eTop.style.minHeight = floatingTopHeightString;\n        eTop.style.height = floatingTopHeightString;\n        eTop.style.display = floatingTopHeight ? 'inherit' : 'none';\n        eBottom.style.minHeight = floatingBottomHeightString;\n        eBottom.style.height = floatingBottomHeightString;\n        eBottom.style.display = floatingBottomHeight ? 'inherit' : 'none';\n        this.checkBodyHeight();\n    };\n    GridPanel.prototype.getBodyHeight = function () {\n        return this.bodyHeight;\n    };\n    // called by scrollHorizontally method and alignedGridsService\n    GridPanel.prototype.setHorizontalScrollPosition = function (hScrollPosition) {\n        this.eCenterViewport.scrollLeft = hScrollPosition;\n        // we need to manually do the event handling (rather than wait for the event)\n        // for the alignedGridsService, as if we don't, the aligned grid service gets\n        // notified async, and then it's 'consuming' flag doesn't get used right, and\n        // we can end up with an infinite loop\n        this.doHorizontalScroll(hScrollPosition);\n    };\n    GridPanel.prototype.setVerticalScrollPosition = function (vScrollPosition) {\n        this.eBodyViewport.scrollTop = vScrollPosition;\n    };\n    // called by the headerRootComp and moveColumnController\n    GridPanel.prototype.scrollHorizontally = function (pixels) {\n        var oldScrollPosition = this.eCenterViewport.scrollLeft;\n        this.setHorizontalScrollPosition(oldScrollPosition + pixels);\n        return this.eCenterViewport.scrollLeft - oldScrollPosition;\n    };\n    // called by rowDragFeature\n    GridPanel.prototype.scrollVertically = function (pixels) {\n        var oldScrollPosition = this.eBodyViewport.scrollTop;\n        this.setVerticalScrollPosition(oldScrollPosition + pixels);\n        return this.eBodyViewport.scrollTop - oldScrollPosition;\n    };\n    GridPanel.prototype.addScrollListener = function () {\n        this.addManagedListener(this.eCenterViewport, 'scroll', this.onCenterViewportScroll.bind(this));\n        this.addManagedListener(this.eBodyHorizontalScrollViewport, 'scroll', this.onFakeHorizontalScroll.bind(this));\n        this.addManagedListener(this.eBodyViewport, 'scroll', this.onVerticalScroll.bind(this));\n    };\n    GridPanel.prototype.onVerticalScroll = function () {\n        var scrollTop = this.eBodyViewport.scrollTop;\n        this.animationFrameService.setScrollTop(scrollTop);\n        this.scrollTop = scrollTop;\n        this.redrawRowsAfterScroll();\n    };\n    GridPanel.prototype.isControllingScroll = function (eDiv) {\n        if (!this.lastHorizontalScrollElement) {\n            this.lastHorizontalScrollElement = eDiv;\n            return true;\n        }\n        return eDiv === this.lastHorizontalScrollElement;\n    };\n    GridPanel.prototype.onFakeHorizontalScroll = function () {\n        if (!this.isControllingScroll(this.eBodyHorizontalScrollViewport)) {\n            return;\n        }\n        this.onBodyHorizontalScroll(this.eBodyHorizontalScrollViewport);\n    };\n    GridPanel.prototype.onCenterViewportScroll = function () {\n        if (!this.isControllingScroll(this.eCenterViewport)) {\n            return;\n        }\n        this.onBodyHorizontalScroll(this.eCenterViewport);\n    };\n    GridPanel.prototype.onBodyHorizontalScroll = function (eSource) {\n        var _a = this.eCenterViewport, scrollWidth = _a.scrollWidth, clientWidth = _a.clientWidth;\n        // in chrome, fractions can be in the scroll left, eg 250.342234 - which messes up our 'scrollWentPastBounds'\n        // formula. so we floor it to allow the formula to work.\n        var scrollLeft = Math.floor(_.getScrollLeft(eSource, this.enableRtl));\n        // touch devices allow elastic scroll - which temporally scrolls the panel outside of the viewport\n        // (eg user uses touch to go to the left of the grid, but drags past the left, the rows will actually\n        // scroll past the left until the user releases the mouse). when this happens, we want ignore the scroll,\n        // as otherwise it was causing the rows and header to flicker.\n        // sometimes when scrolling, we got values that extended the maximum scroll allowed. we used to\n        // ignore these scrolls. problem is the max scroll position could be skipped (eg the previous scroll event\n        // could be 10px before the max position, and then current scroll event could be 20px after the max position).\n        // if we just ignored the last event, we would be setting the scroll to 10px before the max position, when in\n        // actual fact the user has exceeded the max scroll and thus scroll should be set to the max.\n        var minScroll = 0;\n        var maxScroll = scrollWidth - clientWidth;\n        if (scrollLeft < minScroll) {\n            scrollLeft = minScroll;\n        }\n        else if (scrollLeft > maxScroll) {\n            scrollLeft = maxScroll;\n        }\n        this.doHorizontalScroll(scrollLeft);\n        this.resetLastHorizontalScrollElementDebounced();\n    };\n    GridPanel.prototype.resetLastHorizontalScrollElement = function () {\n        this.lastHorizontalScrollElement = null;\n    };\n    GridPanel.prototype.doHorizontalScroll = function (scrollLeft) {\n        this.scrollLeft = scrollLeft;\n        var event = {\n            type: Events.EVENT_BODY_SCROLL,\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            direction: 'horizontal',\n            left: this.scrollLeft,\n            top: this.scrollTop\n        };\n        this.eventService.dispatchEvent(event);\n        this.horizontallyScrollHeaderCenterAndFloatingCenter(scrollLeft);\n        this.onHorizontalViewportChanged();\n    };\n    GridPanel.prototype.redrawRowsAfterScroll = function () {\n        var event = {\n            type: Events.EVENT_BODY_SCROLL,\n            direction: 'vertical',\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            left: this.scrollLeft,\n            top: this.scrollTop\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    // this gets called whenever a change in the viewport, so we can inform column controller it has to work\n    // out the virtual columns again. gets called from following locations:\n    // + ensureColVisible, scroll, init, layoutChanged, displayedColumnsChanged, API (doLayout)\n    GridPanel.prototype.onHorizontalViewportChanged = function () {\n        var scrollWidth = this.eCenterViewport.clientWidth;\n        var scrollPosition = this.getCenterViewportScrollLeft();\n        this.columnController.setVirtualViewportPosition(scrollWidth, scrollPosition);\n    };\n    GridPanel.prototype.getCenterViewportScrollLeft = function () {\n        // we defer to a util, as how you calculated scrollLeft when doing RTL depends on the browser\n        return _.getScrollLeft(this.eCenterViewport, this.enableRtl);\n    };\n    GridPanel.prototype.setCenterViewportScrollLeft = function (value) {\n        // we defer to a util, as how you calculated scrollLeft when doing RTL depends on the browser\n        _.setScrollLeft(this.eCenterViewport, value, this.enableRtl);\n    };\n    GridPanel.prototype.horizontallyScrollHeaderCenterAndFloatingCenter = function (scrollLeft) {\n        if (scrollLeft === undefined) {\n            scrollLeft = this.getCenterViewportScrollLeft();\n        }\n        var offset = this.enableRtl ? scrollLeft : -scrollLeft;\n        var _a = this.eCenterViewport, clientWidth = _a.clientWidth, scrollWidth = _a.scrollWidth;\n        var scrollWentPastBounds = Math.abs(offset) + clientWidth > scrollWidth;\n        if (scrollWentPastBounds ||\n            (this.enableRtl && offset < 0) ||\n            (!this.enableRtl && offset > 0)) {\n            return;\n        }\n        this.headerRootComp.setHorizontalScroll(offset);\n        this.eBottomContainer.style.transform = \"translateX(\" + offset + \"px)\";\n        this.eTopContainer.style.transform = \"translateX(\" + offset + \"px)\";\n        var partner = this.lastHorizontalScrollElement === this.eCenterViewport ? this.eBodyHorizontalScrollViewport : this.eCenterViewport;\n        _.setScrollLeft(partner, scrollLeft, this.enableRtl);\n    };\n    // + rangeController\n    GridPanel.prototype.addScrollEventListener = function (listener) {\n        this.eBodyViewport.addEventListener('scroll', listener);\n    };\n    // + rangeController\n    GridPanel.prototype.removeScrollEventListener = function (listener) {\n        this.eBodyViewport.removeEventListener('scroll', listener);\n    };\n    __decorate([\n        Autowired('alignedGridsService')\n    ], GridPanel.prototype, \"alignedGridsService\", void 0);\n    __decorate([\n        Autowired('gridOptionsWrapper')\n    ], GridPanel.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        Autowired('rowRenderer')\n    ], GridPanel.prototype, \"rowRenderer\", void 0);\n    __decorate([\n        Autowired('pinnedRowModel')\n    ], GridPanel.prototype, \"pinnedRowModel\", void 0);\n    __decorate([\n        Autowired('animationFrameService')\n    ], GridPanel.prototype, \"animationFrameService\", void 0);\n    __decorate([\n        Autowired('navigationService')\n    ], GridPanel.prototype, \"navigationService\", void 0);\n    __decorate([\n        Autowired('autoHeightCalculator')\n    ], GridPanel.prototype, \"autoHeightCalculator\", void 0);\n    __decorate([\n        Autowired('columnAnimationService')\n    ], GridPanel.prototype, \"columnAnimationService\", void 0);\n    __decorate([\n        Autowired('autoWidthCalculator')\n    ], GridPanel.prototype, \"autoWidthCalculator\", void 0);\n    __decorate([\n        Autowired('paginationAutoPageSizeService')\n    ], GridPanel.prototype, \"paginationAutoPageSizeService\", void 0);\n    __decorate([\n        Autowired('beans')\n    ], GridPanel.prototype, \"beans\", void 0);\n    __decorate([\n        Autowired('paginationProxy')\n    ], GridPanel.prototype, \"paginationProxy\", void 0);\n    __decorate([\n        Autowired('columnApi')\n    ], GridPanel.prototype, \"columnApi\", void 0);\n    __decorate([\n        Autowired('gridApi')\n    ], GridPanel.prototype, \"gridApi\", void 0);\n    __decorate([\n        Autowired('dragService')\n    ], GridPanel.prototype, \"dragService\", void 0);\n    __decorate([\n        Autowired('mouseEventService')\n    ], GridPanel.prototype, \"mouseEventService\", void 0);\n    __decorate([\n        Autowired('$scope')\n    ], GridPanel.prototype, \"$scope\", void 0);\n    __decorate([\n        Autowired('scrollVisibleService')\n    ], GridPanel.prototype, \"scrollVisibleService\", void 0);\n    __decorate([\n        Autowired('valueService')\n    ], GridPanel.prototype, \"valueService\", void 0);\n    __decorate([\n        Autowired('dragAndDropService')\n    ], GridPanel.prototype, \"dragAndDropService\", void 0);\n    __decorate([\n        Autowired('maxDivHeightScaler')\n    ], GridPanel.prototype, \"heightScaler\", void 0);\n    __decorate([\n        Autowired('resizeObserverService')\n    ], GridPanel.prototype, \"resizeObserverService\", void 0);\n    __decorate([\n        Autowired('undoRedoService')\n    ], GridPanel.prototype, \"undoRedoService\", void 0);\n    __decorate([\n        Autowired('columnController')\n    ], GridPanel.prototype, \"columnController\", void 0);\n    __decorate([\n        Autowired('headerNavigationService')\n    ], GridPanel.prototype, \"headerNavigationService\", void 0);\n    __decorate([\n        Optional('rangeController')\n    ], GridPanel.prototype, \"rangeController\", void 0);\n    __decorate([\n        Optional('contextMenuFactory')\n    ], GridPanel.prototype, \"contextMenuFactory\", void 0);\n    __decorate([\n        Optional('clipboardService')\n    ], GridPanel.prototype, \"clipboardService\", void 0);\n    __decorate([\n        RefSelector('eBodyViewport')\n    ], GridPanel.prototype, \"eBodyViewport\", void 0);\n    __decorate([\n        RefSelector('eCenterContainer')\n    ], GridPanel.prototype, \"eCenterContainer\", void 0);\n    __decorate([\n        RefSelector('eCenterViewport')\n    ], GridPanel.prototype, \"eCenterViewport\", void 0);\n    __decorate([\n        RefSelector('eLeftContainer')\n    ], GridPanel.prototype, \"eLeftContainer\", void 0);\n    __decorate([\n        RefSelector('eRightContainer')\n    ], GridPanel.prototype, \"eRightContainer\", void 0);\n    __decorate([\n        RefSelector('eCenterColsClipper')\n    ], GridPanel.prototype, \"eCenterColsClipper\", void 0);\n    __decorate([\n        RefSelector('eHorizontalScrollBody')\n    ], GridPanel.prototype, \"eHorizontalScrollBody\", void 0);\n    __decorate([\n        RefSelector('eHorizontalLeftSpacer')\n    ], GridPanel.prototype, \"eHorizontalLeftSpacer\", void 0);\n    __decorate([\n        RefSelector('eHorizontalRightSpacer')\n    ], GridPanel.prototype, \"eHorizontalRightSpacer\", void 0);\n    __decorate([\n        RefSelector('eBodyHorizontalScrollViewport')\n    ], GridPanel.prototype, \"eBodyHorizontalScrollViewport\", void 0);\n    __decorate([\n        RefSelector('eBodyHorizontalScrollContainer')\n    ], GridPanel.prototype, \"eBodyHorizontalScrollContainer\", void 0);\n    __decorate([\n        RefSelector('eFullWidthContainer')\n    ], GridPanel.prototype, \"eFullWidthContainer\", void 0);\n    __decorate([\n        RefSelector('eTop')\n    ], GridPanel.prototype, \"eTop\", void 0);\n    __decorate([\n        RefSelector('eLeftTop')\n    ], GridPanel.prototype, \"eLeftTop\", void 0);\n    __decorate([\n        RefSelector('eRightTop')\n    ], GridPanel.prototype, \"eRightTop\", void 0);\n    __decorate([\n        RefSelector('eTopContainer')\n    ], GridPanel.prototype, \"eTopContainer\", void 0);\n    __decorate([\n        RefSelector('eTopViewport')\n    ], GridPanel.prototype, \"eTopViewport\", void 0);\n    __decorate([\n        RefSelector('eTopFullWidthContainer')\n    ], GridPanel.prototype, \"eTopFullWidthContainer\", void 0);\n    __decorate([\n        RefSelector('eBottom')\n    ], GridPanel.prototype, \"eBottom\", void 0);\n    __decorate([\n        RefSelector('eLeftBottom')\n    ], GridPanel.prototype, \"eLeftBottom\", void 0);\n    __decorate([\n        RefSelector('eRightBottom')\n    ], GridPanel.prototype, \"eRightBottom\", void 0);\n    __decorate([\n        RefSelector('eBottomContainer')\n    ], GridPanel.prototype, \"eBottomContainer\", void 0);\n    __decorate([\n        RefSelector('eBottomViewport')\n    ], GridPanel.prototype, \"eBottomViewport\", void 0);\n    __decorate([\n        RefSelector('eBottomFullWidthContainer')\n    ], GridPanel.prototype, \"eBottomFullWidthContainer\", void 0);\n    __decorate([\n        RefSelector('headerRoot')\n    ], GridPanel.prototype, \"headerRootComp\", void 0);\n    __decorate([\n        RefSelector('overlayWrapper')\n    ], GridPanel.prototype, \"overlayWrapper\", void 0);\n    __decorate([\n        PostConstruct\n    ], GridPanel.prototype, \"init\", null);\n    return GridPanel;\n}(Component));\nexport { GridPanel };\n"]},"metadata":{},"sourceType":"module"}