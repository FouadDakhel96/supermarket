{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { EventService } from \"../eventService\";\nimport { _ } from \"../utils\";\nimport { Autowired, PostConstruct } from \"../context/context\";\nimport { Constants } from \"../constants\";\nimport { ModuleNames } from \"../modules/moduleNames\";\nimport { ModuleRegistry } from \"../modules/moduleRegistry\"; // Wrapper around a user provide column definition. The grid treats the column definition as ready only.\n// This class contains all the runtime information about a column, plus some logic (the definition has no logic).\n// This class implements both interfaces ColumnGroupChild and OriginalColumnGroupChild as the class can\n// appear as a child of either the original tree or the displayed tree. However the relevant group classes\n// for each type only implements one, as each group can only appear in it's associated tree (eg OriginalColumnGroup\n// can only appear in OriginalColumn tree).\n\nvar Column =\n/** @class */\nfunction () {\n  function Column(colDef, userProvidedColDef, colId, primary) {\n    this.moving = false;\n    this.menuVisible = false;\n    this.filterActive = false;\n    this.eventService = new EventService();\n    this.rowGroupActive = false;\n    this.pivotActive = false;\n    this.aggregationActive = false;\n    this.colDef = colDef;\n    this.userProvidedColDef = userProvidedColDef;\n    this.visible = !colDef.hide;\n    this.sort = colDef.sort;\n    this.sortedAt = colDef.sortedAt;\n    this.colId = colId;\n    this.primary = primary;\n  } // gets called when user provides an alternative colDef, eg\n\n\n  Column.prototype.setColDef = function (colDef, userProvidedColDef) {\n    this.colDef = colDef;\n    this.userProvidedColDef = userProvidedColDef;\n  };\n\n  Column.prototype.getUserProvidedColDef = function () {\n    return this.userProvidedColDef;\n  };\n\n  Column.prototype.setParent = function (parent) {\n    this.parent = parent;\n  };\n\n  Column.prototype.getParent = function () {\n    return this.parent;\n  };\n\n  Column.prototype.setOriginalParent = function (originalParent) {\n    this.originalParent = originalParent;\n  };\n\n  Column.prototype.getOriginalParent = function () {\n    return this.originalParent;\n  }; // this is done after constructor as it uses gridOptionsWrapper\n\n\n  Column.prototype.initialise = function () {\n    this.setPinned(this.colDef.pinned);\n    var minColWidth = this.gridOptionsWrapper.getMinColWidth();\n    var maxColWidth = this.gridOptionsWrapper.getMaxColWidth();\n\n    if (this.colDef.minWidth) {\n      this.minWidth = this.colDef.minWidth;\n    } else {\n      this.minWidth = minColWidth;\n    }\n\n    if (this.colDef.maxWidth) {\n      this.maxWidth = this.colDef.maxWidth;\n    } else {\n      this.maxWidth = maxColWidth;\n    }\n\n    if (this.colDef.flex) {\n      this.flex = this.colDef.flex;\n    }\n\n    this.resetActualWidth();\n    var suppressDotNotation = this.gridOptionsWrapper.isSuppressFieldDotNotation();\n    this.fieldContainsDots = _.exists(this.colDef.field) && this.colDef.field.indexOf('.') >= 0 && !suppressDotNotation;\n    this.tooltipFieldContainsDots = _.exists(this.colDef.tooltipField) && this.colDef.tooltipField.indexOf('.') >= 0 && !suppressDotNotation;\n    this.validate();\n  };\n\n  Column.prototype.resetActualWidth = function () {\n    this.actualWidth = this.columnUtils.calculateColInitialWidth(this.colDef);\n  };\n\n  Column.prototype.isEmptyGroup = function () {\n    return false;\n  };\n\n  Column.prototype.isRowGroupDisplayed = function (colId) {\n    if (_.missing(this.colDef) || _.missing(this.colDef.showRowGroup)) {\n      return false;\n    }\n\n    var showingAllGroups = this.colDef.showRowGroup === true;\n    var showingThisGroup = this.colDef.showRowGroup === colId;\n    return showingAllGroups || showingThisGroup;\n  };\n\n  Column.prototype.getUniqueId = function () {\n    return this.getId();\n  };\n\n  Column.prototype.isPrimary = function () {\n    return this.primary;\n  };\n\n  Column.prototype.isFilterAllowed = function () {\n    // filter defined means it's a string, class or true.\n    // if its false, null or undefined then it's false.\n    var filterDefined = !!this.colDef.filter || !!this.colDef.filterFramework;\n    return this.primary && filterDefined;\n  };\n\n  Column.prototype.isFieldContainsDots = function () {\n    return this.fieldContainsDots;\n  };\n\n  Column.prototype.isTooltipFieldContainsDots = function () {\n    return this.tooltipFieldContainsDots;\n  };\n\n  Column.prototype.validate = function () {\n    var colDefAny = this.colDef;\n\n    function warnOnce(msg, key, obj) {\n      _.doOnce(function () {\n        if (obj) {\n          console.warn(msg, obj);\n        } else {\n          _.doOnce(function () {\n            return console.warn(msg);\n          }, key);\n        }\n      }, key);\n    }\n\n    if (!ModuleRegistry.isRegistered(ModuleNames.RowGroupingModule)) {\n      var rowGroupingItems = ['enableRowGroup', 'rowGroup', 'rowGroupIndex', 'enablePivot', 'enableValue', 'pivot', 'pivotIndex', 'aggFunc'];\n      rowGroupingItems.forEach(function (item) {\n        if (_.exists(colDefAny[item])) {\n          if (ModuleRegistry.isPackageBased()) {\n            warnOnce(\"ag-Grid: \" + item + \" is only valid in ag-grid-enterprise, your column definition should not have \" + item, 'ColumnRowGroupingMissing' + item);\n          } else {\n            warnOnce(\"ag-Grid: \" + item + \" is only valid with ag-Grid Enterprise Module \" + ModuleNames.RowGroupingModule + \" - your column definition should not have \" + item, 'ColumnRowGroupingMissing' + item);\n          }\n        }\n      });\n    }\n\n    if (!ModuleRegistry.isRegistered(ModuleNames.RichSelectModule)) {\n      if (this.colDef.cellEditor === 'agRichSelect' || this.colDef.cellEditor === 'agRichSelectCellEditor') {\n        if (ModuleRegistry.isPackageBased()) {\n          warnOnce(\"ag-Grid: \" + this.colDef.cellEditor + \" can only be used with ag-grid-enterprise\", 'ColumnRichSelectMissing');\n        } else {\n          warnOnce(\"ag-Grid: \" + this.colDef.cellEditor + \" can only be used with ag-Grid Enterprise Module \" + ModuleNames.RichSelectModule, 'ColumnRichSelectMissing');\n        }\n      }\n    }\n\n    if (!ModuleRegistry.isRegistered(ModuleNames.DateTimeCellEditorModule)) {\n      if (this.colDef.cellEditor === 'agRichSelect' || this.colDef.cellEditor === 'agDateTimeCellEditor') {\n        if (ModuleRegistry.isPackageBased()) {\n          warnOnce(\"ag-Grid: \" + this.colDef.cellEditor + \" can only be used with ag-grid-enterprise\", 'ColumnDateTimeMissing');\n        } else {\n          warnOnce(\"ag-Grid: \" + this.colDef.cellEditor + \" can only be used with ag-Grid Enterprise Module \" + ModuleNames.DateTimeCellEditorModule, 'ColumnDateTimeMissing');\n        }\n      }\n    }\n\n    if (this.gridOptionsWrapper.isTreeData()) {\n      var itemsNotAllowedWithTreeData = ['rowGroup', 'rowGroupIndex', 'pivot', 'pivotIndex'];\n      itemsNotAllowedWithTreeData.forEach(function (item) {\n        if (_.exists(colDefAny[item])) {\n          warnOnce(\"ag-Grid: \" + item + \" is not possible when doing tree data, your column definition should not have \" + item, 'TreeDataCannotRowGroup');\n        }\n      });\n    }\n\n    if (_.exists(this.colDef.width) && typeof this.colDef.width !== 'number') {\n      warnOnce('ag-Grid: colDef.width should be a number, not ' + typeof this.colDef.width, 'ColumnCheck_asdfawef');\n    }\n\n    if (_.get(this, 'colDef.cellRendererParams.restrictToOneGroup', null)) {\n      warnOnce('ag-Grid: Since ag-grid 11.0.0 cellRendererParams.restrictToOneGroup is deprecated. You should use showRowGroup', 'ColumnCheck_sksldjf');\n    }\n\n    if (_.get(this, 'colDef.cellRendererParams.keyMap', null)) {\n      warnOnce('ag-Grid: Since ag-grid 11.0.0 cellRendererParams.keyMap is deprecated. You should use colDef.keyCreator', 'ColumnCheck_ieiruhgdf');\n    }\n\n    if (_.get(this, 'colDef.cellRendererParams.keyMap', null)) {\n      warnOnce('ag-Grid: Since ag-grid 11.0.0 cellRendererParams.keyMap is deprecated. You should use colDef.keyCreator', 'ColumnCheck_uitolghj');\n    }\n\n    if (colDefAny.floatingCellRenderer) {\n      warnOnce('ag-Grid: since v11, floatingCellRenderer is now pinnedRowCellRenderer', 'ColumnCheck_soihwewe');\n      this.colDef.pinnedRowCellRenderer = colDefAny.floatingCellRenderer;\n    }\n\n    if (colDefAny.floatingRendererFramework) {\n      warnOnce('ag-Grid: since v11, floatingRendererFramework is now pinnedRowCellRendererFramework', 'ColumnCheck_zdkiouhwer');\n      this.colDef.pinnedRowCellRendererFramework = colDefAny.floatingRendererFramework;\n    }\n\n    if (colDefAny.floatingRendererParams) {\n      console.warn('ag-Grid: since v11, floatingRendererParams is now pinnedRowCellRendererParams', 'ColumnCheck_retiuhjs');\n      this.colDef.pinnedRowCellRendererParams = colDefAny.floatingRendererParams;\n    }\n\n    if (colDefAny.floatingValueFormatter) {\n      warnOnce('ag-Grid: since v11, floatingValueFormatter is now pinnedRowValueFormatter', 'ColumnCheck_qwroeihjdf');\n      this.colDef.pinnedRowValueFormatter = colDefAny.floatingValueFormatter;\n    }\n\n    if (colDefAny.cellFormatter) {\n      warnOnce('ag-Grid: since v12, cellFormatter is now valueFormatter', 'ColumnCheck_eoireknml');\n\n      if (_.missing(this.colDef.valueFormatter)) {\n        this.colDef.valueFormatter = colDefAny.cellFormatter;\n      }\n    }\n\n    if (colDefAny.headerCellTemplate) {\n      warnOnce('ag-Grid: since v15, headerCellTemplate is gone, use header component instead.', 'ColumnCheck_eroihxcm');\n    }\n\n    if (colDefAny.headerCellRenderer) {\n      warnOnce('ag-Grid: since v15, headerCellRenderer is gone, use header component instead.', 'ColumnCheck_terteuh');\n    }\n\n    if (colDefAny.volatile) {\n      warnOnce('ag-Grid: since v16, colDef.volatile is gone, please check refresh docs on how to refresh specific cells.', 'ColumnCheck_weoihjxcv');\n    }\n\n    if (colDefAny.suppressSorting) {\n      warnOnce(\"ag-Grid: since v20, colDef.suppressSorting is gone, instead use colDef.sortable=false.\", 'ColumnCheck_43ljrer', this.colDef);\n      this.colDef.sortable = false;\n    }\n\n    if (colDefAny.suppressFilter) {\n      warnOnce(\"ag-Grid: since v20, colDef.suppressFilter is gone, instead use colDef.filter=false.\", 'ColumnCheck_erlkhfdm', this.colDef);\n      this.colDef.filter = false;\n    }\n\n    if (colDefAny.suppressResize) {\n      warnOnce(\"ag-Grid: since v20, colDef.suppressResize is gone, instead use colDef.resizable=false.\", 'ColumnCheck_weoihjxcv', this.colDef);\n      this.colDef.resizable = false;\n    }\n\n    if (colDefAny.tooltip) {\n      warnOnce(\"ag-Grid: since v20.1, colDef.tooltip is gone, instead use colDef.tooltipValueGetter.\", 'ColumnCheck_adslknjwef', this.colDef);\n      this.colDef.tooltipValueGetter = colDefAny.tooltip;\n    }\n\n    if (colDefAny.suppressToolPanel) {\n      warnOnce(\"ag-Grid: since v22, colDef.suppressToolPanel is gone, instead use suppressColumnsToolPanel / suppressFiltersToolPanel.\", 'ColumnCheck_weihjlsjkdf', this.colDef);\n      this.colDef.suppressColumnsToolPanel = true;\n    }\n  };\n\n  Column.prototype.addEventListener = function (eventType, listener) {\n    this.eventService.addEventListener(eventType, listener);\n  };\n\n  Column.prototype.removeEventListener = function (eventType, listener) {\n    this.eventService.removeEventListener(eventType, listener);\n  };\n\n  Column.prototype.createIsColumnFuncParams = function (rowNode) {\n    return {\n      node: rowNode,\n      data: rowNode.data,\n      column: this,\n      colDef: this.colDef,\n      context: this.gridOptionsWrapper.getContext(),\n      api: this.gridOptionsWrapper.getApi(),\n      columnApi: this.gridOptionsWrapper.getColumnApi()\n    };\n  };\n\n  Column.prototype.isSuppressNavigable = function (rowNode) {\n    // if boolean set, then just use it\n    if (typeof this.colDef.suppressNavigable === 'boolean') {\n      return this.colDef.suppressNavigable;\n    } // if function, then call the function to find out\n\n\n    if (typeof this.colDef.suppressNavigable === 'function') {\n      var params = this.createIsColumnFuncParams(rowNode);\n      var userFunc = this.colDef.suppressNavigable;\n      return userFunc(params);\n    }\n\n    return false;\n  };\n\n  Column.prototype.isCellEditable = function (rowNode) {\n    // only allow editing of groups if the user has this option enabled\n    if (rowNode.group && !this.gridOptionsWrapper.isEnableGroupEdit()) {\n      return false;\n    }\n\n    return this.isColumnFunc(rowNode, this.colDef.editable);\n  };\n\n  Column.prototype.isRowDrag = function (rowNode) {\n    return this.isColumnFunc(rowNode, this.colDef.rowDrag);\n  };\n\n  Column.prototype.isDndSource = function (rowNode) {\n    return this.isColumnFunc(rowNode, this.colDef.dndSource);\n  };\n\n  Column.prototype.isCellCheckboxSelection = function (rowNode) {\n    return this.isColumnFunc(rowNode, this.colDef.checkboxSelection);\n  };\n\n  Column.prototype.isSuppressPaste = function (rowNode) {\n    return this.isColumnFunc(rowNode, this.colDef ? this.colDef.suppressPaste : null);\n  };\n\n  Column.prototype.isResizable = function () {\n    return this.colDef.resizable === true;\n  };\n\n  Column.prototype.isColumnFunc = function (rowNode, value) {\n    // if boolean set, then just use it\n    if (typeof value === 'boolean') {\n      return value;\n    } // if function, then call the function to find out\n\n\n    if (typeof value === 'function') {\n      var params = this.createIsColumnFuncParams(rowNode);\n      var editableFunc = value;\n      return editableFunc(params);\n    }\n\n    return false;\n  };\n\n  Column.prototype.setMoving = function (moving, source) {\n    if (source === void 0) {\n      source = \"api\";\n    }\n\n    this.moving = moving;\n    this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_MOVING_CHANGED, source));\n  };\n\n  Column.prototype.createColumnEvent = function (type, source) {\n    return {\n      api: this.gridApi,\n      columnApi: this.columnApi,\n      type: type,\n      column: this,\n      columns: [this],\n      source: source\n    };\n  };\n\n  Column.prototype.isMoving = function () {\n    return this.moving;\n  };\n\n  Column.prototype.getSort = function () {\n    return this.sort;\n  };\n\n  Column.prototype.setSort = function (sort, source) {\n    if (source === void 0) {\n      source = \"api\";\n    }\n\n    if (this.sort !== sort) {\n      this.sort = sort;\n      this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_SORT_CHANGED, source));\n    }\n  };\n\n  Column.prototype.setMenuVisible = function (visible, source) {\n    if (source === void 0) {\n      source = \"api\";\n    }\n\n    if (this.menuVisible !== visible) {\n      this.menuVisible = visible;\n      this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_MENU_VISIBLE_CHANGED, source));\n    }\n  };\n\n  Column.prototype.isMenuVisible = function () {\n    return this.menuVisible;\n  };\n\n  Column.prototype.isSortAscending = function () {\n    return this.sort === Constants.SORT_ASC;\n  };\n\n  Column.prototype.isSortDescending = function () {\n    return this.sort === Constants.SORT_DESC;\n  };\n\n  Column.prototype.isSortNone = function () {\n    return _.missing(this.sort);\n  };\n\n  Column.prototype.isSorting = function () {\n    return _.exists(this.sort);\n  };\n\n  Column.prototype.getSortedAt = function () {\n    return this.sortedAt;\n  };\n\n  Column.prototype.setSortedAt = function (sortedAt) {\n    this.sortedAt = sortedAt;\n  };\n\n  Column.prototype.setAggFunc = function (aggFunc) {\n    this.aggFunc = aggFunc;\n  };\n\n  Column.prototype.getAggFunc = function () {\n    return this.aggFunc;\n  };\n\n  Column.prototype.getLeft = function () {\n    return this.left;\n  };\n\n  Column.prototype.getOldLeft = function () {\n    return this.oldLeft;\n  };\n\n  Column.prototype.getRight = function () {\n    return this.left + this.actualWidth;\n  };\n\n  Column.prototype.setLeft = function (left, source) {\n    if (source === void 0) {\n      source = \"api\";\n    }\n\n    this.oldLeft = this.left;\n\n    if (this.left !== left) {\n      this.left = left;\n      this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_LEFT_CHANGED, source));\n    }\n  };\n\n  Column.prototype.isFilterActive = function () {\n    return this.filterActive;\n  }; // additionalEventAttributes is used by provided simple floating filter, so it can add 'floatingFilter=true' to the event\n\n\n  Column.prototype.setFilterActive = function (active, source, additionalEventAttributes) {\n    if (source === void 0) {\n      source = \"api\";\n    }\n\n    if (this.filterActive !== active) {\n      this.filterActive = active;\n      this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_FILTER_ACTIVE_CHANGED, source));\n    }\n\n    var filterChangedEvent = this.createColumnEvent(Column.EVENT_FILTER_CHANGED, source);\n\n    if (additionalEventAttributes) {\n      _.mergeDeep(filterChangedEvent, additionalEventAttributes);\n    }\n\n    this.eventService.dispatchEvent(filterChangedEvent);\n  };\n\n  Column.prototype.setPinned = function (pinned) {\n    if (pinned === true || pinned === Constants.PINNED_LEFT) {\n      this.pinned = Constants.PINNED_LEFT;\n    } else if (pinned === Constants.PINNED_RIGHT) {\n      this.pinned = Constants.PINNED_RIGHT;\n    } else {\n      this.pinned = null;\n    }\n  };\n\n  Column.prototype.setFirstRightPinned = function (firstRightPinned, source) {\n    if (source === void 0) {\n      source = \"api\";\n    }\n\n    if (this.firstRightPinned !== firstRightPinned) {\n      this.firstRightPinned = firstRightPinned;\n      this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_FIRST_RIGHT_PINNED_CHANGED, source));\n    }\n  };\n\n  Column.prototype.setLastLeftPinned = function (lastLeftPinned, source) {\n    if (source === void 0) {\n      source = \"api\";\n    }\n\n    if (this.lastLeftPinned !== lastLeftPinned) {\n      this.lastLeftPinned = lastLeftPinned;\n      this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_LAST_LEFT_PINNED_CHANGED, source));\n    }\n  };\n\n  Column.prototype.isFirstRightPinned = function () {\n    return this.firstRightPinned;\n  };\n\n  Column.prototype.isLastLeftPinned = function () {\n    return this.lastLeftPinned;\n  };\n\n  Column.prototype.isPinned = function () {\n    return this.pinned === Constants.PINNED_LEFT || this.pinned === Constants.PINNED_RIGHT;\n  };\n\n  Column.prototype.isPinnedLeft = function () {\n    return this.pinned === Constants.PINNED_LEFT;\n  };\n\n  Column.prototype.isPinnedRight = function () {\n    return this.pinned === Constants.PINNED_RIGHT;\n  };\n\n  Column.prototype.getPinned = function () {\n    return this.pinned;\n  };\n\n  Column.prototype.setVisible = function (visible, source) {\n    if (source === void 0) {\n      source = \"api\";\n    }\n\n    var newValue = visible === true;\n\n    if (this.visible !== newValue) {\n      this.visible = newValue;\n      this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_VISIBLE_CHANGED, source));\n    }\n  };\n\n  Column.prototype.isVisible = function () {\n    return this.visible;\n  };\n\n  Column.prototype.getColDef = function () {\n    return this.colDef;\n  };\n\n  Column.prototype.getColumnGroupShow = function () {\n    return this.colDef.columnGroupShow;\n  };\n\n  Column.prototype.getColId = function () {\n    return this.colId;\n  };\n\n  Column.prototype.getId = function () {\n    return this.getColId();\n  };\n\n  Column.prototype.getDefinition = function () {\n    return this.colDef;\n  };\n\n  Column.prototype.getActualWidth = function () {\n    return this.actualWidth;\n  };\n\n  Column.prototype.createBaseColDefParams = function (rowNode) {\n    var params = {\n      node: rowNode,\n      data: rowNode.data,\n      colDef: this.colDef,\n      column: this,\n      api: this.gridOptionsWrapper.getApi(),\n      columnApi: this.gridOptionsWrapper.getColumnApi(),\n      context: this.gridOptionsWrapper.getContext()\n    };\n    return params;\n  };\n\n  Column.prototype.getColSpan = function (rowNode) {\n    if (_.missing(this.colDef.colSpan)) {\n      return 1;\n    }\n\n    var params = this.createBaseColDefParams(rowNode);\n    var colSpan = this.colDef.colSpan(params); // colSpan must be number equal to or greater than 1\n\n    return Math.max(colSpan, 1);\n  };\n\n  Column.prototype.getRowSpan = function (rowNode) {\n    if (_.missing(this.colDef.rowSpan)) {\n      return 1;\n    }\n\n    var params = this.createBaseColDefParams(rowNode);\n    var rowSpan = this.colDef.rowSpan(params); // rowSpan must be number equal to or greater than 1\n\n    return Math.max(rowSpan, 1);\n  };\n\n  Column.prototype.setActualWidth = function (actualWidth, source) {\n    if (source === void 0) {\n      source = \"api\";\n    }\n\n    if (this.minWidth != null) {\n      actualWidth = Math.max(actualWidth, this.minWidth);\n    }\n\n    if (this.maxWidth != null) {\n      actualWidth = Math.min(actualWidth, this.maxWidth);\n    }\n\n    if (this.actualWidth !== actualWidth) {\n      // disable flex for this column if it was manually resized.\n      if (this.flex && source !== 'flex') {\n        this.flex = 0;\n      }\n\n      this.actualWidth = actualWidth;\n      this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_WIDTH_CHANGED, source));\n    }\n  };\n\n  Column.prototype.isGreaterThanMax = function (width) {\n    if (this.maxWidth != null) {\n      return width > this.maxWidth;\n    }\n\n    return false;\n  };\n\n  Column.prototype.getMinWidth = function () {\n    return this.minWidth;\n  };\n\n  Column.prototype.getMaxWidth = function () {\n    return this.maxWidth;\n  };\n\n  Column.prototype.getFlex = function () {\n    return this.flex || 0;\n  }; // this method should only be used by the columnController to\n  // change flex when required by the setColumnState method.\n\n\n  Column.prototype.setFlex = function (flex) {\n    if (this.flex !== flex) {\n      this.flex = flex;\n    }\n  };\n\n  Column.prototype.setMinimum = function (source) {\n    if (source === void 0) {\n      source = \"api\";\n    }\n\n    this.setActualWidth(this.minWidth, source);\n  };\n\n  Column.prototype.setRowGroupActive = function (rowGroup, source) {\n    if (source === void 0) {\n      source = \"api\";\n    }\n\n    if (this.rowGroupActive !== rowGroup) {\n      this.rowGroupActive = rowGroup;\n      this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_ROW_GROUP_CHANGED, source));\n    }\n  };\n\n  Column.prototype.isRowGroupActive = function () {\n    return this.rowGroupActive;\n  };\n\n  Column.prototype.setPivotActive = function (pivot, source) {\n    if (source === void 0) {\n      source = \"api\";\n    }\n\n    if (this.pivotActive !== pivot) {\n      this.pivotActive = pivot;\n      this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_PIVOT_CHANGED, source));\n    }\n  };\n\n  Column.prototype.isPivotActive = function () {\n    return this.pivotActive;\n  };\n\n  Column.prototype.isAnyFunctionActive = function () {\n    return this.isPivotActive() || this.isRowGroupActive() || this.isValueActive();\n  };\n\n  Column.prototype.isAnyFunctionAllowed = function () {\n    return this.isAllowPivot() || this.isAllowRowGroup() || this.isAllowValue();\n  };\n\n  Column.prototype.setValueActive = function (value, source) {\n    if (source === void 0) {\n      source = \"api\";\n    }\n\n    if (this.aggregationActive !== value) {\n      this.aggregationActive = value;\n      this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_VALUE_CHANGED, source));\n    }\n  };\n\n  Column.prototype.isValueActive = function () {\n    return this.aggregationActive;\n  };\n\n  Column.prototype.isAllowPivot = function () {\n    return this.colDef.enablePivot === true;\n  };\n\n  Column.prototype.isAllowValue = function () {\n    return this.colDef.enableValue === true;\n  };\n\n  Column.prototype.isAllowRowGroup = function () {\n    return this.colDef.enableRowGroup === true;\n  };\n\n  Column.prototype.getMenuTabs = function (defaultValues) {\n    var menuTabs = this.getColDef().menuTabs;\n\n    if (menuTabs == null) {\n      menuTabs = defaultValues;\n    }\n\n    return menuTabs;\n  }; // this used to be needed, as previous version of ag-grid had lockPosition as column state,\n  // so couldn't depend on colDef version.\n\n\n  Column.prototype.isLockPosition = function () {\n    console.warn('ag-Grid: since v21, col.isLockPosition() should not be used, please use col.getColDef().lockPosition instead.');\n    return this.colDef ? !!this.colDef.lockPosition : false;\n  }; // this used to be needed, as previous version of ag-grid had lockVisible as column state,\n  // so couldn't depend on colDef version.\n\n\n  Column.prototype.isLockVisible = function () {\n    console.warn('ag-Grid: since v21, col.isLockVisible() should not be used, please use col.getColDef().lockVisible instead.');\n    return this.colDef ? !!this.colDef.lockVisible : false;\n  }; // this used to be needed, as previous version of ag-grid had lockPinned as column state,\n  // so couldn't depend on colDef version.\n\n\n  Column.prototype.isLockPinned = function () {\n    console.warn('ag-Grid: since v21, col.isLockPinned() should not be used, please use col.getColDef().lockPinned instead.');\n    return this.colDef ? !!this.colDef.lockPinned : false;\n  }; // + renderedHeaderCell - for making header cell transparent when moving\n\n\n  Column.EVENT_MOVING_CHANGED = 'movingChanged'; // + renderedCell - changing left position\n\n  Column.EVENT_LEFT_CHANGED = 'leftChanged'; // + renderedCell - changing width\n\n  Column.EVENT_WIDTH_CHANGED = 'widthChanged'; // + renderedCell - for changing pinned classes\n\n  Column.EVENT_LAST_LEFT_PINNED_CHANGED = 'lastLeftPinnedChanged';\n  Column.EVENT_FIRST_RIGHT_PINNED_CHANGED = 'firstRightPinnedChanged'; // + renderedColumn - for changing visibility icon\n\n  Column.EVENT_VISIBLE_CHANGED = 'visibleChanged'; // + every time the filter changes, used in the floating filters\n\n  Column.EVENT_FILTER_CHANGED = 'filterChanged'; // + renderedHeaderCell - marks the header with filter icon\n\n  Column.EVENT_FILTER_ACTIVE_CHANGED = 'filterActiveChanged'; // + renderedHeaderCell - marks the header with sort icon\n\n  Column.EVENT_SORT_CHANGED = 'sortChanged';\n  Column.EVENT_MENU_VISIBLE_CHANGED = 'menuVisibleChanged'; // + toolpanel, for gui updates\n\n  Column.EVENT_ROW_GROUP_CHANGED = 'columnRowGroupChanged'; // + toolpanel, for gui updates\n\n  Column.EVENT_PIVOT_CHANGED = 'columnPivotChanged'; // + toolpanel, for gui updates\n\n  Column.EVENT_VALUE_CHANGED = 'columnValueChanged';\n\n  __decorate([Autowired('gridOptionsWrapper')], Column.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([Autowired('columnUtils')], Column.prototype, \"columnUtils\", void 0);\n\n  __decorate([Autowired('columnApi')], Column.prototype, \"columnApi\", void 0);\n\n  __decorate([Autowired('gridApi')], Column.prototype, \"gridApi\", void 0);\n\n  __decorate([Autowired('context')], Column.prototype, \"context\", void 0);\n\n  __decorate([PostConstruct], Column.prototype, \"initialise\", null);\n\n  return Column;\n}();\n\nexport { Column };","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/@ag-grid-community/core/dist/es6/entities/column.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","EventService","_","Autowired","PostConstruct","Constants","ModuleNames","ModuleRegistry","Column","colDef","userProvidedColDef","colId","primary","moving","menuVisible","filterActive","eventService","rowGroupActive","pivotActive","aggregationActive","visible","hide","sort","sortedAt","prototype","setColDef","getUserProvidedColDef","setParent","parent","getParent","setOriginalParent","originalParent","getOriginalParent","initialise","setPinned","pinned","minColWidth","gridOptionsWrapper","getMinColWidth","maxColWidth","getMaxColWidth","minWidth","maxWidth","flex","resetActualWidth","suppressDotNotation","isSuppressFieldDotNotation","fieldContainsDots","exists","field","indexOf","tooltipFieldContainsDots","tooltipField","validate","actualWidth","columnUtils","calculateColInitialWidth","isEmptyGroup","isRowGroupDisplayed","missing","showRowGroup","showingAllGroups","showingThisGroup","getUniqueId","getId","isPrimary","isFilterAllowed","filterDefined","filter","filterFramework","isFieldContainsDots","isTooltipFieldContainsDots","colDefAny","warnOnce","msg","obj","doOnce","console","warn","isRegistered","RowGroupingModule","rowGroupingItems","forEach","item","isPackageBased","RichSelectModule","cellEditor","DateTimeCellEditorModule","isTreeData","itemsNotAllowedWithTreeData","width","get","floatingCellRenderer","pinnedRowCellRenderer","floatingRendererFramework","pinnedRowCellRendererFramework","floatingRendererParams","pinnedRowCellRendererParams","floatingValueFormatter","pinnedRowValueFormatter","cellFormatter","valueFormatter","headerCellTemplate","headerCellRenderer","volatile","suppressSorting","sortable","suppressFilter","suppressResize","resizable","tooltip","tooltipValueGetter","suppressToolPanel","suppressColumnsToolPanel","addEventListener","eventType","listener","removeEventListener","createIsColumnFuncParams","rowNode","node","data","column","context","getContext","api","getApi","columnApi","getColumnApi","isSuppressNavigable","suppressNavigable","params","userFunc","isCellEditable","group","isEnableGroupEdit","isColumnFunc","editable","isRowDrag","rowDrag","isDndSource","dndSource","isCellCheckboxSelection","checkboxSelection","isSuppressPaste","suppressPaste","isResizable","value","editableFunc","setMoving","source","dispatchEvent","createColumnEvent","EVENT_MOVING_CHANGED","type","gridApi","columns","isMoving","getSort","setSort","EVENT_SORT_CHANGED","setMenuVisible","EVENT_MENU_VISIBLE_CHANGED","isMenuVisible","isSortAscending","SORT_ASC","isSortDescending","SORT_DESC","isSortNone","isSorting","getSortedAt","setSortedAt","setAggFunc","aggFunc","getAggFunc","getLeft","left","getOldLeft","oldLeft","getRight","setLeft","EVENT_LEFT_CHANGED","isFilterActive","setFilterActive","active","additionalEventAttributes","EVENT_FILTER_ACTIVE_CHANGED","filterChangedEvent","EVENT_FILTER_CHANGED","mergeDeep","PINNED_LEFT","PINNED_RIGHT","setFirstRightPinned","firstRightPinned","EVENT_FIRST_RIGHT_PINNED_CHANGED","setLastLeftPinned","lastLeftPinned","EVENT_LAST_LEFT_PINNED_CHANGED","isFirstRightPinned","isLastLeftPinned","isPinned","isPinnedLeft","isPinnedRight","getPinned","setVisible","newValue","EVENT_VISIBLE_CHANGED","isVisible","getColDef","getColumnGroupShow","columnGroupShow","getColId","getDefinition","getActualWidth","createBaseColDefParams","getColSpan","colSpan","Math","max","getRowSpan","rowSpan","setActualWidth","min","EVENT_WIDTH_CHANGED","isGreaterThanMax","getMinWidth","getMaxWidth","getFlex","setFlex","setMinimum","setRowGroupActive","rowGroup","EVENT_ROW_GROUP_CHANGED","isRowGroupActive","setPivotActive","pivot","EVENT_PIVOT_CHANGED","isPivotActive","isAnyFunctionActive","isValueActive","isAnyFunctionAllowed","isAllowPivot","isAllowRowGroup","isAllowValue","setValueActive","EVENT_VALUE_CHANGED","enablePivot","enableValue","enableRowGroup","getMenuTabs","defaultValues","menuTabs","isLockPosition","lockPosition","isLockVisible","lockVisible","isLockPinned","lockPinned"],"mappings":"AAAA;;;;;;AAMA,IAAIA,UAAU,GAAI,QAAQ,KAAKA,UAAd,IAA6B,UAAUC,UAAV,EAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACnF,MAAIC,CAAC,GAAGC,SAAS,CAACC,MAAlB;AAAA,MAA0BC,CAAC,GAAGH,CAAC,GAAG,CAAJ,GAAQH,MAAR,GAAiBE,IAAI,KAAK,IAAT,GAAgBA,IAAI,GAAGK,MAAM,CAACC,wBAAP,CAAgCR,MAAhC,EAAwCC,GAAxC,CAAvB,GAAsEC,IAArH;AAAA,MAA2HO,CAA3H;AACA,MAAI,OAAOC,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACC,QAAf,KAA4B,UAA/D,EAA2EL,CAAC,GAAGI,OAAO,CAACC,QAAR,CAAiBZ,UAAjB,EAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,CAAJ,CAA3E,KACK,KAAK,IAAIU,CAAC,GAAGb,UAAU,CAACM,MAAX,GAAoB,CAAjC,EAAoCO,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C;AAAiD,QAAIH,CAAC,GAAGV,UAAU,CAACa,CAAD,CAAlB,EAAuBN,CAAC,GAAG,CAACH,CAAC,GAAG,CAAJ,GAAQM,CAAC,CAACH,CAAD,CAAT,GAAeH,CAAC,GAAG,CAAJ,GAAQM,CAAC,CAACT,MAAD,EAASC,GAAT,EAAcK,CAAd,CAAT,GAA4BG,CAAC,CAACT,MAAD,EAASC,GAAT,CAA7C,KAA+DK,CAAnE;AAAxE;AACL,SAAOH,CAAC,GAAG,CAAJ,IAASG,CAAT,IAAcC,MAAM,CAACM,cAAP,CAAsBb,MAAtB,EAA8BC,GAA9B,EAAmCK,CAAnC,CAAd,EAAqDA,CAA5D;AACH,CALD;;AAMA,SAASQ,YAAT,QAA6B,iBAA7B;AACA,SAASC,CAAT,QAAkB,UAAlB;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,oBAAzC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,cAAT,QAA+B,2BAA/B,C,CACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,MAAM;AAAG;AAAe,YAAY;AACpC,WAASA,MAAT,CAAgBC,MAAhB,EAAwBC,kBAAxB,EAA4CC,KAA5C,EAAmDC,OAAnD,EAA4D;AACxD,SAAKC,MAAL,GAAc,KAAd;AACA,SAAKC,WAAL,GAAmB,KAAnB;AACA,SAAKC,YAAL,GAAoB,KAApB;AACA,SAAKC,YAAL,GAAoB,IAAIf,YAAJ,EAApB;AACA,SAAKgB,cAAL,GAAsB,KAAtB;AACA,SAAKC,WAAL,GAAmB,KAAnB;AACA,SAAKC,iBAAL,GAAyB,KAAzB;AACA,SAAKV,MAAL,GAAcA,MAAd;AACA,SAAKC,kBAAL,GAA0BA,kBAA1B;AACA,SAAKU,OAAL,GAAe,CAACX,MAAM,CAACY,IAAvB;AACA,SAAKC,IAAL,GAAYb,MAAM,CAACa,IAAnB;AACA,SAAKC,QAAL,GAAgBd,MAAM,CAACc,QAAvB;AACA,SAAKZ,KAAL,GAAaA,KAAb;AACA,SAAKC,OAAL,GAAeA,OAAf;AACH,GAhBmC,CAiBpC;;;AACAJ,EAAAA,MAAM,CAACgB,SAAP,CAAiBC,SAAjB,GAA6B,UAAUhB,MAAV,EAAkBC,kBAAlB,EAAsC;AAC/D,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,kBAAL,GAA0BA,kBAA1B;AACH,GAHD;;AAIAF,EAAAA,MAAM,CAACgB,SAAP,CAAiBE,qBAAjB,GAAyC,YAAY;AACjD,WAAO,KAAKhB,kBAAZ;AACH,GAFD;;AAGAF,EAAAA,MAAM,CAACgB,SAAP,CAAiBG,SAAjB,GAA6B,UAAUC,MAAV,EAAkB;AAC3C,SAAKA,MAAL,GAAcA,MAAd;AACH,GAFD;;AAGApB,EAAAA,MAAM,CAACgB,SAAP,CAAiBK,SAAjB,GAA6B,YAAY;AACrC,WAAO,KAAKD,MAAZ;AACH,GAFD;;AAGApB,EAAAA,MAAM,CAACgB,SAAP,CAAiBM,iBAAjB,GAAqC,UAAUC,cAAV,EAA0B;AAC3D,SAAKA,cAAL,GAAsBA,cAAtB;AACH,GAFD;;AAGAvB,EAAAA,MAAM,CAACgB,SAAP,CAAiBQ,iBAAjB,GAAqC,YAAY;AAC7C,WAAO,KAAKD,cAAZ;AACH,GAFD,CAlCoC,CAqCpC;;;AACAvB,EAAAA,MAAM,CAACgB,SAAP,CAAiBS,UAAjB,GAA8B,YAAY;AACtC,SAAKC,SAAL,CAAe,KAAKzB,MAAL,CAAY0B,MAA3B;AACA,QAAIC,WAAW,GAAG,KAAKC,kBAAL,CAAwBC,cAAxB,EAAlB;AACA,QAAIC,WAAW,GAAG,KAAKF,kBAAL,CAAwBG,cAAxB,EAAlB;;AACA,QAAI,KAAK/B,MAAL,CAAYgC,QAAhB,EAA0B;AACtB,WAAKA,QAAL,GAAgB,KAAKhC,MAAL,CAAYgC,QAA5B;AACH,KAFD,MAGK;AACD,WAAKA,QAAL,GAAgBL,WAAhB;AACH;;AACD,QAAI,KAAK3B,MAAL,CAAYiC,QAAhB,EAA0B;AACtB,WAAKA,QAAL,GAAgB,KAAKjC,MAAL,CAAYiC,QAA5B;AACH,KAFD,MAGK;AACD,WAAKA,QAAL,GAAgBH,WAAhB;AACH;;AACD,QAAI,KAAK9B,MAAL,CAAYkC,IAAhB,EAAsB;AAClB,WAAKA,IAAL,GAAY,KAAKlC,MAAL,CAAYkC,IAAxB;AACH;;AACD,SAAKC,gBAAL;AACA,QAAIC,mBAAmB,GAAG,KAAKR,kBAAL,CAAwBS,0BAAxB,EAA1B;AACA,SAAKC,iBAAL,GAAyB7C,CAAC,CAAC8C,MAAF,CAAS,KAAKvC,MAAL,CAAYwC,KAArB,KAA+B,KAAKxC,MAAL,CAAYwC,KAAZ,CAAkBC,OAAlB,CAA0B,GAA1B,KAAkC,CAAjE,IAAsE,CAACL,mBAAhG;AACA,SAAKM,wBAAL,GAAgCjD,CAAC,CAAC8C,MAAF,CAAS,KAAKvC,MAAL,CAAY2C,YAArB,KAAsC,KAAK3C,MAAL,CAAY2C,YAAZ,CAAyBF,OAAzB,CAAiC,GAAjC,KAAyC,CAA/E,IAAoF,CAACL,mBAArH;AACA,SAAKQ,QAAL;AACH,GAxBD;;AAyBA7C,EAAAA,MAAM,CAACgB,SAAP,CAAiBoB,gBAAjB,GAAoC,YAAY;AAC5C,SAAKU,WAAL,GAAmB,KAAKC,WAAL,CAAiBC,wBAAjB,CAA0C,KAAK/C,MAA/C,CAAnB;AACH,GAFD;;AAGAD,EAAAA,MAAM,CAACgB,SAAP,CAAiBiC,YAAjB,GAAgC,YAAY;AACxC,WAAO,KAAP;AACH,GAFD;;AAGAjD,EAAAA,MAAM,CAACgB,SAAP,CAAiBkC,mBAAjB,GAAuC,UAAU/C,KAAV,EAAiB;AACpD,QAAIT,CAAC,CAACyD,OAAF,CAAU,KAAKlD,MAAf,KAA0BP,CAAC,CAACyD,OAAF,CAAU,KAAKlD,MAAL,CAAYmD,YAAtB,CAA9B,EAAmE;AAC/D,aAAO,KAAP;AACH;;AACD,QAAIC,gBAAgB,GAAG,KAAKpD,MAAL,CAAYmD,YAAZ,KAA6B,IAApD;AACA,QAAIE,gBAAgB,GAAG,KAAKrD,MAAL,CAAYmD,YAAZ,KAA6BjD,KAApD;AACA,WAAOkD,gBAAgB,IAAIC,gBAA3B;AACH,GAPD;;AAQAtD,EAAAA,MAAM,CAACgB,SAAP,CAAiBuC,WAAjB,GAA+B,YAAY;AACvC,WAAO,KAAKC,KAAL,EAAP;AACH,GAFD;;AAGAxD,EAAAA,MAAM,CAACgB,SAAP,CAAiByC,SAAjB,GAA6B,YAAY;AACrC,WAAO,KAAKrD,OAAZ;AACH,GAFD;;AAGAJ,EAAAA,MAAM,CAACgB,SAAP,CAAiB0C,eAAjB,GAAmC,YAAY;AAC3C;AACA;AACA,QAAIC,aAAa,GAAG,CAAC,CAAC,KAAK1D,MAAL,CAAY2D,MAAd,IAAwB,CAAC,CAAC,KAAK3D,MAAL,CAAY4D,eAA1D;AACA,WAAO,KAAKzD,OAAL,IAAgBuD,aAAvB;AACH,GALD;;AAMA3D,EAAAA,MAAM,CAACgB,SAAP,CAAiB8C,mBAAjB,GAAuC,YAAY;AAC/C,WAAO,KAAKvB,iBAAZ;AACH,GAFD;;AAGAvC,EAAAA,MAAM,CAACgB,SAAP,CAAiB+C,0BAAjB,GAA8C,YAAY;AACtD,WAAO,KAAKpB,wBAAZ;AACH,GAFD;;AAGA3C,EAAAA,MAAM,CAACgB,SAAP,CAAiB6B,QAAjB,GAA4B,YAAY;AACpC,QAAImB,SAAS,GAAG,KAAK/D,MAArB;;AACA,aAASgE,QAAT,CAAkBC,GAAlB,EAAuBtF,GAAvB,EAA4BuF,GAA5B,EAAiC;AAC7BzE,MAAAA,CAAC,CAAC0E,MAAF,CAAS,YAAY;AACjB,YAAID,GAAJ,EAAS;AACLE,UAAAA,OAAO,CAACC,IAAR,CAAaJ,GAAb,EAAkBC,GAAlB;AACH,SAFD,MAGK;AACDzE,UAAAA,CAAC,CAAC0E,MAAF,CAAS,YAAY;AAAE,mBAAOC,OAAO,CAACC,IAAR,CAAaJ,GAAb,CAAP;AAA2B,WAAlD,EAAoDtF,GAApD;AACH;AACJ,OAPD,EAOGA,GAPH;AAQH;;AACD,QAAI,CAACmB,cAAc,CAACwE,YAAf,CAA4BzE,WAAW,CAAC0E,iBAAxC,CAAL,EAAiE;AAC7D,UAAIC,gBAAgB,GAAG,CAAC,gBAAD,EAAmB,UAAnB,EAA+B,eAA/B,EAAgD,aAAhD,EAA+D,aAA/D,EAA8E,OAA9E,EAAuF,YAAvF,EAAqG,SAArG,CAAvB;AACAA,MAAAA,gBAAgB,CAACC,OAAjB,CAAyB,UAAUC,IAAV,EAAgB;AACrC,YAAIjF,CAAC,CAAC8C,MAAF,CAASwB,SAAS,CAACW,IAAD,CAAlB,CAAJ,EAA+B;AAC3B,cAAI5E,cAAc,CAAC6E,cAAf,EAAJ,EAAqC;AACjCX,YAAAA,QAAQ,CAAC,cAAcU,IAAd,GAAqB,+EAArB,GAAuGA,IAAxG,EAA8G,6BAA6BA,IAA3I,CAAR;AACH,WAFD,MAGK;AACDV,YAAAA,QAAQ,CAAC,cAAcU,IAAd,GAAqB,gDAArB,GAAwE7E,WAAW,CAAC0E,iBAApF,GAAwG,4CAAxG,GAAuJG,IAAxJ,EAA8J,6BAA6BA,IAA3L,CAAR;AACH;AACJ;AACJ,OATD;AAUH;;AACD,QAAI,CAAC5E,cAAc,CAACwE,YAAf,CAA4BzE,WAAW,CAAC+E,gBAAxC,CAAL,EAAgE;AAC5D,UAAI,KAAK5E,MAAL,CAAY6E,UAAZ,KAA2B,cAA3B,IAA6C,KAAK7E,MAAL,CAAY6E,UAAZ,KAA2B,wBAA5E,EAAsG;AAClG,YAAI/E,cAAc,CAAC6E,cAAf,EAAJ,EAAqC;AACjCX,UAAAA,QAAQ,CAAC,cAAc,KAAKhE,MAAL,CAAY6E,UAA1B,GAAuC,2CAAxC,EAAqF,yBAArF,CAAR;AACH,SAFD,MAGK;AACDb,UAAAA,QAAQ,CAAC,cAAc,KAAKhE,MAAL,CAAY6E,UAA1B,GAAuC,mDAAvC,GAA6FhF,WAAW,CAAC+E,gBAA1G,EAA4H,yBAA5H,CAAR;AACH;AACJ;AACJ;;AACD,QAAI,CAAC9E,cAAc,CAACwE,YAAf,CAA4BzE,WAAW,CAACiF,wBAAxC,CAAL,EAAwE;AACpE,UAAI,KAAK9E,MAAL,CAAY6E,UAAZ,KAA2B,cAA3B,IAA6C,KAAK7E,MAAL,CAAY6E,UAAZ,KAA2B,sBAA5E,EAAoG;AAChG,YAAI/E,cAAc,CAAC6E,cAAf,EAAJ,EAAqC;AACjCX,UAAAA,QAAQ,CAAC,cAAc,KAAKhE,MAAL,CAAY6E,UAA1B,GAAuC,2CAAxC,EAAqF,uBAArF,CAAR;AACH,SAFD,MAGK;AACDb,UAAAA,QAAQ,CAAC,cAAc,KAAKhE,MAAL,CAAY6E,UAA1B,GAAuC,mDAAvC,GAA6FhF,WAAW,CAACiF,wBAA1G,EAAoI,uBAApI,CAAR;AACH;AACJ;AACJ;;AACD,QAAI,KAAKlD,kBAAL,CAAwBmD,UAAxB,EAAJ,EAA0C;AACtC,UAAIC,2BAA2B,GAAG,CAAC,UAAD,EAAa,eAAb,EAA8B,OAA9B,EAAuC,YAAvC,CAAlC;AACAA,MAAAA,2BAA2B,CAACP,OAA5B,CAAoC,UAAUC,IAAV,EAAgB;AAChD,YAAIjF,CAAC,CAAC8C,MAAF,CAASwB,SAAS,CAACW,IAAD,CAAlB,CAAJ,EAA+B;AAC3BV,UAAAA,QAAQ,CAAC,cAAcU,IAAd,GAAqB,gFAArB,GAAwGA,IAAzG,EAA+G,wBAA/G,CAAR;AACH;AACJ,OAJD;AAKH;;AACD,QAAIjF,CAAC,CAAC8C,MAAF,CAAS,KAAKvC,MAAL,CAAYiF,KAArB,KAA+B,OAAO,KAAKjF,MAAL,CAAYiF,KAAnB,KAA6B,QAAhE,EAA0E;AACtEjB,MAAAA,QAAQ,CAAC,mDAAmD,OAAO,KAAKhE,MAAL,CAAYiF,KAAvE,EAA8E,sBAA9E,CAAR;AACH;;AACD,QAAIxF,CAAC,CAACyF,GAAF,CAAM,IAAN,EAAY,8CAAZ,EAA4D,IAA5D,CAAJ,EAAuE;AACnElB,MAAAA,QAAQ,CAAC,gHAAD,EAAmH,qBAAnH,CAAR;AACH;;AACD,QAAIvE,CAAC,CAACyF,GAAF,CAAM,IAAN,EAAY,kCAAZ,EAAgD,IAAhD,CAAJ,EAA2D;AACvDlB,MAAAA,QAAQ,CAAC,yGAAD,EAA4G,uBAA5G,CAAR;AACH;;AACD,QAAIvE,CAAC,CAACyF,GAAF,CAAM,IAAN,EAAY,kCAAZ,EAAgD,IAAhD,CAAJ,EAA2D;AACvDlB,MAAAA,QAAQ,CAAC,yGAAD,EAA4G,sBAA5G,CAAR;AACH;;AACD,QAAID,SAAS,CAACoB,oBAAd,EAAoC;AAChCnB,MAAAA,QAAQ,CAAC,uEAAD,EAA0E,sBAA1E,CAAR;AACA,WAAKhE,MAAL,CAAYoF,qBAAZ,GAAoCrB,SAAS,CAACoB,oBAA9C;AACH;;AACD,QAAIpB,SAAS,CAACsB,yBAAd,EAAyC;AACrCrB,MAAAA,QAAQ,CAAC,qFAAD,EAAwF,wBAAxF,CAAR;AACA,WAAKhE,MAAL,CAAYsF,8BAAZ,GAA6CvB,SAAS,CAACsB,yBAAvD;AACH;;AACD,QAAItB,SAAS,CAACwB,sBAAd,EAAsC;AAClCnB,MAAAA,OAAO,CAACC,IAAR,CAAa,+EAAb,EAA8F,sBAA9F;AACA,WAAKrE,MAAL,CAAYwF,2BAAZ,GAA0CzB,SAAS,CAACwB,sBAApD;AACH;;AACD,QAAIxB,SAAS,CAAC0B,sBAAd,EAAsC;AAClCzB,MAAAA,QAAQ,CAAC,2EAAD,EAA8E,wBAA9E,CAAR;AACA,WAAKhE,MAAL,CAAY0F,uBAAZ,GAAsC3B,SAAS,CAAC0B,sBAAhD;AACH;;AACD,QAAI1B,SAAS,CAAC4B,aAAd,EAA6B;AACzB3B,MAAAA,QAAQ,CAAC,yDAAD,EAA4D,uBAA5D,CAAR;;AACA,UAAIvE,CAAC,CAACyD,OAAF,CAAU,KAAKlD,MAAL,CAAY4F,cAAtB,CAAJ,EAA2C;AACvC,aAAK5F,MAAL,CAAY4F,cAAZ,GAA6B7B,SAAS,CAAC4B,aAAvC;AACH;AACJ;;AACD,QAAI5B,SAAS,CAAC8B,kBAAd,EAAkC;AAC9B7B,MAAAA,QAAQ,CAAC,+EAAD,EAAkF,sBAAlF,CAAR;AACH;;AACD,QAAID,SAAS,CAAC+B,kBAAd,EAAkC;AAC9B9B,MAAAA,QAAQ,CAAC,+EAAD,EAAkF,qBAAlF,CAAR;AACH;;AACD,QAAID,SAAS,CAACgC,QAAd,EAAwB;AACpB/B,MAAAA,QAAQ,CAAC,0GAAD,EAA6G,uBAA7G,CAAR;AACH;;AACD,QAAID,SAAS,CAACiC,eAAd,EAA+B;AAC3BhC,MAAAA,QAAQ,CAAC,wFAAD,EAA2F,qBAA3F,EAAkH,KAAKhE,MAAvH,CAAR;AACA,WAAKA,MAAL,CAAYiG,QAAZ,GAAuB,KAAvB;AACH;;AACD,QAAIlC,SAAS,CAACmC,cAAd,EAA8B;AAC1BlC,MAAAA,QAAQ,CAAC,qFAAD,EAAwF,sBAAxF,EAAgH,KAAKhE,MAArH,CAAR;AACA,WAAKA,MAAL,CAAY2D,MAAZ,GAAqB,KAArB;AACH;;AACD,QAAII,SAAS,CAACoC,cAAd,EAA8B;AAC1BnC,MAAAA,QAAQ,CAAC,wFAAD,EAA2F,uBAA3F,EAAoH,KAAKhE,MAAzH,CAAR;AACA,WAAKA,MAAL,CAAYoG,SAAZ,GAAwB,KAAxB;AACH;;AACD,QAAIrC,SAAS,CAACsC,OAAd,EAAuB;AACnBrC,MAAAA,QAAQ,CAAC,sFAAD,EAAyF,wBAAzF,EAAmH,KAAKhE,MAAxH,CAAR;AACA,WAAKA,MAAL,CAAYsG,kBAAZ,GAAiCvC,SAAS,CAACsC,OAA3C;AACH;;AACD,QAAItC,SAAS,CAACwC,iBAAd,EAAiC;AAC7BvC,MAAAA,QAAQ,CAAC,wHAAD,EAA2H,yBAA3H,EAAsJ,KAAKhE,MAA3J,CAAR;AACA,WAAKA,MAAL,CAAYwG,wBAAZ,GAAuC,IAAvC;AACH;AACJ,GApHD;;AAqHAzG,EAAAA,MAAM,CAACgB,SAAP,CAAiB0F,gBAAjB,GAAoC,UAAUC,SAAV,EAAqBC,QAArB,EAA+B;AAC/D,SAAKpG,YAAL,CAAkBkG,gBAAlB,CAAmCC,SAAnC,EAA8CC,QAA9C;AACH,GAFD;;AAGA5G,EAAAA,MAAM,CAACgB,SAAP,CAAiB6F,mBAAjB,GAAuC,UAAUF,SAAV,EAAqBC,QAArB,EAA+B;AAClE,SAAKpG,YAAL,CAAkBqG,mBAAlB,CAAsCF,SAAtC,EAAiDC,QAAjD;AACH,GAFD;;AAGA5G,EAAAA,MAAM,CAACgB,SAAP,CAAiB8F,wBAAjB,GAA4C,UAAUC,OAAV,EAAmB;AAC3D,WAAO;AACHC,MAAAA,IAAI,EAAED,OADH;AAEHE,MAAAA,IAAI,EAAEF,OAAO,CAACE,IAFX;AAGHC,MAAAA,MAAM,EAAE,IAHL;AAIHjH,MAAAA,MAAM,EAAE,KAAKA,MAJV;AAKHkH,MAAAA,OAAO,EAAE,KAAKtF,kBAAL,CAAwBuF,UAAxB,EALN;AAMHC,MAAAA,GAAG,EAAE,KAAKxF,kBAAL,CAAwByF,MAAxB,EANF;AAOHC,MAAAA,SAAS,EAAE,KAAK1F,kBAAL,CAAwB2F,YAAxB;AAPR,KAAP;AASH,GAVD;;AAWAxH,EAAAA,MAAM,CAACgB,SAAP,CAAiByG,mBAAjB,GAAuC,UAAUV,OAAV,EAAmB;AACtD;AACA,QAAI,OAAO,KAAK9G,MAAL,CAAYyH,iBAAnB,KAAyC,SAA7C,EAAwD;AACpD,aAAO,KAAKzH,MAAL,CAAYyH,iBAAnB;AACH,KAJqD,CAKtD;;;AACA,QAAI,OAAO,KAAKzH,MAAL,CAAYyH,iBAAnB,KAAyC,UAA7C,EAAyD;AACrD,UAAIC,MAAM,GAAG,KAAKb,wBAAL,CAA8BC,OAA9B,CAAb;AACA,UAAIa,QAAQ,GAAG,KAAK3H,MAAL,CAAYyH,iBAA3B;AACA,aAAOE,QAAQ,CAACD,MAAD,CAAf;AACH;;AACD,WAAO,KAAP;AACH,GAZD;;AAaA3H,EAAAA,MAAM,CAACgB,SAAP,CAAiB6G,cAAjB,GAAkC,UAAUd,OAAV,EAAmB;AACjD;AACA,QAAIA,OAAO,CAACe,KAAR,IAAiB,CAAC,KAAKjG,kBAAL,CAAwBkG,iBAAxB,EAAtB,EAAmE;AAC/D,aAAO,KAAP;AACH;;AACD,WAAO,KAAKC,YAAL,CAAkBjB,OAAlB,EAA2B,KAAK9G,MAAL,CAAYgI,QAAvC,CAAP;AACH,GAND;;AAOAjI,EAAAA,MAAM,CAACgB,SAAP,CAAiBkH,SAAjB,GAA6B,UAAUnB,OAAV,EAAmB;AAC5C,WAAO,KAAKiB,YAAL,CAAkBjB,OAAlB,EAA2B,KAAK9G,MAAL,CAAYkI,OAAvC,CAAP;AACH,GAFD;;AAGAnI,EAAAA,MAAM,CAACgB,SAAP,CAAiBoH,WAAjB,GAA+B,UAAUrB,OAAV,EAAmB;AAC9C,WAAO,KAAKiB,YAAL,CAAkBjB,OAAlB,EAA2B,KAAK9G,MAAL,CAAYoI,SAAvC,CAAP;AACH,GAFD;;AAGArI,EAAAA,MAAM,CAACgB,SAAP,CAAiBsH,uBAAjB,GAA2C,UAAUvB,OAAV,EAAmB;AAC1D,WAAO,KAAKiB,YAAL,CAAkBjB,OAAlB,EAA2B,KAAK9G,MAAL,CAAYsI,iBAAvC,CAAP;AACH,GAFD;;AAGAvI,EAAAA,MAAM,CAACgB,SAAP,CAAiBwH,eAAjB,GAAmC,UAAUzB,OAAV,EAAmB;AAClD,WAAO,KAAKiB,YAAL,CAAkBjB,OAAlB,EAA2B,KAAK9G,MAAL,GAAc,KAAKA,MAAL,CAAYwI,aAA1B,GAA0C,IAArE,CAAP;AACH,GAFD;;AAGAzI,EAAAA,MAAM,CAACgB,SAAP,CAAiB0H,WAAjB,GAA+B,YAAY;AACvC,WAAO,KAAKzI,MAAL,CAAYoG,SAAZ,KAA0B,IAAjC;AACH,GAFD;;AAGArG,EAAAA,MAAM,CAACgB,SAAP,CAAiBgH,YAAjB,GAAgC,UAAUjB,OAAV,EAAmB4B,KAAnB,EAA0B;AACtD;AACA,QAAI,OAAOA,KAAP,KAAiB,SAArB,EAAgC;AAC5B,aAAOA,KAAP;AACH,KAJqD,CAKtD;;;AACA,QAAI,OAAOA,KAAP,KAAiB,UAArB,EAAiC;AAC7B,UAAIhB,MAAM,GAAG,KAAKb,wBAAL,CAA8BC,OAA9B,CAAb;AACA,UAAI6B,YAAY,GAAGD,KAAnB;AACA,aAAOC,YAAY,CAACjB,MAAD,CAAnB;AACH;;AACD,WAAO,KAAP;AACH,GAZD;;AAaA3H,EAAAA,MAAM,CAACgB,SAAP,CAAiB6H,SAAjB,GAA6B,UAAUxI,MAAV,EAAkByI,MAAlB,EAA0B;AACnD,QAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;AAAEA,MAAAA,MAAM,GAAG,KAAT;AAAiB;;AAC1C,SAAKzI,MAAL,GAAcA,MAAd;AACA,SAAKG,YAAL,CAAkBuI,aAAlB,CAAgC,KAAKC,iBAAL,CAAuBhJ,MAAM,CAACiJ,oBAA9B,EAAoDH,MAApD,CAAhC;AACH,GAJD;;AAKA9I,EAAAA,MAAM,CAACgB,SAAP,CAAiBgI,iBAAjB,GAAqC,UAAUE,IAAV,EAAgBJ,MAAhB,EAAwB;AACzD,WAAO;AACHzB,MAAAA,GAAG,EAAE,KAAK8B,OADP;AAEH5B,MAAAA,SAAS,EAAE,KAAKA,SAFb;AAGH2B,MAAAA,IAAI,EAAEA,IAHH;AAIHhC,MAAAA,MAAM,EAAE,IAJL;AAKHkC,MAAAA,OAAO,EAAE,CAAC,IAAD,CALN;AAMHN,MAAAA,MAAM,EAAEA;AANL,KAAP;AAQH,GATD;;AAUA9I,EAAAA,MAAM,CAACgB,SAAP,CAAiBqI,QAAjB,GAA4B,YAAY;AACpC,WAAO,KAAKhJ,MAAZ;AACH,GAFD;;AAGAL,EAAAA,MAAM,CAACgB,SAAP,CAAiBsI,OAAjB,GAA2B,YAAY;AACnC,WAAO,KAAKxI,IAAZ;AACH,GAFD;;AAGAd,EAAAA,MAAM,CAACgB,SAAP,CAAiBuI,OAAjB,GAA2B,UAAUzI,IAAV,EAAgBgI,MAAhB,EAAwB;AAC/C,QAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;AAAEA,MAAAA,MAAM,GAAG,KAAT;AAAiB;;AAC1C,QAAI,KAAKhI,IAAL,KAAcA,IAAlB,EAAwB;AACpB,WAAKA,IAAL,GAAYA,IAAZ;AACA,WAAKN,YAAL,CAAkBuI,aAAlB,CAAgC,KAAKC,iBAAL,CAAuBhJ,MAAM,CAACwJ,kBAA9B,EAAkDV,MAAlD,CAAhC;AACH;AACJ,GAND;;AAOA9I,EAAAA,MAAM,CAACgB,SAAP,CAAiByI,cAAjB,GAAkC,UAAU7I,OAAV,EAAmBkI,MAAnB,EAA2B;AACzD,QAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;AAAEA,MAAAA,MAAM,GAAG,KAAT;AAAiB;;AAC1C,QAAI,KAAKxI,WAAL,KAAqBM,OAAzB,EAAkC;AAC9B,WAAKN,WAAL,GAAmBM,OAAnB;AACA,WAAKJ,YAAL,CAAkBuI,aAAlB,CAAgC,KAAKC,iBAAL,CAAuBhJ,MAAM,CAAC0J,0BAA9B,EAA0DZ,MAA1D,CAAhC;AACH;AACJ,GAND;;AAOA9I,EAAAA,MAAM,CAACgB,SAAP,CAAiB2I,aAAjB,GAAiC,YAAY;AACzC,WAAO,KAAKrJ,WAAZ;AACH,GAFD;;AAGAN,EAAAA,MAAM,CAACgB,SAAP,CAAiB4I,eAAjB,GAAmC,YAAY;AAC3C,WAAO,KAAK9I,IAAL,KAAcjB,SAAS,CAACgK,QAA/B;AACH,GAFD;;AAGA7J,EAAAA,MAAM,CAACgB,SAAP,CAAiB8I,gBAAjB,GAAoC,YAAY;AAC5C,WAAO,KAAKhJ,IAAL,KAAcjB,SAAS,CAACkK,SAA/B;AACH,GAFD;;AAGA/J,EAAAA,MAAM,CAACgB,SAAP,CAAiBgJ,UAAjB,GAA8B,YAAY;AACtC,WAAOtK,CAAC,CAACyD,OAAF,CAAU,KAAKrC,IAAf,CAAP;AACH,GAFD;;AAGAd,EAAAA,MAAM,CAACgB,SAAP,CAAiBiJ,SAAjB,GAA6B,YAAY;AACrC,WAAOvK,CAAC,CAAC8C,MAAF,CAAS,KAAK1B,IAAd,CAAP;AACH,GAFD;;AAGAd,EAAAA,MAAM,CAACgB,SAAP,CAAiBkJ,WAAjB,GAA+B,YAAY;AACvC,WAAO,KAAKnJ,QAAZ;AACH,GAFD;;AAGAf,EAAAA,MAAM,CAACgB,SAAP,CAAiBmJ,WAAjB,GAA+B,UAAUpJ,QAAV,EAAoB;AAC/C,SAAKA,QAAL,GAAgBA,QAAhB;AACH,GAFD;;AAGAf,EAAAA,MAAM,CAACgB,SAAP,CAAiBoJ,UAAjB,GAA8B,UAAUC,OAAV,EAAmB;AAC7C,SAAKA,OAAL,GAAeA,OAAf;AACH,GAFD;;AAGArK,EAAAA,MAAM,CAACgB,SAAP,CAAiBsJ,UAAjB,GAA8B,YAAY;AACtC,WAAO,KAAKD,OAAZ;AACH,GAFD;;AAGArK,EAAAA,MAAM,CAACgB,SAAP,CAAiBuJ,OAAjB,GAA2B,YAAY;AACnC,WAAO,KAAKC,IAAZ;AACH,GAFD;;AAGAxK,EAAAA,MAAM,CAACgB,SAAP,CAAiByJ,UAAjB,GAA8B,YAAY;AACtC,WAAO,KAAKC,OAAZ;AACH,GAFD;;AAGA1K,EAAAA,MAAM,CAACgB,SAAP,CAAiB2J,QAAjB,GAA4B,YAAY;AACpC,WAAO,KAAKH,IAAL,GAAY,KAAK1H,WAAxB;AACH,GAFD;;AAGA9C,EAAAA,MAAM,CAACgB,SAAP,CAAiB4J,OAAjB,GAA2B,UAAUJ,IAAV,EAAgB1B,MAAhB,EAAwB;AAC/C,QAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;AAAEA,MAAAA,MAAM,GAAG,KAAT;AAAiB;;AAC1C,SAAK4B,OAAL,GAAe,KAAKF,IAApB;;AACA,QAAI,KAAKA,IAAL,KAAcA,IAAlB,EAAwB;AACpB,WAAKA,IAAL,GAAYA,IAAZ;AACA,WAAKhK,YAAL,CAAkBuI,aAAlB,CAAgC,KAAKC,iBAAL,CAAuBhJ,MAAM,CAAC6K,kBAA9B,EAAkD/B,MAAlD,CAAhC;AACH;AACJ,GAPD;;AAQA9I,EAAAA,MAAM,CAACgB,SAAP,CAAiB8J,cAAjB,GAAkC,YAAY;AAC1C,WAAO,KAAKvK,YAAZ;AACH,GAFD,CApWoC,CAuWpC;;;AACAP,EAAAA,MAAM,CAACgB,SAAP,CAAiB+J,eAAjB,GAAmC,UAAUC,MAAV,EAAkBlC,MAAlB,EAA0BmC,yBAA1B,EAAqD;AACpF,QAAInC,MAAM,KAAK,KAAK,CAApB,EAAuB;AAAEA,MAAAA,MAAM,GAAG,KAAT;AAAiB;;AAC1C,QAAI,KAAKvI,YAAL,KAAsByK,MAA1B,EAAkC;AAC9B,WAAKzK,YAAL,GAAoByK,MAApB;AACA,WAAKxK,YAAL,CAAkBuI,aAAlB,CAAgC,KAAKC,iBAAL,CAAuBhJ,MAAM,CAACkL,2BAA9B,EAA2DpC,MAA3D,CAAhC;AACH;;AACD,QAAIqC,kBAAkB,GAAG,KAAKnC,iBAAL,CAAuBhJ,MAAM,CAACoL,oBAA9B,EAAoDtC,MAApD,CAAzB;;AACA,QAAImC,yBAAJ,EAA+B;AAC3BvL,MAAAA,CAAC,CAAC2L,SAAF,CAAYF,kBAAZ,EAAgCF,yBAAhC;AACH;;AACD,SAAKzK,YAAL,CAAkBuI,aAAlB,CAAgCoC,kBAAhC;AACH,GAXD;;AAYAnL,EAAAA,MAAM,CAACgB,SAAP,CAAiBU,SAAjB,GAA6B,UAAUC,MAAV,EAAkB;AAC3C,QAAIA,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK9B,SAAS,CAACyL,WAA5C,EAAyD;AACrD,WAAK3J,MAAL,GAAc9B,SAAS,CAACyL,WAAxB;AACH,KAFD,MAGK,IAAI3J,MAAM,KAAK9B,SAAS,CAAC0L,YAAzB,EAAuC;AACxC,WAAK5J,MAAL,GAAc9B,SAAS,CAAC0L,YAAxB;AACH,KAFI,MAGA;AACD,WAAK5J,MAAL,GAAc,IAAd;AACH;AACJ,GAVD;;AAWA3B,EAAAA,MAAM,CAACgB,SAAP,CAAiBwK,mBAAjB,GAAuC,UAAUC,gBAAV,EAA4B3C,MAA5B,EAAoC;AACvE,QAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;AAAEA,MAAAA,MAAM,GAAG,KAAT;AAAiB;;AAC1C,QAAI,KAAK2C,gBAAL,KAA0BA,gBAA9B,EAAgD;AAC5C,WAAKA,gBAAL,GAAwBA,gBAAxB;AACA,WAAKjL,YAAL,CAAkBuI,aAAlB,CAAgC,KAAKC,iBAAL,CAAuBhJ,MAAM,CAAC0L,gCAA9B,EAAgE5C,MAAhE,CAAhC;AACH;AACJ,GAND;;AAOA9I,EAAAA,MAAM,CAACgB,SAAP,CAAiB2K,iBAAjB,GAAqC,UAAUC,cAAV,EAA0B9C,MAA1B,EAAkC;AACnE,QAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;AAAEA,MAAAA,MAAM,GAAG,KAAT;AAAiB;;AAC1C,QAAI,KAAK8C,cAAL,KAAwBA,cAA5B,EAA4C;AACxC,WAAKA,cAAL,GAAsBA,cAAtB;AACA,WAAKpL,YAAL,CAAkBuI,aAAlB,CAAgC,KAAKC,iBAAL,CAAuBhJ,MAAM,CAAC6L,8BAA9B,EAA8D/C,MAA9D,CAAhC;AACH;AACJ,GAND;;AAOA9I,EAAAA,MAAM,CAACgB,SAAP,CAAiB8K,kBAAjB,GAAsC,YAAY;AAC9C,WAAO,KAAKL,gBAAZ;AACH,GAFD;;AAGAzL,EAAAA,MAAM,CAACgB,SAAP,CAAiB+K,gBAAjB,GAAoC,YAAY;AAC5C,WAAO,KAAKH,cAAZ;AACH,GAFD;;AAGA5L,EAAAA,MAAM,CAACgB,SAAP,CAAiBgL,QAAjB,GAA4B,YAAY;AACpC,WAAO,KAAKrK,MAAL,KAAgB9B,SAAS,CAACyL,WAA1B,IAAyC,KAAK3J,MAAL,KAAgB9B,SAAS,CAAC0L,YAA1E;AACH,GAFD;;AAGAvL,EAAAA,MAAM,CAACgB,SAAP,CAAiBiL,YAAjB,GAAgC,YAAY;AACxC,WAAO,KAAKtK,MAAL,KAAgB9B,SAAS,CAACyL,WAAjC;AACH,GAFD;;AAGAtL,EAAAA,MAAM,CAACgB,SAAP,CAAiBkL,aAAjB,GAAiC,YAAY;AACzC,WAAO,KAAKvK,MAAL,KAAgB9B,SAAS,CAAC0L,YAAjC;AACH,GAFD;;AAGAvL,EAAAA,MAAM,CAACgB,SAAP,CAAiBmL,SAAjB,GAA6B,YAAY;AACrC,WAAO,KAAKxK,MAAZ;AACH,GAFD;;AAGA3B,EAAAA,MAAM,CAACgB,SAAP,CAAiBoL,UAAjB,GAA8B,UAAUxL,OAAV,EAAmBkI,MAAnB,EAA2B;AACrD,QAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;AAAEA,MAAAA,MAAM,GAAG,KAAT;AAAiB;;AAC1C,QAAIuD,QAAQ,GAAGzL,OAAO,KAAK,IAA3B;;AACA,QAAI,KAAKA,OAAL,KAAiByL,QAArB,EAA+B;AAC3B,WAAKzL,OAAL,GAAeyL,QAAf;AACA,WAAK7L,YAAL,CAAkBuI,aAAlB,CAAgC,KAAKC,iBAAL,CAAuBhJ,MAAM,CAACsM,qBAA9B,EAAqDxD,MAArD,CAAhC;AACH;AACJ,GAPD;;AAQA9I,EAAAA,MAAM,CAACgB,SAAP,CAAiBuL,SAAjB,GAA6B,YAAY;AACrC,WAAO,KAAK3L,OAAZ;AACH,GAFD;;AAGAZ,EAAAA,MAAM,CAACgB,SAAP,CAAiBwL,SAAjB,GAA6B,YAAY;AACrC,WAAO,KAAKvM,MAAZ;AACH,GAFD;;AAGAD,EAAAA,MAAM,CAACgB,SAAP,CAAiByL,kBAAjB,GAAsC,YAAY;AAC9C,WAAO,KAAKxM,MAAL,CAAYyM,eAAnB;AACH,GAFD;;AAGA1M,EAAAA,MAAM,CAACgB,SAAP,CAAiB2L,QAAjB,GAA4B,YAAY;AACpC,WAAO,KAAKxM,KAAZ;AACH,GAFD;;AAGAH,EAAAA,MAAM,CAACgB,SAAP,CAAiBwC,KAAjB,GAAyB,YAAY;AACjC,WAAO,KAAKmJ,QAAL,EAAP;AACH,GAFD;;AAGA3M,EAAAA,MAAM,CAACgB,SAAP,CAAiB4L,aAAjB,GAAiC,YAAY;AACzC,WAAO,KAAK3M,MAAZ;AACH,GAFD;;AAGAD,EAAAA,MAAM,CAACgB,SAAP,CAAiB6L,cAAjB,GAAkC,YAAY;AAC1C,WAAO,KAAK/J,WAAZ;AACH,GAFD;;AAGA9C,EAAAA,MAAM,CAACgB,SAAP,CAAiB8L,sBAAjB,GAA0C,UAAU/F,OAAV,EAAmB;AACzD,QAAIY,MAAM,GAAG;AACTX,MAAAA,IAAI,EAAED,OADG;AAETE,MAAAA,IAAI,EAAEF,OAAO,CAACE,IAFL;AAGThH,MAAAA,MAAM,EAAE,KAAKA,MAHJ;AAITiH,MAAAA,MAAM,EAAE,IAJC;AAKTG,MAAAA,GAAG,EAAE,KAAKxF,kBAAL,CAAwByF,MAAxB,EALI;AAMTC,MAAAA,SAAS,EAAE,KAAK1F,kBAAL,CAAwB2F,YAAxB,EANF;AAOTL,MAAAA,OAAO,EAAE,KAAKtF,kBAAL,CAAwBuF,UAAxB;AAPA,KAAb;AASA,WAAOO,MAAP;AACH,GAXD;;AAYA3H,EAAAA,MAAM,CAACgB,SAAP,CAAiB+L,UAAjB,GAA8B,UAAUhG,OAAV,EAAmB;AAC7C,QAAIrH,CAAC,CAACyD,OAAF,CAAU,KAAKlD,MAAL,CAAY+M,OAAtB,CAAJ,EAAoC;AAChC,aAAO,CAAP;AACH;;AACD,QAAIrF,MAAM,GAAG,KAAKmF,sBAAL,CAA4B/F,OAA5B,CAAb;AACA,QAAIiG,OAAO,GAAG,KAAK/M,MAAL,CAAY+M,OAAZ,CAAoBrF,MAApB,CAAd,CAL6C,CAM7C;;AACA,WAAOsF,IAAI,CAACC,GAAL,CAASF,OAAT,EAAkB,CAAlB,CAAP;AACH,GARD;;AASAhN,EAAAA,MAAM,CAACgB,SAAP,CAAiBmM,UAAjB,GAA8B,UAAUpG,OAAV,EAAmB;AAC7C,QAAIrH,CAAC,CAACyD,OAAF,CAAU,KAAKlD,MAAL,CAAYmN,OAAtB,CAAJ,EAAoC;AAChC,aAAO,CAAP;AACH;;AACD,QAAIzF,MAAM,GAAG,KAAKmF,sBAAL,CAA4B/F,OAA5B,CAAb;AACA,QAAIqG,OAAO,GAAG,KAAKnN,MAAL,CAAYmN,OAAZ,CAAoBzF,MAApB,CAAd,CAL6C,CAM7C;;AACA,WAAOsF,IAAI,CAACC,GAAL,CAASE,OAAT,EAAkB,CAAlB,CAAP;AACH,GARD;;AASApN,EAAAA,MAAM,CAACgB,SAAP,CAAiBqM,cAAjB,GAAkC,UAAUvK,WAAV,EAAuBgG,MAAvB,EAA+B;AAC7D,QAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;AAAEA,MAAAA,MAAM,GAAG,KAAT;AAAiB;;AAC1C,QAAI,KAAK7G,QAAL,IAAiB,IAArB,EAA2B;AACvBa,MAAAA,WAAW,GAAGmK,IAAI,CAACC,GAAL,CAASpK,WAAT,EAAsB,KAAKb,QAA3B,CAAd;AACH;;AACD,QAAI,KAAKC,QAAL,IAAiB,IAArB,EAA2B;AACvBY,MAAAA,WAAW,GAAGmK,IAAI,CAACK,GAAL,CAASxK,WAAT,EAAsB,KAAKZ,QAA3B,CAAd;AACH;;AACD,QAAI,KAAKY,WAAL,KAAqBA,WAAzB,EAAsC;AAClC;AACA,UAAI,KAAKX,IAAL,IAAa2G,MAAM,KAAK,MAA5B,EAAoC;AAChC,aAAK3G,IAAL,GAAY,CAAZ;AACH;;AACD,WAAKW,WAAL,GAAmBA,WAAnB;AACA,WAAKtC,YAAL,CAAkBuI,aAAlB,CAAgC,KAAKC,iBAAL,CAAuBhJ,MAAM,CAACuN,mBAA9B,EAAmDzE,MAAnD,CAAhC;AACH;AACJ,GAhBD;;AAiBA9I,EAAAA,MAAM,CAACgB,SAAP,CAAiBwM,gBAAjB,GAAoC,UAAUtI,KAAV,EAAiB;AACjD,QAAI,KAAKhD,QAAL,IAAiB,IAArB,EAA2B;AACvB,aAAOgD,KAAK,GAAG,KAAKhD,QAApB;AACH;;AACD,WAAO,KAAP;AACH,GALD;;AAMAlC,EAAAA,MAAM,CAACgB,SAAP,CAAiByM,WAAjB,GAA+B,YAAY;AACvC,WAAO,KAAKxL,QAAZ;AACH,GAFD;;AAGAjC,EAAAA,MAAM,CAACgB,SAAP,CAAiB0M,WAAjB,GAA+B,YAAY;AACvC,WAAO,KAAKxL,QAAZ;AACH,GAFD;;AAGAlC,EAAAA,MAAM,CAACgB,SAAP,CAAiB2M,OAAjB,GAA2B,YAAY;AACnC,WAAO,KAAKxL,IAAL,IAAa,CAApB;AACH,GAFD,CAvfoC,CA0fpC;AACA;;;AACAnC,EAAAA,MAAM,CAACgB,SAAP,CAAiB4M,OAAjB,GAA2B,UAAUzL,IAAV,EAAgB;AACvC,QAAI,KAAKA,IAAL,KAAcA,IAAlB,EAAwB;AACpB,WAAKA,IAAL,GAAYA,IAAZ;AACH;AACJ,GAJD;;AAKAnC,EAAAA,MAAM,CAACgB,SAAP,CAAiB6M,UAAjB,GAA8B,UAAU/E,MAAV,EAAkB;AAC5C,QAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;AAAEA,MAAAA,MAAM,GAAG,KAAT;AAAiB;;AAC1C,SAAKuE,cAAL,CAAoB,KAAKpL,QAAzB,EAAmC6G,MAAnC;AACH,GAHD;;AAIA9I,EAAAA,MAAM,CAACgB,SAAP,CAAiB8M,iBAAjB,GAAqC,UAAUC,QAAV,EAAoBjF,MAApB,EAA4B;AAC7D,QAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;AAAEA,MAAAA,MAAM,GAAG,KAAT;AAAiB;;AAC1C,QAAI,KAAKrI,cAAL,KAAwBsN,QAA5B,EAAsC;AAClC,WAAKtN,cAAL,GAAsBsN,QAAtB;AACA,WAAKvN,YAAL,CAAkBuI,aAAlB,CAAgC,KAAKC,iBAAL,CAAuBhJ,MAAM,CAACgO,uBAA9B,EAAuDlF,MAAvD,CAAhC;AACH;AACJ,GAND;;AAOA9I,EAAAA,MAAM,CAACgB,SAAP,CAAiBiN,gBAAjB,GAAoC,YAAY;AAC5C,WAAO,KAAKxN,cAAZ;AACH,GAFD;;AAGAT,EAAAA,MAAM,CAACgB,SAAP,CAAiBkN,cAAjB,GAAkC,UAAUC,KAAV,EAAiBrF,MAAjB,EAAyB;AACvD,QAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;AAAEA,MAAAA,MAAM,GAAG,KAAT;AAAiB;;AAC1C,QAAI,KAAKpI,WAAL,KAAqByN,KAAzB,EAAgC;AAC5B,WAAKzN,WAAL,GAAmByN,KAAnB;AACA,WAAK3N,YAAL,CAAkBuI,aAAlB,CAAgC,KAAKC,iBAAL,CAAuBhJ,MAAM,CAACoO,mBAA9B,EAAmDtF,MAAnD,CAAhC;AACH;AACJ,GAND;;AAOA9I,EAAAA,MAAM,CAACgB,SAAP,CAAiBqN,aAAjB,GAAiC,YAAY;AACzC,WAAO,KAAK3N,WAAZ;AACH,GAFD;;AAGAV,EAAAA,MAAM,CAACgB,SAAP,CAAiBsN,mBAAjB,GAAuC,YAAY;AAC/C,WAAO,KAAKD,aAAL,MAAwB,KAAKJ,gBAAL,EAAxB,IAAmD,KAAKM,aAAL,EAA1D;AACH,GAFD;;AAGAvO,EAAAA,MAAM,CAACgB,SAAP,CAAiBwN,oBAAjB,GAAwC,YAAY;AAChD,WAAO,KAAKC,YAAL,MAAuB,KAAKC,eAAL,EAAvB,IAAiD,KAAKC,YAAL,EAAxD;AACH,GAFD;;AAGA3O,EAAAA,MAAM,CAACgB,SAAP,CAAiB4N,cAAjB,GAAkC,UAAUjG,KAAV,EAAiBG,MAAjB,EAAyB;AACvD,QAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;AAAEA,MAAAA,MAAM,GAAG,KAAT;AAAiB;;AAC1C,QAAI,KAAKnI,iBAAL,KAA2BgI,KAA/B,EAAsC;AAClC,WAAKhI,iBAAL,GAAyBgI,KAAzB;AACA,WAAKnI,YAAL,CAAkBuI,aAAlB,CAAgC,KAAKC,iBAAL,CAAuBhJ,MAAM,CAAC6O,mBAA9B,EAAmD/F,MAAnD,CAAhC;AACH;AACJ,GAND;;AAOA9I,EAAAA,MAAM,CAACgB,SAAP,CAAiBuN,aAAjB,GAAiC,YAAY;AACzC,WAAO,KAAK5N,iBAAZ;AACH,GAFD;;AAGAX,EAAAA,MAAM,CAACgB,SAAP,CAAiByN,YAAjB,GAAgC,YAAY;AACxC,WAAO,KAAKxO,MAAL,CAAY6O,WAAZ,KAA4B,IAAnC;AACH,GAFD;;AAGA9O,EAAAA,MAAM,CAACgB,SAAP,CAAiB2N,YAAjB,GAAgC,YAAY;AACxC,WAAO,KAAK1O,MAAL,CAAY8O,WAAZ,KAA4B,IAAnC;AACH,GAFD;;AAGA/O,EAAAA,MAAM,CAACgB,SAAP,CAAiB0N,eAAjB,GAAmC,YAAY;AAC3C,WAAO,KAAKzO,MAAL,CAAY+O,cAAZ,KAA+B,IAAtC;AACH,GAFD;;AAGAhP,EAAAA,MAAM,CAACgB,SAAP,CAAiBiO,WAAjB,GAA+B,UAAUC,aAAV,EAAyB;AACpD,QAAIC,QAAQ,GAAG,KAAK3C,SAAL,GAAiB2C,QAAhC;;AACA,QAAIA,QAAQ,IAAI,IAAhB,EAAsB;AAClBA,MAAAA,QAAQ,GAAGD,aAAX;AACH;;AACD,WAAOC,QAAP;AACH,GAND,CAljBoC,CAyjBpC;AACA;;;AACAnP,EAAAA,MAAM,CAACgB,SAAP,CAAiBoO,cAAjB,GAAkC,YAAY;AAC1C/K,IAAAA,OAAO,CAACC,IAAR,CAAa,+GAAb;AACA,WAAO,KAAKrE,MAAL,GAAc,CAAC,CAAC,KAAKA,MAAL,CAAYoP,YAA5B,GAA2C,KAAlD;AACH,GAHD,CA3jBoC,CA+jBpC;AACA;;;AACArP,EAAAA,MAAM,CAACgB,SAAP,CAAiBsO,aAAjB,GAAiC,YAAY;AACzCjL,IAAAA,OAAO,CAACC,IAAR,CAAa,6GAAb;AACA,WAAO,KAAKrE,MAAL,GAAc,CAAC,CAAC,KAAKA,MAAL,CAAYsP,WAA5B,GAA0C,KAAjD;AACH,GAHD,CAjkBoC,CAqkBpC;AACA;;;AACAvP,EAAAA,MAAM,CAACgB,SAAP,CAAiBwO,YAAjB,GAAgC,YAAY;AACxCnL,IAAAA,OAAO,CAACC,IAAR,CAAa,2GAAb;AACA,WAAO,KAAKrE,MAAL,GAAc,CAAC,CAAC,KAAKA,MAAL,CAAYwP,UAA5B,GAAyC,KAAhD;AACH,GAHD,CAvkBoC,CA2kBpC;;;AACAzP,EAAAA,MAAM,CAACiJ,oBAAP,GAA8B,eAA9B,CA5kBoC,CA6kBpC;;AACAjJ,EAAAA,MAAM,CAAC6K,kBAAP,GAA4B,aAA5B,CA9kBoC,CA+kBpC;;AACA7K,EAAAA,MAAM,CAACuN,mBAAP,GAA6B,cAA7B,CAhlBoC,CAilBpC;;AACAvN,EAAAA,MAAM,CAAC6L,8BAAP,GAAwC,uBAAxC;AACA7L,EAAAA,MAAM,CAAC0L,gCAAP,GAA0C,yBAA1C,CAnlBoC,CAolBpC;;AACA1L,EAAAA,MAAM,CAACsM,qBAAP,GAA+B,gBAA/B,CArlBoC,CAslBpC;;AACAtM,EAAAA,MAAM,CAACoL,oBAAP,GAA8B,eAA9B,CAvlBoC,CAwlBpC;;AACApL,EAAAA,MAAM,CAACkL,2BAAP,GAAqC,qBAArC,CAzlBoC,CA0lBpC;;AACAlL,EAAAA,MAAM,CAACwJ,kBAAP,GAA4B,aAA5B;AACAxJ,EAAAA,MAAM,CAAC0J,0BAAP,GAAoC,oBAApC,CA5lBoC,CA6lBpC;;AACA1J,EAAAA,MAAM,CAACgO,uBAAP,GAAiC,uBAAjC,CA9lBoC,CA+lBpC;;AACAhO,EAAAA,MAAM,CAACoO,mBAAP,GAA6B,oBAA7B,CAhmBoC,CAimBpC;;AACApO,EAAAA,MAAM,CAAC6O,mBAAP,GAA6B,oBAA7B;;AACApQ,EAAAA,UAAU,CAAC,CACPkB,SAAS,CAAC,oBAAD,CADF,CAAD,EAEPK,MAAM,CAACgB,SAFA,EAEW,oBAFX,EAEiC,KAAK,CAFtC,CAAV;;AAGAvC,EAAAA,UAAU,CAAC,CACPkB,SAAS,CAAC,aAAD,CADF,CAAD,EAEPK,MAAM,CAACgB,SAFA,EAEW,aAFX,EAE0B,KAAK,CAF/B,CAAV;;AAGAvC,EAAAA,UAAU,CAAC,CACPkB,SAAS,CAAC,WAAD,CADF,CAAD,EAEPK,MAAM,CAACgB,SAFA,EAEW,WAFX,EAEwB,KAAK,CAF7B,CAAV;;AAGAvC,EAAAA,UAAU,CAAC,CACPkB,SAAS,CAAC,SAAD,CADF,CAAD,EAEPK,MAAM,CAACgB,SAFA,EAEW,SAFX,EAEsB,KAAK,CAF3B,CAAV;;AAGAvC,EAAAA,UAAU,CAAC,CACPkB,SAAS,CAAC,SAAD,CADF,CAAD,EAEPK,MAAM,CAACgB,SAFA,EAEW,SAFX,EAEsB,KAAK,CAF3B,CAAV;;AAGAvC,EAAAA,UAAU,CAAC,CACPmB,aADO,CAAD,EAEPI,MAAM,CAACgB,SAFA,EAEW,YAFX,EAEyB,IAFzB,CAAV;;AAGA,SAAOhB,MAAP;AACH,CAtnB2B,EAA5B;;AAunBA,SAASA,MAAT","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { EventService } from \"../eventService\";\nimport { _ } from \"../utils\";\nimport { Autowired, PostConstruct } from \"../context/context\";\nimport { Constants } from \"../constants\";\nimport { ModuleNames } from \"../modules/moduleNames\";\nimport { ModuleRegistry } from \"../modules/moduleRegistry\";\n// Wrapper around a user provide column definition. The grid treats the column definition as ready only.\n// This class contains all the runtime information about a column, plus some logic (the definition has no logic).\n// This class implements both interfaces ColumnGroupChild and OriginalColumnGroupChild as the class can\n// appear as a child of either the original tree or the displayed tree. However the relevant group classes\n// for each type only implements one, as each group can only appear in it's associated tree (eg OriginalColumnGroup\n// can only appear in OriginalColumn tree).\nvar Column = /** @class */ (function () {\n    function Column(colDef, userProvidedColDef, colId, primary) {\n        this.moving = false;\n        this.menuVisible = false;\n        this.filterActive = false;\n        this.eventService = new EventService();\n        this.rowGroupActive = false;\n        this.pivotActive = false;\n        this.aggregationActive = false;\n        this.colDef = colDef;\n        this.userProvidedColDef = userProvidedColDef;\n        this.visible = !colDef.hide;\n        this.sort = colDef.sort;\n        this.sortedAt = colDef.sortedAt;\n        this.colId = colId;\n        this.primary = primary;\n    }\n    // gets called when user provides an alternative colDef, eg\n    Column.prototype.setColDef = function (colDef, userProvidedColDef) {\n        this.colDef = colDef;\n        this.userProvidedColDef = userProvidedColDef;\n    };\n    Column.prototype.getUserProvidedColDef = function () {\n        return this.userProvidedColDef;\n    };\n    Column.prototype.setParent = function (parent) {\n        this.parent = parent;\n    };\n    Column.prototype.getParent = function () {\n        return this.parent;\n    };\n    Column.prototype.setOriginalParent = function (originalParent) {\n        this.originalParent = originalParent;\n    };\n    Column.prototype.getOriginalParent = function () {\n        return this.originalParent;\n    };\n    // this is done after constructor as it uses gridOptionsWrapper\n    Column.prototype.initialise = function () {\n        this.setPinned(this.colDef.pinned);\n        var minColWidth = this.gridOptionsWrapper.getMinColWidth();\n        var maxColWidth = this.gridOptionsWrapper.getMaxColWidth();\n        if (this.colDef.minWidth) {\n            this.minWidth = this.colDef.minWidth;\n        }\n        else {\n            this.minWidth = minColWidth;\n        }\n        if (this.colDef.maxWidth) {\n            this.maxWidth = this.colDef.maxWidth;\n        }\n        else {\n            this.maxWidth = maxColWidth;\n        }\n        if (this.colDef.flex) {\n            this.flex = this.colDef.flex;\n        }\n        this.resetActualWidth();\n        var suppressDotNotation = this.gridOptionsWrapper.isSuppressFieldDotNotation();\n        this.fieldContainsDots = _.exists(this.colDef.field) && this.colDef.field.indexOf('.') >= 0 && !suppressDotNotation;\n        this.tooltipFieldContainsDots = _.exists(this.colDef.tooltipField) && this.colDef.tooltipField.indexOf('.') >= 0 && !suppressDotNotation;\n        this.validate();\n    };\n    Column.prototype.resetActualWidth = function () {\n        this.actualWidth = this.columnUtils.calculateColInitialWidth(this.colDef);\n    };\n    Column.prototype.isEmptyGroup = function () {\n        return false;\n    };\n    Column.prototype.isRowGroupDisplayed = function (colId) {\n        if (_.missing(this.colDef) || _.missing(this.colDef.showRowGroup)) {\n            return false;\n        }\n        var showingAllGroups = this.colDef.showRowGroup === true;\n        var showingThisGroup = this.colDef.showRowGroup === colId;\n        return showingAllGroups || showingThisGroup;\n    };\n    Column.prototype.getUniqueId = function () {\n        return this.getId();\n    };\n    Column.prototype.isPrimary = function () {\n        return this.primary;\n    };\n    Column.prototype.isFilterAllowed = function () {\n        // filter defined means it's a string, class or true.\n        // if its false, null or undefined then it's false.\n        var filterDefined = !!this.colDef.filter || !!this.colDef.filterFramework;\n        return this.primary && filterDefined;\n    };\n    Column.prototype.isFieldContainsDots = function () {\n        return this.fieldContainsDots;\n    };\n    Column.prototype.isTooltipFieldContainsDots = function () {\n        return this.tooltipFieldContainsDots;\n    };\n    Column.prototype.validate = function () {\n        var colDefAny = this.colDef;\n        function warnOnce(msg, key, obj) {\n            _.doOnce(function () {\n                if (obj) {\n                    console.warn(msg, obj);\n                }\n                else {\n                    _.doOnce(function () { return console.warn(msg); }, key);\n                }\n            }, key);\n        }\n        if (!ModuleRegistry.isRegistered(ModuleNames.RowGroupingModule)) {\n            var rowGroupingItems = ['enableRowGroup', 'rowGroup', 'rowGroupIndex', 'enablePivot', 'enableValue', 'pivot', 'pivotIndex', 'aggFunc'];\n            rowGroupingItems.forEach(function (item) {\n                if (_.exists(colDefAny[item])) {\n                    if (ModuleRegistry.isPackageBased()) {\n                        warnOnce(\"ag-Grid: \" + item + \" is only valid in ag-grid-enterprise, your column definition should not have \" + item, 'ColumnRowGroupingMissing' + item);\n                    }\n                    else {\n                        warnOnce(\"ag-Grid: \" + item + \" is only valid with ag-Grid Enterprise Module \" + ModuleNames.RowGroupingModule + \" - your column definition should not have \" + item, 'ColumnRowGroupingMissing' + item);\n                    }\n                }\n            });\n        }\n        if (!ModuleRegistry.isRegistered(ModuleNames.RichSelectModule)) {\n            if (this.colDef.cellEditor === 'agRichSelect' || this.colDef.cellEditor === 'agRichSelectCellEditor') {\n                if (ModuleRegistry.isPackageBased()) {\n                    warnOnce(\"ag-Grid: \" + this.colDef.cellEditor + \" can only be used with ag-grid-enterprise\", 'ColumnRichSelectMissing');\n                }\n                else {\n                    warnOnce(\"ag-Grid: \" + this.colDef.cellEditor + \" can only be used with ag-Grid Enterprise Module \" + ModuleNames.RichSelectModule, 'ColumnRichSelectMissing');\n                }\n            }\n        }\n        if (!ModuleRegistry.isRegistered(ModuleNames.DateTimeCellEditorModule)) {\n            if (this.colDef.cellEditor === 'agRichSelect' || this.colDef.cellEditor === 'agDateTimeCellEditor') {\n                if (ModuleRegistry.isPackageBased()) {\n                    warnOnce(\"ag-Grid: \" + this.colDef.cellEditor + \" can only be used with ag-grid-enterprise\", 'ColumnDateTimeMissing');\n                }\n                else {\n                    warnOnce(\"ag-Grid: \" + this.colDef.cellEditor + \" can only be used with ag-Grid Enterprise Module \" + ModuleNames.DateTimeCellEditorModule, 'ColumnDateTimeMissing');\n                }\n            }\n        }\n        if (this.gridOptionsWrapper.isTreeData()) {\n            var itemsNotAllowedWithTreeData = ['rowGroup', 'rowGroupIndex', 'pivot', 'pivotIndex'];\n            itemsNotAllowedWithTreeData.forEach(function (item) {\n                if (_.exists(colDefAny[item])) {\n                    warnOnce(\"ag-Grid: \" + item + \" is not possible when doing tree data, your column definition should not have \" + item, 'TreeDataCannotRowGroup');\n                }\n            });\n        }\n        if (_.exists(this.colDef.width) && typeof this.colDef.width !== 'number') {\n            warnOnce('ag-Grid: colDef.width should be a number, not ' + typeof this.colDef.width, 'ColumnCheck_asdfawef');\n        }\n        if (_.get(this, 'colDef.cellRendererParams.restrictToOneGroup', null)) {\n            warnOnce('ag-Grid: Since ag-grid 11.0.0 cellRendererParams.restrictToOneGroup is deprecated. You should use showRowGroup', 'ColumnCheck_sksldjf');\n        }\n        if (_.get(this, 'colDef.cellRendererParams.keyMap', null)) {\n            warnOnce('ag-Grid: Since ag-grid 11.0.0 cellRendererParams.keyMap is deprecated. You should use colDef.keyCreator', 'ColumnCheck_ieiruhgdf');\n        }\n        if (_.get(this, 'colDef.cellRendererParams.keyMap', null)) {\n            warnOnce('ag-Grid: Since ag-grid 11.0.0 cellRendererParams.keyMap is deprecated. You should use colDef.keyCreator', 'ColumnCheck_uitolghj');\n        }\n        if (colDefAny.floatingCellRenderer) {\n            warnOnce('ag-Grid: since v11, floatingCellRenderer is now pinnedRowCellRenderer', 'ColumnCheck_soihwewe');\n            this.colDef.pinnedRowCellRenderer = colDefAny.floatingCellRenderer;\n        }\n        if (colDefAny.floatingRendererFramework) {\n            warnOnce('ag-Grid: since v11, floatingRendererFramework is now pinnedRowCellRendererFramework', 'ColumnCheck_zdkiouhwer');\n            this.colDef.pinnedRowCellRendererFramework = colDefAny.floatingRendererFramework;\n        }\n        if (colDefAny.floatingRendererParams) {\n            console.warn('ag-Grid: since v11, floatingRendererParams is now pinnedRowCellRendererParams', 'ColumnCheck_retiuhjs');\n            this.colDef.pinnedRowCellRendererParams = colDefAny.floatingRendererParams;\n        }\n        if (colDefAny.floatingValueFormatter) {\n            warnOnce('ag-Grid: since v11, floatingValueFormatter is now pinnedRowValueFormatter', 'ColumnCheck_qwroeihjdf');\n            this.colDef.pinnedRowValueFormatter = colDefAny.floatingValueFormatter;\n        }\n        if (colDefAny.cellFormatter) {\n            warnOnce('ag-Grid: since v12, cellFormatter is now valueFormatter', 'ColumnCheck_eoireknml');\n            if (_.missing(this.colDef.valueFormatter)) {\n                this.colDef.valueFormatter = colDefAny.cellFormatter;\n            }\n        }\n        if (colDefAny.headerCellTemplate) {\n            warnOnce('ag-Grid: since v15, headerCellTemplate is gone, use header component instead.', 'ColumnCheck_eroihxcm');\n        }\n        if (colDefAny.headerCellRenderer) {\n            warnOnce('ag-Grid: since v15, headerCellRenderer is gone, use header component instead.', 'ColumnCheck_terteuh');\n        }\n        if (colDefAny.volatile) {\n            warnOnce('ag-Grid: since v16, colDef.volatile is gone, please check refresh docs on how to refresh specific cells.', 'ColumnCheck_weoihjxcv');\n        }\n        if (colDefAny.suppressSorting) {\n            warnOnce(\"ag-Grid: since v20, colDef.suppressSorting is gone, instead use colDef.sortable=false.\", 'ColumnCheck_43ljrer', this.colDef);\n            this.colDef.sortable = false;\n        }\n        if (colDefAny.suppressFilter) {\n            warnOnce(\"ag-Grid: since v20, colDef.suppressFilter is gone, instead use colDef.filter=false.\", 'ColumnCheck_erlkhfdm', this.colDef);\n            this.colDef.filter = false;\n        }\n        if (colDefAny.suppressResize) {\n            warnOnce(\"ag-Grid: since v20, colDef.suppressResize is gone, instead use colDef.resizable=false.\", 'ColumnCheck_weoihjxcv', this.colDef);\n            this.colDef.resizable = false;\n        }\n        if (colDefAny.tooltip) {\n            warnOnce(\"ag-Grid: since v20.1, colDef.tooltip is gone, instead use colDef.tooltipValueGetter.\", 'ColumnCheck_adslknjwef', this.colDef);\n            this.colDef.tooltipValueGetter = colDefAny.tooltip;\n        }\n        if (colDefAny.suppressToolPanel) {\n            warnOnce(\"ag-Grid: since v22, colDef.suppressToolPanel is gone, instead use suppressColumnsToolPanel / suppressFiltersToolPanel.\", 'ColumnCheck_weihjlsjkdf', this.colDef);\n            this.colDef.suppressColumnsToolPanel = true;\n        }\n    };\n    Column.prototype.addEventListener = function (eventType, listener) {\n        this.eventService.addEventListener(eventType, listener);\n    };\n    Column.prototype.removeEventListener = function (eventType, listener) {\n        this.eventService.removeEventListener(eventType, listener);\n    };\n    Column.prototype.createIsColumnFuncParams = function (rowNode) {\n        return {\n            node: rowNode,\n            data: rowNode.data,\n            column: this,\n            colDef: this.colDef,\n            context: this.gridOptionsWrapper.getContext(),\n            api: this.gridOptionsWrapper.getApi(),\n            columnApi: this.gridOptionsWrapper.getColumnApi()\n        };\n    };\n    Column.prototype.isSuppressNavigable = function (rowNode) {\n        // if boolean set, then just use it\n        if (typeof this.colDef.suppressNavigable === 'boolean') {\n            return this.colDef.suppressNavigable;\n        }\n        // if function, then call the function to find out\n        if (typeof this.colDef.suppressNavigable === 'function') {\n            var params = this.createIsColumnFuncParams(rowNode);\n            var userFunc = this.colDef.suppressNavigable;\n            return userFunc(params);\n        }\n        return false;\n    };\n    Column.prototype.isCellEditable = function (rowNode) {\n        // only allow editing of groups if the user has this option enabled\n        if (rowNode.group && !this.gridOptionsWrapper.isEnableGroupEdit()) {\n            return false;\n        }\n        return this.isColumnFunc(rowNode, this.colDef.editable);\n    };\n    Column.prototype.isRowDrag = function (rowNode) {\n        return this.isColumnFunc(rowNode, this.colDef.rowDrag);\n    };\n    Column.prototype.isDndSource = function (rowNode) {\n        return this.isColumnFunc(rowNode, this.colDef.dndSource);\n    };\n    Column.prototype.isCellCheckboxSelection = function (rowNode) {\n        return this.isColumnFunc(rowNode, this.colDef.checkboxSelection);\n    };\n    Column.prototype.isSuppressPaste = function (rowNode) {\n        return this.isColumnFunc(rowNode, this.colDef ? this.colDef.suppressPaste : null);\n    };\n    Column.prototype.isResizable = function () {\n        return this.colDef.resizable === true;\n    };\n    Column.prototype.isColumnFunc = function (rowNode, value) {\n        // if boolean set, then just use it\n        if (typeof value === 'boolean') {\n            return value;\n        }\n        // if function, then call the function to find out\n        if (typeof value === 'function') {\n            var params = this.createIsColumnFuncParams(rowNode);\n            var editableFunc = value;\n            return editableFunc(params);\n        }\n        return false;\n    };\n    Column.prototype.setMoving = function (moving, source) {\n        if (source === void 0) { source = \"api\"; }\n        this.moving = moving;\n        this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_MOVING_CHANGED, source));\n    };\n    Column.prototype.createColumnEvent = function (type, source) {\n        return {\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            type: type,\n            column: this,\n            columns: [this],\n            source: source\n        };\n    };\n    Column.prototype.isMoving = function () {\n        return this.moving;\n    };\n    Column.prototype.getSort = function () {\n        return this.sort;\n    };\n    Column.prototype.setSort = function (sort, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.sort !== sort) {\n            this.sort = sort;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_SORT_CHANGED, source));\n        }\n    };\n    Column.prototype.setMenuVisible = function (visible, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.menuVisible !== visible) {\n            this.menuVisible = visible;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_MENU_VISIBLE_CHANGED, source));\n        }\n    };\n    Column.prototype.isMenuVisible = function () {\n        return this.menuVisible;\n    };\n    Column.prototype.isSortAscending = function () {\n        return this.sort === Constants.SORT_ASC;\n    };\n    Column.prototype.isSortDescending = function () {\n        return this.sort === Constants.SORT_DESC;\n    };\n    Column.prototype.isSortNone = function () {\n        return _.missing(this.sort);\n    };\n    Column.prototype.isSorting = function () {\n        return _.exists(this.sort);\n    };\n    Column.prototype.getSortedAt = function () {\n        return this.sortedAt;\n    };\n    Column.prototype.setSortedAt = function (sortedAt) {\n        this.sortedAt = sortedAt;\n    };\n    Column.prototype.setAggFunc = function (aggFunc) {\n        this.aggFunc = aggFunc;\n    };\n    Column.prototype.getAggFunc = function () {\n        return this.aggFunc;\n    };\n    Column.prototype.getLeft = function () {\n        return this.left;\n    };\n    Column.prototype.getOldLeft = function () {\n        return this.oldLeft;\n    };\n    Column.prototype.getRight = function () {\n        return this.left + this.actualWidth;\n    };\n    Column.prototype.setLeft = function (left, source) {\n        if (source === void 0) { source = \"api\"; }\n        this.oldLeft = this.left;\n        if (this.left !== left) {\n            this.left = left;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_LEFT_CHANGED, source));\n        }\n    };\n    Column.prototype.isFilterActive = function () {\n        return this.filterActive;\n    };\n    // additionalEventAttributes is used by provided simple floating filter, so it can add 'floatingFilter=true' to the event\n    Column.prototype.setFilterActive = function (active, source, additionalEventAttributes) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.filterActive !== active) {\n            this.filterActive = active;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_FILTER_ACTIVE_CHANGED, source));\n        }\n        var filterChangedEvent = this.createColumnEvent(Column.EVENT_FILTER_CHANGED, source);\n        if (additionalEventAttributes) {\n            _.mergeDeep(filterChangedEvent, additionalEventAttributes);\n        }\n        this.eventService.dispatchEvent(filterChangedEvent);\n    };\n    Column.prototype.setPinned = function (pinned) {\n        if (pinned === true || pinned === Constants.PINNED_LEFT) {\n            this.pinned = Constants.PINNED_LEFT;\n        }\n        else if (pinned === Constants.PINNED_RIGHT) {\n            this.pinned = Constants.PINNED_RIGHT;\n        }\n        else {\n            this.pinned = null;\n        }\n    };\n    Column.prototype.setFirstRightPinned = function (firstRightPinned, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.firstRightPinned !== firstRightPinned) {\n            this.firstRightPinned = firstRightPinned;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_FIRST_RIGHT_PINNED_CHANGED, source));\n        }\n    };\n    Column.prototype.setLastLeftPinned = function (lastLeftPinned, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.lastLeftPinned !== lastLeftPinned) {\n            this.lastLeftPinned = lastLeftPinned;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_LAST_LEFT_PINNED_CHANGED, source));\n        }\n    };\n    Column.prototype.isFirstRightPinned = function () {\n        return this.firstRightPinned;\n    };\n    Column.prototype.isLastLeftPinned = function () {\n        return this.lastLeftPinned;\n    };\n    Column.prototype.isPinned = function () {\n        return this.pinned === Constants.PINNED_LEFT || this.pinned === Constants.PINNED_RIGHT;\n    };\n    Column.prototype.isPinnedLeft = function () {\n        return this.pinned === Constants.PINNED_LEFT;\n    };\n    Column.prototype.isPinnedRight = function () {\n        return this.pinned === Constants.PINNED_RIGHT;\n    };\n    Column.prototype.getPinned = function () {\n        return this.pinned;\n    };\n    Column.prototype.setVisible = function (visible, source) {\n        if (source === void 0) { source = \"api\"; }\n        var newValue = visible === true;\n        if (this.visible !== newValue) {\n            this.visible = newValue;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_VISIBLE_CHANGED, source));\n        }\n    };\n    Column.prototype.isVisible = function () {\n        return this.visible;\n    };\n    Column.prototype.getColDef = function () {\n        return this.colDef;\n    };\n    Column.prototype.getColumnGroupShow = function () {\n        return this.colDef.columnGroupShow;\n    };\n    Column.prototype.getColId = function () {\n        return this.colId;\n    };\n    Column.prototype.getId = function () {\n        return this.getColId();\n    };\n    Column.prototype.getDefinition = function () {\n        return this.colDef;\n    };\n    Column.prototype.getActualWidth = function () {\n        return this.actualWidth;\n    };\n    Column.prototype.createBaseColDefParams = function (rowNode) {\n        var params = {\n            node: rowNode,\n            data: rowNode.data,\n            colDef: this.colDef,\n            column: this,\n            api: this.gridOptionsWrapper.getApi(),\n            columnApi: this.gridOptionsWrapper.getColumnApi(),\n            context: this.gridOptionsWrapper.getContext()\n        };\n        return params;\n    };\n    Column.prototype.getColSpan = function (rowNode) {\n        if (_.missing(this.colDef.colSpan)) {\n            return 1;\n        }\n        var params = this.createBaseColDefParams(rowNode);\n        var colSpan = this.colDef.colSpan(params);\n        // colSpan must be number equal to or greater than 1\n        return Math.max(colSpan, 1);\n    };\n    Column.prototype.getRowSpan = function (rowNode) {\n        if (_.missing(this.colDef.rowSpan)) {\n            return 1;\n        }\n        var params = this.createBaseColDefParams(rowNode);\n        var rowSpan = this.colDef.rowSpan(params);\n        // rowSpan must be number equal to or greater than 1\n        return Math.max(rowSpan, 1);\n    };\n    Column.prototype.setActualWidth = function (actualWidth, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.minWidth != null) {\n            actualWidth = Math.max(actualWidth, this.minWidth);\n        }\n        if (this.maxWidth != null) {\n            actualWidth = Math.min(actualWidth, this.maxWidth);\n        }\n        if (this.actualWidth !== actualWidth) {\n            // disable flex for this column if it was manually resized.\n            if (this.flex && source !== 'flex') {\n                this.flex = 0;\n            }\n            this.actualWidth = actualWidth;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_WIDTH_CHANGED, source));\n        }\n    };\n    Column.prototype.isGreaterThanMax = function (width) {\n        if (this.maxWidth != null) {\n            return width > this.maxWidth;\n        }\n        return false;\n    };\n    Column.prototype.getMinWidth = function () {\n        return this.minWidth;\n    };\n    Column.prototype.getMaxWidth = function () {\n        return this.maxWidth;\n    };\n    Column.prototype.getFlex = function () {\n        return this.flex || 0;\n    };\n    // this method should only be used by the columnController to\n    // change flex when required by the setColumnState method.\n    Column.prototype.setFlex = function (flex) {\n        if (this.flex !== flex) {\n            this.flex = flex;\n        }\n    };\n    Column.prototype.setMinimum = function (source) {\n        if (source === void 0) { source = \"api\"; }\n        this.setActualWidth(this.minWidth, source);\n    };\n    Column.prototype.setRowGroupActive = function (rowGroup, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.rowGroupActive !== rowGroup) {\n            this.rowGroupActive = rowGroup;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_ROW_GROUP_CHANGED, source));\n        }\n    };\n    Column.prototype.isRowGroupActive = function () {\n        return this.rowGroupActive;\n    };\n    Column.prototype.setPivotActive = function (pivot, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.pivotActive !== pivot) {\n            this.pivotActive = pivot;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_PIVOT_CHANGED, source));\n        }\n    };\n    Column.prototype.isPivotActive = function () {\n        return this.pivotActive;\n    };\n    Column.prototype.isAnyFunctionActive = function () {\n        return this.isPivotActive() || this.isRowGroupActive() || this.isValueActive();\n    };\n    Column.prototype.isAnyFunctionAllowed = function () {\n        return this.isAllowPivot() || this.isAllowRowGroup() || this.isAllowValue();\n    };\n    Column.prototype.setValueActive = function (value, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.aggregationActive !== value) {\n            this.aggregationActive = value;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_VALUE_CHANGED, source));\n        }\n    };\n    Column.prototype.isValueActive = function () {\n        return this.aggregationActive;\n    };\n    Column.prototype.isAllowPivot = function () {\n        return this.colDef.enablePivot === true;\n    };\n    Column.prototype.isAllowValue = function () {\n        return this.colDef.enableValue === true;\n    };\n    Column.prototype.isAllowRowGroup = function () {\n        return this.colDef.enableRowGroup === true;\n    };\n    Column.prototype.getMenuTabs = function (defaultValues) {\n        var menuTabs = this.getColDef().menuTabs;\n        if (menuTabs == null) {\n            menuTabs = defaultValues;\n        }\n        return menuTabs;\n    };\n    // this used to be needed, as previous version of ag-grid had lockPosition as column state,\n    // so couldn't depend on colDef version.\n    Column.prototype.isLockPosition = function () {\n        console.warn('ag-Grid: since v21, col.isLockPosition() should not be used, please use col.getColDef().lockPosition instead.');\n        return this.colDef ? !!this.colDef.lockPosition : false;\n    };\n    // this used to be needed, as previous version of ag-grid had lockVisible as column state,\n    // so couldn't depend on colDef version.\n    Column.prototype.isLockVisible = function () {\n        console.warn('ag-Grid: since v21, col.isLockVisible() should not be used, please use col.getColDef().lockVisible instead.');\n        return this.colDef ? !!this.colDef.lockVisible : false;\n    };\n    // this used to be needed, as previous version of ag-grid had lockPinned as column state,\n    // so couldn't depend on colDef version.\n    Column.prototype.isLockPinned = function () {\n        console.warn('ag-Grid: since v21, col.isLockPinned() should not be used, please use col.getColDef().lockPinned instead.');\n        return this.colDef ? !!this.colDef.lockPinned : false;\n    };\n    // + renderedHeaderCell - for making header cell transparent when moving\n    Column.EVENT_MOVING_CHANGED = 'movingChanged';\n    // + renderedCell - changing left position\n    Column.EVENT_LEFT_CHANGED = 'leftChanged';\n    // + renderedCell - changing width\n    Column.EVENT_WIDTH_CHANGED = 'widthChanged';\n    // + renderedCell - for changing pinned classes\n    Column.EVENT_LAST_LEFT_PINNED_CHANGED = 'lastLeftPinnedChanged';\n    Column.EVENT_FIRST_RIGHT_PINNED_CHANGED = 'firstRightPinnedChanged';\n    // + renderedColumn - for changing visibility icon\n    Column.EVENT_VISIBLE_CHANGED = 'visibleChanged';\n    // + every time the filter changes, used in the floating filters\n    Column.EVENT_FILTER_CHANGED = 'filterChanged';\n    // + renderedHeaderCell - marks the header with filter icon\n    Column.EVENT_FILTER_ACTIVE_CHANGED = 'filterActiveChanged';\n    // + renderedHeaderCell - marks the header with sort icon\n    Column.EVENT_SORT_CHANGED = 'sortChanged';\n    Column.EVENT_MENU_VISIBLE_CHANGED = 'menuVisibleChanged';\n    // + toolpanel, for gui updates\n    Column.EVENT_ROW_GROUP_CHANGED = 'columnRowGroupChanged';\n    // + toolpanel, for gui updates\n    Column.EVENT_PIVOT_CHANGED = 'columnPivotChanged';\n    // + toolpanel, for gui updates\n    Column.EVENT_VALUE_CHANGED = 'columnValueChanged';\n    __decorate([\n        Autowired('gridOptionsWrapper')\n    ], Column.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        Autowired('columnUtils')\n    ], Column.prototype, \"columnUtils\", void 0);\n    __decorate([\n        Autowired('columnApi')\n    ], Column.prototype, \"columnApi\", void 0);\n    __decorate([\n        Autowired('gridApi')\n    ], Column.prototype, \"gridApi\", void 0);\n    __decorate([\n        Autowired('context')\n    ], Column.prototype, \"context\", void 0);\n    __decorate([\n        PostConstruct\n    ], Column.prototype, \"initialise\", null);\n    return Column;\n}());\nexport { Column };\n"]},"metadata":{},"sourceType":"module"}