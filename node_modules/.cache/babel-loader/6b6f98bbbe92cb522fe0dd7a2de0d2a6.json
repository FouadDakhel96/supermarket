{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { _, Autowired, Bean, Constants, PostConstruct } from \"@ag-grid-community/core\";\nimport { BaseGridSerializingSession } from \"./gridSerializer\";\nvar LINE_SEPARATOR = '\\r\\n';\n\nvar CsvSerializingSession =\n/** @class */\nfunction (_super) {\n  __extends(CsvSerializingSession, _super);\n\n  function CsvSerializingSession(config) {\n    var _this = _super.call(this, config) || this;\n\n    _this.isFirstLine = true;\n    _this.result = '';\n    var suppressQuotes = config.suppressQuotes,\n        columnSeparator = config.columnSeparator;\n    _this.suppressQuotes = suppressQuotes;\n    _this.columnSeparator = columnSeparator;\n    return _this;\n  }\n\n  CsvSerializingSession.prototype.addCustomContent = function (content) {\n    var _this = this;\n\n    if (!content) {\n      return;\n    }\n\n    if (typeof content === 'string') {\n      // we used to require the customFooter to be prefixed with a newline but no longer do,\n      // so only add the newline if the user has not supplied one\n      if (!/^\\s*\\n/.test(content)) {\n        this.beginNewLine();\n      } // replace whatever newlines are supplied with the style we're using\n\n\n      content = content.replace(/\\r?\\n/g, LINE_SEPARATOR);\n      this.result += content;\n    } else {\n      content.forEach(function (row) {\n        _this.beginNewLine();\n\n        row.forEach(function (cell, index) {\n          if (index !== 0) {\n            _this.result += _this.columnSeparator;\n          }\n\n          _this.result += _this.putInQuotes(cell.data.value || '');\n\n          if (cell.mergeAcross) {\n            _this.appendEmptyCells(cell.mergeAcross);\n          }\n        });\n      });\n    }\n  };\n\n  CsvSerializingSession.prototype.onNewHeaderGroupingRow = function () {\n    this.beginNewLine();\n    return {\n      onColumn: this.onNewHeaderGroupingRowColumn.bind(this)\n    };\n  };\n\n  CsvSerializingSession.prototype.onNewHeaderGroupingRowColumn = function (header, index, span) {\n    if (index != 0) {\n      this.result += this.columnSeparator;\n    }\n\n    this.result += this.putInQuotes(header);\n    this.appendEmptyCells(span);\n  };\n\n  CsvSerializingSession.prototype.appendEmptyCells = function (count) {\n    for (var i = 1; i <= count; i++) {\n      this.result += this.columnSeparator + this.putInQuotes(\"\");\n    }\n  };\n\n  CsvSerializingSession.prototype.onNewHeaderRow = function () {\n    this.beginNewLine();\n    return {\n      onColumn: this.onNewHeaderRowColumn.bind(this)\n    };\n  };\n\n  CsvSerializingSession.prototype.onNewHeaderRowColumn = function (column, index, node) {\n    if (index != 0) {\n      this.result += this.columnSeparator;\n    }\n\n    this.result += this.putInQuotes(this.extractHeaderValue(column));\n  };\n\n  CsvSerializingSession.prototype.onNewBodyRow = function () {\n    this.beginNewLine();\n    return {\n      onColumn: this.onNewBodyRowColumn.bind(this)\n    };\n  };\n\n  CsvSerializingSession.prototype.onNewBodyRowColumn = function (column, index, node) {\n    if (index != 0) {\n      this.result += this.columnSeparator;\n    }\n\n    this.result += this.putInQuotes(this.extractRowCellValue(column, index, Constants.EXPORT_TYPE_CSV, node));\n  };\n\n  CsvSerializingSession.prototype.putInQuotes = function (value) {\n    if (this.suppressQuotes) {\n      return value;\n    }\n\n    if (value === null || value === undefined) {\n      return '\"\"';\n    }\n\n    var stringValue;\n\n    if (typeof value === 'string') {\n      stringValue = value;\n    } else if (typeof value.toString === 'function') {\n      stringValue = value.toString();\n    } else {\n      console.warn('unknown value type during csv conversion');\n      stringValue = '';\n    } // replace each \" with \"\" (ie two sets of double quotes is how to do double quotes in csv)\n\n\n    var valueEscaped = stringValue.replace(/\"/g, \"\\\"\\\"\");\n    return '\"' + valueEscaped + '\"';\n  };\n\n  CsvSerializingSession.prototype.parse = function () {\n    return this.result;\n  };\n\n  CsvSerializingSession.prototype.beginNewLine = function () {\n    if (!this.isFirstLine) {\n      this.result += LINE_SEPARATOR;\n    }\n\n    this.isFirstLine = false;\n  };\n\n  return CsvSerializingSession;\n}(BaseGridSerializingSession);\n\nexport { CsvSerializingSession };\n\nvar BaseCreator =\n/** @class */\nfunction () {\n  function BaseCreator() {}\n\n  BaseCreator.prototype.setBeans = function (beans) {\n    this.beans = beans;\n  };\n\n  BaseCreator.prototype.export = function (userParams) {\n    if (this.isExportSuppressed()) {\n      console.warn(\"ag-grid: Export cancelled. Export is not allowed as per your configuration.\");\n      return '';\n    }\n\n    var _a = this.getMergedParamsAndData(userParams),\n        mergedParams = _a.mergedParams,\n        data = _a.data;\n\n    var fileNamePresent = mergedParams && mergedParams.fileName && mergedParams.fileName.length !== 0;\n    var fileName = fileNamePresent ? mergedParams.fileName : this.getDefaultFileName();\n\n    if (fileName.indexOf(\".\") === -1) {\n      fileName = fileName + \".\" + this.getDefaultFileExtension();\n    }\n\n    this.beans.downloader.download(fileName, this.packageFile(data));\n    return data;\n  };\n\n  BaseCreator.prototype.getData = function (params) {\n    return this.getMergedParamsAndData(params).data;\n  };\n\n  BaseCreator.prototype.getMergedParamsAndData = function (userParams) {\n    var mergedParams = this.mergeDefaultParams(userParams);\n    var data = this.beans.gridSerializer.serialize(this.createSerializingSession(mergedParams), mergedParams);\n    return {\n      mergedParams: mergedParams,\n      data: data\n    };\n  };\n\n  BaseCreator.prototype.mergeDefaultParams = function (userParams) {\n    var baseParams = this.beans.gridOptionsWrapper.getDefaultExportParams();\n    var params = {};\n\n    _.assign(params, baseParams);\n\n    _.assign(params, userParams);\n\n    return params;\n  };\n\n  BaseCreator.prototype.packageFile = function (data) {\n    return new Blob([\"\\uFEFF\", data], {\n      type: window.navigator.msSaveOrOpenBlob ? this.getMimeType() : 'octet/stream'\n    });\n  };\n\n  return BaseCreator;\n}();\n\nexport { BaseCreator };\n\nvar CsvCreator =\n/** @class */\nfunction (_super) {\n  __extends(CsvCreator, _super);\n\n  function CsvCreator() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  CsvCreator.prototype.postConstruct = function () {\n    this.setBeans({\n      downloader: this.downloader,\n      gridSerializer: this.gridSerializer,\n      gridOptionsWrapper: this.gridOptionsWrapper\n    });\n  };\n\n  CsvCreator.prototype.exportDataAsCsv = function (params) {\n    return this.export(params);\n  };\n\n  CsvCreator.prototype.getDataAsCsv = function (params) {\n    return this.getData(params);\n  };\n\n  CsvCreator.prototype.getMimeType = function () {\n    return 'text/csv;charset=utf-8;';\n  };\n\n  CsvCreator.prototype.getDefaultFileName = function () {\n    return 'export.csv';\n  };\n\n  CsvCreator.prototype.getDefaultFileExtension = function () {\n    return 'csv';\n  };\n\n  CsvCreator.prototype.createSerializingSession = function (params) {\n    var _a = this,\n        columnController = _a.columnController,\n        valueService = _a.valueService,\n        gridOptionsWrapper = _a.gridOptionsWrapper;\n\n    var processCellCallback = params.processCellCallback,\n        processHeaderCallback = params.processHeaderCallback,\n        processGroupHeaderCallback = params.processGroupHeaderCallback,\n        processRowGroupCallback = params.processRowGroupCallback,\n        suppressQuotes = params.suppressQuotes,\n        columnSeparator = params.columnSeparator;\n    return new CsvSerializingSession({\n      columnController: columnController,\n      valueService: valueService,\n      gridOptionsWrapper: gridOptionsWrapper,\n      processCellCallback: processCellCallback || undefined,\n      processHeaderCallback: processHeaderCallback || undefined,\n      processGroupHeaderCallback: processGroupHeaderCallback || undefined,\n      processRowGroupCallback: processRowGroupCallback || undefined,\n      suppressQuotes: suppressQuotes || false,\n      columnSeparator: columnSeparator || ','\n    });\n  };\n\n  CsvCreator.prototype.isExportSuppressed = function () {\n    return this.gridOptionsWrapper.isSuppressCsvExport();\n  };\n\n  __decorate([Autowired('columnController')], CsvCreator.prototype, \"columnController\", void 0);\n\n  __decorate([Autowired('valueService')], CsvCreator.prototype, \"valueService\", void 0);\n\n  __decorate([Autowired('downloader')], CsvCreator.prototype, \"downloader\", void 0);\n\n  __decorate([Autowired('gridSerializer')], CsvCreator.prototype, \"gridSerializer\", void 0);\n\n  __decorate([Autowired('gridOptionsWrapper')], CsvCreator.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([PostConstruct], CsvCreator.prototype, \"postConstruct\", null);\n\n  CsvCreator = __decorate([Bean('csvCreator')], CsvCreator);\n  return CsvCreator;\n}(BaseCreator);\n\nexport { CsvCreator };","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/@ag-grid-community/csv-export/dist/es6/csvExport/csvCreator.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","_","Autowired","Bean","Constants","PostConstruct","BaseGridSerializingSession","LINE_SEPARATOR","CsvSerializingSession","_super","config","_this","call","isFirstLine","result","suppressQuotes","columnSeparator","addCustomContent","content","test","beginNewLine","replace","forEach","row","cell","index","putInQuotes","data","value","mergeAcross","appendEmptyCells","onNewHeaderGroupingRow","onColumn","onNewHeaderGroupingRowColumn","bind","header","span","count","onNewHeaderRow","onNewHeaderRowColumn","column","node","extractHeaderValue","onNewBodyRow","onNewBodyRowColumn","extractRowCellValue","EXPORT_TYPE_CSV","undefined","stringValue","toString","console","warn","valueEscaped","parse","BaseCreator","setBeans","beans","export","userParams","isExportSuppressed","_a","getMergedParamsAndData","mergedParams","fileNamePresent","fileName","getDefaultFileName","indexOf","getDefaultFileExtension","downloader","download","packageFile","getData","params","mergeDefaultParams","gridSerializer","serialize","createSerializingSession","baseParams","gridOptionsWrapper","getDefaultExportParams","assign","Blob","type","window","navigator","msSaveOrOpenBlob","getMimeType","CsvCreator","apply","postConstruct","exportDataAsCsv","getDataAsCsv","columnController","valueService","processCellCallback","processHeaderCallback","processGroupHeaderCallback","processRowGroupCallback","isSuppressCsvExport"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { _, Autowired, Bean, Constants, PostConstruct } from \"@ag-grid-community/core\";\nimport { BaseGridSerializingSession } from \"./gridSerializer\";\nvar LINE_SEPARATOR = '\\r\\n';\nvar CsvSerializingSession = /** @class */ (function (_super) {\n    __extends(CsvSerializingSession, _super);\n    function CsvSerializingSession(config) {\n        var _this = _super.call(this, config) || this;\n        _this.isFirstLine = true;\n        _this.result = '';\n        var suppressQuotes = config.suppressQuotes, columnSeparator = config.columnSeparator;\n        _this.suppressQuotes = suppressQuotes;\n        _this.columnSeparator = columnSeparator;\n        return _this;\n    }\n    CsvSerializingSession.prototype.addCustomContent = function (content) {\n        var _this = this;\n        if (!content) {\n            return;\n        }\n        if (typeof content === 'string') {\n            // we used to require the customFooter to be prefixed with a newline but no longer do,\n            // so only add the newline if the user has not supplied one\n            if (!/^\\s*\\n/.test(content)) {\n                this.beginNewLine();\n            }\n            // replace whatever newlines are supplied with the style we're using\n            content = content.replace(/\\r?\\n/g, LINE_SEPARATOR);\n            this.result += content;\n        }\n        else {\n            content.forEach(function (row) {\n                _this.beginNewLine();\n                row.forEach(function (cell, index) {\n                    if (index !== 0) {\n                        _this.result += _this.columnSeparator;\n                    }\n                    _this.result += _this.putInQuotes(cell.data.value || '');\n                    if (cell.mergeAcross) {\n                        _this.appendEmptyCells(cell.mergeAcross);\n                    }\n                });\n            });\n        }\n    };\n    CsvSerializingSession.prototype.onNewHeaderGroupingRow = function () {\n        this.beginNewLine();\n        return {\n            onColumn: this.onNewHeaderGroupingRowColumn.bind(this)\n        };\n    };\n    CsvSerializingSession.prototype.onNewHeaderGroupingRowColumn = function (header, index, span) {\n        if (index != 0) {\n            this.result += this.columnSeparator;\n        }\n        this.result += this.putInQuotes(header);\n        this.appendEmptyCells(span);\n    };\n    CsvSerializingSession.prototype.appendEmptyCells = function (count) {\n        for (var i = 1; i <= count; i++) {\n            this.result += this.columnSeparator + this.putInQuotes(\"\");\n        }\n    };\n    CsvSerializingSession.prototype.onNewHeaderRow = function () {\n        this.beginNewLine();\n        return {\n            onColumn: this.onNewHeaderRowColumn.bind(this)\n        };\n    };\n    CsvSerializingSession.prototype.onNewHeaderRowColumn = function (column, index, node) {\n        if (index != 0) {\n            this.result += this.columnSeparator;\n        }\n        this.result += this.putInQuotes(this.extractHeaderValue(column));\n    };\n    CsvSerializingSession.prototype.onNewBodyRow = function () {\n        this.beginNewLine();\n        return {\n            onColumn: this.onNewBodyRowColumn.bind(this)\n        };\n    };\n    CsvSerializingSession.prototype.onNewBodyRowColumn = function (column, index, node) {\n        if (index != 0) {\n            this.result += this.columnSeparator;\n        }\n        this.result += this.putInQuotes(this.extractRowCellValue(column, index, Constants.EXPORT_TYPE_CSV, node));\n    };\n    CsvSerializingSession.prototype.putInQuotes = function (value) {\n        if (this.suppressQuotes) {\n            return value;\n        }\n        if (value === null || value === undefined) {\n            return '\"\"';\n        }\n        var stringValue;\n        if (typeof value === 'string') {\n            stringValue = value;\n        }\n        else if (typeof value.toString === 'function') {\n            stringValue = value.toString();\n        }\n        else {\n            console.warn('unknown value type during csv conversion');\n            stringValue = '';\n        }\n        // replace each \" with \"\" (ie two sets of double quotes is how to do double quotes in csv)\n        var valueEscaped = stringValue.replace(/\"/g, \"\\\"\\\"\");\n        return '\"' + valueEscaped + '\"';\n    };\n    CsvSerializingSession.prototype.parse = function () {\n        return this.result;\n    };\n    CsvSerializingSession.prototype.beginNewLine = function () {\n        if (!this.isFirstLine) {\n            this.result += LINE_SEPARATOR;\n        }\n        this.isFirstLine = false;\n    };\n    return CsvSerializingSession;\n}(BaseGridSerializingSession));\nexport { CsvSerializingSession };\nvar BaseCreator = /** @class */ (function () {\n    function BaseCreator() {\n    }\n    BaseCreator.prototype.setBeans = function (beans) {\n        this.beans = beans;\n    };\n    BaseCreator.prototype.export = function (userParams) {\n        if (this.isExportSuppressed()) {\n            console.warn(\"ag-grid: Export cancelled. Export is not allowed as per your configuration.\");\n            return '';\n        }\n        var _a = this.getMergedParamsAndData(userParams), mergedParams = _a.mergedParams, data = _a.data;\n        var fileNamePresent = mergedParams && mergedParams.fileName && mergedParams.fileName.length !== 0;\n        var fileName = fileNamePresent ? mergedParams.fileName : this.getDefaultFileName();\n        if (fileName.indexOf(\".\") === -1) {\n            fileName = fileName + \".\" + this.getDefaultFileExtension();\n        }\n        this.beans.downloader.download(fileName, this.packageFile(data));\n        return data;\n    };\n    BaseCreator.prototype.getData = function (params) {\n        return this.getMergedParamsAndData(params).data;\n    };\n    BaseCreator.prototype.getMergedParamsAndData = function (userParams) {\n        var mergedParams = this.mergeDefaultParams(userParams);\n        var data = this.beans.gridSerializer.serialize(this.createSerializingSession(mergedParams), mergedParams);\n        return { mergedParams: mergedParams, data: data };\n    };\n    BaseCreator.prototype.mergeDefaultParams = function (userParams) {\n        var baseParams = this.beans.gridOptionsWrapper.getDefaultExportParams();\n        var params = {};\n        _.assign(params, baseParams);\n        _.assign(params, userParams);\n        return params;\n    };\n    BaseCreator.prototype.packageFile = function (data) {\n        return new Blob([\"\\ufeff\", data], {\n            type: window.navigator.msSaveOrOpenBlob ? this.getMimeType() : 'octet/stream'\n        });\n    };\n    return BaseCreator;\n}());\nexport { BaseCreator };\nvar CsvCreator = /** @class */ (function (_super) {\n    __extends(CsvCreator, _super);\n    function CsvCreator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CsvCreator.prototype.postConstruct = function () {\n        this.setBeans({\n            downloader: this.downloader,\n            gridSerializer: this.gridSerializer,\n            gridOptionsWrapper: this.gridOptionsWrapper\n        });\n    };\n    CsvCreator.prototype.exportDataAsCsv = function (params) {\n        return this.export(params);\n    };\n    CsvCreator.prototype.getDataAsCsv = function (params) {\n        return this.getData(params);\n    };\n    CsvCreator.prototype.getMimeType = function () {\n        return 'text/csv;charset=utf-8;';\n    };\n    CsvCreator.prototype.getDefaultFileName = function () {\n        return 'export.csv';\n    };\n    CsvCreator.prototype.getDefaultFileExtension = function () {\n        return 'csv';\n    };\n    CsvCreator.prototype.createSerializingSession = function (params) {\n        var _a = this, columnController = _a.columnController, valueService = _a.valueService, gridOptionsWrapper = _a.gridOptionsWrapper;\n        var processCellCallback = params.processCellCallback, processHeaderCallback = params.processHeaderCallback, processGroupHeaderCallback = params.processGroupHeaderCallback, processRowGroupCallback = params.processRowGroupCallback, suppressQuotes = params.suppressQuotes, columnSeparator = params.columnSeparator;\n        return new CsvSerializingSession({\n            columnController: columnController,\n            valueService: valueService,\n            gridOptionsWrapper: gridOptionsWrapper,\n            processCellCallback: processCellCallback || undefined,\n            processHeaderCallback: processHeaderCallback || undefined,\n            processGroupHeaderCallback: processGroupHeaderCallback || undefined,\n            processRowGroupCallback: processRowGroupCallback || undefined,\n            suppressQuotes: suppressQuotes || false,\n            columnSeparator: columnSeparator || ','\n        });\n    };\n    CsvCreator.prototype.isExportSuppressed = function () {\n        return this.gridOptionsWrapper.isSuppressCsvExport();\n    };\n    __decorate([\n        Autowired('columnController')\n    ], CsvCreator.prototype, \"columnController\", void 0);\n    __decorate([\n        Autowired('valueService')\n    ], CsvCreator.prototype, \"valueService\", void 0);\n    __decorate([\n        Autowired('downloader')\n    ], CsvCreator.prototype, \"downloader\", void 0);\n    __decorate([\n        Autowired('gridSerializer')\n    ], CsvCreator.prototype, \"gridSerializer\", void 0);\n    __decorate([\n        Autowired('gridOptionsWrapper')\n    ], CsvCreator.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        PostConstruct\n    ], CsvCreator.prototype, \"postConstruct\", null);\n    CsvCreator = __decorate([\n        Bean('csvCreator')\n    ], CsvCreator);\n    return CsvCreator;\n}(BaseCreator));\nexport { CsvCreator };\n"]},"metadata":{},"sourceType":"module"}