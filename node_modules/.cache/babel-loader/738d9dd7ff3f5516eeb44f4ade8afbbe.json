{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component } from '../../widgets/component';\nimport { Autowired, PostConstruct } from '../../context/context';\nimport { Constants } from '../../constants';\nimport { loadTemplate, addCssClass, setDisabled } from '../../utils/dom';\nimport { debounce } from '../../utils/function';\n/**\n * Contains common logic to all provided filters (apply button, clear button, etc).\n * All the filters that come with ag-Grid extend this class. User filters do not\n * extend this class.\n */\n\nvar ProvidedFilter =\n/** @class */\nfunction (_super) {\n  __extends(ProvidedFilter, _super);\n\n  function ProvidedFilter() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.applyActive = false;\n    _this.hidePopup = null; // after the user hits 'apply' the model gets copied to here. this is then the model that we use for\n    // all filtering. so if user changes UI but doesn't hit apply, then the UI will be out of sync with this model.\n    // this is what we want, as the UI should only become the 'active' filter once it's applied. when apply is\n    // inactive, this model will be in sync (following the debounce ms). if the UI is not a valid filter\n    // (eg the value is missing so nothing to filter on, or for set filter all checkboxes are checked so filter\n    // not active) then this appliedModel will be null/undefined.\n\n    _this.appliedModel = null;\n    return _this;\n  }\n  /** @deprecated */\n\n\n  ProvidedFilter.prototype.onFilterChanged = function () {\n    console.warn(\"ag-Grid: you should not call onFilterChanged() directly on the filter, please call\\n        gridApi.onFilterChanged() instead. onFilterChanged is not part of the exposed filter interface (it was\\n        a method that existed on an old version of the filters that was not intended for public use.\");\n    this.providedFilterParams.filterChangedCallback();\n  };\n\n  ProvidedFilter.prototype.isFilterActive = function () {\n    // filter is active if we have a valid applied model\n    return !!this.appliedModel;\n  };\n\n  ProvidedFilter.prototype.postConstruct = function () {\n    var templateString =\n    /* html */\n    \"\\n            <div>\\n                <div class=\\\"ag-filter-body-wrapper ag-\" + this.getCssIdentifier() + \"-body-wrapper\\\">\\n                    \" + this.createBodyTemplate() + \"\\n                </div>\\n            </div>\";\n    this.setTemplate(templateString);\n  };\n\n  ProvidedFilter.prototype.init = function (params) {\n    var _this = this;\n\n    this.setParams(params);\n    this.resetUiToDefaults(true).then(function () {\n      _this.updateUiVisibility();\n\n      _this.setupOnBtApplyDebounce();\n    });\n  };\n\n  ProvidedFilter.prototype.setParams = function (params) {\n    ProvidedFilter.checkForDeprecatedParams(params);\n    this.providedFilterParams = params;\n\n    if (params.newRowsAction === 'keep') {\n      this.newRowsActionKeep = true;\n    } else if (params.newRowsAction === 'clear') {\n      this.newRowsActionKeep = false;\n    } else {\n      // the default for SSRM and IRM is 'keep', for CSRM and VRM the default is 'clear'\n      var modelsForKeep = [Constants.ROW_MODEL_TYPE_SERVER_SIDE, Constants.ROW_MODEL_TYPE_INFINITE];\n      this.newRowsActionKeep = modelsForKeep.indexOf(this.rowModel.getType()) >= 0;\n    }\n\n    this.applyActive = ProvidedFilter.isUseApplyButton(params);\n    this.createButtonPanel();\n  };\n\n  ProvidedFilter.prototype.createButtonPanel = function () {\n    var _this = this;\n\n    var buttons = this.providedFilterParams.buttons;\n\n    if (!buttons || buttons.length < 1) {\n      return;\n    }\n\n    var translate = this.gridOptionsWrapper.getLocaleTextFunc();\n    var eButtonsPanel = document.createElement('div');\n    addCssClass(eButtonsPanel, 'ag-filter-apply-panel');\n\n    var addButton = function (type) {\n      var text;\n      var clickListener;\n\n      switch (type) {\n        case 'apply':\n          text = translate('applyFilter', 'Apply Filter');\n\n          clickListener = function (e) {\n            return _this.onBtApply(false, false, e);\n          };\n\n          break;\n\n        case 'clear':\n          text = translate('clearFilter', 'Clear Filter');\n\n          clickListener = function () {\n            return _this.onBtClear();\n          };\n\n          break;\n\n        case 'reset':\n          text = translate('resetFilter', 'Reset Filter');\n\n          clickListener = function () {\n            return _this.onBtReset();\n          };\n\n          break;\n\n        case 'cancel':\n          text = translate('cancelFilter', 'Cancel Filter');\n\n          clickListener = function (e) {\n            _this.onBtCancel(e);\n          };\n\n          break;\n\n        default:\n          console.warn('Unknown button type specified');\n          return;\n      }\n\n      var button = loadTemplate(\n      /* html */\n      \"<button\\n                    type=\\\"button\\\"\\n                    ref=\\\"\" + type + \"FilterButton\\\"\\n                    class=\\\"ag-standard-button ag-filter-apply-panel-button\\\">\" + text + \"</button>\");\n      eButtonsPanel.appendChild(button);\n\n      _this.addManagedListener(button, 'click', clickListener);\n    };\n\n    new Set(buttons).forEach(function (type) {\n      return addButton(type);\n    });\n    this.getGui().appendChild(eButtonsPanel);\n  };\n\n  ProvidedFilter.checkForDeprecatedParams = function (params) {\n    var buttons = params.buttons || [];\n\n    if (buttons.length > 0) {\n      return;\n    }\n\n    var applyButton = params.applyButton,\n        resetButton = params.resetButton,\n        clearButton = params.clearButton;\n\n    if (clearButton) {\n      console.warn('ag-Grid: as of ag-Grid v23.2, filterParams.clearButton is deprecated. Please use filterParams.buttons instead');\n      buttons.push('clear');\n    }\n\n    if (resetButton) {\n      console.warn('ag-Grid: as of ag-Grid v23.2, filterParams.resetButton is deprecated. Please use filterParams.buttons instead');\n      buttons.push('reset');\n    }\n\n    if (applyButton) {\n      console.warn('ag-Grid: as of ag-Grid v23.2, filterParams.applyButton is deprecated. Please use filterParams.buttons instead');\n      buttons.push('apply');\n    }\n\n    if (params.apply) {\n      console.warn('ag-Grid: as of ag-Grid v21, filterParams.apply is deprecated. Please use filterParams.buttons instead');\n      buttons.push('apply');\n    }\n\n    params.buttons = buttons;\n  }; // subclasses can override this to provide alternative debounce defaults\n\n\n  ProvidedFilter.prototype.getDefaultDebounceMs = function () {\n    return 0;\n  };\n\n  ProvidedFilter.prototype.setupOnBtApplyDebounce = function () {\n    var debounceMs = ProvidedFilter.getDebounceMs(this.providedFilterParams, this.getDefaultDebounceMs());\n    this.onBtApplyDebounce = debounce(this.onBtApply.bind(this), debounceMs);\n  };\n\n  ProvidedFilter.prototype.getModel = function () {\n    return this.appliedModel;\n  };\n\n  ProvidedFilter.prototype.setModel = function (model) {\n    var _this = this;\n\n    var promise = model ? this.setModelIntoUi(model) : this.resetUiToDefaults();\n    return promise.then(function () {\n      _this.updateUiVisibility(); // we set the model from the gui, rather than the provided model,\n      // so the model is consistent. eg handling of null/undefined will be the same,\n      // of if model is case insensitive, then casing is removed.\n\n\n      _this.applyModel();\n    });\n  };\n\n  ProvidedFilter.prototype.onBtCancel = function (e) {\n    var _this = this;\n\n    this.setModelIntoUi(this.getModel()).then(function () {\n      _this.onUiChanged(false, 'prevent');\n\n      if (_this.providedFilterParams.closeOnApply) {\n        _this.close(e);\n      }\n    });\n  };\n\n  ProvidedFilter.prototype.onBtClear = function () {\n    var _this = this;\n\n    this.resetUiToDefaults().then(function () {\n      return _this.onUiChanged();\n    });\n  };\n\n  ProvidedFilter.prototype.onBtReset = function () {\n    this.onBtClear();\n    this.onBtApply();\n  };\n  /**\n   * Applies changes made in the UI to the filter, and returns true if the model has changed.\n   */\n\n\n  ProvidedFilter.prototype.applyModel = function () {\n    var newModel = this.getModelFromUi();\n\n    if (!this.isModelValid(newModel)) {\n      return false;\n    }\n\n    var previousModel = this.appliedModel;\n    this.appliedModel = newModel; // models can be same if user pasted same content into text field, or maybe just changed the case\n    // and it's a case insensitive filter\n\n    return !this.areModelsEqual(previousModel, newModel);\n  };\n\n  ProvidedFilter.prototype.isModelValid = function (model) {\n    return true;\n  };\n\n  ProvidedFilter.prototype.onBtApply = function (afterFloatingFilter, afterDataChange, e) {\n    if (afterFloatingFilter === void 0) {\n      afterFloatingFilter = false;\n    }\n\n    if (afterDataChange === void 0) {\n      afterDataChange = false;\n    }\n\n    if (this.applyModel()) {\n      // the floating filter uses 'afterFloatingFilter' info, so it doesn't refresh after filter changed if change\n      // came from floating filter\n      this.providedFilterParams.filterChangedCallback({\n        afterFloatingFilter: afterFloatingFilter,\n        afterDataChange: afterDataChange\n      });\n    }\n\n    var closeOnApply = this.providedFilterParams.closeOnApply; // only close if an apply button is visible, otherwise we'd be closing every time a change was made!\n\n    if (closeOnApply && !afterFloatingFilter && this.applyActive) {\n      this.close(e);\n    }\n  };\n\n  ProvidedFilter.prototype.onNewRowsLoaded = function () {\n    var _this = this;\n\n    if (!this.newRowsActionKeep) {\n      this.resetUiToDefaults().then(function () {\n        return _this.appliedModel = null;\n      });\n    }\n  };\n\n  ProvidedFilter.prototype.close = function (e) {\n    if (!this.hidePopup) {\n      return;\n    }\n\n    var keyboardEvent = e;\n    var key = keyboardEvent && keyboardEvent.key;\n    var params;\n\n    if (key === 'Enter' || key === 'Space') {\n      params = {\n        keyboardEvent: keyboardEvent\n      };\n    }\n\n    this.hidePopup(params);\n    this.hidePopup = null;\n  }; // called by set filter\n\n\n  ProvidedFilter.prototype.isNewRowsActionKeep = function () {\n    return this.newRowsActionKeep;\n  };\n  /**\n   * By default, if the change came from a floating filter it will be applied immediately, otherwise if there is no\n   * apply button it will be applied after a debounce, otherwise it will not be applied at all. This behaviour can\n   * be adjusted by using the apply parameter.\n   */\n\n\n  ProvidedFilter.prototype.onUiChanged = function (fromFloatingFilter, apply) {\n    if (fromFloatingFilter === void 0) {\n      fromFloatingFilter = false;\n    }\n\n    this.updateUiVisibility();\n    this.providedFilterParams.filterModifiedCallback();\n\n    if (this.applyActive) {\n      var isValid = this.isModelValid(this.getModelFromUi());\n      setDisabled(this.getRefElement('applyFilterButton'), !isValid);\n    }\n\n    if (fromFloatingFilter && !apply || apply === 'immediately') {\n      this.onBtApply(fromFloatingFilter);\n    } else if (!this.applyActive && !apply || apply === 'debounce') {\n      this.onBtApplyDebounce();\n    }\n  };\n\n  ProvidedFilter.prototype.afterGuiAttached = function (params) {\n    this.hidePopup = params.hidePopup;\n  }; // static, as used by floating filter also\n\n\n  ProvidedFilter.getDebounceMs = function (params, debounceDefault) {\n    if (ProvidedFilter.isUseApplyButton(params)) {\n      if (params.debounceMs != null) {\n        console.warn('ag-Grid: debounceMs is ignored when apply button is present');\n      }\n\n      return 0;\n    }\n\n    return params.debounceMs != null ? params.debounceMs : debounceDefault;\n  }; // static, as used by floating filter also\n\n\n  ProvidedFilter.isUseApplyButton = function (params) {\n    ProvidedFilter.checkForDeprecatedParams(params);\n    return params.buttons && params.buttons.indexOf('apply') >= 0;\n  };\n\n  ProvidedFilter.prototype.destroy = function () {\n    this.hidePopup = null;\n\n    _super.prototype.destroy.call(this);\n  };\n\n  __decorate([Autowired('gridOptionsWrapper')], ProvidedFilter.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([Autowired('rowModel')], ProvidedFilter.prototype, \"rowModel\", void 0);\n\n  __decorate([PostConstruct], ProvidedFilter.prototype, \"postConstruct\", null);\n\n  return ProvidedFilter;\n}(Component);\n\nexport { ProvidedFilter };","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/@ag-grid-community/core/dist/es6/filter/provided/providedFilter.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Component","Autowired","PostConstruct","Constants","loadTemplate","addCssClass","setDisabled","debounce","ProvidedFilter","_super","_this","apply","applyActive","hidePopup","appliedModel","onFilterChanged","console","warn","providedFilterParams","filterChangedCallback","isFilterActive","postConstruct","templateString","getCssIdentifier","createBodyTemplate","setTemplate","init","params","setParams","resetUiToDefaults","then","updateUiVisibility","setupOnBtApplyDebounce","checkForDeprecatedParams","newRowsAction","newRowsActionKeep","modelsForKeep","ROW_MODEL_TYPE_SERVER_SIDE","ROW_MODEL_TYPE_INFINITE","indexOf","rowModel","getType","isUseApplyButton","createButtonPanel","buttons","translate","gridOptionsWrapper","getLocaleTextFunc","eButtonsPanel","document","createElement","addButton","type","text","clickListener","e","onBtApply","onBtClear","onBtReset","onBtCancel","button","appendChild","addManagedListener","Set","forEach","getGui","applyButton","resetButton","clearButton","push","getDefaultDebounceMs","debounceMs","getDebounceMs","onBtApplyDebounce","bind","getModel","setModel","model","promise","setModelIntoUi","applyModel","onUiChanged","closeOnApply","close","newModel","getModelFromUi","isModelValid","previousModel","areModelsEqual","afterFloatingFilter","afterDataChange","onNewRowsLoaded","keyboardEvent","isNewRowsActionKeep","fromFloatingFilter","filterModifiedCallback","isValid","getRefElement","afterGuiAttached","debounceDefault","destroy","call"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component } from '../../widgets/component';\nimport { Autowired, PostConstruct } from '../../context/context';\nimport { Constants } from '../../constants';\nimport { loadTemplate, addCssClass, setDisabled } from '../../utils/dom';\nimport { debounce } from '../../utils/function';\n/**\n * Contains common logic to all provided filters (apply button, clear button, etc).\n * All the filters that come with ag-Grid extend this class. User filters do not\n * extend this class.\n */\nvar ProvidedFilter = /** @class */ (function (_super) {\n    __extends(ProvidedFilter, _super);\n    function ProvidedFilter() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.applyActive = false;\n        _this.hidePopup = null;\n        // after the user hits 'apply' the model gets copied to here. this is then the model that we use for\n        // all filtering. so if user changes UI but doesn't hit apply, then the UI will be out of sync with this model.\n        // this is what we want, as the UI should only become the 'active' filter once it's applied. when apply is\n        // inactive, this model will be in sync (following the debounce ms). if the UI is not a valid filter\n        // (eg the value is missing so nothing to filter on, or for set filter all checkboxes are checked so filter\n        // not active) then this appliedModel will be null/undefined.\n        _this.appliedModel = null;\n        return _this;\n    }\n    /** @deprecated */\n    ProvidedFilter.prototype.onFilterChanged = function () {\n        console.warn(\"ag-Grid: you should not call onFilterChanged() directly on the filter, please call\\n        gridApi.onFilterChanged() instead. onFilterChanged is not part of the exposed filter interface (it was\\n        a method that existed on an old version of the filters that was not intended for public use.\");\n        this.providedFilterParams.filterChangedCallback();\n    };\n    ProvidedFilter.prototype.isFilterActive = function () {\n        // filter is active if we have a valid applied model\n        return !!this.appliedModel;\n    };\n    ProvidedFilter.prototype.postConstruct = function () {\n        var templateString = /* html */ \"\\n            <div>\\n                <div class=\\\"ag-filter-body-wrapper ag-\" + this.getCssIdentifier() + \"-body-wrapper\\\">\\n                    \" + this.createBodyTemplate() + \"\\n                </div>\\n            </div>\";\n        this.setTemplate(templateString);\n    };\n    ProvidedFilter.prototype.init = function (params) {\n        var _this = this;\n        this.setParams(params);\n        this.resetUiToDefaults(true).then(function () {\n            _this.updateUiVisibility();\n            _this.setupOnBtApplyDebounce();\n        });\n    };\n    ProvidedFilter.prototype.setParams = function (params) {\n        ProvidedFilter.checkForDeprecatedParams(params);\n        this.providedFilterParams = params;\n        if (params.newRowsAction === 'keep') {\n            this.newRowsActionKeep = true;\n        }\n        else if (params.newRowsAction === 'clear') {\n            this.newRowsActionKeep = false;\n        }\n        else {\n            // the default for SSRM and IRM is 'keep', for CSRM and VRM the default is 'clear'\n            var modelsForKeep = [Constants.ROW_MODEL_TYPE_SERVER_SIDE, Constants.ROW_MODEL_TYPE_INFINITE];\n            this.newRowsActionKeep = modelsForKeep.indexOf(this.rowModel.getType()) >= 0;\n        }\n        this.applyActive = ProvidedFilter.isUseApplyButton(params);\n        this.createButtonPanel();\n    };\n    ProvidedFilter.prototype.createButtonPanel = function () {\n        var _this = this;\n        var buttons = this.providedFilterParams.buttons;\n        if (!buttons || buttons.length < 1) {\n            return;\n        }\n        var translate = this.gridOptionsWrapper.getLocaleTextFunc();\n        var eButtonsPanel = document.createElement('div');\n        addCssClass(eButtonsPanel, 'ag-filter-apply-panel');\n        var addButton = function (type) {\n            var text;\n            var clickListener;\n            switch (type) {\n                case 'apply':\n                    text = translate('applyFilter', 'Apply Filter');\n                    clickListener = function (e) { return _this.onBtApply(false, false, e); };\n                    break;\n                case 'clear':\n                    text = translate('clearFilter', 'Clear Filter');\n                    clickListener = function () { return _this.onBtClear(); };\n                    break;\n                case 'reset':\n                    text = translate('resetFilter', 'Reset Filter');\n                    clickListener = function () { return _this.onBtReset(); };\n                    break;\n                case 'cancel':\n                    text = translate('cancelFilter', 'Cancel Filter');\n                    clickListener = function (e) { _this.onBtCancel(e); };\n                    break;\n                default:\n                    console.warn('Unknown button type specified');\n                    return;\n            }\n            var button = loadTemplate(/* html */ \"<button\\n                    type=\\\"button\\\"\\n                    ref=\\\"\" + type + \"FilterButton\\\"\\n                    class=\\\"ag-standard-button ag-filter-apply-panel-button\\\">\" + text + \"</button>\");\n            eButtonsPanel.appendChild(button);\n            _this.addManagedListener(button, 'click', clickListener);\n        };\n        new Set(buttons).forEach(function (type) { return addButton(type); });\n        this.getGui().appendChild(eButtonsPanel);\n    };\n    ProvidedFilter.checkForDeprecatedParams = function (params) {\n        var buttons = params.buttons || [];\n        if (buttons.length > 0) {\n            return;\n        }\n        var applyButton = params.applyButton, resetButton = params.resetButton, clearButton = params.clearButton;\n        if (clearButton) {\n            console.warn('ag-Grid: as of ag-Grid v23.2, filterParams.clearButton is deprecated. Please use filterParams.buttons instead');\n            buttons.push('clear');\n        }\n        if (resetButton) {\n            console.warn('ag-Grid: as of ag-Grid v23.2, filterParams.resetButton is deprecated. Please use filterParams.buttons instead');\n            buttons.push('reset');\n        }\n        if (applyButton) {\n            console.warn('ag-Grid: as of ag-Grid v23.2, filterParams.applyButton is deprecated. Please use filterParams.buttons instead');\n            buttons.push('apply');\n        }\n        if (params.apply) {\n            console.warn('ag-Grid: as of ag-Grid v21, filterParams.apply is deprecated. Please use filterParams.buttons instead');\n            buttons.push('apply');\n        }\n        params.buttons = buttons;\n    };\n    // subclasses can override this to provide alternative debounce defaults\n    ProvidedFilter.prototype.getDefaultDebounceMs = function () {\n        return 0;\n    };\n    ProvidedFilter.prototype.setupOnBtApplyDebounce = function () {\n        var debounceMs = ProvidedFilter.getDebounceMs(this.providedFilterParams, this.getDefaultDebounceMs());\n        this.onBtApplyDebounce = debounce(this.onBtApply.bind(this), debounceMs);\n    };\n    ProvidedFilter.prototype.getModel = function () {\n        return this.appliedModel;\n    };\n    ProvidedFilter.prototype.setModel = function (model) {\n        var _this = this;\n        var promise = model ? this.setModelIntoUi(model) : this.resetUiToDefaults();\n        return promise.then(function () {\n            _this.updateUiVisibility();\n            // we set the model from the gui, rather than the provided model,\n            // so the model is consistent. eg handling of null/undefined will be the same,\n            // of if model is case insensitive, then casing is removed.\n            _this.applyModel();\n        });\n    };\n    ProvidedFilter.prototype.onBtCancel = function (e) {\n        var _this = this;\n        this.setModelIntoUi(this.getModel()).then(function () {\n            _this.onUiChanged(false, 'prevent');\n            if (_this.providedFilterParams.closeOnApply) {\n                _this.close(e);\n            }\n        });\n    };\n    ProvidedFilter.prototype.onBtClear = function () {\n        var _this = this;\n        this.resetUiToDefaults().then(function () { return _this.onUiChanged(); });\n    };\n    ProvidedFilter.prototype.onBtReset = function () {\n        this.onBtClear();\n        this.onBtApply();\n    };\n    /**\n     * Applies changes made in the UI to the filter, and returns true if the model has changed.\n     */\n    ProvidedFilter.prototype.applyModel = function () {\n        var newModel = this.getModelFromUi();\n        if (!this.isModelValid(newModel)) {\n            return false;\n        }\n        var previousModel = this.appliedModel;\n        this.appliedModel = newModel;\n        // models can be same if user pasted same content into text field, or maybe just changed the case\n        // and it's a case insensitive filter\n        return !this.areModelsEqual(previousModel, newModel);\n    };\n    ProvidedFilter.prototype.isModelValid = function (model) {\n        return true;\n    };\n    ProvidedFilter.prototype.onBtApply = function (afterFloatingFilter, afterDataChange, e) {\n        if (afterFloatingFilter === void 0) { afterFloatingFilter = false; }\n        if (afterDataChange === void 0) { afterDataChange = false; }\n        if (this.applyModel()) {\n            // the floating filter uses 'afterFloatingFilter' info, so it doesn't refresh after filter changed if change\n            // came from floating filter\n            this.providedFilterParams.filterChangedCallback({ afterFloatingFilter: afterFloatingFilter, afterDataChange: afterDataChange });\n        }\n        var closeOnApply = this.providedFilterParams.closeOnApply;\n        // only close if an apply button is visible, otherwise we'd be closing every time a change was made!\n        if (closeOnApply && !afterFloatingFilter && this.applyActive) {\n            this.close(e);\n        }\n    };\n    ProvidedFilter.prototype.onNewRowsLoaded = function () {\n        var _this = this;\n        if (!this.newRowsActionKeep) {\n            this.resetUiToDefaults().then(function () { return _this.appliedModel = null; });\n        }\n    };\n    ProvidedFilter.prototype.close = function (e) {\n        if (!this.hidePopup) {\n            return;\n        }\n        var keyboardEvent = e;\n        var key = keyboardEvent && keyboardEvent.key;\n        var params;\n        if (key === 'Enter' || key === 'Space') {\n            params = { keyboardEvent: keyboardEvent };\n        }\n        this.hidePopup(params);\n        this.hidePopup = null;\n    };\n    // called by set filter\n    ProvidedFilter.prototype.isNewRowsActionKeep = function () {\n        return this.newRowsActionKeep;\n    };\n    /**\n     * By default, if the change came from a floating filter it will be applied immediately, otherwise if there is no\n     * apply button it will be applied after a debounce, otherwise it will not be applied at all. This behaviour can\n     * be adjusted by using the apply parameter.\n     */\n    ProvidedFilter.prototype.onUiChanged = function (fromFloatingFilter, apply) {\n        if (fromFloatingFilter === void 0) { fromFloatingFilter = false; }\n        this.updateUiVisibility();\n        this.providedFilterParams.filterModifiedCallback();\n        if (this.applyActive) {\n            var isValid = this.isModelValid(this.getModelFromUi());\n            setDisabled(this.getRefElement('applyFilterButton'), !isValid);\n        }\n        if ((fromFloatingFilter && !apply) || apply === 'immediately') {\n            this.onBtApply(fromFloatingFilter);\n        }\n        else if ((!this.applyActive && !apply) || apply === 'debounce') {\n            this.onBtApplyDebounce();\n        }\n    };\n    ProvidedFilter.prototype.afterGuiAttached = function (params) {\n        this.hidePopup = params.hidePopup;\n    };\n    // static, as used by floating filter also\n    ProvidedFilter.getDebounceMs = function (params, debounceDefault) {\n        if (ProvidedFilter.isUseApplyButton(params)) {\n            if (params.debounceMs != null) {\n                console.warn('ag-Grid: debounceMs is ignored when apply button is present');\n            }\n            return 0;\n        }\n        return params.debounceMs != null ? params.debounceMs : debounceDefault;\n    };\n    // static, as used by floating filter also\n    ProvidedFilter.isUseApplyButton = function (params) {\n        ProvidedFilter.checkForDeprecatedParams(params);\n        return params.buttons && params.buttons.indexOf('apply') >= 0;\n    };\n    ProvidedFilter.prototype.destroy = function () {\n        this.hidePopup = null;\n        _super.prototype.destroy.call(this);\n    };\n    __decorate([\n        Autowired('gridOptionsWrapper')\n    ], ProvidedFilter.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        Autowired('rowModel')\n    ], ProvidedFilter.prototype, \"rowModel\", void 0);\n    __decorate([\n        PostConstruct\n    ], ProvidedFilter.prototype, \"postConstruct\", null);\n    return ProvidedFilter;\n}(Component));\nexport { ProvidedFilter };\n"]},"metadata":{},"sourceType":"module"}