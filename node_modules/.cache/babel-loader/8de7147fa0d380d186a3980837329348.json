{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Bean, Autowired, PostConstruct, Optional } from \"./context/context\";\nimport { BeanStub } from \"./context/beanStub\";\nimport { Events } from \"./events\";\nimport { CellComp } from \"./rendering/cellComp\";\nimport { ManagedFocusComponent } from \"./widgets/managedFocusComponent\";\nimport { _ } from \"./utils\";\n\nvar FocusController =\n/** @class */\nfunction (_super) {\n  __extends(FocusController, _super);\n\n  function FocusController() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.keyboardFocusActive = false;\n    return _this;\n  }\n\n  FocusController_1 = FocusController;\n\n  FocusController.prototype.init = function () {\n    var eDocument = this.gridOptionsWrapper.getDocument();\n    var clearFocusedCellListener = this.clearFocusedCell.bind(this);\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_PIVOT_MODE_CHANGED, clearFocusedCellListener);\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_EVERYTHING_CHANGED, this.onColumnEverythingChanged.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_GROUP_OPENED, clearFocusedCellListener);\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_ROW_GROUP_CHANGED, clearFocusedCellListener);\n    this.addManagedListener(eDocument, 'keydown', this.activateKeyboardMode.bind(this));\n    this.addManagedListener(eDocument, 'mousedown', this.activateMouseMode.bind(this));\n  };\n\n  FocusController.prototype.registerGridCore = function (gridCore) {\n    this.gridCore = gridCore;\n  };\n\n  FocusController.prototype.onColumnEverythingChanged = function () {\n    // if the columns change, check and see if this column still exists. if it does,\n    // then we can keep the focused cell. if it doesn't, then we need to drop the focused\n    // cell.\n    if (this.focusedCellPosition) {\n      var col = this.focusedCellPosition.column;\n      var colFromColumnController = this.columnController.getGridColumn(col.getId());\n\n      if (col !== colFromColumnController) {\n        this.clearFocusedCell();\n      }\n    }\n  };\n\n  FocusController.prototype.isKeyboardFocus = function () {\n    return this.keyboardFocusActive;\n  };\n\n  FocusController.prototype.activateMouseMode = function () {\n    this.keyboardFocusActive = false;\n    this.eventService.dispatchEvent({\n      type: Events.EVENT_MOUSE_FOCUS\n    });\n  };\n\n  FocusController.prototype.activateKeyboardMode = function () {\n    this.keyboardFocusActive = true;\n    this.eventService.dispatchEvent({\n      type: Events.EVENT_KEYBOARD_FOCUS\n    });\n  }; // we check if the browser is focusing something, and if it is, and\n  // it's the cell we think is focused, then return the cell. so this\n  // methods returns the cell if a) we think it has focus and b) the\n  // browser thinks it has focus. this then returns nothing if we\n  // first focus a cell, then second click outside the grid, as then the\n  // grid cell will still be focused as far as the grid is concerned,\n  // however the browser focus will have moved somewhere else.\n\n\n  FocusController.prototype.getFocusCellToUseAfterRefresh = function () {\n    if (this.gridOptionsWrapper.isSuppressFocusAfterRefresh() || !this.focusedCellPosition) {\n      return null;\n    } // we check that the browser is actually focusing on the grid, if it is not, then\n    // we have nothing to worry about\n\n\n    var browserFocusedCell = this.getGridCellForDomElement(document.activeElement);\n\n    if (!browserFocusedCell) {\n      return null;\n    }\n\n    return this.focusedCellPosition;\n  };\n\n  FocusController.prototype.getGridCellForDomElement = function (eBrowserCell) {\n    var ePointer = eBrowserCell;\n\n    while (ePointer) {\n      var cellComp = this.gridOptionsWrapper.getDomData(ePointer, CellComp.DOM_DATA_KEY_CELL_COMP);\n\n      if (cellComp) {\n        return cellComp.getCellPosition();\n      }\n\n      ePointer = ePointer.parentNode;\n    }\n\n    return null;\n  };\n\n  FocusController.prototype.clearFocusedCell = function () {\n    this.focusedCellPosition = null;\n    this.onCellFocused(false);\n  };\n\n  FocusController.prototype.getFocusedCell = function () {\n    return this.focusedCellPosition;\n  };\n\n  FocusController.prototype.setFocusedCell = function (rowIndex, colKey, floating, forceBrowserFocus) {\n    if (forceBrowserFocus === void 0) {\n      forceBrowserFocus = false;\n    }\n\n    var column = _.makeNull(this.columnController.getGridColumn(colKey));\n\n    this.focusedCellPosition = {\n      rowIndex: rowIndex,\n      rowPinned: _.makeNull(floating),\n      column: column\n    };\n    this.onCellFocused(forceBrowserFocus);\n  };\n\n  FocusController.prototype.isCellFocused = function (cellPosition) {\n    if (_.missing(this.focusedCellPosition)) {\n      return false;\n    }\n\n    return this.focusedCellPosition.column === cellPosition.column && this.isRowFocused(cellPosition.rowIndex, cellPosition.rowPinned);\n  };\n\n  FocusController.prototype.isRowNodeFocused = function (rowNode) {\n    return this.isRowFocused(rowNode.rowIndex, rowNode.rowPinned);\n  };\n\n  FocusController.prototype.isHeaderWrapperFocused = function (headerWrapper) {\n    if (_.missing(this.focusedHeaderPosition)) {\n      return false;\n    }\n\n    var column = headerWrapper.getColumn();\n    var headerRowIndex = headerWrapper.getParentComponent().getRowIndex();\n    var pinned = headerWrapper.getPinned();\n    var _a = this.focusedHeaderPosition,\n        focusedColumn = _a.column,\n        focusedHeaderRowIndex = _a.headerRowIndex;\n    return column === focusedColumn && headerRowIndex === focusedHeaderRowIndex && pinned == focusedColumn.getPinned();\n  };\n\n  FocusController.prototype.clearFocusedHeader = function () {\n    this.focusedHeaderPosition = null;\n  };\n\n  FocusController.prototype.getFocusedHeader = function () {\n    return this.focusedHeaderPosition;\n  };\n\n  FocusController.prototype.setFocusedHeader = function (headerRowIndex, column) {\n    this.focusedHeaderPosition = {\n      headerRowIndex: headerRowIndex,\n      column: column\n    };\n  };\n\n  FocusController.prototype.focusHeaderPosition = function (headerPosition, direction) {\n    this.headerNavigationService.scrollToColumn(headerPosition.column, direction);\n    var childContainer = this.headerNavigationService.getHeaderContainer(headerPosition.column.getPinned());\n    var rowComps = childContainer.getRowComps();\n    var nextRowComp = rowComps[headerPosition.headerRowIndex];\n    var headerComps = nextRowComp.getHeaderComps();\n    var nextHeader = headerComps[headerPosition.column.getUniqueId()];\n\n    if (nextHeader) {\n      // this will automatically call the setFocusedHeader method above\n      nextHeader.getFocusableElement().focus();\n      return true;\n    }\n\n    return false;\n  };\n\n  FocusController.prototype.isAnyCellFocused = function () {\n    return !!this.focusedCellPosition;\n  };\n\n  FocusController.prototype.isRowFocused = function (rowIndex, floating) {\n    if (_.missing(this.focusedCellPosition)) {\n      return false;\n    }\n\n    var floatingOrNull = _.makeNull(floating);\n\n    return this.focusedCellPosition.rowIndex === rowIndex && this.focusedCellPosition.rowPinned === floatingOrNull;\n  };\n\n  FocusController.prototype.findFocusableElements = function (rootNode, exclude, onlyUnmanaged) {\n    var focusableString = FocusController_1.FOCUSABLE_SELECTOR;\n    var excludeString = FocusController_1.FOCUSABLE_EXCLUDE;\n\n    if (exclude) {\n      excludeString += ', ' + exclude;\n    }\n\n    if (onlyUnmanaged) {\n      excludeString += ', [tabindex=\"-1\"]';\n    }\n\n    var nodes = Array.prototype.slice.apply(rootNode.querySelectorAll(focusableString));\n    var excludeNodes = Array.prototype.slice.apply(rootNode.querySelectorAll(excludeString));\n\n    if (!excludeNodes.length) {\n      return nodes;\n    }\n\n    var diff = function (a, b) {\n      return a.filter(function (element) {\n        return b.indexOf(element) === -1;\n      });\n    };\n\n    return diff(nodes, excludeNodes);\n  };\n\n  FocusController.prototype.focusFirstFocusableElement = function (rootNode, onlyUnmanaged) {\n    var focusable = this.findFocusableElements(rootNode, null, onlyUnmanaged)[0];\n\n    if (focusable) {\n      focusable.focus();\n      return true;\n    }\n\n    return false;\n  };\n\n  FocusController.prototype.focusLastFocusableElement = function (rootNode, onlyUnmanaged) {\n    var focusable = _.last(this.findFocusableElements(rootNode, null, onlyUnmanaged));\n\n    if (focusable) {\n      focusable.focus();\n      return true;\n    }\n\n    return false;\n  };\n\n  FocusController.prototype.findNextFocusableElement = function (rootNode, onlyManaged, backwards) {\n    var focusable = this.findFocusableElements(rootNode, onlyManaged ? ':not([tabindex=\"-1\"])' : null);\n    var currentIndex;\n\n    if (onlyManaged) {\n      currentIndex = _.findIndex(focusable, function (el) {\n        return el.contains(document.activeElement);\n      });\n    } else {\n      currentIndex = focusable.indexOf(document.activeElement);\n    }\n\n    var nextIndex = currentIndex + (backwards ? -1 : 1);\n\n    if (nextIndex < 0 || nextIndex > focusable.length) {\n      return;\n    }\n\n    return focusable[nextIndex];\n  };\n\n  FocusController.prototype.isFocusUnderManagedComponent = function (rootNode) {\n    var managedContainers = rootNode.querySelectorAll(\".\" + ManagedFocusComponent.FOCUS_MANAGED_CLASS);\n\n    if (!managedContainers.length) {\n      return false;\n    }\n\n    for (var i = 0; i < managedContainers.length; i++) {\n      if (managedContainers[i].contains(document.activeElement)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  FocusController.prototype.findTabbableParent = function (node, limit) {\n    if (limit === void 0) {\n      limit = 5;\n    }\n\n    var counter = 0;\n\n    while (node && _.getTabIndex(node) === null && ++counter <= limit) {\n      node = node.parentElement;\n    }\n\n    if (_.getTabIndex(node) === null) {\n      return null;\n    }\n\n    return node;\n  };\n\n  FocusController.prototype.onCellFocused = function (forceBrowserFocus) {\n    var event = {\n      type: Events.EVENT_CELL_FOCUSED,\n      forceBrowserFocus: forceBrowserFocus,\n      rowIndex: null,\n      column: null,\n      floating: null,\n      api: this.gridApi,\n      columnApi: this.columnApi,\n      rowPinned: null\n    };\n\n    if (this.focusedCellPosition) {\n      event.rowIndex = this.focusedCellPosition.rowIndex;\n      event.column = this.focusedCellPosition.column;\n      event.rowPinned = this.focusedCellPosition.rowPinned;\n    }\n\n    this.eventService.dispatchEvent(event);\n  };\n\n  FocusController.prototype.focusGridView = function (column) {\n    var firstRow = this.rowPositionUtils.getFirstRow();\n\n    if (!firstRow) {\n      return false;\n    }\n\n    var rowIndex = firstRow.rowIndex,\n        rowPinned = firstRow.rowPinned;\n    var focusedHeader = this.getFocusedHeader();\n\n    if (!column) {\n      column = focusedHeader.column;\n    }\n\n    if (!_.exists(rowIndex)) {\n      return false;\n    }\n\n    this.rowRenderer.ensureCellVisible({\n      rowIndex: rowIndex,\n      column: column,\n      rowPinned: rowPinned\n    });\n    this.setFocusedCell(rowIndex, column, _.makeNull(rowPinned), true);\n\n    if (this.rangeController) {\n      var cellPosition = {\n        rowIndex: rowIndex,\n        rowPinned: rowPinned,\n        column: column\n      };\n      this.rangeController.setRangeToCell(cellPosition);\n    }\n\n    return true;\n  };\n\n  FocusController.prototype.focusNextGridCoreContainer = function (backwards) {\n    if (this.gridCore.focusNextInnerContainer(backwards)) {\n      return true;\n    }\n\n    if (!backwards) {\n      this.gridCore.forceFocusOutOfContainer();\n    }\n  };\n\n  var FocusController_1;\n  FocusController.FOCUSABLE_SELECTOR = '[tabindex], input, select, button, textarea';\n  FocusController.FOCUSABLE_EXCLUDE = '.ag-hidden, .ag-hidden *, .ag-disabled, .ag-disabled *';\n\n  __decorate([Autowired('gridOptionsWrapper')], FocusController.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([Autowired('columnController')], FocusController.prototype, \"columnController\", void 0);\n\n  __decorate([Autowired('headerNavigationService')], FocusController.prototype, \"headerNavigationService\", void 0);\n\n  __decorate([Autowired('columnApi')], FocusController.prototype, \"columnApi\", void 0);\n\n  __decorate([Autowired('gridApi')], FocusController.prototype, \"gridApi\", void 0);\n\n  __decorate([Autowired('rowRenderer')], FocusController.prototype, \"rowRenderer\", void 0);\n\n  __decorate([Autowired('rowPositionUtils')], FocusController.prototype, \"rowPositionUtils\", void 0);\n\n  __decorate([Optional('rangeController')], FocusController.prototype, \"rangeController\", void 0);\n\n  __decorate([PostConstruct], FocusController.prototype, \"init\", null);\n\n  FocusController = FocusController_1 = __decorate([Bean('focusController')], FocusController);\n  return FocusController;\n}(BeanStub);\n\nexport { FocusController };","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/@ag-grid-community/core/dist/es6/focusController.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Bean","Autowired","PostConstruct","Optional","BeanStub","Events","CellComp","ManagedFocusComponent","_","FocusController","_super","_this","apply","keyboardFocusActive","FocusController_1","init","eDocument","gridOptionsWrapper","getDocument","clearFocusedCellListener","clearFocusedCell","bind","addManagedListener","eventService","EVENT_COLUMN_PIVOT_MODE_CHANGED","EVENT_COLUMN_EVERYTHING_CHANGED","onColumnEverythingChanged","EVENT_COLUMN_GROUP_OPENED","EVENT_COLUMN_ROW_GROUP_CHANGED","activateKeyboardMode","activateMouseMode","registerGridCore","gridCore","focusedCellPosition","col","column","colFromColumnController","columnController","getGridColumn","getId","isKeyboardFocus","dispatchEvent","type","EVENT_MOUSE_FOCUS","EVENT_KEYBOARD_FOCUS","getFocusCellToUseAfterRefresh","isSuppressFocusAfterRefresh","browserFocusedCell","getGridCellForDomElement","document","activeElement","eBrowserCell","ePointer","cellComp","getDomData","DOM_DATA_KEY_CELL_COMP","getCellPosition","parentNode","onCellFocused","getFocusedCell","setFocusedCell","rowIndex","colKey","floating","forceBrowserFocus","makeNull","rowPinned","isCellFocused","cellPosition","missing","isRowFocused","isRowNodeFocused","rowNode","isHeaderWrapperFocused","headerWrapper","focusedHeaderPosition","getColumn","headerRowIndex","getParentComponent","getRowIndex","pinned","getPinned","_a","focusedColumn","focusedHeaderRowIndex","clearFocusedHeader","getFocusedHeader","setFocusedHeader","focusHeaderPosition","headerPosition","direction","headerNavigationService","scrollToColumn","childContainer","getHeaderContainer","rowComps","getRowComps","nextRowComp","headerComps","getHeaderComps","nextHeader","getUniqueId","getFocusableElement","focus","isAnyCellFocused","floatingOrNull","findFocusableElements","rootNode","exclude","onlyUnmanaged","focusableString","FOCUSABLE_SELECTOR","excludeString","FOCUSABLE_EXCLUDE","nodes","slice","querySelectorAll","excludeNodes","diff","a","filter","element","indexOf","focusFirstFocusableElement","focusable","focusLastFocusableElement","last","findNextFocusableElement","onlyManaged","backwards","currentIndex","findIndex","el","contains","nextIndex","isFocusUnderManagedComponent","managedContainers","FOCUS_MANAGED_CLASS","findTabbableParent","node","limit","counter","getTabIndex","parentElement","event","EVENT_CELL_FOCUSED","api","gridApi","columnApi","focusGridView","firstRow","rowPositionUtils","getFirstRow","focusedHeader","exists","rowRenderer","ensureCellVisible","rangeController","setRangeToCell","focusNextGridCoreContainer","focusNextInnerContainer","forceFocusOutOfContainer"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Bean, Autowired, PostConstruct, Optional } from \"./context/context\";\nimport { BeanStub } from \"./context/beanStub\";\nimport { Events } from \"./events\";\nimport { CellComp } from \"./rendering/cellComp\";\nimport { ManagedFocusComponent } from \"./widgets/managedFocusComponent\";\nimport { _ } from \"./utils\";\nvar FocusController = /** @class */ (function (_super) {\n    __extends(FocusController, _super);\n    function FocusController() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.keyboardFocusActive = false;\n        return _this;\n    }\n    FocusController_1 = FocusController;\n    FocusController.prototype.init = function () {\n        var eDocument = this.gridOptionsWrapper.getDocument();\n        var clearFocusedCellListener = this.clearFocusedCell.bind(this);\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_PIVOT_MODE_CHANGED, clearFocusedCellListener);\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_EVERYTHING_CHANGED, this.onColumnEverythingChanged.bind(this));\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_GROUP_OPENED, clearFocusedCellListener);\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_ROW_GROUP_CHANGED, clearFocusedCellListener);\n        this.addManagedListener(eDocument, 'keydown', this.activateKeyboardMode.bind(this));\n        this.addManagedListener(eDocument, 'mousedown', this.activateMouseMode.bind(this));\n    };\n    FocusController.prototype.registerGridCore = function (gridCore) {\n        this.gridCore = gridCore;\n    };\n    FocusController.prototype.onColumnEverythingChanged = function () {\n        // if the columns change, check and see if this column still exists. if it does,\n        // then we can keep the focused cell. if it doesn't, then we need to drop the focused\n        // cell.\n        if (this.focusedCellPosition) {\n            var col = this.focusedCellPosition.column;\n            var colFromColumnController = this.columnController.getGridColumn(col.getId());\n            if (col !== colFromColumnController) {\n                this.clearFocusedCell();\n            }\n        }\n    };\n    FocusController.prototype.isKeyboardFocus = function () {\n        return this.keyboardFocusActive;\n    };\n    FocusController.prototype.activateMouseMode = function () {\n        this.keyboardFocusActive = false;\n        this.eventService.dispatchEvent({ type: Events.EVENT_MOUSE_FOCUS });\n    };\n    FocusController.prototype.activateKeyboardMode = function () {\n        this.keyboardFocusActive = true;\n        this.eventService.dispatchEvent({ type: Events.EVENT_KEYBOARD_FOCUS });\n    };\n    // we check if the browser is focusing something, and if it is, and\n    // it's the cell we think is focused, then return the cell. so this\n    // methods returns the cell if a) we think it has focus and b) the\n    // browser thinks it has focus. this then returns nothing if we\n    // first focus a cell, then second click outside the grid, as then the\n    // grid cell will still be focused as far as the grid is concerned,\n    // however the browser focus will have moved somewhere else.\n    FocusController.prototype.getFocusCellToUseAfterRefresh = function () {\n        if (this.gridOptionsWrapper.isSuppressFocusAfterRefresh() || !this.focusedCellPosition) {\n            return null;\n        }\n        // we check that the browser is actually focusing on the grid, if it is not, then\n        // we have nothing to worry about\n        var browserFocusedCell = this.getGridCellForDomElement(document.activeElement);\n        if (!browserFocusedCell) {\n            return null;\n        }\n        return this.focusedCellPosition;\n    };\n    FocusController.prototype.getGridCellForDomElement = function (eBrowserCell) {\n        var ePointer = eBrowserCell;\n        while (ePointer) {\n            var cellComp = this.gridOptionsWrapper.getDomData(ePointer, CellComp.DOM_DATA_KEY_CELL_COMP);\n            if (cellComp) {\n                return cellComp.getCellPosition();\n            }\n            ePointer = ePointer.parentNode;\n        }\n        return null;\n    };\n    FocusController.prototype.clearFocusedCell = function () {\n        this.focusedCellPosition = null;\n        this.onCellFocused(false);\n    };\n    FocusController.prototype.getFocusedCell = function () {\n        return this.focusedCellPosition;\n    };\n    FocusController.prototype.setFocusedCell = function (rowIndex, colKey, floating, forceBrowserFocus) {\n        if (forceBrowserFocus === void 0) { forceBrowserFocus = false; }\n        var column = _.makeNull(this.columnController.getGridColumn(colKey));\n        this.focusedCellPosition = { rowIndex: rowIndex, rowPinned: _.makeNull(floating), column: column };\n        this.onCellFocused(forceBrowserFocus);\n    };\n    FocusController.prototype.isCellFocused = function (cellPosition) {\n        if (_.missing(this.focusedCellPosition)) {\n            return false;\n        }\n        return this.focusedCellPosition.column === cellPosition.column && this.isRowFocused(cellPosition.rowIndex, cellPosition.rowPinned);\n    };\n    FocusController.prototype.isRowNodeFocused = function (rowNode) {\n        return this.isRowFocused(rowNode.rowIndex, rowNode.rowPinned);\n    };\n    FocusController.prototype.isHeaderWrapperFocused = function (headerWrapper) {\n        if (_.missing(this.focusedHeaderPosition)) {\n            return false;\n        }\n        var column = headerWrapper.getColumn();\n        var headerRowIndex = headerWrapper.getParentComponent().getRowIndex();\n        var pinned = headerWrapper.getPinned();\n        var _a = this.focusedHeaderPosition, focusedColumn = _a.column, focusedHeaderRowIndex = _a.headerRowIndex;\n        return column === focusedColumn &&\n            headerRowIndex === focusedHeaderRowIndex &&\n            pinned == focusedColumn.getPinned();\n    };\n    FocusController.prototype.clearFocusedHeader = function () {\n        this.focusedHeaderPosition = null;\n    };\n    FocusController.prototype.getFocusedHeader = function () {\n        return this.focusedHeaderPosition;\n    };\n    FocusController.prototype.setFocusedHeader = function (headerRowIndex, column) {\n        this.focusedHeaderPosition = { headerRowIndex: headerRowIndex, column: column };\n    };\n    FocusController.prototype.focusHeaderPosition = function (headerPosition, direction) {\n        this.headerNavigationService.scrollToColumn(headerPosition.column, direction);\n        var childContainer = this.headerNavigationService.getHeaderContainer(headerPosition.column.getPinned());\n        var rowComps = childContainer.getRowComps();\n        var nextRowComp = rowComps[headerPosition.headerRowIndex];\n        var headerComps = nextRowComp.getHeaderComps();\n        var nextHeader = headerComps[headerPosition.column.getUniqueId()];\n        if (nextHeader) {\n            // this will automatically call the setFocusedHeader method above\n            nextHeader.getFocusableElement().focus();\n            return true;\n        }\n        return false;\n    };\n    FocusController.prototype.isAnyCellFocused = function () {\n        return !!this.focusedCellPosition;\n    };\n    FocusController.prototype.isRowFocused = function (rowIndex, floating) {\n        if (_.missing(this.focusedCellPosition)) {\n            return false;\n        }\n        var floatingOrNull = _.makeNull(floating);\n        return this.focusedCellPosition.rowIndex === rowIndex && this.focusedCellPosition.rowPinned === floatingOrNull;\n    };\n    FocusController.prototype.findFocusableElements = function (rootNode, exclude, onlyUnmanaged) {\n        var focusableString = FocusController_1.FOCUSABLE_SELECTOR;\n        var excludeString = FocusController_1.FOCUSABLE_EXCLUDE;\n        if (exclude) {\n            excludeString += ', ' + exclude;\n        }\n        if (onlyUnmanaged) {\n            excludeString += ', [tabindex=\"-1\"]';\n        }\n        var nodes = Array.prototype.slice.apply(rootNode.querySelectorAll(focusableString));\n        var excludeNodes = Array.prototype.slice.apply(rootNode.querySelectorAll(excludeString));\n        if (!excludeNodes.length) {\n            return nodes;\n        }\n        var diff = function (a, b) { return a.filter(function (element) { return b.indexOf(element) === -1; }); };\n        return diff(nodes, excludeNodes);\n    };\n    FocusController.prototype.focusFirstFocusableElement = function (rootNode, onlyUnmanaged) {\n        var focusable = this.findFocusableElements(rootNode, null, onlyUnmanaged)[0];\n        if (focusable) {\n            focusable.focus();\n            return true;\n        }\n        return false;\n    };\n    FocusController.prototype.focusLastFocusableElement = function (rootNode, onlyUnmanaged) {\n        var focusable = _.last(this.findFocusableElements(rootNode, null, onlyUnmanaged));\n        if (focusable) {\n            focusable.focus();\n            return true;\n        }\n        return false;\n    };\n    FocusController.prototype.findNextFocusableElement = function (rootNode, onlyManaged, backwards) {\n        var focusable = this.findFocusableElements(rootNode, onlyManaged ? ':not([tabindex=\"-1\"])' : null);\n        var currentIndex;\n        if (onlyManaged) {\n            currentIndex = _.findIndex(focusable, function (el) { return el.contains(document.activeElement); });\n        }\n        else {\n            currentIndex = focusable.indexOf(document.activeElement);\n        }\n        var nextIndex = currentIndex + (backwards ? -1 : 1);\n        if (nextIndex < 0 || nextIndex > focusable.length) {\n            return;\n        }\n        return focusable[nextIndex];\n    };\n    FocusController.prototype.isFocusUnderManagedComponent = function (rootNode) {\n        var managedContainers = rootNode.querySelectorAll(\".\" + ManagedFocusComponent.FOCUS_MANAGED_CLASS);\n        if (!managedContainers.length) {\n            return false;\n        }\n        for (var i = 0; i < managedContainers.length; i++) {\n            if (managedContainers[i].contains(document.activeElement)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    FocusController.prototype.findTabbableParent = function (node, limit) {\n        if (limit === void 0) { limit = 5; }\n        var counter = 0;\n        while (node && _.getTabIndex(node) === null && ++counter <= limit) {\n            node = node.parentElement;\n        }\n        if (_.getTabIndex(node) === null) {\n            return null;\n        }\n        return node;\n    };\n    FocusController.prototype.onCellFocused = function (forceBrowserFocus) {\n        var event = {\n            type: Events.EVENT_CELL_FOCUSED,\n            forceBrowserFocus: forceBrowserFocus,\n            rowIndex: null,\n            column: null,\n            floating: null,\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            rowPinned: null\n        };\n        if (this.focusedCellPosition) {\n            event.rowIndex = this.focusedCellPosition.rowIndex;\n            event.column = this.focusedCellPosition.column;\n            event.rowPinned = this.focusedCellPosition.rowPinned;\n        }\n        this.eventService.dispatchEvent(event);\n    };\n    FocusController.prototype.focusGridView = function (column) {\n        var firstRow = this.rowPositionUtils.getFirstRow();\n        if (!firstRow) {\n            return false;\n        }\n        var rowIndex = firstRow.rowIndex, rowPinned = firstRow.rowPinned;\n        var focusedHeader = this.getFocusedHeader();\n        if (!column) {\n            column = focusedHeader.column;\n        }\n        if (!_.exists(rowIndex)) {\n            return false;\n        }\n        this.rowRenderer.ensureCellVisible({ rowIndex: rowIndex, column: column, rowPinned: rowPinned });\n        this.setFocusedCell(rowIndex, column, _.makeNull(rowPinned), true);\n        if (this.rangeController) {\n            var cellPosition = { rowIndex: rowIndex, rowPinned: rowPinned, column: column };\n            this.rangeController.setRangeToCell(cellPosition);\n        }\n        return true;\n    };\n    FocusController.prototype.focusNextGridCoreContainer = function (backwards) {\n        if (this.gridCore.focusNextInnerContainer(backwards)) {\n            return true;\n        }\n        if (!backwards) {\n            this.gridCore.forceFocusOutOfContainer();\n        }\n    };\n    var FocusController_1;\n    FocusController.FOCUSABLE_SELECTOR = '[tabindex], input, select, button, textarea';\n    FocusController.FOCUSABLE_EXCLUDE = '.ag-hidden, .ag-hidden *, .ag-disabled, .ag-disabled *';\n    __decorate([\n        Autowired('gridOptionsWrapper')\n    ], FocusController.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        Autowired('columnController')\n    ], FocusController.prototype, \"columnController\", void 0);\n    __decorate([\n        Autowired('headerNavigationService')\n    ], FocusController.prototype, \"headerNavigationService\", void 0);\n    __decorate([\n        Autowired('columnApi')\n    ], FocusController.prototype, \"columnApi\", void 0);\n    __decorate([\n        Autowired('gridApi')\n    ], FocusController.prototype, \"gridApi\", void 0);\n    __decorate([\n        Autowired('rowRenderer')\n    ], FocusController.prototype, \"rowRenderer\", void 0);\n    __decorate([\n        Autowired('rowPositionUtils')\n    ], FocusController.prototype, \"rowPositionUtils\", void 0);\n    __decorate([\n        Optional('rangeController')\n    ], FocusController.prototype, \"rangeController\", void 0);\n    __decorate([\n        PostConstruct\n    ], FocusController.prototype, \"init\", null);\n    FocusController = FocusController_1 = __decorate([\n        Bean('focusController')\n    ], FocusController);\n    return FocusController;\n}(BeanStub));\nexport { FocusController };\n"]},"metadata":{},"sourceType":"module"}