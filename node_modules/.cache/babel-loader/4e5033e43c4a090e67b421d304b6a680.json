{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { BeanStub } from \"../context/beanStub\";\nimport { Events } from \"../events\";\nimport { Autowired, Bean, PostConstruct } from \"../context/context\";\nimport { _ } from \"../utils\";\n\nvar PaginationProxy =\n/** @class */\nfunction (_super) {\n  __extends(PaginationProxy, _super);\n\n  function PaginationProxy() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.currentPage = 0;\n    _this.topDisplayedRowIndex = 0;\n    _this.bottomDisplayedRowIndex = 0;\n    _this.pixelOffset = 0;\n    _this.masterRowCount = 0;\n    return _this;\n  }\n\n  PaginationProxy.prototype.postConstruct = function () {\n    this.active = this.gridOptionsWrapper.isPagination();\n    this.paginateChildRows = this.gridOptionsWrapper.isPaginateChildRows();\n    this.addManagedListener(this.eventService, Events.EVENT_MODEL_UPDATED, this.onModelUpdated.bind(this));\n    this.addManagedListener(this.gridOptionsWrapper, 'paginationPageSize', this.onModelUpdated.bind(this));\n    this.onModelUpdated();\n  };\n\n  PaginationProxy.prototype.ensureRowHeightsValid = function (startPixel, endPixel, startLimitIndex, endLimitIndex) {\n    var res = this.rowModel.ensureRowHeightsValid(startPixel, endPixel, this.getPageFirstRow(), this.getPageLastRow());\n\n    if (res) {\n      this.calculatePages();\n    }\n\n    return res;\n  };\n\n  PaginationProxy.prototype.onModelUpdated = function (modelUpdatedEvent) {\n    this.calculatePages();\n    var paginationChangedEvent = {\n      type: Events.EVENT_PAGINATION_CHANGED,\n      animate: modelUpdatedEvent ? modelUpdatedEvent.animate : false,\n      newData: modelUpdatedEvent ? modelUpdatedEvent.newData : false,\n      newPage: modelUpdatedEvent ? modelUpdatedEvent.newPage : false,\n      keepRenderedRows: modelUpdatedEvent ? modelUpdatedEvent.keepRenderedRows : false,\n      api: this.gridApi,\n      columnApi: this.columnApi\n    };\n    this.eventService.dispatchEvent(paginationChangedEvent);\n  };\n\n  PaginationProxy.prototype.goToPage = function (page) {\n    if (!this.active) {\n      return;\n    }\n\n    if (this.currentPage === page) {\n      return;\n    }\n\n    this.currentPage = page;\n    var event = {\n      type: Events.EVENT_MODEL_UPDATED,\n      animate: false,\n      keepRenderedRows: false,\n      newData: false,\n      newPage: true,\n      api: this.gridApi,\n      columnApi: this.columnApi\n    };\n    this.onModelUpdated(event);\n  };\n\n  PaginationProxy.prototype.getPixelOffset = function () {\n    return this.pixelOffset;\n  };\n\n  PaginationProxy.prototype.getRow = function (index) {\n    return this.rowModel.getRow(index);\n  };\n\n  PaginationProxy.prototype.getRowNode = function (id) {\n    return this.rowModel.getRowNode(id);\n  };\n\n  PaginationProxy.prototype.getRowIndexAtPixel = function (pixel) {\n    return this.rowModel.getRowIndexAtPixel(pixel);\n  };\n\n  PaginationProxy.prototype.getCurrentPageHeight = function () {\n    if (_.missing(this.topRowBounds) || _.missing(this.bottomRowBounds)) {\n      return 0;\n    }\n\n    return Math.max(this.bottomRowBounds.rowTop + this.bottomRowBounds.rowHeight - this.topRowBounds.rowTop, 0);\n  };\n\n  PaginationProxy.prototype.isRowPresent = function (rowNode) {\n    if (!this.rowModel.isRowPresent(rowNode)) {\n      return false;\n    }\n\n    var nodeIsInPage = rowNode.rowIndex >= this.topDisplayedRowIndex && rowNode.rowIndex <= this.bottomDisplayedRowIndex;\n    return nodeIsInPage;\n  };\n\n  PaginationProxy.prototype.isEmpty = function () {\n    return this.rowModel.isEmpty();\n  };\n\n  PaginationProxy.prototype.isRowsToRender = function () {\n    return this.rowModel.isRowsToRender();\n  };\n\n  PaginationProxy.prototype.getNodesInRangeForSelection = function (firstInRange, lastInRange) {\n    return this.rowModel.getNodesInRangeForSelection(firstInRange, lastInRange);\n  };\n\n  PaginationProxy.prototype.forEachNode = function (callback) {\n    return this.rowModel.forEachNode(callback);\n  };\n\n  PaginationProxy.prototype.getType = function () {\n    return this.rowModel.getType();\n  };\n\n  PaginationProxy.prototype.getRowBounds = function (index) {\n    var res = this.rowModel.getRowBounds(index);\n    res.rowIndex = index;\n    return res;\n  };\n\n  PaginationProxy.prototype.getPageFirstRow = function () {\n    return this.topRowBounds ? this.topRowBounds.rowIndex : -1;\n  };\n\n  PaginationProxy.prototype.getPageLastRow = function () {\n    return this.bottomRowBounds ? this.bottomRowBounds.rowIndex : -1;\n  };\n\n  PaginationProxy.prototype.getRowCount = function () {\n    return this.rowModel.getRowCount();\n  };\n\n  PaginationProxy.prototype.goToPageWithIndex = function (index) {\n    if (!this.active) {\n      return;\n    }\n\n    var pageNumber = Math.floor(index / this.pageSize);\n    this.goToPage(pageNumber);\n  };\n\n  PaginationProxy.prototype.isLastPageFound = function () {\n    return this.rowModel.isLastRowFound();\n  };\n\n  PaginationProxy.prototype.getCurrentPage = function () {\n    return this.currentPage;\n  };\n\n  PaginationProxy.prototype.goToNextPage = function () {\n    this.goToPage(this.currentPage + 1);\n  };\n\n  PaginationProxy.prototype.goToPreviousPage = function () {\n    this.goToPage(this.currentPage - 1);\n  };\n\n  PaginationProxy.prototype.goToFirstPage = function () {\n    this.goToPage(0);\n  };\n\n  PaginationProxy.prototype.goToLastPage = function () {\n    var rowCount = this.rowModel.getRowCount();\n    var lastPage = Math.floor(rowCount / this.pageSize);\n    this.goToPage(lastPage);\n  };\n\n  PaginationProxy.prototype.getPageSize = function () {\n    return this.pageSize;\n  };\n\n  PaginationProxy.prototype.getTotalPages = function () {\n    return this.totalPages;\n  };\n\n  PaginationProxy.prototype.setPageSize = function () {\n    // show put this into super class\n    this.pageSize = this.gridOptionsWrapper.getPaginationPageSize();\n\n    if (!(this.pageSize >= 1)) {\n      this.pageSize = 100;\n    }\n  };\n\n  PaginationProxy.prototype.calculatePages = function () {\n    if (this.active) {\n      this.setPageSize();\n\n      if (this.paginateChildRows) {\n        this.calculatePagesAllRows();\n      } else {\n        this.calculatePagesMasterRowsOnly();\n      }\n    } else {\n      this.calculatedPagesNotActive();\n    }\n\n    this.topRowBounds = this.rowModel.getRowBounds(this.topDisplayedRowIndex);\n\n    if (this.topRowBounds) {\n      this.topRowBounds.rowIndex = this.topDisplayedRowIndex;\n    }\n\n    this.bottomRowBounds = this.rowModel.getRowBounds(this.bottomDisplayedRowIndex);\n\n    if (this.bottomRowBounds) {\n      this.bottomRowBounds.rowIndex = this.bottomDisplayedRowIndex;\n    }\n\n    this.pixelOffset = _.exists(this.topRowBounds) ? this.topRowBounds.rowTop : 0;\n  };\n\n  PaginationProxy.prototype.setZeroRows = function () {\n    this.topDisplayedRowIndex = 0;\n    this.bottomDisplayedRowIndex = -1;\n    this.currentPage = 0;\n    this.totalPages = 0;\n  };\n\n  PaginationProxy.prototype.calculatePagesMasterRowsOnly = function () {\n    // const csrm = <ClientSideRowModel> this.rowModel;\n    // const rootNode = csrm.getRootNode();\n    // const masterRows = rootNode.childrenAfterSort;\n    this.masterRowCount = this.rowModel.getTopLevelRowCount();\n\n    if (this.masterRowCount === 0) {\n      this.setZeroRows();\n      return;\n    }\n\n    var masterLastRowIndex = this.masterRowCount - 1;\n    this.totalPages = Math.floor(masterLastRowIndex / this.pageSize) + 1;\n\n    if (this.currentPage >= this.totalPages) {\n      this.currentPage = this.totalPages - 1;\n    }\n\n    if (!_.isNumeric(this.currentPage) || this.currentPage < 0) {\n      this.currentPage = 0;\n    }\n\n    var masterPageStartIndex = this.pageSize * this.currentPage;\n    var masterPageEndIndex = this.pageSize * (this.currentPage + 1) - 1;\n\n    if (masterPageEndIndex > masterLastRowIndex) {\n      masterPageEndIndex = masterLastRowIndex;\n    }\n\n    this.topDisplayedRowIndex = this.rowModel.getTopLevelRowDisplayedIndex(masterPageStartIndex); // masterRows[masterPageStartIndex].rowIndex;\n\n    if (masterPageEndIndex === masterLastRowIndex) {\n      // if showing the last master row, then we want to show the very last row of the model\n      this.bottomDisplayedRowIndex = this.rowModel.getRowCount() - 1;\n    } else {\n      var firstIndexNotToShow = this.rowModel.getTopLevelRowDisplayedIndex(masterPageEndIndex + 1); //masterRows[masterPageEndIndex + 1].rowIndex;\n      // this gets the index of the last child - eg current row is open, we want to display all children,\n      // the index of the last child is one less than the index of the next parent row.\n\n      this.bottomDisplayedRowIndex = firstIndexNotToShow - 1;\n    }\n  };\n\n  PaginationProxy.prototype.getMasterRowCount = function () {\n    return this.masterRowCount;\n  };\n\n  PaginationProxy.prototype.calculatePagesAllRows = function () {\n    this.masterRowCount = this.rowModel.getRowCount();\n\n    if (this.masterRowCount === 0) {\n      this.setZeroRows();\n      return;\n    }\n\n    var maxRowIndex = this.masterRowCount - 1;\n    this.totalPages = Math.floor(maxRowIndex / this.pageSize) + 1;\n\n    if (this.currentPage >= this.totalPages) {\n      this.currentPage = this.totalPages - 1;\n    }\n\n    if (!_.isNumeric(this.currentPage) || this.currentPage < 0) {\n      this.currentPage = 0;\n    }\n\n    this.topDisplayedRowIndex = this.pageSize * this.currentPage;\n    this.bottomDisplayedRowIndex = this.pageSize * (this.currentPage + 1) - 1;\n\n    if (this.bottomDisplayedRowIndex > maxRowIndex) {\n      this.bottomDisplayedRowIndex = maxRowIndex;\n    }\n  };\n\n  PaginationProxy.prototype.calculatedPagesNotActive = function () {\n    this.pageSize = this.rowModel.getRowCount();\n    this.totalPages = 1;\n    this.currentPage = 0;\n    this.topDisplayedRowIndex = 0;\n    this.bottomDisplayedRowIndex = this.rowModel.getRowCount() - 1;\n  };\n\n  __decorate([Autowired('rowModel')], PaginationProxy.prototype, \"rowModel\", void 0);\n\n  __decorate([Autowired('gridOptionsWrapper')], PaginationProxy.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([Autowired('selectionController')], PaginationProxy.prototype, \"selectionController\", void 0);\n\n  __decorate([Autowired('columnApi')], PaginationProxy.prototype, \"columnApi\", void 0);\n\n  __decorate([Autowired('gridApi')], PaginationProxy.prototype, \"gridApi\", void 0);\n\n  __decorate([PostConstruct], PaginationProxy.prototype, \"postConstruct\", null);\n\n  PaginationProxy = __decorate([Bean('paginationProxy')], PaginationProxy);\n  return PaginationProxy;\n}(BeanStub);\n\nexport { PaginationProxy };","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/@ag-grid-community/core/dist/es6/pagination/paginationProxy.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","BeanStub","Events","Autowired","Bean","PostConstruct","_","PaginationProxy","_super","_this","apply","currentPage","topDisplayedRowIndex","bottomDisplayedRowIndex","pixelOffset","masterRowCount","postConstruct","active","gridOptionsWrapper","isPagination","paginateChildRows","isPaginateChildRows","addManagedListener","eventService","EVENT_MODEL_UPDATED","onModelUpdated","bind","ensureRowHeightsValid","startPixel","endPixel","startLimitIndex","endLimitIndex","res","rowModel","getPageFirstRow","getPageLastRow","calculatePages","modelUpdatedEvent","paginationChangedEvent","type","EVENT_PAGINATION_CHANGED","animate","newData","newPage","keepRenderedRows","api","gridApi","columnApi","dispatchEvent","goToPage","page","event","getPixelOffset","getRow","index","getRowNode","id","getRowIndexAtPixel","pixel","getCurrentPageHeight","missing","topRowBounds","bottomRowBounds","Math","max","rowTop","rowHeight","isRowPresent","rowNode","nodeIsInPage","rowIndex","isEmpty","isRowsToRender","getNodesInRangeForSelection","firstInRange","lastInRange","forEachNode","callback","getType","getRowBounds","getRowCount","goToPageWithIndex","pageNumber","floor","pageSize","isLastPageFound","isLastRowFound","getCurrentPage","goToNextPage","goToPreviousPage","goToFirstPage","goToLastPage","rowCount","lastPage","getPageSize","getTotalPages","totalPages","setPageSize","getPaginationPageSize","calculatePagesAllRows","calculatePagesMasterRowsOnly","calculatedPagesNotActive","exists","setZeroRows","getTopLevelRowCount","masterLastRowIndex","isNumeric","masterPageStartIndex","masterPageEndIndex","getTopLevelRowDisplayedIndex","firstIndexNotToShow","getMasterRowCount","maxRowIndex"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { BeanStub } from \"../context/beanStub\";\nimport { Events } from \"../events\";\nimport { Autowired, Bean, PostConstruct } from \"../context/context\";\nimport { _ } from \"../utils\";\nvar PaginationProxy = /** @class */ (function (_super) {\n    __extends(PaginationProxy, _super);\n    function PaginationProxy() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.currentPage = 0;\n        _this.topDisplayedRowIndex = 0;\n        _this.bottomDisplayedRowIndex = 0;\n        _this.pixelOffset = 0;\n        _this.masterRowCount = 0;\n        return _this;\n    }\n    PaginationProxy.prototype.postConstruct = function () {\n        this.active = this.gridOptionsWrapper.isPagination();\n        this.paginateChildRows = this.gridOptionsWrapper.isPaginateChildRows();\n        this.addManagedListener(this.eventService, Events.EVENT_MODEL_UPDATED, this.onModelUpdated.bind(this));\n        this.addManagedListener(this.gridOptionsWrapper, 'paginationPageSize', this.onModelUpdated.bind(this));\n        this.onModelUpdated();\n    };\n    PaginationProxy.prototype.ensureRowHeightsValid = function (startPixel, endPixel, startLimitIndex, endLimitIndex) {\n        var res = this.rowModel.ensureRowHeightsValid(startPixel, endPixel, this.getPageFirstRow(), this.getPageLastRow());\n        if (res) {\n            this.calculatePages();\n        }\n        return res;\n    };\n    PaginationProxy.prototype.onModelUpdated = function (modelUpdatedEvent) {\n        this.calculatePages();\n        var paginationChangedEvent = {\n            type: Events.EVENT_PAGINATION_CHANGED,\n            animate: modelUpdatedEvent ? modelUpdatedEvent.animate : false,\n            newData: modelUpdatedEvent ? modelUpdatedEvent.newData : false,\n            newPage: modelUpdatedEvent ? modelUpdatedEvent.newPage : false,\n            keepRenderedRows: modelUpdatedEvent ? modelUpdatedEvent.keepRenderedRows : false,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.eventService.dispatchEvent(paginationChangedEvent);\n    };\n    PaginationProxy.prototype.goToPage = function (page) {\n        if (!this.active) {\n            return;\n        }\n        if (this.currentPage === page) {\n            return;\n        }\n        this.currentPage = page;\n        var event = {\n            type: Events.EVENT_MODEL_UPDATED,\n            animate: false,\n            keepRenderedRows: false,\n            newData: false,\n            newPage: true,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.onModelUpdated(event);\n    };\n    PaginationProxy.prototype.getPixelOffset = function () {\n        return this.pixelOffset;\n    };\n    PaginationProxy.prototype.getRow = function (index) {\n        return this.rowModel.getRow(index);\n    };\n    PaginationProxy.prototype.getRowNode = function (id) {\n        return this.rowModel.getRowNode(id);\n    };\n    PaginationProxy.prototype.getRowIndexAtPixel = function (pixel) {\n        return this.rowModel.getRowIndexAtPixel(pixel);\n    };\n    PaginationProxy.prototype.getCurrentPageHeight = function () {\n        if (_.missing(this.topRowBounds) || _.missing(this.bottomRowBounds)) {\n            return 0;\n        }\n        return Math.max(this.bottomRowBounds.rowTop + this.bottomRowBounds.rowHeight - this.topRowBounds.rowTop, 0);\n    };\n    PaginationProxy.prototype.isRowPresent = function (rowNode) {\n        if (!this.rowModel.isRowPresent(rowNode)) {\n            return false;\n        }\n        var nodeIsInPage = rowNode.rowIndex >= this.topDisplayedRowIndex && rowNode.rowIndex <= this.bottomDisplayedRowIndex;\n        return nodeIsInPage;\n    };\n    PaginationProxy.prototype.isEmpty = function () {\n        return this.rowModel.isEmpty();\n    };\n    PaginationProxy.prototype.isRowsToRender = function () {\n        return this.rowModel.isRowsToRender();\n    };\n    PaginationProxy.prototype.getNodesInRangeForSelection = function (firstInRange, lastInRange) {\n        return this.rowModel.getNodesInRangeForSelection(firstInRange, lastInRange);\n    };\n    PaginationProxy.prototype.forEachNode = function (callback) {\n        return this.rowModel.forEachNode(callback);\n    };\n    PaginationProxy.prototype.getType = function () {\n        return this.rowModel.getType();\n    };\n    PaginationProxy.prototype.getRowBounds = function (index) {\n        var res = this.rowModel.getRowBounds(index);\n        res.rowIndex = index;\n        return res;\n    };\n    PaginationProxy.prototype.getPageFirstRow = function () {\n        return this.topRowBounds ? this.topRowBounds.rowIndex : -1;\n    };\n    PaginationProxy.prototype.getPageLastRow = function () {\n        return this.bottomRowBounds ? this.bottomRowBounds.rowIndex : -1;\n    };\n    PaginationProxy.prototype.getRowCount = function () {\n        return this.rowModel.getRowCount();\n    };\n    PaginationProxy.prototype.goToPageWithIndex = function (index) {\n        if (!this.active) {\n            return;\n        }\n        var pageNumber = Math.floor(index / this.pageSize);\n        this.goToPage(pageNumber);\n    };\n    PaginationProxy.prototype.isLastPageFound = function () {\n        return this.rowModel.isLastRowFound();\n    };\n    PaginationProxy.prototype.getCurrentPage = function () {\n        return this.currentPage;\n    };\n    PaginationProxy.prototype.goToNextPage = function () {\n        this.goToPage(this.currentPage + 1);\n    };\n    PaginationProxy.prototype.goToPreviousPage = function () {\n        this.goToPage(this.currentPage - 1);\n    };\n    PaginationProxy.prototype.goToFirstPage = function () {\n        this.goToPage(0);\n    };\n    PaginationProxy.prototype.goToLastPage = function () {\n        var rowCount = this.rowModel.getRowCount();\n        var lastPage = Math.floor(rowCount / this.pageSize);\n        this.goToPage(lastPage);\n    };\n    PaginationProxy.prototype.getPageSize = function () {\n        return this.pageSize;\n    };\n    PaginationProxy.prototype.getTotalPages = function () {\n        return this.totalPages;\n    };\n    PaginationProxy.prototype.setPageSize = function () {\n        // show put this into super class\n        this.pageSize = this.gridOptionsWrapper.getPaginationPageSize();\n        if (!(this.pageSize >= 1)) {\n            this.pageSize = 100;\n        }\n    };\n    PaginationProxy.prototype.calculatePages = function () {\n        if (this.active) {\n            this.setPageSize();\n            if (this.paginateChildRows) {\n                this.calculatePagesAllRows();\n            }\n            else {\n                this.calculatePagesMasterRowsOnly();\n            }\n        }\n        else {\n            this.calculatedPagesNotActive();\n        }\n        this.topRowBounds = this.rowModel.getRowBounds(this.topDisplayedRowIndex);\n        if (this.topRowBounds) {\n            this.topRowBounds.rowIndex = this.topDisplayedRowIndex;\n        }\n        this.bottomRowBounds = this.rowModel.getRowBounds(this.bottomDisplayedRowIndex);\n        if (this.bottomRowBounds) {\n            this.bottomRowBounds.rowIndex = this.bottomDisplayedRowIndex;\n        }\n        this.pixelOffset = _.exists(this.topRowBounds) ? this.topRowBounds.rowTop : 0;\n    };\n    PaginationProxy.prototype.setZeroRows = function () {\n        this.topDisplayedRowIndex = 0;\n        this.bottomDisplayedRowIndex = -1;\n        this.currentPage = 0;\n        this.totalPages = 0;\n    };\n    PaginationProxy.prototype.calculatePagesMasterRowsOnly = function () {\n        // const csrm = <ClientSideRowModel> this.rowModel;\n        // const rootNode = csrm.getRootNode();\n        // const masterRows = rootNode.childrenAfterSort;\n        this.masterRowCount = this.rowModel.getTopLevelRowCount();\n        if (this.masterRowCount === 0) {\n            this.setZeroRows();\n            return;\n        }\n        var masterLastRowIndex = this.masterRowCount - 1;\n        this.totalPages = Math.floor((masterLastRowIndex) / this.pageSize) + 1;\n        if (this.currentPage >= this.totalPages) {\n            this.currentPage = this.totalPages - 1;\n        }\n        if (!_.isNumeric(this.currentPage) || this.currentPage < 0) {\n            this.currentPage = 0;\n        }\n        var masterPageStartIndex = this.pageSize * this.currentPage;\n        var masterPageEndIndex = (this.pageSize * (this.currentPage + 1)) - 1;\n        if (masterPageEndIndex > masterLastRowIndex) {\n            masterPageEndIndex = masterLastRowIndex;\n        }\n        this.topDisplayedRowIndex = this.rowModel.getTopLevelRowDisplayedIndex(masterPageStartIndex);\n        // masterRows[masterPageStartIndex].rowIndex;\n        if (masterPageEndIndex === masterLastRowIndex) {\n            // if showing the last master row, then we want to show the very last row of the model\n            this.bottomDisplayedRowIndex = this.rowModel.getRowCount() - 1;\n        }\n        else {\n            var firstIndexNotToShow = this.rowModel.getTopLevelRowDisplayedIndex(masterPageEndIndex + 1);\n            //masterRows[masterPageEndIndex + 1].rowIndex;\n            // this gets the index of the last child - eg current row is open, we want to display all children,\n            // the index of the last child is one less than the index of the next parent row.\n            this.bottomDisplayedRowIndex = firstIndexNotToShow - 1;\n        }\n    };\n    PaginationProxy.prototype.getMasterRowCount = function () {\n        return this.masterRowCount;\n    };\n    PaginationProxy.prototype.calculatePagesAllRows = function () {\n        this.masterRowCount = this.rowModel.getRowCount();\n        if (this.masterRowCount === 0) {\n            this.setZeroRows();\n            return;\n        }\n        var maxRowIndex = this.masterRowCount - 1;\n        this.totalPages = Math.floor((maxRowIndex) / this.pageSize) + 1;\n        if (this.currentPage >= this.totalPages) {\n            this.currentPage = this.totalPages - 1;\n        }\n        if (!_.isNumeric(this.currentPage) || this.currentPage < 0) {\n            this.currentPage = 0;\n        }\n        this.topDisplayedRowIndex = this.pageSize * this.currentPage;\n        this.bottomDisplayedRowIndex = (this.pageSize * (this.currentPage + 1)) - 1;\n        if (this.bottomDisplayedRowIndex > maxRowIndex) {\n            this.bottomDisplayedRowIndex = maxRowIndex;\n        }\n    };\n    PaginationProxy.prototype.calculatedPagesNotActive = function () {\n        this.pageSize = this.rowModel.getRowCount();\n        this.totalPages = 1;\n        this.currentPage = 0;\n        this.topDisplayedRowIndex = 0;\n        this.bottomDisplayedRowIndex = this.rowModel.getRowCount() - 1;\n    };\n    __decorate([\n        Autowired('rowModel')\n    ], PaginationProxy.prototype, \"rowModel\", void 0);\n    __decorate([\n        Autowired('gridOptionsWrapper')\n    ], PaginationProxy.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        Autowired('selectionController')\n    ], PaginationProxy.prototype, \"selectionController\", void 0);\n    __decorate([\n        Autowired('columnApi')\n    ], PaginationProxy.prototype, \"columnApi\", void 0);\n    __decorate([\n        Autowired('gridApi')\n    ], PaginationProxy.prototype, \"gridApi\", void 0);\n    __decorate([\n        PostConstruct\n    ], PaginationProxy.prototype, \"postConstruct\", null);\n    PaginationProxy = __decorate([\n        Bean('paginationProxy')\n    ], PaginationProxy);\n    return PaginationProxy;\n}(BeanStub));\nexport { PaginationProxy };\n"]},"metadata":{},"sourceType":"module"}