{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nimport { Autowired, Events, SelectionHandleType, _ } from '@ag-grid-community/core';\nimport { AbstractSelectionHandle } from \"./abstractSelectionHandle\";\n\nvar FillHandle =\n/** @class */\nfunction (_super) {\n  __extends(FillHandle, _super);\n\n  function FillHandle() {\n    var _this = _super.call(this, FillHandle.TEMPLATE) || this;\n\n    _this.markedCellComps = [];\n    _this.cellValues = [];\n    _this.isUp = false;\n    _this.isLeft = false;\n    _this.isReduce = false;\n    _this.type = SelectionHandleType.FILL;\n    return _this;\n  }\n\n  FillHandle.prototype.onDrag = function (e) {\n    if (!this.initialXY) {\n      this.initialXY = this.mouseEventService.getNormalisedPosition(e);\n    }\n\n    var _a = this.initialXY,\n        x = _a.x,\n        y = _a.y;\n\n    var _b = this.mouseEventService.getNormalisedPosition(e),\n        newX = _b.x,\n        newY = _b.y;\n\n    var diffX = Math.abs(x - newX);\n    var diffY = Math.abs(y - newY);\n    var direction = diffX > diffY ? 'x' : 'y';\n\n    if (direction !== this.dragAxis) {\n      this.dragAxis = direction;\n    }\n\n    if (!this.initialPosition) {\n      var cellComp = this.getCellComp();\n\n      if (!cellComp) {\n        return;\n      }\n\n      this.initialPosition = cellComp.getCellPosition();\n    }\n\n    var lastCellHovered = this.getLastCellHovered();\n\n    if (lastCellHovered && lastCellHovered !== this.lastCellMarked) {\n      this.lastCellMarked = lastCellHovered;\n      this.markPathFrom(this.initialPosition, lastCellHovered);\n    }\n  };\n\n  FillHandle.prototype.onDragEnd = function (e) {\n    if (!this.markedCellComps.length) {\n      return;\n    }\n\n    var isX = this.dragAxis === 'x';\n    var initialRange = this.getCellRange();\n    var colLen = initialRange.columns.length;\n    var rangeStartRow = this.getRangeStartRow();\n    var rangeEndRow = this.getRangeEndRow();\n    var finalRange;\n\n    if (!this.isUp && !this.isLeft) {\n      finalRange = this.rangeController.createCellRangeFromCellRangeParams({\n        rowStartIndex: rangeStartRow.rowIndex,\n        rowStartPinned: rangeStartRow.rowPinned,\n        columnStart: initialRange.columns[0],\n        rowEndIndex: isX ? rangeEndRow.rowIndex : this.lastCellMarked.rowIndex,\n        rowEndPinned: isX ? rangeEndRow.rowPinned : this.lastCellMarked.rowPinned,\n        columnEnd: isX ? this.lastCellMarked.column : initialRange.columns[colLen - 1]\n      });\n    } else {\n      var startRow = isX ? rangeStartRow : this.lastCellMarked;\n      finalRange = this.rangeController.createCellRangeFromCellRangeParams({\n        rowStartIndex: startRow.rowIndex,\n        rowStartPinned: startRow.rowPinned,\n        columnStart: isX ? this.lastCellMarked.column : initialRange.columns[0],\n        rowEndIndex: rangeEndRow.rowIndex,\n        rowEndPinned: rangeEndRow.rowPinned,\n        columnEnd: initialRange.columns[colLen - 1]\n      });\n    }\n\n    if (finalRange) {\n      // raising fill events for undo / redo\n      this.raiseFillStartEvent();\n      this.handleValueChanged(initialRange, finalRange, e);\n      this.rangeController.setCellRanges([finalRange]);\n      this.raiseFillEndEvent(initialRange, finalRange);\n    }\n  };\n\n  FillHandle.prototype.raiseFillStartEvent = function () {\n    var fillStartEvent = {\n      type: Events.EVENT_FILL_START,\n      columnApi: this.gridOptionsWrapper.getColumnApi(),\n      api: this.gridOptionsWrapper.getApi()\n    };\n    this.eventService.dispatchEvent(fillStartEvent);\n  };\n\n  FillHandle.prototype.raiseFillEndEvent = function (initialRange, finalRange) {\n    var fillEndEvent = {\n      type: Events.EVENT_FILL_END,\n      columnApi: this.gridOptionsWrapper.getColumnApi(),\n      api: this.gridOptionsWrapper.getApi(),\n      initialRange: initialRange,\n      finalRange: finalRange\n    };\n    this.eventService.dispatchEvent(fillEndEvent);\n  };\n\n  FillHandle.prototype.handleValueChanged = function (initialRange, finalRange, e) {\n    var _this = this;\n\n    var initialRangeEndRow = this.rangeController.getRangeEndRow(initialRange);\n    var initialRangeStartRow = this.rangeController.getRangeStartRow(initialRange);\n    var finalRangeEndRow = this.rangeController.getRangeEndRow(finalRange);\n    var finalRangeStartRow = this.rangeController.getRangeStartRow(finalRange);\n    var isVertical = this.dragAxis === 'y'; // if the range is being reduced in size, all we need to do is\n    // clear the cells that are no longer part of the range\n\n    if (this.isReduce && !this.gridOptionsWrapper.isSuppressClearOnFillReduction()) {\n      var columns = isVertical ? initialRange.columns : initialRange.columns.filter(function (col) {\n        return finalRange.columns.indexOf(col) < 0;\n      });\n      var startRow = isVertical ? this.cellNavigationService.getRowBelow(finalRangeEndRow) : finalRangeStartRow;\n\n      if (startRow) {\n        this.clearCellsInRange(startRow, initialRangeEndRow, columns);\n      }\n\n      return;\n    }\n\n    var withinInitialRange = true;\n    var values = [];\n    var initialValues = [];\n    var idx = 0;\n\n    var resetValues = function () {\n      values.length = 0;\n      initialValues.length = 0;\n      idx = 0;\n    };\n\n    var iterateAcrossCells = function (column, columns) {\n      var currentRow = _this.isUp ? initialRangeEndRow : initialRangeStartRow;\n      var finished = false;\n\n      if (isVertical) {\n        withinInitialRange = true;\n        resetValues();\n      }\n\n      var _loop_1 = function () {\n        var rowNode = _this.rowPositionUtils.getRowNode(currentRow);\n\n        if (!rowNode) {\n          return \"break\";\n        }\n\n        if (isVertical && column) {\n          fillValues(values, column, rowNode, function () {\n            return !_this.rowPositionUtils.sameRow(currentRow, _this.isUp ? initialRangeStartRow : initialRangeEndRow);\n          });\n        } else if (columns) {\n          withinInitialRange = true;\n          resetValues();\n          columns.forEach(function (col) {\n            return fillValues(values, col, rowNode, function () {\n              return col !== (_this.isLeft ? initialRange.columns[0] : _.last(initialRange.columns));\n            });\n          });\n        }\n\n        finished = _this.rowPositionUtils.sameRow(currentRow, _this.isUp ? finalRangeStartRow : finalRangeEndRow);\n        currentRow = _this.isUp ? _this.cellNavigationService.getRowAbove(currentRow) : _this.cellNavigationService.getRowBelow(currentRow);\n      };\n\n      while (!finished && currentRow) {\n        var state_1 = _loop_1();\n\n        if (state_1 === \"break\") break;\n      }\n    };\n\n    var fillValues = function (values, col, rowNode, updateInitialSet) {\n      var currentValue;\n\n      if (withinInitialRange) {\n        currentValue = _this.valueService.getValue(col, rowNode);\n        initialValues.push(currentValue);\n        withinInitialRange = updateInitialSet();\n      } else {\n        currentValue = _this.processValues(e, values, initialValues, col, rowNode, idx++);\n\n        if (col.isCellEditable(rowNode)) {\n          _this.valueService.setValue(rowNode, col, currentValue);\n        }\n      }\n\n      values.push(currentValue);\n    };\n\n    if (isVertical) {\n      initialRange.columns.forEach(function (col) {\n        iterateAcrossCells(col);\n      });\n    } else {\n      var columns = this.isLeft ? __spreadArrays(finalRange.columns).reverse() : finalRange.columns;\n      iterateAcrossCells(undefined, columns);\n    }\n  };\n\n  FillHandle.prototype.clearCellsInRange = function (startRow, endRow, columns) {\n    var _this = this;\n\n    var currentRow = startRow;\n    var finished = false;\n\n    var _loop_2 = function () {\n      var rowNode = this_1.rowPositionUtils.getRowNode(currentRow); // should never happen, defensive programming\n\n      if (!rowNode) {\n        return \"break\";\n      }\n\n      columns.forEach(function (col) {\n        if (col.isCellEditable(rowNode)) {\n          _this.valueService.setValue(rowNode, col, null);\n        }\n      });\n      finished = this_1.rowPositionUtils.sameRow(currentRow, endRow);\n      currentRow = this_1.cellNavigationService.getRowBelow(currentRow);\n    };\n\n    var this_1 = this;\n\n    while (!finished && currentRow) {\n      var state_2 = _loop_2();\n\n      if (state_2 === \"break\") break;\n    }\n  };\n\n  FillHandle.prototype.processValues = function (event, values, initialValues, col, rowNode, idx) {\n    var userFillOperation = this.gridOptionsWrapper.getFillOperation();\n    var isVertical = this.dragAxis === 'y';\n    var direction;\n\n    if (isVertical) {\n      direction = this.isUp ? 'up' : 'down';\n    } else {\n      direction = this.isLeft ? 'left' : 'right';\n    }\n\n    if (userFillOperation) {\n      var userResult = userFillOperation({\n        event: event,\n        values: values,\n        initialValues: initialValues,\n        currentIndex: idx,\n        api: this.gridOptionsWrapper.getApi(),\n        columnApi: this.gridOptionsWrapper.getColumnApi(),\n        context: this.gridOptionsWrapper.getContext(),\n        direction: direction,\n        column: isVertical ? col : undefined,\n        rowNode: !isVertical ? rowNode : undefined // only present if left / right\n\n      });\n\n      if (userResult !== false) {\n        return userResult;\n      }\n    }\n\n    var allNumbers = !values.some(function (val) {\n      var asFloat = parseFloat(val);\n      return isNaN(asFloat) || asFloat.toString() !== val.toString();\n    }); // values should be copied in order if the alt key is pressed\n    // or if the values contain strings and numbers\n    // However, if we only have one initial value selected, and that\n    // value is a number and we are also pressing alt, then we should\n    // increment or decrement the value by 1 based on direction.\n\n    if (event.altKey || !allNumbers) {\n      if (allNumbers && initialValues.length === 1) {\n        var multiplier = this.isUp || this.isLeft ? -1 : 1;\n        return parseFloat(_.last(values)) + 1 * multiplier;\n      }\n\n      return values[idx % values.length];\n    }\n\n    return _.last(_.findLineByLeastSquares(values.map(Number)));\n  };\n\n  FillHandle.prototype.clearValues = function () {\n    this.clearMarkedPath();\n    this.clearCellValues();\n    this.lastCellMarked = undefined;\n\n    _super.prototype.clearValues.call(this);\n  };\n\n  FillHandle.prototype.clearMarkedPath = function () {\n    this.markedCellComps.forEach(function (cellComp) {\n      var eGui = cellComp.getGui();\n\n      _.removeCssClass(eGui, 'ag-selection-fill-top');\n\n      _.removeCssClass(eGui, 'ag-selection-fill-right');\n\n      _.removeCssClass(eGui, 'ag-selection-fill-bottom');\n\n      _.removeCssClass(eGui, 'ag-selection-fill-left');\n    });\n    this.markedCellComps.length = 0;\n    this.isUp = false;\n    this.isLeft = false;\n    this.isReduce = false;\n  };\n\n  FillHandle.prototype.clearCellValues = function () {\n    this.cellValues.length = 0;\n  };\n\n  FillHandle.prototype.markPathFrom = function (initialPosition, currentPosition) {\n    this.clearMarkedPath();\n    this.clearCellValues();\n\n    if (this.dragAxis === 'y') {\n      if (this.rowPositionUtils.sameRow(currentPosition, initialPosition)) {\n        return;\n      }\n\n      var isBefore = this.rowPositionUtils.before(currentPosition, initialPosition);\n      var rangeStartRow = this.getRangeStartRow();\n      var rangeEndRow = this.getRangeEndRow();\n\n      if (isBefore && (currentPosition.rowPinned == rangeStartRow.rowPinned && currentPosition.rowIndex >= rangeStartRow.rowIndex || rangeStartRow.rowPinned != rangeEndRow.rowPinned && currentPosition.rowPinned == rangeEndRow.rowPinned && currentPosition.rowIndex <= rangeEndRow.rowIndex)) {\n        this.reduceVertical(initialPosition, currentPosition);\n        this.isReduce = true;\n      } else {\n        this.extendVertical(initialPosition, currentPosition, isBefore);\n        this.isReduce = false;\n      }\n    } else {\n      var initialColumn = initialPosition.column;\n      var currentColumn = currentPosition.column;\n\n      if (initialColumn === currentColumn) {\n        return;\n      }\n\n      var displayedColumns = this.columnController.getAllDisplayedColumns();\n      var initialIndex = displayedColumns.indexOf(initialColumn);\n      var currentIndex = displayedColumns.indexOf(currentColumn);\n\n      if (currentIndex <= initialIndex && currentIndex >= displayedColumns.indexOf(this.getCellRange().columns[0])) {\n        this.reduceHorizontal(initialPosition, currentPosition);\n        this.isReduce = true;\n      } else {\n        this.extendHorizontal(initialPosition, currentPosition, currentIndex < initialIndex);\n        this.isReduce = false;\n      }\n    }\n  };\n\n  FillHandle.prototype.extendVertical = function (initialPosition, endPosition, isMovingUp) {\n    var _a = this,\n        rowRenderer = _a.rowRenderer,\n        rangeController = _a.rangeController;\n\n    var row = initialPosition;\n\n    do {\n      var cellRange = this.getCellRange();\n      var colLen = cellRange.columns.length;\n\n      for (var i = 0; i < colLen; i++) {\n        var column = cellRange.columns[i];\n        var rowPos = {\n          rowIndex: row.rowIndex,\n          rowPinned: row.rowPinned\n        };\n\n        var cellPos = __assign(__assign({}, rowPos), {\n          column: column\n        });\n\n        var cellInRange = rangeController.isCellInSpecificRange(cellPos, cellRange);\n        var isInitialRow = this.rowPositionUtils.sameRow(row, initialPosition);\n\n        if (isMovingUp) {\n          this.isUp = true;\n        }\n\n        if (!isInitialRow) {\n          var cellComp = rowRenderer.getComponentForCell(cellPos);\n\n          if (cellComp) {\n            this.markedCellComps.push(cellComp);\n            var eGui = cellComp.getGui();\n\n            if (!cellInRange) {\n              _.addOrRemoveCssClass(eGui, 'ag-selection-fill-left', i === 0);\n\n              _.addOrRemoveCssClass(eGui, 'ag-selection-fill-right', i === colLen - 1);\n            }\n\n            _.addOrRemoveCssClass(eGui, isMovingUp ? 'ag-selection-fill-top' : 'ag-selection-fill-bottom', this.rowPositionUtils.sameRow(row, endPosition));\n          }\n        }\n      }\n\n      if (this.rowPositionUtils.sameRow(row, endPosition)) {\n        break;\n      }\n    } while (row = isMovingUp ? this.cellNavigationService.getRowAbove(row) : this.cellNavigationService.getRowBelow(row));\n  };\n\n  FillHandle.prototype.reduceVertical = function (initialPosition, endPosition) {\n    var row = initialPosition;\n\n    do {\n      var cellRange = this.getCellRange();\n      var colLen = cellRange.columns.length;\n      var isLastRow = this.rowPositionUtils.sameRow(row, endPosition);\n\n      for (var i = 0; i < colLen; i++) {\n        var rowPos = {\n          rowIndex: row.rowIndex,\n          rowPinned: row.rowPinned\n        };\n\n        var celPos = __assign(__assign({}, rowPos), {\n          column: cellRange.columns[i]\n        });\n\n        var cellComp = this.rowRenderer.getComponentForCell(celPos);\n\n        if (cellComp) {\n          this.markedCellComps.push(cellComp);\n          var eGui = cellComp.getGui();\n\n          _.addOrRemoveCssClass(eGui, 'ag-selection-fill-bottom', this.rowPositionUtils.sameRow(row, endPosition));\n        }\n      }\n\n      if (isLastRow) {\n        break;\n      }\n    } while (row = this.cellNavigationService.getRowAbove(row));\n  };\n\n  FillHandle.prototype.extendHorizontal = function (initialPosition, endPosition, isMovingLeft) {\n    var _this = this;\n\n    var allCols = this.columnController.getAllDisplayedColumns();\n    var startCol = allCols.indexOf(isMovingLeft ? endPosition.column : initialPosition.column);\n    var endCol = allCols.indexOf(isMovingLeft ? this.getCellRange().columns[0] : endPosition.column);\n    var offset = isMovingLeft ? 0 : 1;\n    var colsToMark = allCols.slice(startCol + offset, endCol + offset);\n    var rangeStartRow = this.getRangeStartRow();\n    var rangeEndRow = this.getRangeEndRow();\n    colsToMark.forEach(function (column) {\n      var row = rangeStartRow;\n      var isLastRow = false;\n\n      do {\n        isLastRow = _this.rowPositionUtils.sameRow(row, rangeEndRow);\n\n        var cellComp = _this.rowRenderer.getComponentForCell({\n          rowIndex: row.rowIndex,\n          rowPinned: row.rowPinned,\n          column: column\n        });\n\n        if (cellComp) {\n          _this.markedCellComps.push(cellComp);\n\n          var eGui = cellComp.getGui();\n\n          _.addOrRemoveCssClass(eGui, 'ag-selection-fill-top', _this.rowPositionUtils.sameRow(row, rangeStartRow));\n\n          _.addOrRemoveCssClass(eGui, 'ag-selection-fill-bottom', _this.rowPositionUtils.sameRow(row, rangeEndRow));\n\n          if (isMovingLeft) {\n            _this.isLeft = true;\n\n            _.addOrRemoveCssClass(eGui, 'ag-selection-fill-left', column === colsToMark[0]);\n          } else {\n            _.addOrRemoveCssClass(eGui, 'ag-selection-fill-right', column === _.last(colsToMark));\n          }\n        }\n\n        row = _this.cellNavigationService.getRowBelow(row);\n      } while (!isLastRow);\n    });\n  };\n\n  FillHandle.prototype.reduceHorizontal = function (initialPosition, endPosition) {\n    var _this = this;\n\n    var allCols = this.columnController.getAllDisplayedColumns();\n    var startCol = allCols.indexOf(endPosition.column);\n    var endCol = allCols.indexOf(initialPosition.column);\n    var colsToMark = allCols.slice(startCol, endCol);\n    var rangeStartRow = this.getRangeStartRow();\n    var rangeEndRow = this.getRangeEndRow();\n    colsToMark.forEach(function (column) {\n      var row = rangeStartRow;\n      var isLastRow = false;\n\n      do {\n        isLastRow = _this.rowPositionUtils.sameRow(row, rangeEndRow);\n\n        var cellComp = _this.rowRenderer.getComponentForCell({\n          rowIndex: row.rowIndex,\n          rowPinned: row.rowPinned,\n          column: column\n        });\n\n        if (cellComp) {\n          _this.markedCellComps.push(cellComp);\n\n          var eGui = cellComp.getGui();\n\n          _.addOrRemoveCssClass(eGui, 'ag-selection-fill-right', column === colsToMark[0]);\n        }\n\n        row = _this.cellNavigationService.getRowBelow(row);\n      } while (!isLastRow);\n    });\n  };\n\n  FillHandle.prototype.refresh = function (cellComp) {\n    var cellRange = this.rangeController.getCellRanges()[0];\n    var isColumnRange = !cellRange.startRow || !cellRange.endRow;\n\n    if (isColumnRange) {\n      this.destroy();\n      return;\n    }\n\n    _super.prototype.refresh.call(this, cellComp);\n  };\n\n  FillHandle.TEMPLATE = \"<div class=\\\"ag-fill-handle\\\"></div>\";\n\n  __decorate([Autowired('valueService')], FillHandle.prototype, \"valueService\", void 0);\n\n  __decorate([Autowired('gridOptionsWrapper')], FillHandle.prototype, \"gridOptionsWrapper\", void 0);\n\n  return FillHandle;\n}(AbstractSelectionHandle);\n\nexport { FillHandle };","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/@ag-grid-enterprise/range-selection/dist/es6/rangeSelection/fillHandle.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__spreadArrays","il","k","a","j","jl","Autowired","Events","SelectionHandleType","_","AbstractSelectionHandle","FillHandle","_super","_this","TEMPLATE","markedCellComps","cellValues","isUp","isLeft","isReduce","type","FILL","onDrag","e","initialXY","mouseEventService","getNormalisedPosition","_a","x","y","_b","newX","newY","diffX","Math","abs","diffY","direction","dragAxis","initialPosition","cellComp","getCellComp","getCellPosition","lastCellHovered","getLastCellHovered","lastCellMarked","markPathFrom","onDragEnd","isX","initialRange","getCellRange","colLen","columns","rangeStartRow","getRangeStartRow","rangeEndRow","getRangeEndRow","finalRange","rangeController","createCellRangeFromCellRangeParams","rowStartIndex","rowIndex","rowStartPinned","rowPinned","columnStart","rowEndIndex","rowEndPinned","columnEnd","column","startRow","raiseFillStartEvent","handleValueChanged","setCellRanges","raiseFillEndEvent","fillStartEvent","EVENT_FILL_START","columnApi","gridOptionsWrapper","getColumnApi","api","getApi","eventService","dispatchEvent","fillEndEvent","EVENT_FILL_END","initialRangeEndRow","initialRangeStartRow","finalRangeEndRow","finalRangeStartRow","isVertical","isSuppressClearOnFillReduction","filter","col","indexOf","cellNavigationService","getRowBelow","clearCellsInRange","withinInitialRange","values","initialValues","idx","resetValues","iterateAcrossCells","currentRow","finished","_loop_1","rowNode","rowPositionUtils","getRowNode","fillValues","sameRow","forEach","last","getRowAbove","state_1","updateInitialSet","currentValue","valueService","getValue","push","processValues","isCellEditable","setValue","reverse","undefined","endRow","_loop_2","this_1","state_2","event","userFillOperation","getFillOperation","userResult","currentIndex","context","getContext","allNumbers","some","val","asFloat","parseFloat","isNaN","toString","altKey","multiplier","findLineByLeastSquares","map","Number","clearValues","clearMarkedPath","clearCellValues","eGui","getGui","removeCssClass","currentPosition","isBefore","before","reduceVertical","extendVertical","initialColumn","currentColumn","displayedColumns","columnController","getAllDisplayedColumns","initialIndex","reduceHorizontal","extendHorizontal","endPosition","isMovingUp","rowRenderer","row","cellRange","rowPos","cellPos","cellInRange","isCellInSpecificRange","isInitialRow","getComponentForCell","addOrRemoveCssClass","isLastRow","celPos","isMovingLeft","allCols","startCol","endCol","offset","colsToMark","slice","refresh","getCellRanges","isColumnRange","destroy"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { Autowired, Events, SelectionHandleType, _ } from '@ag-grid-community/core';\nimport { AbstractSelectionHandle } from \"./abstractSelectionHandle\";\nvar FillHandle = /** @class */ (function (_super) {\n    __extends(FillHandle, _super);\n    function FillHandle() {\n        var _this = _super.call(this, FillHandle.TEMPLATE) || this;\n        _this.markedCellComps = [];\n        _this.cellValues = [];\n        _this.isUp = false;\n        _this.isLeft = false;\n        _this.isReduce = false;\n        _this.type = SelectionHandleType.FILL;\n        return _this;\n    }\n    FillHandle.prototype.onDrag = function (e) {\n        if (!this.initialXY) {\n            this.initialXY = this.mouseEventService.getNormalisedPosition(e);\n        }\n        var _a = this.initialXY, x = _a.x, y = _a.y;\n        var _b = this.mouseEventService.getNormalisedPosition(e), newX = _b.x, newY = _b.y;\n        var diffX = Math.abs(x - newX);\n        var diffY = Math.abs(y - newY);\n        var direction = diffX > diffY ? 'x' : 'y';\n        if (direction !== this.dragAxis) {\n            this.dragAxis = direction;\n        }\n        if (!this.initialPosition) {\n            var cellComp = this.getCellComp();\n            if (!cellComp) {\n                return;\n            }\n            this.initialPosition = cellComp.getCellPosition();\n        }\n        var lastCellHovered = this.getLastCellHovered();\n        if (lastCellHovered && lastCellHovered !== this.lastCellMarked) {\n            this.lastCellMarked = lastCellHovered;\n            this.markPathFrom(this.initialPosition, lastCellHovered);\n        }\n    };\n    FillHandle.prototype.onDragEnd = function (e) {\n        if (!this.markedCellComps.length) {\n            return;\n        }\n        var isX = this.dragAxis === 'x';\n        var initialRange = this.getCellRange();\n        var colLen = initialRange.columns.length;\n        var rangeStartRow = this.getRangeStartRow();\n        var rangeEndRow = this.getRangeEndRow();\n        var finalRange;\n        if (!this.isUp && !this.isLeft) {\n            finalRange = this.rangeController.createCellRangeFromCellRangeParams({\n                rowStartIndex: rangeStartRow.rowIndex,\n                rowStartPinned: rangeStartRow.rowPinned,\n                columnStart: initialRange.columns[0],\n                rowEndIndex: isX ? rangeEndRow.rowIndex : this.lastCellMarked.rowIndex,\n                rowEndPinned: isX ? rangeEndRow.rowPinned : this.lastCellMarked.rowPinned,\n                columnEnd: isX ? this.lastCellMarked.column : initialRange.columns[colLen - 1]\n            });\n        }\n        else {\n            var startRow = isX ? rangeStartRow : this.lastCellMarked;\n            finalRange = this.rangeController.createCellRangeFromCellRangeParams({\n                rowStartIndex: startRow.rowIndex,\n                rowStartPinned: startRow.rowPinned,\n                columnStart: isX ? this.lastCellMarked.column : initialRange.columns[0],\n                rowEndIndex: rangeEndRow.rowIndex,\n                rowEndPinned: rangeEndRow.rowPinned,\n                columnEnd: initialRange.columns[colLen - 1]\n            });\n        }\n        if (finalRange) {\n            // raising fill events for undo / redo\n            this.raiseFillStartEvent();\n            this.handleValueChanged(initialRange, finalRange, e);\n            this.rangeController.setCellRanges([finalRange]);\n            this.raiseFillEndEvent(initialRange, finalRange);\n        }\n    };\n    FillHandle.prototype.raiseFillStartEvent = function () {\n        var fillStartEvent = {\n            type: Events.EVENT_FILL_START,\n            columnApi: this.gridOptionsWrapper.getColumnApi(),\n            api: this.gridOptionsWrapper.getApi()\n        };\n        this.eventService.dispatchEvent(fillStartEvent);\n    };\n    FillHandle.prototype.raiseFillEndEvent = function (initialRange, finalRange) {\n        var fillEndEvent = {\n            type: Events.EVENT_FILL_END,\n            columnApi: this.gridOptionsWrapper.getColumnApi(),\n            api: this.gridOptionsWrapper.getApi(),\n            initialRange: initialRange,\n            finalRange: finalRange\n        };\n        this.eventService.dispatchEvent(fillEndEvent);\n    };\n    FillHandle.prototype.handleValueChanged = function (initialRange, finalRange, e) {\n        var _this = this;\n        var initialRangeEndRow = this.rangeController.getRangeEndRow(initialRange);\n        var initialRangeStartRow = this.rangeController.getRangeStartRow(initialRange);\n        var finalRangeEndRow = this.rangeController.getRangeEndRow(finalRange);\n        var finalRangeStartRow = this.rangeController.getRangeStartRow(finalRange);\n        var isVertical = this.dragAxis === 'y';\n        // if the range is being reduced in size, all we need to do is\n        // clear the cells that are no longer part of the range\n        if (this.isReduce && !this.gridOptionsWrapper.isSuppressClearOnFillReduction()) {\n            var columns = isVertical\n                ? initialRange.columns\n                : initialRange.columns.filter(function (col) { return finalRange.columns.indexOf(col) < 0; });\n            var startRow = isVertical ? this.cellNavigationService.getRowBelow(finalRangeEndRow) : finalRangeStartRow;\n            if (startRow) {\n                this.clearCellsInRange(startRow, initialRangeEndRow, columns);\n            }\n            return;\n        }\n        var withinInitialRange = true;\n        var values = [];\n        var initialValues = [];\n        var idx = 0;\n        var resetValues = function () {\n            values.length = 0;\n            initialValues.length = 0;\n            idx = 0;\n        };\n        var iterateAcrossCells = function (column, columns) {\n            var currentRow = _this.isUp ? initialRangeEndRow : initialRangeStartRow;\n            var finished = false;\n            if (isVertical) {\n                withinInitialRange = true;\n                resetValues();\n            }\n            var _loop_1 = function () {\n                var rowNode = _this.rowPositionUtils.getRowNode(currentRow);\n                if (!rowNode) {\n                    return \"break\";\n                }\n                if (isVertical && column) {\n                    fillValues(values, column, rowNode, function () {\n                        return !_this.rowPositionUtils.sameRow(currentRow, _this.isUp ? initialRangeStartRow : initialRangeEndRow);\n                    });\n                }\n                else if (columns) {\n                    withinInitialRange = true;\n                    resetValues();\n                    columns.forEach(function (col) { return fillValues(values, col, rowNode, function () { return col !== (_this.isLeft ? initialRange.columns[0] : _.last(initialRange.columns)); }); });\n                }\n                finished = _this.rowPositionUtils.sameRow(currentRow, _this.isUp ? finalRangeStartRow : finalRangeEndRow);\n                currentRow = _this.isUp\n                    ? _this.cellNavigationService.getRowAbove(currentRow)\n                    : _this.cellNavigationService.getRowBelow(currentRow);\n            };\n            while (!finished && currentRow) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        };\n        var fillValues = function (values, col, rowNode, updateInitialSet) {\n            var currentValue;\n            if (withinInitialRange) {\n                currentValue = _this.valueService.getValue(col, rowNode);\n                initialValues.push(currentValue);\n                withinInitialRange = updateInitialSet();\n            }\n            else {\n                currentValue = _this.processValues(e, values, initialValues, col, rowNode, idx++);\n                if (col.isCellEditable(rowNode)) {\n                    _this.valueService.setValue(rowNode, col, currentValue);\n                }\n            }\n            values.push(currentValue);\n        };\n        if (isVertical) {\n            initialRange.columns.forEach(function (col) {\n                iterateAcrossCells(col);\n            });\n        }\n        else {\n            var columns = this.isLeft ? __spreadArrays(finalRange.columns).reverse() : finalRange.columns;\n            iterateAcrossCells(undefined, columns);\n        }\n    };\n    FillHandle.prototype.clearCellsInRange = function (startRow, endRow, columns) {\n        var _this = this;\n        var currentRow = startRow;\n        var finished = false;\n        var _loop_2 = function () {\n            var rowNode = this_1.rowPositionUtils.getRowNode(currentRow);\n            // should never happen, defensive programming\n            if (!rowNode) {\n                return \"break\";\n            }\n            columns.forEach(function (col) {\n                if (col.isCellEditable(rowNode)) {\n                    _this.valueService.setValue(rowNode, col, null);\n                }\n            });\n            finished = this_1.rowPositionUtils.sameRow(currentRow, endRow);\n            currentRow = this_1.cellNavigationService.getRowBelow(currentRow);\n        };\n        var this_1 = this;\n        while (!finished && currentRow) {\n            var state_2 = _loop_2();\n            if (state_2 === \"break\")\n                break;\n        }\n    };\n    FillHandle.prototype.processValues = function (event, values, initialValues, col, rowNode, idx) {\n        var userFillOperation = this.gridOptionsWrapper.getFillOperation();\n        var isVertical = this.dragAxis === 'y';\n        var direction;\n        if (isVertical) {\n            direction = this.isUp ? 'up' : 'down';\n        }\n        else {\n            direction = this.isLeft ? 'left' : 'right';\n        }\n        if (userFillOperation) {\n            var userResult = userFillOperation({\n                event: event,\n                values: values,\n                initialValues: initialValues,\n                currentIndex: idx,\n                api: this.gridOptionsWrapper.getApi(),\n                columnApi: this.gridOptionsWrapper.getColumnApi(),\n                context: this.gridOptionsWrapper.getContext(),\n                direction: direction,\n                column: isVertical ? col : undefined,\n                rowNode: !isVertical ? rowNode : undefined // only present if left / right\n            });\n            if (userResult !== false) {\n                return userResult;\n            }\n        }\n        var allNumbers = !values.some(function (val) {\n            var asFloat = parseFloat(val);\n            return isNaN(asFloat) || asFloat.toString() !== val.toString();\n        });\n        // values should be copied in order if the alt key is pressed\n        // or if the values contain strings and numbers\n        // However, if we only have one initial value selected, and that\n        // value is a number and we are also pressing alt, then we should\n        // increment or decrement the value by 1 based on direction.\n        if (event.altKey || !allNumbers) {\n            if (allNumbers && initialValues.length === 1) {\n                var multiplier = (this.isUp || this.isLeft) ? -1 : 1;\n                return parseFloat(_.last(values)) + 1 * multiplier;\n            }\n            return values[idx % values.length];\n        }\n        return _.last(_.findLineByLeastSquares(values.map(Number)));\n    };\n    FillHandle.prototype.clearValues = function () {\n        this.clearMarkedPath();\n        this.clearCellValues();\n        this.lastCellMarked = undefined;\n        _super.prototype.clearValues.call(this);\n    };\n    FillHandle.prototype.clearMarkedPath = function () {\n        this.markedCellComps.forEach(function (cellComp) {\n            var eGui = cellComp.getGui();\n            _.removeCssClass(eGui, 'ag-selection-fill-top');\n            _.removeCssClass(eGui, 'ag-selection-fill-right');\n            _.removeCssClass(eGui, 'ag-selection-fill-bottom');\n            _.removeCssClass(eGui, 'ag-selection-fill-left');\n        });\n        this.markedCellComps.length = 0;\n        this.isUp = false;\n        this.isLeft = false;\n        this.isReduce = false;\n    };\n    FillHandle.prototype.clearCellValues = function () {\n        this.cellValues.length = 0;\n    };\n    FillHandle.prototype.markPathFrom = function (initialPosition, currentPosition) {\n        this.clearMarkedPath();\n        this.clearCellValues();\n        if (this.dragAxis === 'y') {\n            if (this.rowPositionUtils.sameRow(currentPosition, initialPosition)) {\n                return;\n            }\n            var isBefore = this.rowPositionUtils.before(currentPosition, initialPosition);\n            var rangeStartRow = this.getRangeStartRow();\n            var rangeEndRow = this.getRangeEndRow();\n            if (isBefore && ((currentPosition.rowPinned == rangeStartRow.rowPinned &&\n                currentPosition.rowIndex >= rangeStartRow.rowIndex) ||\n                (rangeStartRow.rowPinned != rangeEndRow.rowPinned &&\n                    currentPosition.rowPinned == rangeEndRow.rowPinned &&\n                    currentPosition.rowIndex <= rangeEndRow.rowIndex))) {\n                this.reduceVertical(initialPosition, currentPosition);\n                this.isReduce = true;\n            }\n            else {\n                this.extendVertical(initialPosition, currentPosition, isBefore);\n                this.isReduce = false;\n            }\n        }\n        else {\n            var initialColumn = initialPosition.column;\n            var currentColumn = currentPosition.column;\n            if (initialColumn === currentColumn) {\n                return;\n            }\n            var displayedColumns = this.columnController.getAllDisplayedColumns();\n            var initialIndex = displayedColumns.indexOf(initialColumn);\n            var currentIndex = displayedColumns.indexOf(currentColumn);\n            if (currentIndex <= initialIndex && currentIndex >= displayedColumns.indexOf(this.getCellRange().columns[0])) {\n                this.reduceHorizontal(initialPosition, currentPosition);\n                this.isReduce = true;\n            }\n            else {\n                this.extendHorizontal(initialPosition, currentPosition, currentIndex < initialIndex);\n                this.isReduce = false;\n            }\n        }\n    };\n    FillHandle.prototype.extendVertical = function (initialPosition, endPosition, isMovingUp) {\n        var _a = this, rowRenderer = _a.rowRenderer, rangeController = _a.rangeController;\n        var row = initialPosition;\n        do {\n            var cellRange = this.getCellRange();\n            var colLen = cellRange.columns.length;\n            for (var i = 0; i < colLen; i++) {\n                var column = cellRange.columns[i];\n                var rowPos = { rowIndex: row.rowIndex, rowPinned: row.rowPinned };\n                var cellPos = __assign(__assign({}, rowPos), { column: column });\n                var cellInRange = rangeController.isCellInSpecificRange(cellPos, cellRange);\n                var isInitialRow = this.rowPositionUtils.sameRow(row, initialPosition);\n                if (isMovingUp) {\n                    this.isUp = true;\n                }\n                if (!isInitialRow) {\n                    var cellComp = rowRenderer.getComponentForCell(cellPos);\n                    if (cellComp) {\n                        this.markedCellComps.push(cellComp);\n                        var eGui = cellComp.getGui();\n                        if (!cellInRange) {\n                            _.addOrRemoveCssClass(eGui, 'ag-selection-fill-left', i === 0);\n                            _.addOrRemoveCssClass(eGui, 'ag-selection-fill-right', i === colLen - 1);\n                        }\n                        _.addOrRemoveCssClass(eGui, isMovingUp ? 'ag-selection-fill-top' : 'ag-selection-fill-bottom', this.rowPositionUtils.sameRow(row, endPosition));\n                    }\n                }\n            }\n            if (this.rowPositionUtils.sameRow(row, endPosition)) {\n                break;\n            }\n        } while (row = isMovingUp ?\n            this.cellNavigationService.getRowAbove(row) :\n            this.cellNavigationService.getRowBelow(row));\n    };\n    FillHandle.prototype.reduceVertical = function (initialPosition, endPosition) {\n        var row = initialPosition;\n        do {\n            var cellRange = this.getCellRange();\n            var colLen = cellRange.columns.length;\n            var isLastRow = this.rowPositionUtils.sameRow(row, endPosition);\n            for (var i = 0; i < colLen; i++) {\n                var rowPos = { rowIndex: row.rowIndex, rowPinned: row.rowPinned };\n                var celPos = __assign(__assign({}, rowPos), { column: cellRange.columns[i] });\n                var cellComp = this.rowRenderer.getComponentForCell(celPos);\n                if (cellComp) {\n                    this.markedCellComps.push(cellComp);\n                    var eGui = cellComp.getGui();\n                    _.addOrRemoveCssClass(eGui, 'ag-selection-fill-bottom', this.rowPositionUtils.sameRow(row, endPosition));\n                }\n            }\n            if (isLastRow) {\n                break;\n            }\n        } while (row = this.cellNavigationService.getRowAbove(row));\n    };\n    FillHandle.prototype.extendHorizontal = function (initialPosition, endPosition, isMovingLeft) {\n        var _this = this;\n        var allCols = this.columnController.getAllDisplayedColumns();\n        var startCol = allCols.indexOf(isMovingLeft ? endPosition.column : initialPosition.column);\n        var endCol = allCols.indexOf(isMovingLeft ? this.getCellRange().columns[0] : endPosition.column);\n        var offset = isMovingLeft ? 0 : 1;\n        var colsToMark = allCols.slice(startCol + offset, endCol + offset);\n        var rangeStartRow = this.getRangeStartRow();\n        var rangeEndRow = this.getRangeEndRow();\n        colsToMark.forEach(function (column) {\n            var row = rangeStartRow;\n            var isLastRow = false;\n            do {\n                isLastRow = _this.rowPositionUtils.sameRow(row, rangeEndRow);\n                var cellComp = _this.rowRenderer.getComponentForCell({\n                    rowIndex: row.rowIndex,\n                    rowPinned: row.rowPinned,\n                    column: column\n                });\n                if (cellComp) {\n                    _this.markedCellComps.push(cellComp);\n                    var eGui = cellComp.getGui();\n                    _.addOrRemoveCssClass(eGui, 'ag-selection-fill-top', _this.rowPositionUtils.sameRow(row, rangeStartRow));\n                    _.addOrRemoveCssClass(eGui, 'ag-selection-fill-bottom', _this.rowPositionUtils.sameRow(row, rangeEndRow));\n                    if (isMovingLeft) {\n                        _this.isLeft = true;\n                        _.addOrRemoveCssClass(eGui, 'ag-selection-fill-left', column === colsToMark[0]);\n                    }\n                    else {\n                        _.addOrRemoveCssClass(eGui, 'ag-selection-fill-right', column === _.last(colsToMark));\n                    }\n                }\n                row = _this.cellNavigationService.getRowBelow(row);\n            } while (!isLastRow);\n        });\n    };\n    FillHandle.prototype.reduceHorizontal = function (initialPosition, endPosition) {\n        var _this = this;\n        var allCols = this.columnController.getAllDisplayedColumns();\n        var startCol = allCols.indexOf(endPosition.column);\n        var endCol = allCols.indexOf(initialPosition.column);\n        var colsToMark = allCols.slice(startCol, endCol);\n        var rangeStartRow = this.getRangeStartRow();\n        var rangeEndRow = this.getRangeEndRow();\n        colsToMark.forEach(function (column) {\n            var row = rangeStartRow;\n            var isLastRow = false;\n            do {\n                isLastRow = _this.rowPositionUtils.sameRow(row, rangeEndRow);\n                var cellComp = _this.rowRenderer.getComponentForCell({\n                    rowIndex: row.rowIndex,\n                    rowPinned: row.rowPinned,\n                    column: column\n                });\n                if (cellComp) {\n                    _this.markedCellComps.push(cellComp);\n                    var eGui = cellComp.getGui();\n                    _.addOrRemoveCssClass(eGui, 'ag-selection-fill-right', column === colsToMark[0]);\n                }\n                row = _this.cellNavigationService.getRowBelow(row);\n            } while (!isLastRow);\n        });\n    };\n    FillHandle.prototype.refresh = function (cellComp) {\n        var cellRange = this.rangeController.getCellRanges()[0];\n        var isColumnRange = !cellRange.startRow || !cellRange.endRow;\n        if (isColumnRange) {\n            this.destroy();\n            return;\n        }\n        _super.prototype.refresh.call(this, cellComp);\n    };\n    FillHandle.TEMPLATE = \"<div class=\\\"ag-fill-handle\\\"></div>\";\n    __decorate([\n        Autowired('valueService')\n    ], FillHandle.prototype, \"valueService\", void 0);\n    __decorate([\n        Autowired('gridOptionsWrapper')\n    ], FillHandle.prototype, \"gridOptionsWrapper\", void 0);\n    return FillHandle;\n}(AbstractSelectionHandle));\nexport { FillHandle };\n"]},"metadata":{},"sourceType":"module"}