{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { ChartType } from \"@ag-grid-community/core\";\nimport { CategoryAxis, ChartAxisPosition, ChartBuilder } from \"ag-charts-community\";\nimport { CartesianChartProxy } from \"./cartesianChartProxy\";\n\nvar AreaChartProxy =\n/** @class */\nfunction (_super) {\n  __extends(AreaChartProxy, _super);\n\n  function AreaChartProxy(params) {\n    var _this = _super.call(this, params) || this;\n\n    _this.initChartOptions();\n\n    _this.recreateChart();\n\n    return _this;\n  }\n\n  AreaChartProxy.prototype.createChart = function (options) {\n    var _a = this.chartProxyParams,\n        grouping = _a.grouping,\n        parentElement = _a.parentElement;\n    var chart = ChartBuilder[grouping ? \"createGroupedAreaChart\" : \"createAreaChart\"](parentElement, options || this.chartOptions);\n    chart.axes.filter(function (axis) {\n      return axis.position === ChartAxisPosition.Bottom && axis instanceof CategoryAxis;\n    }).forEach(function (axis) {\n      axis.scale.paddingInner = 1;\n      axis.scale.paddingOuter = 0;\n    });\n    return chart;\n  };\n\n  AreaChartProxy.prototype.update = function (params) {\n    this.chartProxyParams.grouping = params.grouping;\n    this.updateAxes();\n\n    if (this.chartType === ChartType.Area) {\n      // area charts have multiple series\n      this.updateAreaChart(params);\n    } else {\n      // stacked and normalized has a single series\n      var areaSeries = this.chart.series[0];\n\n      if (!areaSeries) {\n        areaSeries = ChartBuilder.createSeries(this.getSeriesDefaults());\n\n        if (areaSeries) {\n          this.chart.addSeries(areaSeries);\n        } else {\n          return;\n        }\n      }\n\n      var _a = this.getPalette(),\n          fills = _a.fills,\n          strokes = _a.strokes;\n\n      areaSeries.data = this.transformData(params.data, params.category.id);\n      areaSeries.xKey = params.category.id;\n      areaSeries.xName = params.category.name;\n      areaSeries.yKeys = params.fields.map(function (f) {\n        return f.colId;\n      });\n      areaSeries.yNames = params.fields.map(function (f) {\n        return f.displayName;\n      });\n      areaSeries.fills = fills;\n      areaSeries.strokes = strokes;\n    }\n\n    this.updateLabelRotation(params.category.id);\n  };\n\n  AreaChartProxy.prototype.updateAreaChart = function (params) {\n    var _this = this;\n\n    var chart = this.chart;\n\n    if (params.fields.length === 0) {\n      chart.removeAllSeries();\n      return;\n    }\n\n    var fieldIds = params.fields.map(function (f) {\n      return f.colId;\n    });\n\n    var _a = this.getPalette(),\n        fills = _a.fills,\n        strokes = _a.strokes;\n\n    var existingSeriesById = chart.series.reduceRight(function (map, series, i) {\n      var id = series.yKeys[0];\n\n      if (fieldIds.indexOf(id) === i) {\n        map.set(id, series);\n      } else {\n        chart.removeSeries(series);\n      }\n\n      return map;\n    }, new Map());\n    var data = this.transformData(params.data, params.category.id);\n    var previousSeries = undefined;\n    params.fields.forEach(function (f, index) {\n      var areaSeries = existingSeriesById.get(f.colId);\n      var fill = fills[index % fills.length];\n      var stroke = strokes[index % strokes.length];\n\n      if (areaSeries) {\n        areaSeries.data = data;\n        areaSeries.xKey = params.category.id;\n        areaSeries.xName = params.category.name;\n        areaSeries.yKeys = [f.colId];\n        areaSeries.yNames = [f.displayName];\n        areaSeries.fills = [fill];\n        areaSeries.strokes = [stroke];\n      } else {\n        var seriesDefaults = _this.getSeriesDefaults();\n\n        var options = __assign(__assign({}, seriesDefaults), {\n          data: data,\n          field: {\n            xKey: params.category.id,\n            xName: params.category.name,\n            yKeys: [f.colId],\n            yNames: [f.displayName]\n          },\n          fill: __assign(__assign({}, seriesDefaults.fill), {\n            colors: [fill]\n          }),\n          stroke: __assign(__assign({}, seriesDefaults.stroke), {\n            colors: [stroke]\n          })\n        });\n\n        areaSeries = ChartBuilder.createSeries(options);\n        chart.addSeriesAfter(areaSeries, previousSeries);\n      }\n\n      previousSeries = areaSeries;\n    });\n  };\n\n  AreaChartProxy.prototype.getDefaultOptions = function () {\n    var options = this.getDefaultCartesianChartOptions();\n    options.xAxis.label.rotation = 335;\n    options.seriesDefaults = __assign(__assign({}, options.seriesDefaults), {\n      fill: __assign(__assign({}, options.seriesDefaults.fill), {\n        opacity: this.chartType === ChartType.Area ? 0.7 : 1\n      }),\n      stroke: __assign(__assign({}, options.seriesDefaults.stroke), {\n        width: 3\n      }),\n      marker: {\n        shape: 'circle',\n        enabled: true,\n        size: 6,\n        strokeWidth: 1\n      },\n      tooltip: {\n        enabled: true\n      },\n      shadow: this.getDefaultDropShadowOptions()\n    });\n    return options;\n  };\n\n  AreaChartProxy.prototype.getSeriesDefaults = function () {\n    return __assign(__assign({}, this.chartOptions.seriesDefaults), {\n      type: 'area',\n      normalizedTo: this.chartType === ChartType.NormalizedArea ? 100 : undefined\n    });\n  };\n\n  return AreaChartProxy;\n}(CartesianChartProxy);\n\nexport { AreaChartProxy };","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/@ag-grid-enterprise/charts/dist/es6/chartAdaptor/chartComp/chartProxies/cartesian/areaChartProxy.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","ChartType","CategoryAxis","ChartAxisPosition","ChartBuilder","CartesianChartProxy","AreaChartProxy","_super","params","_this","initChartOptions","recreateChart","createChart","options","_a","chartProxyParams","grouping","parentElement","chart","chartOptions","axes","filter","axis","position","Bottom","forEach","scale","paddingInner","paddingOuter","update","updateAxes","chartType","Area","updateAreaChart","areaSeries","series","createSeries","getSeriesDefaults","addSeries","getPalette","fills","strokes","data","transformData","category","id","xKey","xName","name","yKeys","fields","map","f","colId","yNames","displayName","updateLabelRotation","removeAllSeries","fieldIds","existingSeriesById","reduceRight","indexOf","set","removeSeries","Map","previousSeries","undefined","index","get","fill","stroke","seriesDefaults","field","colors","addSeriesAfter","getDefaultOptions","getDefaultCartesianChartOptions","xAxis","label","rotation","opacity","width","marker","shape","enabled","size","strokeWidth","tooltip","shadow","getDefaultDropShadowOptions","type","normalizedTo","NormalizedArea"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { ChartType } from \"@ag-grid-community/core\";\nimport { CategoryAxis, ChartAxisPosition, ChartBuilder } from \"ag-charts-community\";\nimport { CartesianChartProxy } from \"./cartesianChartProxy\";\nvar AreaChartProxy = /** @class */ (function (_super) {\n    __extends(AreaChartProxy, _super);\n    function AreaChartProxy(params) {\n        var _this = _super.call(this, params) || this;\n        _this.initChartOptions();\n        _this.recreateChart();\n        return _this;\n    }\n    AreaChartProxy.prototype.createChart = function (options) {\n        var _a = this.chartProxyParams, grouping = _a.grouping, parentElement = _a.parentElement;\n        var chart = ChartBuilder[grouping ? \"createGroupedAreaChart\" : \"createAreaChart\"](parentElement, options || this.chartOptions);\n        chart.axes\n            .filter(function (axis) { return axis.position === ChartAxisPosition.Bottom && axis instanceof CategoryAxis; })\n            .forEach(function (axis) {\n            axis.scale.paddingInner = 1;\n            axis.scale.paddingOuter = 0;\n        });\n        return chart;\n    };\n    AreaChartProxy.prototype.update = function (params) {\n        this.chartProxyParams.grouping = params.grouping;\n        this.updateAxes();\n        if (this.chartType === ChartType.Area) {\n            // area charts have multiple series\n            this.updateAreaChart(params);\n        }\n        else {\n            // stacked and normalized has a single series\n            var areaSeries = this.chart.series[0];\n            if (!areaSeries) {\n                areaSeries = ChartBuilder.createSeries(this.getSeriesDefaults());\n                if (areaSeries) {\n                    this.chart.addSeries(areaSeries);\n                }\n                else {\n                    return;\n                }\n            }\n            var _a = this.getPalette(), fills = _a.fills, strokes = _a.strokes;\n            areaSeries.data = this.transformData(params.data, params.category.id);\n            areaSeries.xKey = params.category.id;\n            areaSeries.xName = params.category.name;\n            areaSeries.yKeys = params.fields.map(function (f) { return f.colId; });\n            areaSeries.yNames = params.fields.map(function (f) { return f.displayName; });\n            areaSeries.fills = fills;\n            areaSeries.strokes = strokes;\n        }\n        this.updateLabelRotation(params.category.id);\n    };\n    AreaChartProxy.prototype.updateAreaChart = function (params) {\n        var _this = this;\n        var chart = this.chart;\n        if (params.fields.length === 0) {\n            chart.removeAllSeries();\n            return;\n        }\n        var fieldIds = params.fields.map(function (f) { return f.colId; });\n        var _a = this.getPalette(), fills = _a.fills, strokes = _a.strokes;\n        var existingSeriesById = chart.series.reduceRight(function (map, series, i) {\n            var id = series.yKeys[0];\n            if (fieldIds.indexOf(id) === i) {\n                map.set(id, series);\n            }\n            else {\n                chart.removeSeries(series);\n            }\n            return map;\n        }, new Map());\n        var data = this.transformData(params.data, params.category.id);\n        var previousSeries = undefined;\n        params.fields.forEach(function (f, index) {\n            var areaSeries = existingSeriesById.get(f.colId);\n            var fill = fills[index % fills.length];\n            var stroke = strokes[index % strokes.length];\n            if (areaSeries) {\n                areaSeries.data = data;\n                areaSeries.xKey = params.category.id;\n                areaSeries.xName = params.category.name;\n                areaSeries.yKeys = [f.colId];\n                areaSeries.yNames = [f.displayName];\n                areaSeries.fills = [fill];\n                areaSeries.strokes = [stroke];\n            }\n            else {\n                var seriesDefaults = _this.getSeriesDefaults();\n                var options = __assign(__assign({}, seriesDefaults), { data: data, field: {\n                        xKey: params.category.id,\n                        xName: params.category.name,\n                        yKeys: [f.colId],\n                        yNames: [f.displayName],\n                    }, fill: __assign(__assign({}, seriesDefaults.fill), { colors: [fill] }), stroke: __assign(__assign({}, seriesDefaults.stroke), { colors: [stroke] }) });\n                areaSeries = ChartBuilder.createSeries(options);\n                chart.addSeriesAfter(areaSeries, previousSeries);\n            }\n            previousSeries = areaSeries;\n        });\n    };\n    AreaChartProxy.prototype.getDefaultOptions = function () {\n        var options = this.getDefaultCartesianChartOptions();\n        options.xAxis.label.rotation = 335;\n        options.seriesDefaults = __assign(__assign({}, options.seriesDefaults), { fill: __assign(__assign({}, options.seriesDefaults.fill), { opacity: this.chartType === ChartType.Area ? 0.7 : 1 }), stroke: __assign(__assign({}, options.seriesDefaults.stroke), { width: 3 }), marker: {\n                shape: 'circle',\n                enabled: true,\n                size: 6,\n                strokeWidth: 1,\n            }, tooltip: {\n                enabled: true,\n            }, shadow: this.getDefaultDropShadowOptions() });\n        return options;\n    };\n    AreaChartProxy.prototype.getSeriesDefaults = function () {\n        return __assign(__assign({}, this.chartOptions.seriesDefaults), { type: 'area', normalizedTo: this.chartType === ChartType.NormalizedArea ? 100 : undefined });\n    };\n    return AreaChartProxy;\n}(CartesianChartProxy));\nexport { AreaChartProxy };\n"]},"metadata":{},"sourceType":"module"}