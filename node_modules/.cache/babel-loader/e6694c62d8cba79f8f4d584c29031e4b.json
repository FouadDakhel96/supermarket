{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Autowired, PostConstruct, PreDestroy } from '../context/context';\nimport { Events } from '../events';\nimport { HeaderRowComp, HeaderRowType } from './headerRowComp';\nimport { BodyDropTarget } from './bodyDropTarget';\nimport { Constants } from '../constants';\nimport { setFixedWidth, clearElement } from '../utils/dom';\nimport { BeanStub } from \"../context/beanStub\";\n\nvar HeaderContainer =\n/** @class */\nfunction (_super) {\n  __extends(HeaderContainer, _super);\n\n  function HeaderContainer(eContainer, eViewport, pinned) {\n    var _this = _super.call(this) || this;\n\n    _this.headerRowComps = [];\n    _this.eContainer = eContainer;\n    _this.pinned = pinned;\n    _this.eViewport = eViewport;\n    return _this;\n  }\n\n  HeaderContainer.prototype.forEachHeaderElement = function (callback) {\n    this.headerRowComps.forEach(function (headerRowComp) {\n      return headerRowComp.forEachHeaderElement(callback);\n    });\n  };\n\n  HeaderContainer.prototype.init = function () {\n    this.scrollWidth = this.gridOptionsWrapper.getScrollbarWidth(); // if value changes, then if not pivoting, we at least need to change the label eg from sum() to avg(),\n    // if pivoting, then the columns have changed\n\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_VALUE_CHANGED, this.onColumnValueChanged.bind(this)), this.addManagedListener(this.eventService, Events.EVENT_COLUMN_ROW_GROUP_CHANGED, this.onColumnRowGroupChanged.bind(this)), this.addManagedListener(this.eventService, Events.EVENT_GRID_COLUMNS_CHANGED, this.onGridColumnsChanged.bind(this)), this.addManagedListener(this.eventService, Events.EVENT_SCROLL_VISIBILITY_CHANGED, this.onScrollVisibilityChanged.bind(this)), this.addManagedListener(this.eventService, Events.EVENT_COLUMN_RESIZED, this.onColumnResized.bind(this)), this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this));\n  }; // if row group changes, that means we may need to add aggFuncs to the column headers,\n  // if the grid goes from no aggregation (ie no grouping) to grouping\n\n\n  HeaderContainer.prototype.onColumnRowGroupChanged = function () {\n    this.onGridColumnsChanged();\n  }; // if the agg func of a column changes, then we may need to update the agg func in columns header\n\n\n  HeaderContainer.prototype.onColumnValueChanged = function () {\n    this.onGridColumnsChanged();\n  };\n\n  HeaderContainer.prototype.onColumnResized = function () {\n    this.setWidthOfPinnedContainer();\n  };\n\n  HeaderContainer.prototype.onDisplayedColumnsChanged = function () {\n    this.setWidthOfPinnedContainer();\n  };\n\n  HeaderContainer.prototype.onScrollVisibilityChanged = function () {\n    this.setWidthOfPinnedContainer();\n  };\n\n  HeaderContainer.prototype.setWidthOfPinnedContainer = function () {\n    var pinningLeft = this.pinned === Constants.PINNED_LEFT;\n    var pinningRight = this.pinned === Constants.PINNED_RIGHT;\n    var controller = this.columnController;\n    var isRtl = this.gridOptionsWrapper.isEnableRtl();\n\n    if (pinningLeft || pinningRight) {\n      // size to fit all columns\n      var width = controller[pinningLeft ? 'getPinnedLeftContainerWidth' : 'getPinnedRightContainerWidth'](); // if there is a scroll showing (and taking up space, so Windows, and not iOS)\n      // in the body, then we add extra space to keep header aligned with the body,\n      // as body width fits the cols and the scrollbar\n\n      var addPaddingForScrollbar = this.scrollVisibleService.isVerticalScrollShowing() && (isRtl && pinningLeft || !isRtl && pinningRight);\n\n      if (addPaddingForScrollbar) {\n        width += this.scrollWidth;\n      }\n\n      setFixedWidth(this.eContainer, width);\n    }\n  };\n\n  HeaderContainer.prototype.getRowComps = function () {\n    return this.headerRowComps;\n  }; // grid cols have changed - this also means the number of rows in the header can have\n  // changed. so we remove all the old rows and insert new ones for a complete refresh\n\n\n  HeaderContainer.prototype.onGridColumnsChanged = function () {\n    this.removeAndCreateAllRowComps();\n  };\n\n  HeaderContainer.prototype.removeAndCreateAllRowComps = function () {\n    this.removeHeaderRowComps();\n    this.createHeaderRowComps();\n  }; // we expose this for gridOptions.api.refreshHeader() to call\n\n\n  HeaderContainer.prototype.refresh = function () {\n    this.removeAndCreateAllRowComps();\n  };\n\n  HeaderContainer.prototype.setupDragAndDrop = function (gridComp) {\n    var dropContainer = this.eViewport ? this.eViewport : this.eContainer;\n    var bodyDropTarget = new BodyDropTarget(this.pinned, dropContainer);\n    this.createManagedBean(bodyDropTarget);\n    bodyDropTarget.registerGridComp(gridComp);\n  };\n\n  HeaderContainer.prototype.removeHeaderRowComps = function () {\n    var _this = this;\n\n    this.headerRowComps.forEach(function (headerRowComp) {\n      return _this.destroyBean(headerRowComp);\n    });\n    this.headerRowComps.length = 0;\n    clearElement(this.eContainer);\n  };\n\n  HeaderContainer.prototype.createHeaderRowComps = function () {\n    // if we are displaying header groups, then we have many rows here.\n    // go through each row of the header, one by one.\n    var rowCount = this.columnController.getHeaderRowCount();\n\n    for (var dept = 0; dept < rowCount; dept++) {\n      var groupRow = dept !== rowCount - 1;\n      var type = groupRow ? HeaderRowType.COLUMN_GROUP : HeaderRowType.COLUMN;\n      var headerRowComp = new HeaderRowComp(dept, type, this.pinned, this.dropTarget);\n      this.createBean(headerRowComp);\n      this.headerRowComps.push(headerRowComp);\n      headerRowComp.setRowIndex(this.headerRowComps.length - 1);\n      this.eContainer.appendChild(headerRowComp.getGui());\n    }\n\n    if (!this.columnController.isPivotMode() && this.columnController.hasFloatingFilters()) {\n      var headerRowComp = new HeaderRowComp(rowCount, HeaderRowType.FLOATING_FILTER, this.pinned, this.dropTarget);\n      this.createBean(headerRowComp);\n      this.headerRowComps.push(headerRowComp);\n      headerRowComp.setRowIndex(this.headerRowComps.length - 1);\n      this.eContainer.appendChild(headerRowComp.getGui());\n    }\n  };\n\n  __decorate([Autowired('gridOptionsWrapper')], HeaderContainer.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([Autowired('columnController')], HeaderContainer.prototype, \"columnController\", void 0);\n\n  __decorate([Autowired('scrollVisibleService')], HeaderContainer.prototype, \"scrollVisibleService\", void 0);\n\n  __decorate([PostConstruct], HeaderContainer.prototype, \"init\", null);\n\n  __decorate([PreDestroy], HeaderContainer.prototype, \"removeHeaderRowComps\", null);\n\n  return HeaderContainer;\n}(BeanStub);\n\nexport { HeaderContainer };","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/@ag-grid-community/core/dist/es6/headerRendering/headerContainer.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Autowired","PostConstruct","PreDestroy","Events","HeaderRowComp","HeaderRowType","BodyDropTarget","Constants","setFixedWidth","clearElement","BeanStub","HeaderContainer","_super","eContainer","eViewport","pinned","_this","call","headerRowComps","forEachHeaderElement","callback","forEach","headerRowComp","init","scrollWidth","gridOptionsWrapper","getScrollbarWidth","addManagedListener","eventService","EVENT_COLUMN_VALUE_CHANGED","onColumnValueChanged","bind","EVENT_COLUMN_ROW_GROUP_CHANGED","onColumnRowGroupChanged","EVENT_GRID_COLUMNS_CHANGED","onGridColumnsChanged","EVENT_SCROLL_VISIBILITY_CHANGED","onScrollVisibilityChanged","EVENT_COLUMN_RESIZED","onColumnResized","EVENT_DISPLAYED_COLUMNS_CHANGED","onDisplayedColumnsChanged","setWidthOfPinnedContainer","pinningLeft","PINNED_LEFT","pinningRight","PINNED_RIGHT","controller","columnController","isRtl","isEnableRtl","width","addPaddingForScrollbar","scrollVisibleService","isVerticalScrollShowing","getRowComps","removeAndCreateAllRowComps","removeHeaderRowComps","createHeaderRowComps","refresh","setupDragAndDrop","gridComp","dropContainer","bodyDropTarget","createManagedBean","registerGridComp","destroyBean","rowCount","getHeaderRowCount","dept","groupRow","type","COLUMN_GROUP","COLUMN","dropTarget","createBean","push","setRowIndex","appendChild","getGui","isPivotMode","hasFloatingFilters","FLOATING_FILTER"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Autowired, PostConstruct, PreDestroy } from '../context/context';\nimport { Events } from '../events';\nimport { HeaderRowComp, HeaderRowType } from './headerRowComp';\nimport { BodyDropTarget } from './bodyDropTarget';\nimport { Constants } from '../constants';\nimport { setFixedWidth, clearElement } from '../utils/dom';\nimport { BeanStub } from \"../context/beanStub\";\nvar HeaderContainer = /** @class */ (function (_super) {\n    __extends(HeaderContainer, _super);\n    function HeaderContainer(eContainer, eViewport, pinned) {\n        var _this = _super.call(this) || this;\n        _this.headerRowComps = [];\n        _this.eContainer = eContainer;\n        _this.pinned = pinned;\n        _this.eViewport = eViewport;\n        return _this;\n    }\n    HeaderContainer.prototype.forEachHeaderElement = function (callback) {\n        this.headerRowComps.forEach(function (headerRowComp) { return headerRowComp.forEachHeaderElement(callback); });\n    };\n    HeaderContainer.prototype.init = function () {\n        this.scrollWidth = this.gridOptionsWrapper.getScrollbarWidth();\n        // if value changes, then if not pivoting, we at least need to change the label eg from sum() to avg(),\n        // if pivoting, then the columns have changed\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_VALUE_CHANGED, this.onColumnValueChanged.bind(this)),\n            this.addManagedListener(this.eventService, Events.EVENT_COLUMN_ROW_GROUP_CHANGED, this.onColumnRowGroupChanged.bind(this)),\n            this.addManagedListener(this.eventService, Events.EVENT_GRID_COLUMNS_CHANGED, this.onGridColumnsChanged.bind(this)),\n            this.addManagedListener(this.eventService, Events.EVENT_SCROLL_VISIBILITY_CHANGED, this.onScrollVisibilityChanged.bind(this)),\n            this.addManagedListener(this.eventService, Events.EVENT_COLUMN_RESIZED, this.onColumnResized.bind(this)),\n            this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this));\n    };\n    // if row group changes, that means we may need to add aggFuncs to the column headers,\n    // if the grid goes from no aggregation (ie no grouping) to grouping\n    HeaderContainer.prototype.onColumnRowGroupChanged = function () {\n        this.onGridColumnsChanged();\n    };\n    // if the agg func of a column changes, then we may need to update the agg func in columns header\n    HeaderContainer.prototype.onColumnValueChanged = function () {\n        this.onGridColumnsChanged();\n    };\n    HeaderContainer.prototype.onColumnResized = function () {\n        this.setWidthOfPinnedContainer();\n    };\n    HeaderContainer.prototype.onDisplayedColumnsChanged = function () {\n        this.setWidthOfPinnedContainer();\n    };\n    HeaderContainer.prototype.onScrollVisibilityChanged = function () {\n        this.setWidthOfPinnedContainer();\n    };\n    HeaderContainer.prototype.setWidthOfPinnedContainer = function () {\n        var pinningLeft = this.pinned === Constants.PINNED_LEFT;\n        var pinningRight = this.pinned === Constants.PINNED_RIGHT;\n        var controller = this.columnController;\n        var isRtl = this.gridOptionsWrapper.isEnableRtl();\n        if (pinningLeft || pinningRight) {\n            // size to fit all columns\n            var width = controller[pinningLeft ? 'getPinnedLeftContainerWidth' : 'getPinnedRightContainerWidth']();\n            // if there is a scroll showing (and taking up space, so Windows, and not iOS)\n            // in the body, then we add extra space to keep header aligned with the body,\n            // as body width fits the cols and the scrollbar\n            var addPaddingForScrollbar = this.scrollVisibleService.isVerticalScrollShowing() && ((isRtl && pinningLeft) || (!isRtl && pinningRight));\n            if (addPaddingForScrollbar) {\n                width += this.scrollWidth;\n            }\n            setFixedWidth(this.eContainer, width);\n        }\n    };\n    HeaderContainer.prototype.getRowComps = function () {\n        return this.headerRowComps;\n    };\n    // grid cols have changed - this also means the number of rows in the header can have\n    // changed. so we remove all the old rows and insert new ones for a complete refresh\n    HeaderContainer.prototype.onGridColumnsChanged = function () {\n        this.removeAndCreateAllRowComps();\n    };\n    HeaderContainer.prototype.removeAndCreateAllRowComps = function () {\n        this.removeHeaderRowComps();\n        this.createHeaderRowComps();\n    };\n    // we expose this for gridOptions.api.refreshHeader() to call\n    HeaderContainer.prototype.refresh = function () {\n        this.removeAndCreateAllRowComps();\n    };\n    HeaderContainer.prototype.setupDragAndDrop = function (gridComp) {\n        var dropContainer = this.eViewport ? this.eViewport : this.eContainer;\n        var bodyDropTarget = new BodyDropTarget(this.pinned, dropContainer);\n        this.createManagedBean(bodyDropTarget);\n        bodyDropTarget.registerGridComp(gridComp);\n    };\n    HeaderContainer.prototype.removeHeaderRowComps = function () {\n        var _this = this;\n        this.headerRowComps.forEach(function (headerRowComp) { return _this.destroyBean(headerRowComp); });\n        this.headerRowComps.length = 0;\n        clearElement(this.eContainer);\n    };\n    HeaderContainer.prototype.createHeaderRowComps = function () {\n        // if we are displaying header groups, then we have many rows here.\n        // go through each row of the header, one by one.\n        var rowCount = this.columnController.getHeaderRowCount();\n        for (var dept = 0; dept < rowCount; dept++) {\n            var groupRow = dept !== (rowCount - 1);\n            var type = groupRow ? HeaderRowType.COLUMN_GROUP : HeaderRowType.COLUMN;\n            var headerRowComp = new HeaderRowComp(dept, type, this.pinned, this.dropTarget);\n            this.createBean(headerRowComp);\n            this.headerRowComps.push(headerRowComp);\n            headerRowComp.setRowIndex(this.headerRowComps.length - 1);\n            this.eContainer.appendChild(headerRowComp.getGui());\n        }\n        if (!this.columnController.isPivotMode() && this.columnController.hasFloatingFilters()) {\n            var headerRowComp = new HeaderRowComp(rowCount, HeaderRowType.FLOATING_FILTER, this.pinned, this.dropTarget);\n            this.createBean(headerRowComp);\n            this.headerRowComps.push(headerRowComp);\n            headerRowComp.setRowIndex(this.headerRowComps.length - 1);\n            this.eContainer.appendChild(headerRowComp.getGui());\n        }\n    };\n    __decorate([\n        Autowired('gridOptionsWrapper')\n    ], HeaderContainer.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        Autowired('columnController')\n    ], HeaderContainer.prototype, \"columnController\", void 0);\n    __decorate([\n        Autowired('scrollVisibleService')\n    ], HeaderContainer.prototype, \"scrollVisibleService\", void 0);\n    __decorate([\n        PostConstruct\n    ], HeaderContainer.prototype, \"init\", null);\n    __decorate([\n        PreDestroy\n    ], HeaderContainer.prototype, \"removeHeaderRowComps\", null);\n    return HeaderContainer;\n}(BeanStub));\nexport { HeaderContainer };\n"]},"metadata":{},"sourceType":"module"}