{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Autowired, Constants, Events, ProvidedFilter, RefSelector, VirtualList, Promise, _ } from '@ag-grid-community/core';\nimport { SetFilterModelValuesType, SetValueModel } from './setValueModel';\nimport { SetFilterListItem } from './setFilterListItem';\nimport { DEFAULT_LOCALE_TEXT } from './localeText';\n\nvar SetFilter =\n/** @class */\nfunction (_super) {\n  __extends(SetFilter, _super);\n\n  function SetFilter() {\n    var _this = _super !== null && _super.apply(this, arguments) || this; // To make the filtering super fast, we store the values in an object, and check for the boolean value.\n    // Although Set would be a more natural choice of data structure, its performance across browsers is\n    // significantly worse than using an object: https://jsbench.me/hdk91jbw1h/\n\n\n    _this.appliedModelValues = null;\n    return _this;\n  } // unlike the simple filters, nothing in the set filter UI shows/hides.\n  // maybe this method belongs in abstractSimpleFilter???\n\n\n  SetFilter.prototype.updateUiVisibility = function () {};\n\n  SetFilter.prototype.postConstruct = function () {\n    _super.prototype.postConstruct.call(this);\n\n    var focusableEl = this.getFocusableElement();\n\n    if (focusableEl) {\n      this.addManagedListener(focusableEl, 'keydown', this.handleKeyDown.bind(this));\n    }\n  };\n\n  SetFilter.prototype.createBodyTemplate = function () {\n    return (\n      /* html */\n      \"\\n            <div>\\n                <div ref=\\\"eFilterLoading\\\" class=\\\"ag-filter-loading ag-hidden\\\">\" + this.translate('loadingOoo') + \"</div>\\n                <div class=\\\"ag-filter-header-container\\\" role=\\\"presentation\\\">\\n                    <ag-input-text-field class=\\\"ag-mini-filter\\\" ref=\\\"eMiniFilter\\\"></ag-input-text-field>\\n                    <label ref=\\\"eSelectAllContainer\\\" class=\\\"ag-set-filter-item ag-set-filter-select-all\\\">\\n                        <ag-checkbox ref=\\\"eSelectAll\\\" class=\\\"ag-set-filter-item-checkbox\\\"></ag-checkbox>\\n                        <span ref=\\\"eSelectAllLabel\\\" class=\\\"ag-set-filter-item-value\\\"></span>\\n                    </label>\\n                </div>\\n                <div ref=\\\"eFilterNoMatches\\\" class=\\\"ag-filter-no-matches ag-hidden\\\">\" + this.translate('noMatches') + \"</div>\\n                <div ref=\\\"eSetFilterList\\\" class=\\\"ag-set-filter-list\\\" role=\\\"presentation\\\"></div>\\n            </div>\"\n    );\n  };\n\n  SetFilter.prototype.handleKeyDown = function (e) {\n    if (e.defaultPrevented) {\n      return;\n    }\n\n    switch (e.which || e.keyCode) {\n      case Constants.KEY_TAB:\n        this.handleKeyTab(e);\n        break;\n\n      case Constants.KEY_SPACE:\n        this.handleKeySpace(e);\n        break;\n\n      case Constants.KEY_ENTER:\n        this.handleKeyEnter(e);\n        break;\n    }\n  };\n\n  SetFilter.prototype.handleKeyTab = function (e) {\n    if (!this.eSetFilterList.contains(document.activeElement)) {\n      return;\n    }\n\n    var focusableElement = this.getFocusableElement();\n    var method = e.shiftKey ? 'previousElementSibling' : 'nextElementSibling';\n    var currentRoot = this.eSetFilterList;\n    var nextRoot;\n\n    while (currentRoot !== focusableElement && !nextRoot) {\n      nextRoot = currentRoot[method];\n      currentRoot = currentRoot.parentElement;\n    }\n\n    if (!nextRoot) {\n      return;\n    }\n\n    if (e.shiftKey && this.focusController.focusLastFocusableElement(nextRoot) || !e.shiftKey && this.focusController.focusFirstFocusableElement(nextRoot)) {\n      e.preventDefault();\n    }\n  };\n\n  SetFilter.prototype.handleKeySpace = function (e) {\n    if (!this.eSetFilterList.contains(document.activeElement)) {\n      return;\n    }\n\n    var currentItem = this.virtualList.getLastFocusedRow();\n\n    if (_.exists(currentItem)) {\n      var component = this.virtualList.getComponentAt(currentItem);\n\n      if (component) {\n        e.preventDefault();\n        component.setSelected(!component.isSelected(), true);\n      }\n    }\n  };\n\n  SetFilter.prototype.handleKeyEnter = function (e) {\n    if (this.setFilterParams.excelMode) {\n      e.preventDefault(); // in Excel Mode, hitting Enter is the same as pressing the Apply button\n\n      this.onBtApply(false, false, e);\n\n      if (this.setFilterParams.excelMode === 'mac') {\n        // in Mac version, select all the input text\n        this.eMiniFilter.getInputElement().select();\n      }\n    }\n  };\n\n  SetFilter.prototype.getCssIdentifier = function () {\n    return 'set-filter';\n  };\n\n  SetFilter.prototype.resetUiToDefaults = function () {\n    var _this = this;\n\n    this.setMiniFilter(null);\n    return this.valueModel.setModel(null).then(function () {\n      return _this.refresh();\n    });\n  };\n\n  SetFilter.prototype.setModelIntoUi = function (model) {\n    var _this = this;\n\n    this.setMiniFilter(null);\n\n    if (model instanceof Array) {\n      var message_1 = 'ag-Grid: The Set Filter Model is no longer an array and models as arrays are ' + 'deprecated. Please check the docs on what the set filter model looks like. Future versions of ' + 'ag-Grid will have the array version of the model removed.';\n\n      _.doOnce(function () {\n        return console.warn(message_1);\n      }, 'setFilter.modelAsArray');\n    } // also supporting old filter model for backwards compatibility\n\n\n    var values = model == null ? null : model instanceof Array ? model : model.values;\n    return this.valueModel.setModel(values).then(function () {\n      return _this.refresh();\n    });\n  };\n\n  SetFilter.prototype.getModelFromUi = function () {\n    var values = this.valueModel.getModel();\n\n    if (!values) {\n      return null;\n    }\n\n    if (this.gridOptionsWrapper.isEnableOldSetFilterModel()) {\n      // this is a hack, it breaks casting rules, to apply with old model\n      return values;\n    }\n\n    return {\n      values: values,\n      filterType: 'set'\n    };\n  };\n\n  SetFilter.prototype.getValueModel = function () {\n    return this.valueModel;\n  };\n\n  SetFilter.prototype.areModelsEqual = function (a, b) {\n    // both are missing\n    if (a == null && b == null) {\n      return true;\n    }\n\n    return a != null && b != null && _.areEqual(a.values, b.values);\n  };\n\n  SetFilter.prototype.setParams = function (params) {\n    var _this = this;\n\n    this.applyExcelModeOptions(params);\n\n    _super.prototype.setParams.call(this, params);\n\n    this.checkSetFilterDeprecatedParams(params);\n    this.setFilterParams = params;\n    this.valueModel = new SetValueModel(params.rowModel, params.colDef, params.column, params.valueGetter, params.doesRowPassOtherFilter, params.suppressSorting, function (loading) {\n      return _this.setLoading(loading);\n    }, this.valueFormatterService, function (key) {\n      return _this.translate(key);\n    });\n    this.initialiseFilterBodyUi();\n    var syncValuesAfterDataChange = this.rowModel.getType() === Constants.ROW_MODEL_TYPE_CLIENT_SIDE && !params.values && !params.suppressSyncValuesAfterDataChange;\n\n    if (syncValuesAfterDataChange) {\n      this.addEventListenersForDataChanges();\n    }\n  };\n\n  SetFilter.prototype.applyExcelModeOptions = function (params) {\n    // apply default options to match Excel behaviour, unless they have already been specified\n    if (params.excelMode === 'windows') {\n      if (!params.buttons) {\n        params.buttons = ['apply', 'cancel'];\n      }\n\n      if (params.closeOnApply == null) {\n        params.closeOnApply = true;\n      }\n    } else if (params.excelMode === 'mac') {\n      if (!params.buttons) {\n        params.buttons = ['reset'];\n      }\n\n      if (params.applyMiniFilterWhileTyping == null) {\n        params.applyMiniFilterWhileTyping = true;\n      }\n\n      if (params.debounceMs == null) {\n        params.debounceMs = 500;\n      }\n    }\n  };\n\n  SetFilter.prototype.checkSetFilterDeprecatedParams = function (params) {\n    if (params.syncValuesLikeExcel) {\n      var message_2 = 'ag-Grid: since version 22.x, the Set Filter param syncValuesLikeExcel is no longer' + ' used as this is the default behaviour. To turn this default behaviour off, use the' + ' param suppressSyncValuesAfterDataChange';\n\n      _.doOnce(function () {\n        return console.warn(message_2);\n      }, 'syncValuesLikeExcel deprecated');\n    }\n\n    if (params.selectAllOnMiniFilter) {\n      var message_3 = 'ag-Grid: since version 22.x, the Set Filter param selectAllOnMiniFilter is no longer' + ' used as this is the default behaviour.';\n\n      _.doOnce(function () {\n        return console.warn(message_3);\n      }, 'selectAllOnMiniFilter deprecated');\n    }\n\n    if (params.suppressSyncValuesAfterDataChange) {\n      var message_4 = 'ag-Grid: since version 23.1, the Set Filter param suppressSyncValuesAfterDataChange has' + ' been deprecated and will be removed in a future major release.';\n\n      _.doOnce(function () {\n        return console.warn(message_4);\n      }, 'suppressSyncValuesAfterDataChange deprecated');\n    }\n\n    if (params.suppressRemoveEntries) {\n      var message_5 = 'ag-Grid: since version 23.1, the Set Filter param suppressRemoveEntries has' + ' been deprecated and will be removed in a future major release.';\n\n      _.doOnce(function () {\n        return console.warn(message_5);\n      }, 'suppressRemoveEntries deprecated');\n    }\n  };\n\n  SetFilter.prototype.addEventListenersForDataChanges = function () {\n    var _this = this;\n\n    this.addManagedListener(this.eventService, Events.EVENT_ROW_DATA_UPDATED, function () {\n      return _this.syncAfterDataChange();\n    });\n    this.addManagedListener(this.eventService, Events.EVENT_CELL_VALUE_CHANGED, function (event) {\n      // only interested in changes to do with this column\n      if (event.column === _this.setFilterParams.column) {\n        _this.syncAfterDataChange();\n      }\n    });\n  };\n\n  SetFilter.prototype.syncAfterDataChange = function (refreshValues, keepSelection) {\n    var _this = this;\n\n    if (refreshValues === void 0) {\n      refreshValues = true;\n    }\n\n    if (keepSelection === void 0) {\n      keepSelection = true;\n    }\n\n    var promise = Promise.resolve(null);\n\n    if (refreshValues) {\n      promise = this.valueModel.refreshValues(keepSelection);\n    } else if (!keepSelection) {\n      promise = this.valueModel.setModel(null);\n    }\n\n    promise.then(function () {\n      _this.refresh();\n\n      _this.onBtApply(false, true);\n    });\n  };\n  /** @deprecated since version 23.2. The loading screen is displayed automatically when the set filter is retrieving values. */\n\n\n  SetFilter.prototype.setLoading = function (loading) {\n    var message = 'ag-Grid: since version 23.2, setLoading has been deprecated. The loading screen is displayed automatically when the set filter is retrieving values.';\n\n    _.doOnce(function () {\n      return console.warn(message);\n    }, 'setFilter.setLoading');\n\n    _.setDisplayed(this.eFilterLoading, loading);\n  };\n\n  SetFilter.prototype.initialiseFilterBodyUi = function () {\n    this.initVirtualList();\n    this.initMiniFilter();\n    this.initSelectAll();\n  };\n\n  SetFilter.prototype.initVirtualList = function () {\n    var _this = this;\n\n    var virtualList = this.virtualList = this.createBean(new VirtualList('filter'));\n    var eSetFilterList = this.getRefElement('eSetFilterList');\n\n    if (eSetFilterList) {\n      eSetFilterList.appendChild(virtualList.getGui());\n    }\n\n    var cellHeight = this.setFilterParams.cellHeight;\n\n    if (cellHeight != null) {\n      virtualList.setRowHeight(cellHeight);\n    }\n\n    virtualList.setComponentCreator(function (value) {\n      return _this.createSetListItem(value);\n    });\n    virtualList.setModel(new ModelWrapper(this.valueModel));\n  };\n\n  SetFilter.prototype.createSetListItem = function (value) {\n    var _this = this;\n\n    var listItem = this.createBean(new SetFilterListItem(value, this.setFilterParams, function (key) {\n      return _this.translate(key);\n    }));\n    var selected = this.valueModel.isValueSelected(value);\n    listItem.setSelected(selected);\n    listItem.addEventListener(SetFilterListItem.EVENT_SELECTED, function () {\n      return _this.onItemSelected(value, listItem.isSelected());\n    });\n    return listItem;\n  };\n\n  SetFilter.prototype.initMiniFilter = function () {\n    var _this = this;\n\n    var eMiniFilter = this.eMiniFilter;\n\n    _.setDisplayed(eMiniFilter.getGui(), !this.setFilterParams.suppressMiniFilter);\n\n    eMiniFilter.setValue(this.valueModel.getMiniFilter());\n    eMiniFilter.onValueChange(function () {\n      return _this.onMiniFilterInput();\n    });\n    this.addManagedListener(eMiniFilter.getInputElement(), 'keypress', function (e) {\n      return _this.onMiniFilterKeyPress(e);\n    });\n  };\n\n  SetFilter.prototype.initSelectAll = function () {\n    var _this = this;\n\n    if (this.setFilterParams.suppressSelectAll) {\n      _.setDisplayed(this.eSelectAllContainer, false);\n    } else {\n      this.eSelectAll.onValueChange(function () {\n        return _this.onSelectAll();\n      });\n    }\n  }; // we need to have the GUI attached before we can draw the virtual rows, as the\n  // virtual row logic needs info about the GUI state\n\n\n  SetFilter.prototype.afterGuiAttached = function (params) {\n    _super.prototype.afterGuiAttached.call(this, params);\n\n    this.refreshVirtualList();\n\n    if (this.setFilterParams.excelMode) {\n      this.resetUiToActiveModel();\n    }\n\n    var eMiniFilter = this.eMiniFilter;\n    eMiniFilter.setInputPlaceholder(this.translate('searchOoo'));\n    eMiniFilter.getFocusableElement().focus();\n  };\n\n  SetFilter.prototype.applyModel = function () {\n    var _this = this;\n\n    if (this.setFilterParams.excelMode && this.valueModel.isEverythingVisibleSelected()) {\n      // In Excel, if the filter is applied with all visible values selected, then any active filter on the\n      // column is removed. This ensures the filter is removed in this situation.\n      this.valueModel.selectAllMatchingMiniFilter();\n    }\n\n    var result = _super.prototype.applyModel.call(this);\n\n    if (result) {\n      // keep appliedModelValues in sync with the applied model\n      var appliedModel = this.getModel();\n\n      if (appliedModel) {\n        this.appliedModelValues = {};\n\n        _.forEach(appliedModel.values, function (value) {\n          return _this.appliedModelValues[value] = true;\n        });\n      } else {\n        this.appliedModelValues = null;\n      }\n    }\n\n    return result;\n  };\n\n  SetFilter.prototype.isModelValid = function (model) {\n    return this.setFilterParams.excelMode ? model == null || model.values.length > 0 : true;\n  };\n\n  SetFilter.prototype.doesFilterPass = function (params) {\n    var _this = this;\n\n    if (this.appliedModelValues == null) {\n      return true;\n    }\n\n    var _a = this.setFilterParams,\n        valueGetter = _a.valueGetter,\n        keyCreator = _a.colDef.keyCreator;\n    var value = valueGetter(params.node);\n\n    if (keyCreator) {\n      value = keyCreator({\n        value: value\n      });\n    }\n\n    value = _.makeNull(value);\n\n    if (Array.isArray(value)) {\n      return _.some(value, function (v) {\n        return _this.appliedModelValues[_.makeNull(v)] === true;\n      });\n    } // Comparing against a value performs better than just checking for undefined\n    // https://jsbench.me/hdk91jbw1h/\n\n\n    return this.appliedModelValues[value] === true;\n  };\n\n  SetFilter.prototype.onNewRowsLoaded = function () {\n    var valuesType = this.valueModel.getValuesType();\n    var keepSelection = this.isNewRowsActionKeep();\n    this.syncAfterDataChange(valuesType === SetFilterModelValuesType.TAKEN_FROM_GRID_VALUES, keepSelection);\n  }; //noinspection JSUnusedGlobalSymbols\n\n  /**\n   * Public method provided so the user can change the value of the filter once\n   * the filter has been already started\n   * @param options The options to use.\n   */\n\n\n  SetFilter.prototype.setFilterValues = function (options) {\n    var _this = this;\n\n    this.valueModel.overrideValues(options, this.isNewRowsActionKeep()).then(function () {\n      _this.refresh();\n\n      _this.onUiChanged();\n    });\n  }; //noinspection JSUnusedGlobalSymbols\n\n  /**\n   * Public method provided so the user can reset the values of the filter once that it has started.\n   */\n\n\n  SetFilter.prototype.resetFilterValues = function () {\n    this.valueModel.setValuesType(SetFilterModelValuesType.TAKEN_FROM_GRID_VALUES);\n    this.syncAfterDataChange(true, this.isNewRowsActionKeep());\n  };\n\n  SetFilter.prototype.refreshFilterValues = function () {\n    var _this = this;\n\n    this.valueModel.refreshValues().then(function () {\n      _this.refresh();\n\n      _this.onUiChanged();\n    });\n  };\n\n  SetFilter.prototype.onAnyFilterChanged = function () {\n    this.valueModel.refreshAfterAnyFilterChanged();\n    this.virtualList.refresh();\n  };\n\n  SetFilter.prototype.updateSelectAllCheckbox = function () {\n    if (this.valueModel.isEverythingVisibleSelected()) {\n      this.selectAllState = true;\n    } else if (this.valueModel.isNothingVisibleSelected()) {\n      this.selectAllState = false;\n    } else {\n      this.selectAllState = undefined;\n    }\n\n    this.eSelectAll.setValue(this.selectAllState, true);\n  };\n\n  SetFilter.prototype.onMiniFilterInput = function () {\n    if (this.valueModel.setMiniFilter(this.eMiniFilter.getValue())) {\n      if (this.setFilterParams.applyMiniFilterWhileTyping) {\n        this.filterOnAllVisibleValues(false);\n      } else {\n        this.updateUiAfterMiniFilterChange();\n      }\n    }\n  };\n\n  SetFilter.prototype.updateUiAfterMiniFilterChange = function () {\n    if (this.setFilterParams.excelMode) {\n      if (this.valueModel.getMiniFilter() == null) {\n        this.resetUiToActiveModel();\n      } else {\n        this.valueModel.selectAllMatchingMiniFilter(true);\n        this.refresh();\n        this.onUiChanged();\n      }\n    } else {\n      this.refresh();\n    }\n\n    var hideResults = this.valueModel.getMiniFilter() != null && this.valueModel.getDisplayedValueCount() < 1;\n\n    _.setDisplayed(this.eNoMatches, hideResults);\n\n    if (!this.setFilterParams.suppressSelectAll) {\n      _.setDisplayed(this.eSelectAllContainer, !hideResults);\n    }\n  };\n\n  SetFilter.prototype.resetUiToActiveModel = function () {\n    var _this = this;\n\n    this.eMiniFilter.setValue(null, true);\n    this.valueModel.setMiniFilter(null);\n    this.setModelIntoUi(this.getModel()).then(function () {\n      return _this.onUiChanged(false, 'prevent');\n    });\n  };\n\n  SetFilter.prototype.updateSelectAllLabel = function () {\n    var label = this.valueModel.getMiniFilter() == null || !this.setFilterParams.excelMode ? this.translate('selectAll') : this.translate('selectAllSearchResults');\n    this.eSelectAllLabel.innerText = \"(\" + label + \")\";\n  };\n\n  SetFilter.prototype.onMiniFilterKeyPress = function (e) {\n    if (_.isKeyPressed(e, Constants.KEY_ENTER) && !this.setFilterParams.excelMode) {\n      this.filterOnAllVisibleValues();\n    }\n  };\n\n  SetFilter.prototype.filterOnAllVisibleValues = function (applyImmediately) {\n    if (applyImmediately === void 0) {\n      applyImmediately = true;\n    }\n\n    this.valueModel.selectAllMatchingMiniFilter(true);\n    this.refresh();\n    this.onUiChanged(false, applyImmediately ? 'immediately' : 'debounce');\n  };\n\n  SetFilter.prototype.onSelectAll = function () {\n    this.selectAllState = !this.selectAllState;\n\n    if (this.selectAllState) {\n      this.valueModel.selectAllMatchingMiniFilter();\n    } else {\n      this.valueModel.deselectAllMatchingMiniFilter();\n    }\n\n    this.refresh();\n    this.onUiChanged();\n  };\n\n  SetFilter.prototype.onItemSelected = function (value, selected) {\n    var _this = this;\n\n    if (selected) {\n      this.valueModel.selectValue(value);\n    } else {\n      this.valueModel.deselectValue(value);\n    }\n\n    var focusedRow = this.virtualList.getLastFocusedRow();\n    this.updateSelectAllCheckbox();\n    this.onUiChanged();\n\n    if (_.exists(focusedRow)) {\n      window.setTimeout(function () {\n        if (_this.isAlive()) {\n          _this.virtualList.focusRow(focusedRow);\n        }\n      }, 10);\n    }\n  };\n\n  SetFilter.prototype.setMiniFilter = function (newMiniFilter) {\n    this.eMiniFilter.setValue(newMiniFilter);\n    this.onMiniFilterInput();\n  };\n\n  SetFilter.prototype.getMiniFilter = function () {\n    return this.valueModel.getMiniFilter();\n  };\n  /** @deprecated since version 23.2. Please use setModel instead. */\n\n\n  SetFilter.prototype.selectEverything = function () {\n    var message = 'ag-Grid: since version 23.2, selectEverything has been deprecated. Please use setModel instead.';\n\n    _.doOnce(function () {\n      return console.warn(message);\n    }, 'setFilter.selectEverything');\n\n    this.valueModel.selectAllMatchingMiniFilter();\n    this.refresh();\n  };\n  /** @deprecated since version 23.2. Please use setModel instead. */\n\n\n  SetFilter.prototype.selectNothing = function () {\n    var message = 'ag-Grid: since version 23.2, selectNothing has been deprecated. Please use setModel instead.';\n\n    _.doOnce(function () {\n      return console.warn(message);\n    }, 'setFilter.selectNothing');\n\n    this.valueModel.deselectAllMatchingMiniFilter();\n    this.refresh();\n  };\n  /** @deprecated since version 23.2. Please use setModel instead. */\n\n\n  SetFilter.prototype.unselectValue = function (value) {\n    var message = 'ag-Grid: since version 23.2, unselectValue has been deprecated. Please use setModel instead.';\n\n    _.doOnce(function () {\n      return console.warn(message);\n    }, 'setFilter.unselectValue');\n\n    this.valueModel.deselectValue(value);\n    this.refresh();\n  };\n  /** @deprecated since version 23.2. Please use setModel instead. */\n\n\n  SetFilter.prototype.selectValue = function (value) {\n    var message = 'ag-Grid: since version 23.2, selectValue has been deprecated. Please use setModel instead.';\n\n    _.doOnce(function () {\n      return console.warn(message);\n    }, 'setFilter.selectValue');\n\n    this.valueModel.selectValue(value);\n    this.refresh();\n  };\n\n  SetFilter.prototype.refresh = function () {\n    this.virtualList.refresh();\n    this.updateSelectAllCheckbox();\n    this.updateSelectAllLabel();\n  };\n  /** @deprecated since version 23.2. Please use getModel instead. */\n\n\n  SetFilter.prototype.isValueSelected = function (value) {\n    var message = 'ag-Grid: since version 23.2, isValueSelected has been deprecated. Please use getModel instead.';\n\n    _.doOnce(function () {\n      return console.warn(message);\n    }, 'setFilter.isValueSelected');\n\n    return this.valueModel.isValueSelected(value);\n  };\n  /** @deprecated since version 23.2. Please use getModel instead. */\n\n\n  SetFilter.prototype.isEverythingSelected = function () {\n    var message = 'ag-Grid: since version 23.2, isEverythingSelected has been deprecated. Please use getModel instead.';\n\n    _.doOnce(function () {\n      return console.warn(message);\n    }, 'setFilter.isEverythingSelected');\n\n    return this.valueModel.isEverythingVisibleSelected();\n  };\n  /** @deprecated since version 23.2. Please use getModel instead. */\n\n\n  SetFilter.prototype.isNothingSelected = function () {\n    var message = 'ag-Grid: since version 23.2, isNothingSelected has been deprecated. Please use getModel instead.';\n\n    _.doOnce(function () {\n      return console.warn(message);\n    }, 'setFilter.isNothingSelected');\n\n    return this.valueModel.isNothingVisibleSelected();\n  };\n  /** @deprecated since version 23.2. Please use getValues instead. */\n\n\n  SetFilter.prototype.getUniqueValueCount = function () {\n    var message = 'ag-Grid: since version 23.2, getUniqueValueCount has been deprecated. Please use getValues instead.';\n\n    _.doOnce(function () {\n      return console.warn(message);\n    }, 'setFilter.getUniqueValueCount');\n\n    return this.valueModel.getUniqueValueCount();\n  };\n  /** @deprecated since version 23.2. Please use getValues instead. */\n\n\n  SetFilter.prototype.getUniqueValue = function (index) {\n    var message = 'ag-Grid: since version 23.2, getUniqueValue has been deprecated. Please use getValues instead.';\n\n    _.doOnce(function () {\n      return console.warn(message);\n    }, 'setFilter.getUniqueValue');\n\n    return this.valueModel.getUniqueValue(index);\n  };\n\n  SetFilter.prototype.getValues = function () {\n    return this.valueModel.getValues();\n  };\n\n  SetFilter.prototype.refreshVirtualList = function () {\n    if (this.setFilterParams.refreshValuesOnOpen) {\n      this.refreshFilterValues();\n    } else {\n      this.virtualList.refresh();\n    }\n  };\n\n  SetFilter.prototype.translate = function (key) {\n    var translate = this.gridOptionsWrapper.getLocaleTextFunc();\n    return translate(key, DEFAULT_LOCALE_TEXT[key]);\n  };\n\n  __decorate([RefSelector('eSelectAll')], SetFilter.prototype, \"eSelectAll\", void 0);\n\n  __decorate([RefSelector('eSelectAllLabel')], SetFilter.prototype, \"eSelectAllLabel\", void 0);\n\n  __decorate([RefSelector('eMiniFilter')], SetFilter.prototype, \"eMiniFilter\", void 0);\n\n  __decorate([RefSelector('eFilterLoading')], SetFilter.prototype, \"eFilterLoading\", void 0);\n\n  __decorate([RefSelector('eSetFilterList')], SetFilter.prototype, \"eSetFilterList\", void 0);\n\n  __decorate([RefSelector('eFilterNoMatches')], SetFilter.prototype, \"eNoMatches\", void 0);\n\n  __decorate([RefSelector('eSelectAllContainer')], SetFilter.prototype, \"eSelectAllContainer\", void 0);\n\n  __decorate([Autowired('valueFormatterService')], SetFilter.prototype, \"valueFormatterService\", void 0);\n\n  __decorate([Autowired('focusController')], SetFilter.prototype, \"focusController\", void 0);\n\n  return SetFilter;\n}(ProvidedFilter);\n\nexport { SetFilter };\n\nvar ModelWrapper =\n/** @class */\nfunction () {\n  function ModelWrapper(model) {\n    this.model = model;\n  }\n\n  ModelWrapper.prototype.getRowCount = function () {\n    return this.model.getDisplayedValueCount();\n  };\n\n  ModelWrapper.prototype.getRow = function (index) {\n    return this.model.getDisplayedValue(index);\n  };\n\n  return ModelWrapper;\n}();","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/@ag-grid-enterprise/set-filter/dist/es6/setFilter/setFilter.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Autowired","Constants","Events","ProvidedFilter","RefSelector","VirtualList","Promise","_","SetFilterModelValuesType","SetValueModel","SetFilterListItem","DEFAULT_LOCALE_TEXT","SetFilter","_super","_this","apply","appliedModelValues","updateUiVisibility","postConstruct","call","focusableEl","getFocusableElement","addManagedListener","handleKeyDown","bind","createBodyTemplate","translate","e","defaultPrevented","which","keyCode","KEY_TAB","handleKeyTab","KEY_SPACE","handleKeySpace","KEY_ENTER","handleKeyEnter","eSetFilterList","contains","document","activeElement","focusableElement","method","shiftKey","currentRoot","nextRoot","parentElement","focusController","focusLastFocusableElement","focusFirstFocusableElement","preventDefault","currentItem","virtualList","getLastFocusedRow","exists","component","getComponentAt","setSelected","isSelected","setFilterParams","excelMode","onBtApply","eMiniFilter","getInputElement","select","getCssIdentifier","resetUiToDefaults","setMiniFilter","valueModel","setModel","then","refresh","setModelIntoUi","model","message_1","doOnce","console","warn","values","getModelFromUi","getModel","gridOptionsWrapper","isEnableOldSetFilterModel","filterType","getValueModel","areModelsEqual","a","areEqual","setParams","params","applyExcelModeOptions","checkSetFilterDeprecatedParams","rowModel","colDef","column","valueGetter","doesRowPassOtherFilter","suppressSorting","loading","setLoading","valueFormatterService","initialiseFilterBodyUi","syncValuesAfterDataChange","getType","ROW_MODEL_TYPE_CLIENT_SIDE","suppressSyncValuesAfterDataChange","addEventListenersForDataChanges","buttons","closeOnApply","applyMiniFilterWhileTyping","debounceMs","syncValuesLikeExcel","message_2","selectAllOnMiniFilter","message_3","message_4","suppressRemoveEntries","message_5","eventService","EVENT_ROW_DATA_UPDATED","syncAfterDataChange","EVENT_CELL_VALUE_CHANGED","event","refreshValues","keepSelection","promise","resolve","message","setDisplayed","eFilterLoading","initVirtualList","initMiniFilter","initSelectAll","createBean","getRefElement","appendChild","getGui","cellHeight","setRowHeight","setComponentCreator","value","createSetListItem","ModelWrapper","listItem","selected","isValueSelected","addEventListener","EVENT_SELECTED","onItemSelected","suppressMiniFilter","setValue","getMiniFilter","onValueChange","onMiniFilterInput","onMiniFilterKeyPress","suppressSelectAll","eSelectAllContainer","eSelectAll","onSelectAll","afterGuiAttached","refreshVirtualList","resetUiToActiveModel","setInputPlaceholder","focus","applyModel","isEverythingVisibleSelected","selectAllMatchingMiniFilter","result","appliedModel","forEach","isModelValid","doesFilterPass","_a","keyCreator","node","makeNull","isArray","some","v","onNewRowsLoaded","valuesType","getValuesType","isNewRowsActionKeep","TAKEN_FROM_GRID_VALUES","setFilterValues","options","overrideValues","onUiChanged","resetFilterValues","setValuesType","refreshFilterValues","onAnyFilterChanged","refreshAfterAnyFilterChanged","updateSelectAllCheckbox","selectAllState","isNothingVisibleSelected","undefined","getValue","filterOnAllVisibleValues","updateUiAfterMiniFilterChange","hideResults","getDisplayedValueCount","eNoMatches","updateSelectAllLabel","label","eSelectAllLabel","innerText","isKeyPressed","applyImmediately","deselectAllMatchingMiniFilter","selectValue","deselectValue","focusedRow","window","setTimeout","isAlive","focusRow","newMiniFilter","selectEverything","selectNothing","unselectValue","isEverythingSelected","isNothingSelected","getUniqueValueCount","getUniqueValue","index","getValues","refreshValuesOnOpen","getLocaleTextFunc","getRowCount","getRow","getDisplayedValue"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Autowired, Constants, Events, ProvidedFilter, RefSelector, VirtualList, Promise, _ } from '@ag-grid-community/core';\nimport { SetFilterModelValuesType, SetValueModel } from './setValueModel';\nimport { SetFilterListItem } from './setFilterListItem';\nimport { DEFAULT_LOCALE_TEXT } from './localeText';\nvar SetFilter = /** @class */ (function (_super) {\n    __extends(SetFilter, _super);\n    function SetFilter() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        // To make the filtering super fast, we store the values in an object, and check for the boolean value.\n        // Although Set would be a more natural choice of data structure, its performance across browsers is\n        // significantly worse than using an object: https://jsbench.me/hdk91jbw1h/\n        _this.appliedModelValues = null;\n        return _this;\n    }\n    // unlike the simple filters, nothing in the set filter UI shows/hides.\n    // maybe this method belongs in abstractSimpleFilter???\n    SetFilter.prototype.updateUiVisibility = function () { };\n    SetFilter.prototype.postConstruct = function () {\n        _super.prototype.postConstruct.call(this);\n        var focusableEl = this.getFocusableElement();\n        if (focusableEl) {\n            this.addManagedListener(focusableEl, 'keydown', this.handleKeyDown.bind(this));\n        }\n    };\n    SetFilter.prototype.createBodyTemplate = function () {\n        return /* html */ \"\\n            <div>\\n                <div ref=\\\"eFilterLoading\\\" class=\\\"ag-filter-loading ag-hidden\\\">\" + this.translate('loadingOoo') + \"</div>\\n                <div class=\\\"ag-filter-header-container\\\" role=\\\"presentation\\\">\\n                    <ag-input-text-field class=\\\"ag-mini-filter\\\" ref=\\\"eMiniFilter\\\"></ag-input-text-field>\\n                    <label ref=\\\"eSelectAllContainer\\\" class=\\\"ag-set-filter-item ag-set-filter-select-all\\\">\\n                        <ag-checkbox ref=\\\"eSelectAll\\\" class=\\\"ag-set-filter-item-checkbox\\\"></ag-checkbox>\\n                        <span ref=\\\"eSelectAllLabel\\\" class=\\\"ag-set-filter-item-value\\\"></span>\\n                    </label>\\n                </div>\\n                <div ref=\\\"eFilterNoMatches\\\" class=\\\"ag-filter-no-matches ag-hidden\\\">\" + this.translate('noMatches') + \"</div>\\n                <div ref=\\\"eSetFilterList\\\" class=\\\"ag-set-filter-list\\\" role=\\\"presentation\\\"></div>\\n            </div>\";\n    };\n    SetFilter.prototype.handleKeyDown = function (e) {\n        if (e.defaultPrevented) {\n            return;\n        }\n        switch (e.which || e.keyCode) {\n            case Constants.KEY_TAB:\n                this.handleKeyTab(e);\n                break;\n            case Constants.KEY_SPACE:\n                this.handleKeySpace(e);\n                break;\n            case Constants.KEY_ENTER:\n                this.handleKeyEnter(e);\n                break;\n        }\n    };\n    SetFilter.prototype.handleKeyTab = function (e) {\n        if (!this.eSetFilterList.contains(document.activeElement)) {\n            return;\n        }\n        var focusableElement = this.getFocusableElement();\n        var method = e.shiftKey ? 'previousElementSibling' : 'nextElementSibling';\n        var currentRoot = this.eSetFilterList;\n        var nextRoot;\n        while (currentRoot !== focusableElement && !nextRoot) {\n            nextRoot = currentRoot[method];\n            currentRoot = currentRoot.parentElement;\n        }\n        if (!nextRoot) {\n            return;\n        }\n        if ((e.shiftKey && this.focusController.focusLastFocusableElement(nextRoot)) ||\n            (!e.shiftKey && this.focusController.focusFirstFocusableElement(nextRoot))) {\n            e.preventDefault();\n        }\n    };\n    SetFilter.prototype.handleKeySpace = function (e) {\n        if (!this.eSetFilterList.contains(document.activeElement)) {\n            return;\n        }\n        var currentItem = this.virtualList.getLastFocusedRow();\n        if (_.exists(currentItem)) {\n            var component = this.virtualList.getComponentAt(currentItem);\n            if (component) {\n                e.preventDefault();\n                component.setSelected(!component.isSelected(), true);\n            }\n        }\n    };\n    SetFilter.prototype.handleKeyEnter = function (e) {\n        if (this.setFilterParams.excelMode) {\n            e.preventDefault();\n            // in Excel Mode, hitting Enter is the same as pressing the Apply button\n            this.onBtApply(false, false, e);\n            if (this.setFilterParams.excelMode === 'mac') {\n                // in Mac version, select all the input text\n                this.eMiniFilter.getInputElement().select();\n            }\n        }\n    };\n    SetFilter.prototype.getCssIdentifier = function () {\n        return 'set-filter';\n    };\n    SetFilter.prototype.resetUiToDefaults = function () {\n        var _this = this;\n        this.setMiniFilter(null);\n        return this.valueModel.setModel(null).then(function () { return _this.refresh(); });\n    };\n    SetFilter.prototype.setModelIntoUi = function (model) {\n        var _this = this;\n        this.setMiniFilter(null);\n        if (model instanceof Array) {\n            var message_1 = 'ag-Grid: The Set Filter Model is no longer an array and models as arrays are ' +\n                'deprecated. Please check the docs on what the set filter model looks like. Future versions of ' +\n                'ag-Grid will have the array version of the model removed.';\n            _.doOnce(function () { return console.warn(message_1); }, 'setFilter.modelAsArray');\n        }\n        // also supporting old filter model for backwards compatibility\n        var values = model == null ? null : (model instanceof Array ? model : model.values);\n        return this.valueModel.setModel(values).then(function () { return _this.refresh(); });\n    };\n    SetFilter.prototype.getModelFromUi = function () {\n        var values = this.valueModel.getModel();\n        if (!values) {\n            return null;\n        }\n        if (this.gridOptionsWrapper.isEnableOldSetFilterModel()) {\n            // this is a hack, it breaks casting rules, to apply with old model\n            return values;\n        }\n        return { values: values, filterType: 'set' };\n    };\n    SetFilter.prototype.getValueModel = function () {\n        return this.valueModel;\n    };\n    SetFilter.prototype.areModelsEqual = function (a, b) {\n        // both are missing\n        if (a == null && b == null) {\n            return true;\n        }\n        return a != null && b != null && _.areEqual(a.values, b.values);\n    };\n    SetFilter.prototype.setParams = function (params) {\n        var _this = this;\n        this.applyExcelModeOptions(params);\n        _super.prototype.setParams.call(this, params);\n        this.checkSetFilterDeprecatedParams(params);\n        this.setFilterParams = params;\n        this.valueModel = new SetValueModel(params.rowModel, params.colDef, params.column, params.valueGetter, params.doesRowPassOtherFilter, params.suppressSorting, function (loading) { return _this.setLoading(loading); }, this.valueFormatterService, function (key) { return _this.translate(key); });\n        this.initialiseFilterBodyUi();\n        var syncValuesAfterDataChange = this.rowModel.getType() === Constants.ROW_MODEL_TYPE_CLIENT_SIDE &&\n            !params.values &&\n            !params.suppressSyncValuesAfterDataChange;\n        if (syncValuesAfterDataChange) {\n            this.addEventListenersForDataChanges();\n        }\n    };\n    SetFilter.prototype.applyExcelModeOptions = function (params) {\n        // apply default options to match Excel behaviour, unless they have already been specified\n        if (params.excelMode === 'windows') {\n            if (!params.buttons) {\n                params.buttons = ['apply', 'cancel'];\n            }\n            if (params.closeOnApply == null) {\n                params.closeOnApply = true;\n            }\n        }\n        else if (params.excelMode === 'mac') {\n            if (!params.buttons) {\n                params.buttons = ['reset'];\n            }\n            if (params.applyMiniFilterWhileTyping == null) {\n                params.applyMiniFilterWhileTyping = true;\n            }\n            if (params.debounceMs == null) {\n                params.debounceMs = 500;\n            }\n        }\n    };\n    SetFilter.prototype.checkSetFilterDeprecatedParams = function (params) {\n        if (params.syncValuesLikeExcel) {\n            var message_2 = 'ag-Grid: since version 22.x, the Set Filter param syncValuesLikeExcel is no longer' +\n                ' used as this is the default behaviour. To turn this default behaviour off, use the' +\n                ' param suppressSyncValuesAfterDataChange';\n            _.doOnce(function () { return console.warn(message_2); }, 'syncValuesLikeExcel deprecated');\n        }\n        if (params.selectAllOnMiniFilter) {\n            var message_3 = 'ag-Grid: since version 22.x, the Set Filter param selectAllOnMiniFilter is no longer' +\n                ' used as this is the default behaviour.';\n            _.doOnce(function () { return console.warn(message_3); }, 'selectAllOnMiniFilter deprecated');\n        }\n        if (params.suppressSyncValuesAfterDataChange) {\n            var message_4 = 'ag-Grid: since version 23.1, the Set Filter param suppressSyncValuesAfterDataChange has' +\n                ' been deprecated and will be removed in a future major release.';\n            _.doOnce(function () { return console.warn(message_4); }, 'suppressSyncValuesAfterDataChange deprecated');\n        }\n        if (params.suppressRemoveEntries) {\n            var message_5 = 'ag-Grid: since version 23.1, the Set Filter param suppressRemoveEntries has' +\n                ' been deprecated and will be removed in a future major release.';\n            _.doOnce(function () { return console.warn(message_5); }, 'suppressRemoveEntries deprecated');\n        }\n    };\n    SetFilter.prototype.addEventListenersForDataChanges = function () {\n        var _this = this;\n        this.addManagedListener(this.eventService, Events.EVENT_ROW_DATA_UPDATED, function () { return _this.syncAfterDataChange(); });\n        this.addManagedListener(this.eventService, Events.EVENT_CELL_VALUE_CHANGED, function (event) {\n            // only interested in changes to do with this column\n            if (event.column === _this.setFilterParams.column) {\n                _this.syncAfterDataChange();\n            }\n        });\n    };\n    SetFilter.prototype.syncAfterDataChange = function (refreshValues, keepSelection) {\n        var _this = this;\n        if (refreshValues === void 0) { refreshValues = true; }\n        if (keepSelection === void 0) { keepSelection = true; }\n        var promise = Promise.resolve(null);\n        if (refreshValues) {\n            promise = this.valueModel.refreshValues(keepSelection);\n        }\n        else if (!keepSelection) {\n            promise = this.valueModel.setModel(null);\n        }\n        promise.then(function () {\n            _this.refresh();\n            _this.onBtApply(false, true);\n        });\n    };\n    /** @deprecated since version 23.2. The loading screen is displayed automatically when the set filter is retrieving values. */\n    SetFilter.prototype.setLoading = function (loading) {\n        var message = 'ag-Grid: since version 23.2, setLoading has been deprecated. The loading screen is displayed automatically when the set filter is retrieving values.';\n        _.doOnce(function () { return console.warn(message); }, 'setFilter.setLoading');\n        _.setDisplayed(this.eFilterLoading, loading);\n    };\n    SetFilter.prototype.initialiseFilterBodyUi = function () {\n        this.initVirtualList();\n        this.initMiniFilter();\n        this.initSelectAll();\n    };\n    SetFilter.prototype.initVirtualList = function () {\n        var _this = this;\n        var virtualList = this.virtualList = this.createBean(new VirtualList('filter'));\n        var eSetFilterList = this.getRefElement('eSetFilterList');\n        if (eSetFilterList) {\n            eSetFilterList.appendChild(virtualList.getGui());\n        }\n        var cellHeight = this.setFilterParams.cellHeight;\n        if (cellHeight != null) {\n            virtualList.setRowHeight(cellHeight);\n        }\n        virtualList.setComponentCreator(function (value) { return _this.createSetListItem(value); });\n        virtualList.setModel(new ModelWrapper(this.valueModel));\n    };\n    SetFilter.prototype.createSetListItem = function (value) {\n        var _this = this;\n        var listItem = this.createBean(new SetFilterListItem(value, this.setFilterParams, function (key) { return _this.translate(key); }));\n        var selected = this.valueModel.isValueSelected(value);\n        listItem.setSelected(selected);\n        listItem.addEventListener(SetFilterListItem.EVENT_SELECTED, function () { return _this.onItemSelected(value, listItem.isSelected()); });\n        return listItem;\n    };\n    SetFilter.prototype.initMiniFilter = function () {\n        var _this = this;\n        var eMiniFilter = this.eMiniFilter;\n        _.setDisplayed(eMiniFilter.getGui(), !this.setFilterParams.suppressMiniFilter);\n        eMiniFilter.setValue(this.valueModel.getMiniFilter());\n        eMiniFilter.onValueChange(function () { return _this.onMiniFilterInput(); });\n        this.addManagedListener(eMiniFilter.getInputElement(), 'keypress', function (e) { return _this.onMiniFilterKeyPress(e); });\n    };\n    SetFilter.prototype.initSelectAll = function () {\n        var _this = this;\n        if (this.setFilterParams.suppressSelectAll) {\n            _.setDisplayed(this.eSelectAllContainer, false);\n        }\n        else {\n            this.eSelectAll.onValueChange(function () { return _this.onSelectAll(); });\n        }\n    };\n    // we need to have the GUI attached before we can draw the virtual rows, as the\n    // virtual row logic needs info about the GUI state\n    SetFilter.prototype.afterGuiAttached = function (params) {\n        _super.prototype.afterGuiAttached.call(this, params);\n        this.refreshVirtualList();\n        if (this.setFilterParams.excelMode) {\n            this.resetUiToActiveModel();\n        }\n        var eMiniFilter = this.eMiniFilter;\n        eMiniFilter.setInputPlaceholder(this.translate('searchOoo'));\n        eMiniFilter.getFocusableElement().focus();\n    };\n    SetFilter.prototype.applyModel = function () {\n        var _this = this;\n        if (this.setFilterParams.excelMode && this.valueModel.isEverythingVisibleSelected()) {\n            // In Excel, if the filter is applied with all visible values selected, then any active filter on the\n            // column is removed. This ensures the filter is removed in this situation.\n            this.valueModel.selectAllMatchingMiniFilter();\n        }\n        var result = _super.prototype.applyModel.call(this);\n        if (result) {\n            // keep appliedModelValues in sync with the applied model\n            var appliedModel = this.getModel();\n            if (appliedModel) {\n                this.appliedModelValues = {};\n                _.forEach(appliedModel.values, function (value) { return _this.appliedModelValues[value] = true; });\n            }\n            else {\n                this.appliedModelValues = null;\n            }\n        }\n        return result;\n    };\n    SetFilter.prototype.isModelValid = function (model) {\n        return this.setFilterParams.excelMode ? model == null || model.values.length > 0 : true;\n    };\n    SetFilter.prototype.doesFilterPass = function (params) {\n        var _this = this;\n        if (this.appliedModelValues == null) {\n            return true;\n        }\n        var _a = this.setFilterParams, valueGetter = _a.valueGetter, keyCreator = _a.colDef.keyCreator;\n        var value = valueGetter(params.node);\n        if (keyCreator) {\n            value = keyCreator({ value: value });\n        }\n        value = _.makeNull(value);\n        if (Array.isArray(value)) {\n            return _.some(value, function (v) { return _this.appliedModelValues[_.makeNull(v)] === true; });\n        }\n        // Comparing against a value performs better than just checking for undefined\n        // https://jsbench.me/hdk91jbw1h/\n        return this.appliedModelValues[value] === true;\n    };\n    SetFilter.prototype.onNewRowsLoaded = function () {\n        var valuesType = this.valueModel.getValuesType();\n        var keepSelection = this.isNewRowsActionKeep();\n        this.syncAfterDataChange(valuesType === SetFilterModelValuesType.TAKEN_FROM_GRID_VALUES, keepSelection);\n    };\n    //noinspection JSUnusedGlobalSymbols\n    /**\n     * Public method provided so the user can change the value of the filter once\n     * the filter has been already started\n     * @param options The options to use.\n     */\n    SetFilter.prototype.setFilterValues = function (options) {\n        var _this = this;\n        this.valueModel.overrideValues(options, this.isNewRowsActionKeep()).then(function () {\n            _this.refresh();\n            _this.onUiChanged();\n        });\n    };\n    //noinspection JSUnusedGlobalSymbols\n    /**\n     * Public method provided so the user can reset the values of the filter once that it has started.\n     */\n    SetFilter.prototype.resetFilterValues = function () {\n        this.valueModel.setValuesType(SetFilterModelValuesType.TAKEN_FROM_GRID_VALUES);\n        this.syncAfterDataChange(true, this.isNewRowsActionKeep());\n    };\n    SetFilter.prototype.refreshFilterValues = function () {\n        var _this = this;\n        this.valueModel.refreshValues().then(function () {\n            _this.refresh();\n            _this.onUiChanged();\n        });\n    };\n    SetFilter.prototype.onAnyFilterChanged = function () {\n        this.valueModel.refreshAfterAnyFilterChanged();\n        this.virtualList.refresh();\n    };\n    SetFilter.prototype.updateSelectAllCheckbox = function () {\n        if (this.valueModel.isEverythingVisibleSelected()) {\n            this.selectAllState = true;\n        }\n        else if (this.valueModel.isNothingVisibleSelected()) {\n            this.selectAllState = false;\n        }\n        else {\n            this.selectAllState = undefined;\n        }\n        this.eSelectAll.setValue(this.selectAllState, true);\n    };\n    SetFilter.prototype.onMiniFilterInput = function () {\n        if (this.valueModel.setMiniFilter(this.eMiniFilter.getValue())) {\n            if (this.setFilterParams.applyMiniFilterWhileTyping) {\n                this.filterOnAllVisibleValues(false);\n            }\n            else {\n                this.updateUiAfterMiniFilterChange();\n            }\n        }\n    };\n    SetFilter.prototype.updateUiAfterMiniFilterChange = function () {\n        if (this.setFilterParams.excelMode) {\n            if (this.valueModel.getMiniFilter() == null) {\n                this.resetUiToActiveModel();\n            }\n            else {\n                this.valueModel.selectAllMatchingMiniFilter(true);\n                this.refresh();\n                this.onUiChanged();\n            }\n        }\n        else {\n            this.refresh();\n        }\n        var hideResults = this.valueModel.getMiniFilter() != null && this.valueModel.getDisplayedValueCount() < 1;\n        _.setDisplayed(this.eNoMatches, hideResults);\n        if (!this.setFilterParams.suppressSelectAll) {\n            _.setDisplayed(this.eSelectAllContainer, !hideResults);\n        }\n    };\n    SetFilter.prototype.resetUiToActiveModel = function () {\n        var _this = this;\n        this.eMiniFilter.setValue(null, true);\n        this.valueModel.setMiniFilter(null);\n        this.setModelIntoUi(this.getModel()).then(function () { return _this.onUiChanged(false, 'prevent'); });\n    };\n    SetFilter.prototype.updateSelectAllLabel = function () {\n        var label = this.valueModel.getMiniFilter() == null || !this.setFilterParams.excelMode ?\n            this.translate('selectAll') :\n            this.translate('selectAllSearchResults');\n        this.eSelectAllLabel.innerText = \"(\" + label + \")\";\n    };\n    SetFilter.prototype.onMiniFilterKeyPress = function (e) {\n        if (_.isKeyPressed(e, Constants.KEY_ENTER) && !this.setFilterParams.excelMode) {\n            this.filterOnAllVisibleValues();\n        }\n    };\n    SetFilter.prototype.filterOnAllVisibleValues = function (applyImmediately) {\n        if (applyImmediately === void 0) { applyImmediately = true; }\n        this.valueModel.selectAllMatchingMiniFilter(true);\n        this.refresh();\n        this.onUiChanged(false, applyImmediately ? 'immediately' : 'debounce');\n    };\n    SetFilter.prototype.onSelectAll = function () {\n        this.selectAllState = !this.selectAllState;\n        if (this.selectAllState) {\n            this.valueModel.selectAllMatchingMiniFilter();\n        }\n        else {\n            this.valueModel.deselectAllMatchingMiniFilter();\n        }\n        this.refresh();\n        this.onUiChanged();\n    };\n    SetFilter.prototype.onItemSelected = function (value, selected) {\n        var _this = this;\n        if (selected) {\n            this.valueModel.selectValue(value);\n        }\n        else {\n            this.valueModel.deselectValue(value);\n        }\n        var focusedRow = this.virtualList.getLastFocusedRow();\n        this.updateSelectAllCheckbox();\n        this.onUiChanged();\n        if (_.exists(focusedRow)) {\n            window.setTimeout(function () {\n                if (_this.isAlive()) {\n                    _this.virtualList.focusRow(focusedRow);\n                }\n            }, 10);\n        }\n    };\n    SetFilter.prototype.setMiniFilter = function (newMiniFilter) {\n        this.eMiniFilter.setValue(newMiniFilter);\n        this.onMiniFilterInput();\n    };\n    SetFilter.prototype.getMiniFilter = function () {\n        return this.valueModel.getMiniFilter();\n    };\n    /** @deprecated since version 23.2. Please use setModel instead. */\n    SetFilter.prototype.selectEverything = function () {\n        var message = 'ag-Grid: since version 23.2, selectEverything has been deprecated. Please use setModel instead.';\n        _.doOnce(function () { return console.warn(message); }, 'setFilter.selectEverything');\n        this.valueModel.selectAllMatchingMiniFilter();\n        this.refresh();\n    };\n    /** @deprecated since version 23.2. Please use setModel instead. */\n    SetFilter.prototype.selectNothing = function () {\n        var message = 'ag-Grid: since version 23.2, selectNothing has been deprecated. Please use setModel instead.';\n        _.doOnce(function () { return console.warn(message); }, 'setFilter.selectNothing');\n        this.valueModel.deselectAllMatchingMiniFilter();\n        this.refresh();\n    };\n    /** @deprecated since version 23.2. Please use setModel instead. */\n    SetFilter.prototype.unselectValue = function (value) {\n        var message = 'ag-Grid: since version 23.2, unselectValue has been deprecated. Please use setModel instead.';\n        _.doOnce(function () { return console.warn(message); }, 'setFilter.unselectValue');\n        this.valueModel.deselectValue(value);\n        this.refresh();\n    };\n    /** @deprecated since version 23.2. Please use setModel instead. */\n    SetFilter.prototype.selectValue = function (value) {\n        var message = 'ag-Grid: since version 23.2, selectValue has been deprecated. Please use setModel instead.';\n        _.doOnce(function () { return console.warn(message); }, 'setFilter.selectValue');\n        this.valueModel.selectValue(value);\n        this.refresh();\n    };\n    SetFilter.prototype.refresh = function () {\n        this.virtualList.refresh();\n        this.updateSelectAllCheckbox();\n        this.updateSelectAllLabel();\n    };\n    /** @deprecated since version 23.2. Please use getModel instead. */\n    SetFilter.prototype.isValueSelected = function (value) {\n        var message = 'ag-Grid: since version 23.2, isValueSelected has been deprecated. Please use getModel instead.';\n        _.doOnce(function () { return console.warn(message); }, 'setFilter.isValueSelected');\n        return this.valueModel.isValueSelected(value);\n    };\n    /** @deprecated since version 23.2. Please use getModel instead. */\n    SetFilter.prototype.isEverythingSelected = function () {\n        var message = 'ag-Grid: since version 23.2, isEverythingSelected has been deprecated. Please use getModel instead.';\n        _.doOnce(function () { return console.warn(message); }, 'setFilter.isEverythingSelected');\n        return this.valueModel.isEverythingVisibleSelected();\n    };\n    /** @deprecated since version 23.2. Please use getModel instead. */\n    SetFilter.prototype.isNothingSelected = function () {\n        var message = 'ag-Grid: since version 23.2, isNothingSelected has been deprecated. Please use getModel instead.';\n        _.doOnce(function () { return console.warn(message); }, 'setFilter.isNothingSelected');\n        return this.valueModel.isNothingVisibleSelected();\n    };\n    /** @deprecated since version 23.2. Please use getValues instead. */\n    SetFilter.prototype.getUniqueValueCount = function () {\n        var message = 'ag-Grid: since version 23.2, getUniqueValueCount has been deprecated. Please use getValues instead.';\n        _.doOnce(function () { return console.warn(message); }, 'setFilter.getUniqueValueCount');\n        return this.valueModel.getUniqueValueCount();\n    };\n    /** @deprecated since version 23.2. Please use getValues instead. */\n    SetFilter.prototype.getUniqueValue = function (index) {\n        var message = 'ag-Grid: since version 23.2, getUniqueValue has been deprecated. Please use getValues instead.';\n        _.doOnce(function () { return console.warn(message); }, 'setFilter.getUniqueValue');\n        return this.valueModel.getUniqueValue(index);\n    };\n    SetFilter.prototype.getValues = function () {\n        return this.valueModel.getValues();\n    };\n    SetFilter.prototype.refreshVirtualList = function () {\n        if (this.setFilterParams.refreshValuesOnOpen) {\n            this.refreshFilterValues();\n        }\n        else {\n            this.virtualList.refresh();\n        }\n    };\n    SetFilter.prototype.translate = function (key) {\n        var translate = this.gridOptionsWrapper.getLocaleTextFunc();\n        return translate(key, DEFAULT_LOCALE_TEXT[key]);\n    };\n    __decorate([\n        RefSelector('eSelectAll')\n    ], SetFilter.prototype, \"eSelectAll\", void 0);\n    __decorate([\n        RefSelector('eSelectAllLabel')\n    ], SetFilter.prototype, \"eSelectAllLabel\", void 0);\n    __decorate([\n        RefSelector('eMiniFilter')\n    ], SetFilter.prototype, \"eMiniFilter\", void 0);\n    __decorate([\n        RefSelector('eFilterLoading')\n    ], SetFilter.prototype, \"eFilterLoading\", void 0);\n    __decorate([\n        RefSelector('eSetFilterList')\n    ], SetFilter.prototype, \"eSetFilterList\", void 0);\n    __decorate([\n        RefSelector('eFilterNoMatches')\n    ], SetFilter.prototype, \"eNoMatches\", void 0);\n    __decorate([\n        RefSelector('eSelectAllContainer')\n    ], SetFilter.prototype, \"eSelectAllContainer\", void 0);\n    __decorate([\n        Autowired('valueFormatterService')\n    ], SetFilter.prototype, \"valueFormatterService\", void 0);\n    __decorate([\n        Autowired('focusController')\n    ], SetFilter.prototype, \"focusController\", void 0);\n    return SetFilter;\n}(ProvidedFilter));\nexport { SetFilter };\nvar ModelWrapper = /** @class */ (function () {\n    function ModelWrapper(model) {\n        this.model = model;\n    }\n    ModelWrapper.prototype.getRowCount = function () {\n        return this.model.getDisplayedValueCount();\n    };\n    ModelWrapper.prototype.getRow = function (index) {\n        return this.model.getDisplayedValue(index);\n    };\n    return ModelWrapper;\n}());\n"]},"metadata":{},"sourceType":"module"}