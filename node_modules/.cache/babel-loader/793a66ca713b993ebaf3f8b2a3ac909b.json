{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { _, Events, LegendPosition } from \"@ag-grid-community/core\";\nimport { CategoryAxis, DropShadow, Padding, palettes } from \"ag-charts-community\";\n\nvar ChartProxy =\n/** @class */\nfunction () {\n  function ChartProxy(chartProxyParams) {\n    var _this = this;\n\n    this.chartProxyParams = chartProxyParams;\n\n    this.isDarkTheme = function () {\n      return _this.chartProxyParams.isDarkTheme();\n    };\n\n    this.getFontColor = function () {\n      return _this.isDarkTheme() ? 'rgb(221, 221, 221)' : 'rgb(87, 87, 87)';\n    };\n\n    this.getAxisGridColor = function () {\n      return _this.isDarkTheme() ? 'rgb(100, 100, 100)' : 'rgb(219, 219, 219)';\n    };\n\n    this.getBackgroundColor = function () {\n      return _this.isDarkTheme() ? '#2d3436' : 'white';\n    };\n\n    this.getChartPaddingOption = function (property) {\n      return _this.chartOptions.padding ? \"\" + _this.chartOptions.padding[property] : '';\n    };\n\n    this.getShadowEnabled = function () {\n      return !!_this.getShadowProperty('enabled');\n    };\n\n    this.chartId = chartProxyParams.chartId;\n    this.chartType = chartProxyParams.chartType;\n    this.eventService = chartProxyParams.eventService;\n    this.gridApi = chartProxyParams.gridApi;\n    this.columnApi = chartProxyParams.columnApi;\n  }\n\n  ChartProxy.prototype.recreateChart = function (options) {\n    if (this.chart) {\n      this.destroyChart();\n    }\n\n    this.chart = this.createChart(options);\n  };\n\n  ChartProxy.prototype.getChart = function () {\n    return this.chart;\n  };\n\n  ChartProxy.prototype.downloadChart = function () {\n    var chart = this.chart;\n    var fileName = chart.title ? chart.title.text : 'chart';\n    chart.scene.download(fileName);\n  };\n\n  ChartProxy.prototype.getChartImageDataURL = function (type) {\n    return this.chart.scene.getDataURL(type);\n  };\n\n  ChartProxy.prototype.initChartOptions = function () {\n    var processChartOptions = this.chartProxyParams.processChartOptions; // allow users to override options before they are applied\n\n    if (processChartOptions) {\n      var params = {\n        type: this.chartType,\n        options: this.getDefaultOptions()\n      };\n      var overriddenOptions = processChartOptions(params);\n      var safeOptions = this.getDefaultOptions(); // ensure we have everything we need, in case the processing removed necessary options\n\n      _.mergeDeep(safeOptions, overriddenOptions, false);\n\n      this.overridePalette(safeOptions);\n      this.chartOptions = safeOptions;\n    } else {\n      this.chartOptions = this.getDefaultOptions();\n    }\n  };\n\n  ChartProxy.prototype.overridePalette = function (chartOptions) {\n    if (!this.chartProxyParams.allowPaletteOverride) {\n      return;\n    }\n\n    var _a = this.getPredefinedPalette(),\n        defaultFills = _a.fills,\n        defaultStrokes = _a.strokes;\n\n    var seriesDefaults = chartOptions.seriesDefaults;\n    var fills = seriesDefaults.fill.colors,\n        strokes = seriesDefaults.stroke.colors;\n    var fillsOverridden = fills && fills.length > 0 && fills !== defaultFills;\n    var strokesOverridden = strokes && strokes.length > 0 && strokes !== defaultStrokes;\n\n    if (fillsOverridden || strokesOverridden) {\n      this.customPalette = {\n        fills: fillsOverridden ? fills : defaultFills,\n        strokes: strokesOverridden ? strokes : defaultStrokes\n      };\n    }\n  };\n\n  ChartProxy.prototype.getChartOptions = function () {\n    return this.chartOptions;\n  };\n\n  ChartProxy.prototype.getCustomPalette = function () {\n    return this.customPalette;\n  };\n\n  ChartProxy.prototype.getChartOption = function (expression) {\n    return _.get(this.chartOptions, expression, undefined);\n  };\n\n  ChartProxy.prototype.setChartOption = function (expression, value) {\n    if (_.get(this.chartOptions, expression, undefined) === value) {\n      // option is already set to the specified value\n      return;\n    }\n\n    _.set(this.chartOptions, expression, value);\n\n    var mappings = {\n      'legend.item.marker.strokeWidth': 'legend.strokeWidth',\n      'legend.item.marker.size': 'legend.markerSize',\n      'legend.item.marker.padding': 'legend.itemSpacing',\n      'legend.item.label.fontFamily': 'legend.fontFamily',\n      'legend.item.label.fontStyle': 'legend.fontStyle',\n      'legend.item.label.fontWeight': 'legend.fontWeight',\n      'legend.item.label.fontSize': 'legend.fontSize',\n      'legend.item.label.color': 'legend.color',\n      'legend.item.paddingX': 'legend.layoutHorizontalSpacing',\n      'legend.item.paddingY': 'legend.layoutVerticalSpacing'\n    };\n\n    _.set(this.chart, mappings[expression] || expression, value);\n\n    this.raiseChartOptionsChangedEvent();\n  };\n\n  ChartProxy.prototype.getSeriesOption = function (expression) {\n    return _.get(this.chartOptions.seriesDefaults, expression, undefined);\n  };\n\n  ChartProxy.prototype.setSeriesOption = function (expression, value) {\n    if (_.get(this.chartOptions.seriesDefaults, expression, undefined) === value) {\n      // option is already set to the specified value\n      return;\n    }\n\n    _.set(this.chartOptions.seriesDefaults, expression, value);\n\n    var mappings = {\n      'stroke.width': 'strokeWidth',\n      'stroke.opacity': 'strokeOpacity',\n      'fill.opacity': 'fillOpacity',\n      'tooltip.enabled': 'tooltipEnabled',\n      'callout.colors': 'calloutColors'\n    };\n    var series = this.chart.series;\n    series.forEach(function (s) {\n      return _.set(s, mappings[expression] || expression, value);\n    });\n    this.raiseChartOptionsChangedEvent();\n  };\n\n  ChartProxy.prototype.setTitleOption = function (property, value) {\n    if (_.get(this.chartOptions.title, property, undefined) === value) {\n      // option is already set to the specified value\n      return;\n    }\n\n    this.chartOptions.title[property] = value;\n\n    if (!this.chart.title) {\n      this.chart.title = {};\n    }\n\n    this.chart.title[property] = value;\n\n    if (property === 'text') {\n      this.setTitleOption('enabled', _.exists(value));\n    }\n\n    this.raiseChartOptionsChangedEvent();\n  };\n\n  ChartProxy.prototype.getTitleOption = function (property) {\n    return this.chartOptions.title[property];\n  };\n\n  ChartProxy.prototype.setChartPaddingOption = function (property, value) {\n    var padding = this.chartOptions.padding;\n\n    if (_.get(padding, property, undefined) === value) {\n      // option is already set to the specified value\n      return;\n    }\n\n    if (!padding) {\n      padding = this.chartOptions.padding = {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      };\n      this.chart.padding = new Padding(0);\n    }\n\n    padding[property] = value;\n    this.chart.padding[property] = value;\n    this.chart.performLayout();\n    this.raiseChartOptionsChangedEvent();\n  };\n\n  ChartProxy.prototype.getShadowProperty = function (property) {\n    var seriesDefaults = this.chartOptions.seriesDefaults;\n    return seriesDefaults.shadow ? seriesDefaults.shadow[property] : '';\n  };\n\n  ChartProxy.prototype.setShadowProperty = function (property, value) {\n    var seriesDefaults = this.chartOptions.seriesDefaults;\n\n    if (_.get(seriesDefaults.shadow, property, undefined) === value) {\n      // option is already set to the specified value\n      return;\n    }\n\n    if (!seriesDefaults.shadow) {\n      seriesDefaults.shadow = {\n        enabled: false,\n        blur: 0,\n        xOffset: 0,\n        yOffset: 0,\n        color: 'rgba(0,0,0,0.5)'\n      };\n    }\n\n    seriesDefaults.shadow[property] = value;\n    var series = this.getChart().series;\n    series.forEach(function (s) {\n      if (!s.shadow) {\n        var shadow = new DropShadow();\n        shadow.enabled = false;\n        shadow.blur = 0;\n        shadow.xOffset = 0;\n        shadow.yOffset = 0;\n        shadow.color = 'rgba(0,0,0,0.5)';\n        s.shadow = shadow;\n      }\n\n      s.shadow[property] = value;\n    });\n    this.raiseChartOptionsChangedEvent();\n  };\n\n  ChartProxy.prototype.raiseChartOptionsChangedEvent = function () {\n    var event = Object.freeze({\n      type: Events.EVENT_CHART_OPTIONS_CHANGED,\n      chartId: this.chartId,\n      chartType: this.chartType,\n      chartPalette: this.chartProxyParams.getChartPaletteName(),\n      chartOptions: this.chartOptions,\n      api: this.gridApi,\n      columnApi: this.columnApi\n    });\n    this.eventService.dispatchEvent(event);\n  };\n\n  ChartProxy.prototype.getDefaultFontOptions = function () {\n    return {\n      fontStyle: 'normal',\n      fontWeight: 'normal',\n      fontSize: 12,\n      fontFamily: 'Verdana, sans-serif',\n      color: this.getFontColor()\n    };\n  };\n\n  ChartProxy.prototype.getDefaultDropShadowOptions = function () {\n    return {\n      enabled: false,\n      blur: 5,\n      xOffset: 3,\n      yOffset: 3,\n      color: 'rgba(0, 0, 0, 0.5)'\n    };\n  };\n\n  ChartProxy.prototype.getPredefinedPalette = function () {\n    return palettes.get(this.chartProxyParams.getChartPaletteName());\n  };\n\n  ChartProxy.prototype.getPalette = function () {\n    return this.customPalette || this.getPredefinedPalette();\n  };\n\n  ChartProxy.prototype.getDefaultChartOptions = function () {\n    var _a = this.getPredefinedPalette(),\n        fills = _a.fills,\n        strokes = _a.strokes;\n\n    var fontOptions = this.getDefaultFontOptions();\n    return {\n      background: {\n        fill: this.getBackgroundColor(),\n        visible: true\n      },\n      padding: {\n        top: 20,\n        right: 20,\n        bottom: 20,\n        left: 20\n      },\n      title: __assign(__assign({}, fontOptions), {\n        enabled: false,\n        fontWeight: 'bold',\n        fontSize: 16\n      }),\n      subtitle: __assign(__assign({}, fontOptions), {\n        enabled: false\n      }),\n      legend: {\n        enabled: true,\n        position: LegendPosition.Right,\n        spacing: 20,\n        item: {\n          label: __assign({}, fontOptions),\n          marker: {\n            shape: 'square',\n            size: 15,\n            padding: 8,\n            strokeWidth: 1\n          },\n          paddingX: 16,\n          paddingY: 8\n        }\n      },\n      navigator: {\n        enabled: false,\n        height: 30,\n        min: 0,\n        max: 1,\n        mask: {\n          fill: '#999999',\n          stroke: '#999999',\n          strokeWidth: 1,\n          fillOpacity: 0.2\n        },\n        minHandle: {\n          fill: '#f2f2f2',\n          stroke: '#999999',\n          strokeWidth: 1,\n          width: 8,\n          height: 16,\n          gripLineGap: 2,\n          gripLineLength: 8\n        },\n        maxHandle: {\n          fill: '#f2f2f2',\n          stroke: '#999999',\n          strokeWidth: 1,\n          width: 8,\n          height: 16,\n          gripLineGap: 2,\n          gripLineLength: 8\n        }\n      },\n      seriesDefaults: {\n        fill: {\n          colors: fills,\n          opacity: 1\n        },\n        stroke: {\n          colors: strokes,\n          opacity: 1,\n          width: 1\n        },\n        highlightStyle: {\n          fill: 'yellow'\n        },\n        listeners: {}\n      },\n      listeners: {}\n    };\n  };\n\n  ChartProxy.prototype.transformData = function (data, categoryKey) {\n    if (this.chart.axes.filter(function (a) {\n      return a instanceof CategoryAxis;\n    }).length < 1) {\n      return data;\n    } // replace the values for the selected category with a complex object to allow for duplicated categories\n\n\n    return data.map(function (d, index) {\n      var value = d[categoryKey];\n      var valueString = value && value.toString ? value.toString() : '';\n\n      var datum = __assign({}, d);\n\n      datum[categoryKey] = {\n        id: index,\n        value: value,\n        toString: function toString() {\n          return valueString;\n        }\n      };\n      return datum;\n    });\n  };\n\n  ChartProxy.prototype.destroy = function () {\n    this.destroyChart();\n  };\n\n  ChartProxy.prototype.destroyChart = function () {\n    if (this.chart) {\n      this.chart.destroy();\n      this.chart = undefined;\n    }\n  };\n\n  return ChartProxy;\n}();\n\nexport { ChartProxy };","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/@ag-grid-enterprise/charts/dist/es6/chartAdaptor/chartComp/chartProxies/chartProxy.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","_","Events","LegendPosition","CategoryAxis","DropShadow","Padding","palettes","ChartProxy","chartProxyParams","_this","isDarkTheme","getFontColor","getAxisGridColor","getBackgroundColor","getChartPaddingOption","property","chartOptions","padding","getShadowEnabled","getShadowProperty","chartId","chartType","eventService","gridApi","columnApi","recreateChart","options","chart","destroyChart","createChart","getChart","downloadChart","fileName","title","text","scene","download","getChartImageDataURL","type","getDataURL","initChartOptions","processChartOptions","params","getDefaultOptions","overriddenOptions","safeOptions","mergeDeep","overridePalette","allowPaletteOverride","_a","getPredefinedPalette","defaultFills","fills","defaultStrokes","strokes","seriesDefaults","fill","colors","stroke","fillsOverridden","strokesOverridden","customPalette","getChartOptions","getCustomPalette","getChartOption","expression","get","undefined","setChartOption","value","set","mappings","raiseChartOptionsChangedEvent","getSeriesOption","setSeriesOption","series","forEach","setTitleOption","exists","getTitleOption","setChartPaddingOption","top","right","bottom","left","performLayout","shadow","setShadowProperty","enabled","blur","xOffset","yOffset","color","event","freeze","EVENT_CHART_OPTIONS_CHANGED","chartPalette","getChartPaletteName","api","dispatchEvent","getDefaultFontOptions","fontStyle","fontWeight","fontSize","fontFamily","getDefaultDropShadowOptions","getPalette","getDefaultChartOptions","fontOptions","background","visible","subtitle","legend","position","Right","spacing","item","label","marker","shape","size","strokeWidth","paddingX","paddingY","navigator","height","min","max","mask","fillOpacity","minHandle","width","gripLineGap","gripLineLength","maxHandle","opacity","highlightStyle","listeners","transformData","data","categoryKey","axes","filter","a","map","d","index","valueString","toString","datum","id","destroy"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { _, Events, LegendPosition, } from \"@ag-grid-community/core\";\nimport { CategoryAxis, DropShadow, Padding, palettes } from \"ag-charts-community\";\nvar ChartProxy = /** @class */ (function () {\n    function ChartProxy(chartProxyParams) {\n        var _this = this;\n        this.chartProxyParams = chartProxyParams;\n        this.isDarkTheme = function () { return _this.chartProxyParams.isDarkTheme(); };\n        this.getFontColor = function () { return _this.isDarkTheme() ? 'rgb(221, 221, 221)' : 'rgb(87, 87, 87)'; };\n        this.getAxisGridColor = function () { return _this.isDarkTheme() ? 'rgb(100, 100, 100)' : 'rgb(219, 219, 219)'; };\n        this.getBackgroundColor = function () { return _this.isDarkTheme() ? '#2d3436' : 'white'; };\n        this.getChartPaddingOption = function (property) { return _this.chartOptions.padding ? \"\" + _this.chartOptions.padding[property] : ''; };\n        this.getShadowEnabled = function () { return !!_this.getShadowProperty('enabled'); };\n        this.chartId = chartProxyParams.chartId;\n        this.chartType = chartProxyParams.chartType;\n        this.eventService = chartProxyParams.eventService;\n        this.gridApi = chartProxyParams.gridApi;\n        this.columnApi = chartProxyParams.columnApi;\n    }\n    ChartProxy.prototype.recreateChart = function (options) {\n        if (this.chart) {\n            this.destroyChart();\n        }\n        this.chart = this.createChart(options);\n    };\n    ChartProxy.prototype.getChart = function () {\n        return this.chart;\n    };\n    ChartProxy.prototype.downloadChart = function () {\n        var chart = this.chart;\n        var fileName = chart.title ? chart.title.text : 'chart';\n        chart.scene.download(fileName);\n    };\n    ChartProxy.prototype.getChartImageDataURL = function (type) {\n        return this.chart.scene.getDataURL(type);\n    };\n    ChartProxy.prototype.initChartOptions = function () {\n        var processChartOptions = this.chartProxyParams.processChartOptions;\n        // allow users to override options before they are applied\n        if (processChartOptions) {\n            var params = { type: this.chartType, options: this.getDefaultOptions() };\n            var overriddenOptions = processChartOptions(params);\n            var safeOptions = this.getDefaultOptions();\n            // ensure we have everything we need, in case the processing removed necessary options\n            _.mergeDeep(safeOptions, overriddenOptions, false);\n            this.overridePalette(safeOptions);\n            this.chartOptions = safeOptions;\n        }\n        else {\n            this.chartOptions = this.getDefaultOptions();\n        }\n    };\n    ChartProxy.prototype.overridePalette = function (chartOptions) {\n        if (!this.chartProxyParams.allowPaletteOverride) {\n            return;\n        }\n        var _a = this.getPredefinedPalette(), defaultFills = _a.fills, defaultStrokes = _a.strokes;\n        var seriesDefaults = chartOptions.seriesDefaults;\n        var fills = seriesDefaults.fill.colors, strokes = seriesDefaults.stroke.colors;\n        var fillsOverridden = fills && fills.length > 0 && fills !== defaultFills;\n        var strokesOverridden = strokes && strokes.length > 0 && strokes !== defaultStrokes;\n        if (fillsOverridden || strokesOverridden) {\n            this.customPalette = {\n                fills: fillsOverridden ? fills : defaultFills,\n                strokes: strokesOverridden ? strokes : defaultStrokes\n            };\n        }\n    };\n    ChartProxy.prototype.getChartOptions = function () {\n        return this.chartOptions;\n    };\n    ChartProxy.prototype.getCustomPalette = function () {\n        return this.customPalette;\n    };\n    ChartProxy.prototype.getChartOption = function (expression) {\n        return _.get(this.chartOptions, expression, undefined);\n    };\n    ChartProxy.prototype.setChartOption = function (expression, value) {\n        if (_.get(this.chartOptions, expression, undefined) === value) {\n            // option is already set to the specified value\n            return;\n        }\n        _.set(this.chartOptions, expression, value);\n        var mappings = {\n            'legend.item.marker.strokeWidth': 'legend.strokeWidth',\n            'legend.item.marker.size': 'legend.markerSize',\n            'legend.item.marker.padding': 'legend.itemSpacing',\n            'legend.item.label.fontFamily': 'legend.fontFamily',\n            'legend.item.label.fontStyle': 'legend.fontStyle',\n            'legend.item.label.fontWeight': 'legend.fontWeight',\n            'legend.item.label.fontSize': 'legend.fontSize',\n            'legend.item.label.color': 'legend.color',\n            'legend.item.paddingX': 'legend.layoutHorizontalSpacing',\n            'legend.item.paddingY': 'legend.layoutVerticalSpacing',\n        };\n        _.set(this.chart, mappings[expression] || expression, value);\n        this.raiseChartOptionsChangedEvent();\n    };\n    ChartProxy.prototype.getSeriesOption = function (expression) {\n        return _.get(this.chartOptions.seriesDefaults, expression, undefined);\n    };\n    ChartProxy.prototype.setSeriesOption = function (expression, value) {\n        if (_.get(this.chartOptions.seriesDefaults, expression, undefined) === value) {\n            // option is already set to the specified value\n            return;\n        }\n        _.set(this.chartOptions.seriesDefaults, expression, value);\n        var mappings = {\n            'stroke.width': 'strokeWidth',\n            'stroke.opacity': 'strokeOpacity',\n            'fill.opacity': 'fillOpacity',\n            'tooltip.enabled': 'tooltipEnabled',\n            'callout.colors': 'calloutColors'\n        };\n        var series = this.chart.series;\n        series.forEach(function (s) { return _.set(s, mappings[expression] || expression, value); });\n        this.raiseChartOptionsChangedEvent();\n    };\n    ChartProxy.prototype.setTitleOption = function (property, value) {\n        if (_.get(this.chartOptions.title, property, undefined) === value) {\n            // option is already set to the specified value\n            return;\n        }\n        this.chartOptions.title[property] = value;\n        if (!this.chart.title) {\n            this.chart.title = {};\n        }\n        this.chart.title[property] = value;\n        if (property === 'text') {\n            this.setTitleOption('enabled', _.exists(value));\n        }\n        this.raiseChartOptionsChangedEvent();\n    };\n    ChartProxy.prototype.getTitleOption = function (property) {\n        return this.chartOptions.title[property];\n    };\n    ChartProxy.prototype.setChartPaddingOption = function (property, value) {\n        var padding = this.chartOptions.padding;\n        if (_.get(padding, property, undefined) === value) {\n            // option is already set to the specified value\n            return;\n        }\n        if (!padding) {\n            padding = this.chartOptions.padding = { top: 0, right: 0, bottom: 0, left: 0 };\n            this.chart.padding = new Padding(0);\n        }\n        padding[property] = value;\n        this.chart.padding[property] = value;\n        this.chart.performLayout();\n        this.raiseChartOptionsChangedEvent();\n    };\n    ChartProxy.prototype.getShadowProperty = function (property) {\n        var seriesDefaults = this.chartOptions.seriesDefaults;\n        return seriesDefaults.shadow ? seriesDefaults.shadow[property] : '';\n    };\n    ChartProxy.prototype.setShadowProperty = function (property, value) {\n        var seriesDefaults = this.chartOptions.seriesDefaults;\n        if (_.get(seriesDefaults.shadow, property, undefined) === value) {\n            // option is already set to the specified value\n            return;\n        }\n        if (!seriesDefaults.shadow) {\n            seriesDefaults.shadow = {\n                enabled: false,\n                blur: 0,\n                xOffset: 0,\n                yOffset: 0,\n                color: 'rgba(0,0,0,0.5)'\n            };\n        }\n        seriesDefaults.shadow[property] = value;\n        var series = this.getChart().series;\n        series.forEach(function (s) {\n            if (!s.shadow) {\n                var shadow = new DropShadow();\n                shadow.enabled = false;\n                shadow.blur = 0;\n                shadow.xOffset = 0;\n                shadow.yOffset = 0;\n                shadow.color = 'rgba(0,0,0,0.5)';\n                s.shadow = shadow;\n            }\n            s.shadow[property] = value;\n        });\n        this.raiseChartOptionsChangedEvent();\n    };\n    ChartProxy.prototype.raiseChartOptionsChangedEvent = function () {\n        var event = Object.freeze({\n            type: Events.EVENT_CHART_OPTIONS_CHANGED,\n            chartId: this.chartId,\n            chartType: this.chartType,\n            chartPalette: this.chartProxyParams.getChartPaletteName(),\n            chartOptions: this.chartOptions,\n            api: this.gridApi,\n            columnApi: this.columnApi,\n        });\n        this.eventService.dispatchEvent(event);\n    };\n    ChartProxy.prototype.getDefaultFontOptions = function () {\n        return {\n            fontStyle: 'normal',\n            fontWeight: 'normal',\n            fontSize: 12,\n            fontFamily: 'Verdana, sans-serif',\n            color: this.getFontColor()\n        };\n    };\n    ChartProxy.prototype.getDefaultDropShadowOptions = function () {\n        return {\n            enabled: false,\n            blur: 5,\n            xOffset: 3,\n            yOffset: 3,\n            color: 'rgba(0, 0, 0, 0.5)',\n        };\n    };\n    ChartProxy.prototype.getPredefinedPalette = function () {\n        return palettes.get(this.chartProxyParams.getChartPaletteName());\n    };\n    ChartProxy.prototype.getPalette = function () {\n        return this.customPalette || this.getPredefinedPalette();\n    };\n    ChartProxy.prototype.getDefaultChartOptions = function () {\n        var _a = this.getPredefinedPalette(), fills = _a.fills, strokes = _a.strokes;\n        var fontOptions = this.getDefaultFontOptions();\n        return {\n            background: {\n                fill: this.getBackgroundColor(),\n                visible: true,\n            },\n            padding: {\n                top: 20,\n                right: 20,\n                bottom: 20,\n                left: 20,\n            },\n            title: __assign(__assign({}, fontOptions), { enabled: false, fontWeight: 'bold', fontSize: 16 }),\n            subtitle: __assign(__assign({}, fontOptions), { enabled: false }),\n            legend: {\n                enabled: true,\n                position: LegendPosition.Right,\n                spacing: 20,\n                item: {\n                    label: __assign({}, fontOptions),\n                    marker: {\n                        shape: 'square',\n                        size: 15,\n                        padding: 8,\n                        strokeWidth: 1,\n                    },\n                    paddingX: 16,\n                    paddingY: 8,\n                },\n            },\n            navigator: {\n                enabled: false,\n                height: 30,\n                min: 0,\n                max: 1,\n                mask: {\n                    fill: '#999999',\n                    stroke: '#999999',\n                    strokeWidth: 1,\n                    fillOpacity: 0.2\n                },\n                minHandle: {\n                    fill: '#f2f2f2',\n                    stroke: '#999999',\n                    strokeWidth: 1,\n                    width: 8,\n                    height: 16,\n                    gripLineGap: 2,\n                    gripLineLength: 8\n                },\n                maxHandle: {\n                    fill: '#f2f2f2',\n                    stroke: '#999999',\n                    strokeWidth: 1,\n                    width: 8,\n                    height: 16,\n                    gripLineGap: 2,\n                    gripLineLength: 8\n                }\n            },\n            seriesDefaults: {\n                fill: {\n                    colors: fills,\n                    opacity: 1,\n                },\n                stroke: {\n                    colors: strokes,\n                    opacity: 1,\n                    width: 1,\n                },\n                highlightStyle: {\n                    fill: 'yellow',\n                },\n                listeners: {}\n            },\n            listeners: {}\n        };\n    };\n    ChartProxy.prototype.transformData = function (data, categoryKey) {\n        if (this.chart.axes.filter(function (a) { return a instanceof CategoryAxis; }).length < 1) {\n            return data;\n        }\n        // replace the values for the selected category with a complex object to allow for duplicated categories\n        return data.map(function (d, index) {\n            var value = d[categoryKey];\n            var valueString = value && value.toString ? value.toString() : '';\n            var datum = __assign({}, d);\n            datum[categoryKey] = { id: index, value: value, toString: function () { return valueString; } };\n            return datum;\n        });\n    };\n    ChartProxy.prototype.destroy = function () {\n        this.destroyChart();\n    };\n    ChartProxy.prototype.destroyChart = function () {\n        if (this.chart) {\n            this.chart.destroy();\n            this.chart = undefined;\n        }\n    };\n    return ChartProxy;\n}());\nexport { ChartProxy };\n"]},"metadata":{},"sourceType":"module"}