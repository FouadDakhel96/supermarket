{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nexport function QuerySelector(selector) {\n  return querySelectorFunc.bind(this, selector);\n}\nexport function RefSelector(ref) {\n  return querySelectorFunc.bind(this, \"[ref=\" + ref + \"]\");\n}\n\nfunction querySelectorFunc(selector, classPrototype, methodOrAttributeName, index) {\n  if (selector === null) {\n    console.error(\"ag-Grid: QuerySelector selector should not be null\");\n    return;\n  }\n\n  if (typeof index === \"number\") {\n    console.error(\"ag-Grid: QuerySelector should be on an attribute\");\n    return;\n  }\n\n  addToObjectProps(classPrototype, 'querySelectors', {\n    attributeName: methodOrAttributeName,\n    querySelector: selector\n  });\n} // think we should take this out, put property bindings on the\n\n\nexport function GridListener(eventName) {\n  return gridListenerFunc.bind(this, eventName);\n}\n\nfunction gridListenerFunc(eventName, target, methodName) {\n  if (eventName == null) {\n    console.error(\"ag-Grid: GridListener eventName is missing\");\n    return;\n  }\n\n  addToObjectProps(target, 'gridListenerMethods', {\n    methodName: methodName,\n    eventName: eventName\n  });\n} // think we should take this out, put property bindings on the\n\n\nexport function GuiListener(ref, eventName) {\n  return guiListenerFunc.bind(this, ref, eventName);\n}\n\nfunction guiListenerFunc(ref, eventName, target, methodName) {\n  if (eventName == null) {\n    console.error(\"ag-Grid: GuiListener eventName is missing\");\n    return;\n  }\n\n  addToObjectProps(target, 'guiListenerMethods', {\n    methodName: methodName,\n    eventName: eventName,\n    ref: ref\n  });\n} // // think we should take this out, put property bindings on the\n// export function Method(eventName?: string): Function {\n//     return methodFunc.bind(this, eventName);\n// }\n//\n// function methodFunc(alias: string, target: Object, methodName: string) {\n//     if (alias === null) {\n//         console.error(\"ag-Grid: EventListener eventName should not be null\");\n//         return;\n//     }\n//\n//     addToObjectProps(target, 'methods', {\n//         methodName: methodName,\n//         alias: alias\n//     });\n// }\n\n\nfunction addToObjectProps(target, key, value) {\n  // it's an attribute on the class\n  var props = getOrCreateProps(target, target.constructor.name);\n\n  if (!props[key]) {\n    props[key] = [];\n  }\n\n  props[key].push(value);\n}\n\nfunction getOrCreateProps(target, instanceName) {\n  if (!target.__agComponentMetaData) {\n    target.__agComponentMetaData = {};\n  }\n\n  if (!target.__agComponentMetaData[instanceName]) {\n    target.__agComponentMetaData[instanceName] = {};\n  }\n\n  return target.__agComponentMetaData[instanceName];\n}","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/@ag-grid-community/core/dist/es6/widgets/componentAnnotations.js"],"names":["QuerySelector","selector","querySelectorFunc","bind","RefSelector","ref","classPrototype","methodOrAttributeName","index","console","error","addToObjectProps","attributeName","querySelector","GridListener","eventName","gridListenerFunc","target","methodName","GuiListener","guiListenerFunc","key","value","props","getOrCreateProps","constructor","name","push","instanceName","__agComponentMetaData"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nexport function QuerySelector(selector) {\n    return querySelectorFunc.bind(this, selector);\n}\nexport function RefSelector(ref) {\n    return querySelectorFunc.bind(this, \"[ref=\" + ref + \"]\");\n}\nfunction querySelectorFunc(selector, classPrototype, methodOrAttributeName, index) {\n    if (selector === null) {\n        console.error(\"ag-Grid: QuerySelector selector should not be null\");\n        return;\n    }\n    if (typeof index === \"number\") {\n        console.error(\"ag-Grid: QuerySelector should be on an attribute\");\n        return;\n    }\n    addToObjectProps(classPrototype, 'querySelectors', {\n        attributeName: methodOrAttributeName,\n        querySelector: selector\n    });\n}\n// think we should take this out, put property bindings on the\nexport function GridListener(eventName) {\n    return gridListenerFunc.bind(this, eventName);\n}\nfunction gridListenerFunc(eventName, target, methodName) {\n    if (eventName == null) {\n        console.error(\"ag-Grid: GridListener eventName is missing\");\n        return;\n    }\n    addToObjectProps(target, 'gridListenerMethods', {\n        methodName: methodName,\n        eventName: eventName\n    });\n}\n// think we should take this out, put property bindings on the\nexport function GuiListener(ref, eventName) {\n    return guiListenerFunc.bind(this, ref, eventName);\n}\nfunction guiListenerFunc(ref, eventName, target, methodName) {\n    if (eventName == null) {\n        console.error(\"ag-Grid: GuiListener eventName is missing\");\n        return;\n    }\n    addToObjectProps(target, 'guiListenerMethods', {\n        methodName: methodName,\n        eventName: eventName,\n        ref: ref\n    });\n}\n// // think we should take this out, put property bindings on the\n// export function Method(eventName?: string): Function {\n//     return methodFunc.bind(this, eventName);\n// }\n//\n// function methodFunc(alias: string, target: Object, methodName: string) {\n//     if (alias === null) {\n//         console.error(\"ag-Grid: EventListener eventName should not be null\");\n//         return;\n//     }\n//\n//     addToObjectProps(target, 'methods', {\n//         methodName: methodName,\n//         alias: alias\n//     });\n// }\nfunction addToObjectProps(target, key, value) {\n    // it's an attribute on the class\n    var props = getOrCreateProps(target, target.constructor.name);\n    if (!props[key]) {\n        props[key] = [];\n    }\n    props[key].push(value);\n}\nfunction getOrCreateProps(target, instanceName) {\n    if (!target.__agComponentMetaData) {\n        target.__agComponentMetaData = {};\n    }\n    if (!target.__agComponentMetaData[instanceName]) {\n        target.__agComponentMetaData[instanceName] = {};\n    }\n    return target.__agComponentMetaData[instanceName];\n}\n"]},"metadata":{},"sourceType":"module"}