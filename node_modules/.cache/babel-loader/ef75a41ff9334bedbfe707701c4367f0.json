{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nimport { Autowired, Bean, Constants, Events, PostConstruct, BeanStub, _ } from \"@ag-grid-community/core\";\n\nvar RangeController =\n/** @class */\nfunction (_super) {\n  __extends(RangeController, _super);\n\n  function RangeController() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.cellRanges = [];\n    _this.bodyScrollListener = _this.onBodyScroll.bind(_this);\n    _this.dragging = false;\n    return _this;\n  }\n\n  RangeController.prototype.registerGridComp = function (gridPanel) {\n    this.gridPanel = gridPanel;\n    this.autoScrollService = new AutoScrollService(this.gridPanel, this.gridOptionsWrapper);\n  };\n\n  RangeController.prototype.init = function () {\n    this.logger = this.loggerFactory.create('RangeController');\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_EVERYTHING_CHANGED, this.removeAllCellRanges.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_PIVOT_MODE_CHANGED, this.removeAllCellRanges.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_ROW_GROUP_CHANGED, this.removeAllCellRanges.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_GROUP_OPENED, this.refreshLastRangeStart.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_MOVED, this.refreshLastRangeStart.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_PINNED, this.refreshLastRangeStart.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_VISIBLE, this.onColumnVisibleChange.bind(this));\n  };\n\n  RangeController.prototype.onColumnVisibleChange = function () {\n    var _this = this; // first move start column in last cell range (i.e. series chart range)\n\n\n    this.refreshLastRangeStart(); // then check if the column visibility has changed in any cell range\n\n    this.cellRanges.forEach(function (cellRange) {\n      var beforeCols = cellRange.columns; // remove hidden cols from cell range\n\n      cellRange.columns = cellRange.columns.filter(function (col) {\n        return col.isVisible();\n      });\n      var colsInRangeChanged = !_.areEqual(beforeCols, cellRange.columns);\n\n      if (colsInRangeChanged) {\n        // notify users and other parts of grid (i.e. status panel) that range has changed\n        _this.dispatchChangedEvent(false, true, cellRange.id);\n      }\n    });\n  };\n\n  RangeController.prototype.refreshLastRangeStart = function () {\n    var lastRange = _.last(this.cellRanges);\n\n    if (!lastRange) {\n      return;\n    }\n\n    this.refreshRangeStart(lastRange);\n  };\n\n  RangeController.prototype.isContiguousRange = function (cellRange) {\n    var rangeColumns = cellRange.columns;\n\n    if (!rangeColumns.length) {\n      return false;\n    }\n\n    var allColumns = this.columnController.getAllDisplayedColumns();\n    var allPositions = rangeColumns.map(function (c) {\n      return allColumns.indexOf(c);\n    }).sort(function (a, b) {\n      return a - b;\n    });\n    return _.last(allPositions) - allPositions[0] + 1 === rangeColumns.length;\n  };\n\n  RangeController.prototype.getRangeStartRow = function (cellRange) {\n    if (cellRange.startRow && cellRange.endRow) {\n      return this.rowPositionUtils.before(cellRange.startRow, cellRange.endRow) ? cellRange.startRow : cellRange.endRow;\n    }\n\n    var rowPinned = this.pinnedRowModel.getPinnedTopRowCount() > 0 ? Constants.PINNED_TOP : undefined;\n    return {\n      rowIndex: 0,\n      rowPinned: rowPinned\n    };\n  };\n\n  RangeController.prototype.getRangeEndRow = function (cellRange) {\n    if (cellRange.startRow && cellRange.endRow) {\n      return this.rowPositionUtils.before(cellRange.startRow, cellRange.endRow) ? cellRange.endRow : cellRange.startRow;\n    }\n\n    var pinnedBottomRowCount = this.pinnedRowModel.getPinnedBottomRowCount();\n    var pinnedBottom = pinnedBottomRowCount > 0;\n\n    if (pinnedBottom) {\n      return {\n        rowIndex: pinnedBottomRowCount - 1,\n        rowPinned: Constants.PINNED_BOTTOM\n      };\n    }\n\n    return {\n      rowIndex: this.rowModel.getRowCount() - 1,\n      rowPinned: undefined\n    };\n  };\n\n  RangeController.prototype.setRangeToCell = function (cell, appendRange) {\n    if (appendRange === void 0) {\n      appendRange = false;\n    }\n\n    if (!this.gridOptionsWrapper.isEnableRangeSelection()) {\n      return;\n    }\n\n    var columns = this.calculateColumnsBetween(cell.column, cell.column);\n\n    if (!columns) {\n      return;\n    }\n\n    var suppressMultiRangeSelections = this.gridOptionsWrapper.isSuppressMultiRangeSelection(); // if not appending, then clear previous range selections\n\n    if (suppressMultiRangeSelections || !appendRange || _.missing(this.cellRanges)) {\n      this.removeAllCellRanges(true);\n    }\n\n    var rowForCell = {\n      rowIndex: cell.rowIndex,\n      rowPinned: cell.rowPinned\n    }; // if there is already a range for this cell, then we reuse the same range, otherwise the user\n    // can ctrl & click a cell many times and hit ctrl+c, which would result in the cell getting copied\n    // many times to the clipboard.\n\n    var cellRange;\n\n    for (var i = 0; i < this.cellRanges.length; i++) {\n      var range = this.cellRanges[i];\n      var matches = // check cols are same\n      range.columns && range.columns.length === 1 && range.columns[0] === cell.column && // check rows are same\n      this.rowPositionUtils.sameRow(rowForCell, range.startRow) && this.rowPositionUtils.sameRow(rowForCell, range.endRow);\n\n      if (matches) {\n        cellRange = range;\n        break;\n      }\n    }\n\n    if (cellRange) {\n      // we need it at the end of the list, as the dragStart picks the last created\n      // range as the start point for the drag\n      if (_.last(this.cellRanges) !== cellRange) {\n        _.removeFromArray(this.cellRanges, cellRange);\n\n        this.cellRanges.push(cellRange);\n      }\n    } else {\n      cellRange = {\n        startRow: rowForCell,\n        endRow: rowForCell,\n        columns: columns,\n        startColumn: cell.column\n      };\n      this.cellRanges.push(cellRange);\n    }\n\n    this.newestRangeStartCell = cell;\n    this.onDragStop();\n    this.dispatchChangedEvent(true, true, cellRange.id);\n  };\n\n  RangeController.prototype.extendLatestRangeToCell = function (cellPosition) {\n    if (this.isEmpty() || !this.newestRangeStartCell) {\n      return;\n    }\n\n    var cellRange = _.last(this.cellRanges);\n\n    this.updateRangeEnd(cellRange, cellPosition);\n  };\n\n  RangeController.prototype.updateRangeEnd = function (cellRange, cellPosition, silent) {\n    if (silent === void 0) {\n      silent = false;\n    }\n\n    var endColumn = cellPosition.column;\n    var colsToAdd = this.calculateColumnsBetween(cellRange.startColumn, endColumn);\n\n    if (!colsToAdd || this.isLastCellOfRange(cellRange, cellPosition)) {\n      return;\n    }\n\n    cellRange.columns = colsToAdd;\n    cellRange.endRow = {\n      rowIndex: cellPosition.rowIndex,\n      rowPinned: cellPosition.rowPinned\n    };\n\n    if (!silent) {\n      this.dispatchChangedEvent(true, true, cellRange.id);\n    }\n  };\n\n  RangeController.prototype.refreshRangeStart = function (cellRange) {\n    var startColumn = cellRange.startColumn,\n        columns = cellRange.columns;\n\n    var moveColInCellRange = function (colToMove, moveToFront) {\n      var otherCols = cellRange.columns.filter(function (col) {\n        return col !== colToMove;\n      });\n\n      if (colToMove) {\n        cellRange.startColumn = colToMove;\n        cellRange.columns = moveToFront ? __spreadArrays([colToMove], otherCols) : __spreadArrays(otherCols, [colToMove]);\n      } else {\n        cellRange.columns = otherCols;\n      }\n    };\n\n    var _a = this.getRangeEdgeColumns(cellRange),\n        left = _a.left,\n        right = _a.right;\n\n    var shouldMoveLeftCol = startColumn === columns[0] && startColumn !== left;\n\n    if (shouldMoveLeftCol) {\n      moveColInCellRange(left, true);\n      return;\n    }\n\n    var shouldMoveRightCol = startColumn === _.last(columns) && startColumn === right;\n\n    if (shouldMoveRightCol) {\n      moveColInCellRange(right, false);\n      return;\n    }\n  };\n\n  RangeController.prototype.getRangeEdgeColumns = function (cellRange) {\n    var allColumns = this.columnController.getAllDisplayedColumns();\n    var allIndices = cellRange.columns.map(function (c) {\n      return allColumns.indexOf(c);\n    }).filter(function (i) {\n      return i > -1;\n    }).sort(function (a, b) {\n      return a - b;\n    });\n    return {\n      left: allColumns[allIndices[0]],\n      right: allColumns[_.last(allIndices)]\n    };\n  }; // returns true if successful, false if not successful\n\n\n  RangeController.prototype.extendLatestRangeInDirection = function (key) {\n    if (this.isEmpty() || !this.newestRangeStartCell) {\n      return;\n    }\n\n    var lastRange = _.last(this.cellRanges);\n\n    var startCell = this.newestRangeStartCell;\n    var firstCol = lastRange.columns[0];\n\n    var lastCol = _.last(lastRange.columns); // find the cell that is at the furthest away corner from the starting cell\n\n\n    var endCellIndex = lastRange.endRow.rowIndex;\n    var endCellFloating = lastRange.endRow.rowPinned;\n    var endCellColumn = startCell.column === firstCol ? lastCol : firstCol;\n    var endCell = {\n      column: endCellColumn,\n      rowIndex: endCellIndex,\n      rowPinned: endCellFloating\n    };\n    var newEndCell = this.cellNavigationService.getNextCellToFocus(key, endCell); // if user is at end of grid, so no cell to extend to, we return false\n\n    if (!newEndCell) {\n      return;\n    }\n\n    this.setCellRange({\n      rowStartIndex: startCell.rowIndex,\n      rowStartPinned: startCell.rowPinned,\n      rowEndIndex: newEndCell.rowIndex,\n      rowEndPinned: newEndCell.rowPinned,\n      columnStart: startCell.column,\n      columnEnd: newEndCell.column\n    });\n    return newEndCell;\n  };\n\n  RangeController.prototype.setCellRange = function (params) {\n    if (!this.gridOptionsWrapper.isEnableRangeSelection()) {\n      return;\n    }\n\n    this.removeAllCellRanges(true);\n    this.addCellRange(params);\n  };\n\n  RangeController.prototype.setCellRanges = function (cellRanges) {\n    var _this = this;\n\n    this.removeAllCellRanges(true);\n    cellRanges.forEach(function (newRange) {\n      if (newRange.columns && newRange.startRow) {\n        _this.newestRangeStartCell = {\n          rowIndex: newRange.startRow.rowIndex,\n          rowPinned: newRange.startRow.rowPinned,\n          column: newRange.columns[0]\n        };\n      }\n\n      _this.cellRanges.push(newRange);\n    });\n    this.dispatchChangedEvent(false, true);\n  };\n\n  RangeController.prototype.createCellRangeFromCellRangeParams = function (params) {\n    var _this = this;\n\n    var columns;\n\n    if (params.columns) {\n      columns = params.columns.map(function (c) {\n        return _this.columnController.getColumnWithValidation(c);\n      }).filter(function (c) {\n        return c;\n      });\n    } else {\n      var columnStart = this.columnController.getColumnWithValidation(params.columnStart);\n      var columnEnd = this.columnController.getColumnWithValidation(params.columnEnd);\n\n      if (!columnStart || !columnEnd) {\n        return;\n      }\n\n      columns = this.calculateColumnsBetween(columnStart, columnEnd);\n    }\n\n    if (!columns) {\n      return;\n    }\n\n    var startRow = params.rowStartIndex != null ? {\n      rowIndex: params.rowStartIndex,\n      rowPinned: params.rowStartPinned\n    } : undefined;\n    var endRow = params.rowEndIndex != null ? {\n      rowIndex: params.rowEndIndex,\n      rowPinned: params.rowEndPinned\n    } : undefined;\n    return {\n      startRow: startRow,\n      endRow: endRow,\n      columns: columns,\n      startColumn: columns[0]\n    };\n  };\n\n  RangeController.prototype.addCellRange = function (params) {\n    if (!this.gridOptionsWrapper.isEnableRangeSelection()) {\n      return;\n    }\n\n    var newRange = this.createCellRangeFromCellRangeParams(params);\n\n    if (newRange) {\n      this.cellRanges.push(newRange);\n      this.dispatchChangedEvent(false, true, newRange.id);\n    }\n  };\n\n  RangeController.prototype.getCellRanges = function () {\n    return this.cellRanges;\n  };\n\n  RangeController.prototype.isEmpty = function () {\n    return this.cellRanges.length === 0;\n  };\n\n  RangeController.prototype.isMoreThanOneCell = function () {\n    if (this.cellRanges.length === 0) {\n      // no ranges, so not more than one cell\n      return false;\n    } else if (this.cellRanges.length > 1) {\n      // many ranges, so more than one cell\n      return true;\n    } // only one range, return true if range has more than one\n\n\n    var range = this.cellRanges[0];\n    var startRow = this.getRangeStartRow(range);\n    var endRow = this.getRangeEndRow(range);\n    return startRow.rowPinned !== endRow.rowPinned || startRow.rowIndex !== endRow.rowIndex || range.columns.length !== 1;\n  };\n\n  RangeController.prototype.removeAllCellRanges = function (silent) {\n    if (this.isEmpty()) {\n      return;\n    }\n\n    this.onDragStop();\n    this.cellRanges.length = 0;\n\n    if (!silent) {\n      this.dispatchChangedEvent(false, true);\n    }\n  }; // as the user is dragging outside of the panel, the div starts to scroll, which in turn\n  // means we are selection more (or less) cells, but the mouse isn't moving, so we recalculate\n  // the selection my mimicking a new mouse event\n\n\n  RangeController.prototype.onBodyScroll = function () {\n    this.onDragging(this.lastMouseEvent);\n  };\n\n  RangeController.prototype.isCellInAnyRange = function (cell) {\n    return this.getCellRangeCount(cell) > 0;\n  };\n\n  RangeController.prototype.isCellInSpecificRange = function (cell, range) {\n    var columnInRange = range.columns !== null && _.includes(range.columns, cell.column);\n\n    var rowInRange = this.isRowInRange(cell.rowIndex, cell.rowPinned, range);\n    return columnInRange && rowInRange;\n  };\n\n  RangeController.prototype.isLastCellOfRange = function (cellRange, cell) {\n    var startRow = cellRange.startRow,\n        endRow = cellRange.endRow;\n    var lastRow = this.rowPositionUtils.before(startRow, endRow) ? endRow : startRow;\n    var isLastRow = cell.rowIndex === lastRow.rowIndex && cell.rowPinned === lastRow.rowPinned;\n    var rangeFirstIndexColumn = cellRange.columns[0];\n\n    var rangeLastIndexColumn = _.last(cellRange.columns);\n\n    var lastRangeColumn = cellRange.startColumn === rangeFirstIndexColumn ? rangeLastIndexColumn : rangeFirstIndexColumn;\n    var isLastColumn = cell.column === lastRangeColumn;\n    return isLastColumn && isLastRow;\n  };\n\n  RangeController.prototype.isBottomRightCell = function (cellRange, cell) {\n    var allColumns = this.columnController.getAllDisplayedColumns();\n    var allPositions = cellRange.columns.map(function (c) {\n      return allColumns.indexOf(c);\n    }).sort(function (a, b) {\n      return a - b;\n    });\n    var startRow = cellRange.startRow,\n        endRow = cellRange.endRow;\n    var lastRow = this.rowPositionUtils.before(startRow, endRow) ? endRow : startRow;\n\n    var isRightColumn = allColumns.indexOf(cell.column) === _.last(allPositions);\n\n    var isLastRow = cell.rowIndex === lastRow.rowIndex && _.makeNull(cell.rowPinned) === _.makeNull(lastRow.rowPinned);\n\n    return isRightColumn && isLastRow;\n  }; // returns the number of ranges this cell is in\n\n\n  RangeController.prototype.getCellRangeCount = function (cell) {\n    var _this = this;\n\n    if (this.isEmpty()) {\n      return 0;\n    }\n\n    return this.cellRanges.filter(function (cellRange) {\n      return _this.isCellInSpecificRange(cell, cellRange);\n    }).length;\n  };\n\n  RangeController.prototype.isRowInRange = function (rowIndex, floating, cellRange) {\n    var firstRow = this.getRangeStartRow(cellRange);\n    var lastRow = this.getRangeEndRow(cellRange);\n    var thisRow = {\n      rowIndex: rowIndex,\n      rowPinned: floating\n    }; // compare rowPinned with == instead of === because it can be `null` or `undefined`\n\n    var equalsFirstRow = thisRow.rowIndex === firstRow.rowIndex && thisRow.rowPinned == firstRow.rowPinned;\n    var equalsLastRow = thisRow.rowIndex === lastRow.rowIndex && thisRow.rowPinned == lastRow.rowPinned;\n\n    if (equalsFirstRow || equalsLastRow) {\n      return true;\n    }\n\n    var afterFirstRow = !this.rowPositionUtils.before(thisRow, firstRow);\n    var beforeLastRow = this.rowPositionUtils.before(thisRow, lastRow);\n    return afterFirstRow && beforeLastRow;\n  };\n\n  RangeController.prototype.getDraggingRange = function () {\n    return this.draggingRange;\n  };\n\n  RangeController.prototype.onDragStart = function (mouseEvent) {\n    if (!this.gridOptionsWrapper.isEnableRangeSelection()) {\n      return;\n    }\n\n    var ctrlKey = mouseEvent.ctrlKey,\n        metaKey = mouseEvent.metaKey,\n        shiftKey = mouseEvent.shiftKey; // ctrlKey for windows, metaKey for Apple\n\n    var multiKeyPressed = ctrlKey || metaKey;\n    var allowMulti = !this.gridOptionsWrapper.isSuppressMultiRangeSelection();\n    var multiSelectKeyPressed = allowMulti ? multiKeyPressed : false;\n    var mouseCell = this.mouseEventService.getCellPositionForEvent(mouseEvent);\n\n    if (_.missing(mouseCell)) {\n      // if drag wasn't on cell, then do nothing, including do not set dragging=true,\n      // (which them means onDragging and onDragStop do nothing)\n      return;\n    }\n\n    if (!multiSelectKeyPressed && (!shiftKey || _.exists(_.last(this.cellRanges).type))) {\n      this.removeAllCellRanges(true);\n    }\n\n    this.dragging = true;\n    this.draggingCell = mouseCell;\n    this.lastMouseEvent = mouseEvent;\n\n    if (!shiftKey) {\n      this.newestRangeStartCell = mouseCell;\n    } // if we didn't clear the ranges, then dragging means the user clicked, and when the\n    // user clicks it means a range of one cell was created. we need to extend this range\n    // rather than creating another range. otherwise we end up with two distinct ranges\n    // from a drag operation (one from click, and one from drag).\n\n\n    if (this.cellRanges.length > 0) {\n      this.draggingRange = _.last(this.cellRanges);\n    } else {\n      var mouseRowPosition = {\n        rowIndex: mouseCell.rowIndex,\n        rowPinned: mouseCell.rowPinned\n      };\n      this.draggingRange = {\n        startRow: mouseRowPosition,\n        endRow: mouseRowPosition,\n        columns: [mouseCell.column],\n        startColumn: this.newestRangeStartCell.column\n      };\n      this.cellRanges.push(this.draggingRange);\n    }\n\n    this.gridPanel.addScrollEventListener(this.bodyScrollListener);\n    this.dispatchChangedEvent(true, false, this.draggingRange.id);\n  };\n\n  RangeController.prototype.onDragging = function (mouseEvent) {\n    var _this = this;\n\n    if (!this.dragging || !mouseEvent) {\n      return;\n    }\n\n    this.lastMouseEvent = mouseEvent;\n    var cellPosition = this.mouseEventService.getCellPositionForEvent(mouseEvent);\n\n    var isMouseAndStartInPinned = function (position) {\n      return cellPosition && cellPosition.rowPinned === position && _this.newestRangeStartCell.rowPinned === position;\n    };\n\n    var skipVerticalScroll = isMouseAndStartInPinned('top') || isMouseAndStartInPinned('bottom');\n    this.autoScrollService.check(mouseEvent, skipVerticalScroll);\n\n    if (!cellPosition || !this.draggingCell || this.cellPositionUtils.equals(this.draggingCell, cellPosition)) {\n      return;\n    }\n\n    var columns = this.calculateColumnsBetween(this.newestRangeStartCell.column, cellPosition.column);\n\n    if (!columns) {\n      return;\n    }\n\n    this.draggingCell = cellPosition;\n    this.draggingRange.endRow = {\n      rowIndex: cellPosition.rowIndex,\n      rowPinned: cellPosition.rowPinned\n    };\n    this.draggingRange.columns = columns;\n    this.dispatchChangedEvent(false, false, this.draggingRange.id);\n  };\n\n  RangeController.prototype.onDragStop = function () {\n    if (!this.dragging) {\n      return;\n    }\n\n    var id = this.draggingRange.id;\n    this.autoScrollService.ensureCleared();\n    this.gridPanel.removeScrollEventListener(this.bodyScrollListener);\n    this.lastMouseEvent = null;\n    this.dragging = false;\n    this.draggingRange = undefined;\n    this.draggingCell = undefined;\n    this.dispatchChangedEvent(false, true, id);\n  };\n\n  RangeController.prototype.dispatchChangedEvent = function (started, finished, id) {\n    var event = Object.freeze({\n      type: Events.EVENT_RANGE_SELECTION_CHANGED,\n      api: this.gridApi,\n      columnApi: this.columnApi,\n      started: started,\n      finished: finished,\n      id: id\n    });\n    this.eventService.dispatchEvent(event);\n  };\n\n  RangeController.prototype.calculateColumnsBetween = function (columnFrom, columnTo) {\n    var allColumns = this.columnController.getAllDisplayedColumns();\n    var isSameColumn = columnFrom === columnTo;\n    var fromIndex = allColumns.indexOf(columnFrom);\n\n    if (fromIndex < 0) {\n      console.warn(\"ag-Grid: column \" + columnFrom.getId() + \" is not visible\");\n      return undefined;\n    }\n\n    var toIndex = isSameColumn ? fromIndex : allColumns.indexOf(columnTo);\n\n    if (toIndex < 0) {\n      console.warn(\"ag-Grid: column \" + columnTo.getId() + \" is not visible\");\n      return undefined;\n    }\n\n    if (isSameColumn) {\n      return [columnFrom];\n    }\n\n    var firstIndex = Math.min(fromIndex, toIndex);\n    var lastIndex = firstIndex === fromIndex ? toIndex : fromIndex;\n    var columns = [];\n\n    for (var i = firstIndex; i <= lastIndex; i++) {\n      columns.push(allColumns[i]);\n    }\n\n    return columns;\n  };\n\n  __decorate([Autowired('loggerFactory')], RangeController.prototype, \"loggerFactory\", void 0);\n\n  __decorate([Autowired('rowModel')], RangeController.prototype, \"rowModel\", void 0);\n\n  __decorate([Autowired('columnController')], RangeController.prototype, \"columnController\", void 0);\n\n  __decorate([Autowired('mouseEventService')], RangeController.prototype, \"mouseEventService\", void 0);\n\n  __decorate([Autowired('gridOptionsWrapper')], RangeController.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([Autowired('columnApi')], RangeController.prototype, \"columnApi\", void 0);\n\n  __decorate([Autowired('gridApi')], RangeController.prototype, \"gridApi\", void 0);\n\n  __decorate([Autowired('cellNavigationService')], RangeController.prototype, \"cellNavigationService\", void 0);\n\n  __decorate([Autowired(\"pinnedRowModel\")], RangeController.prototype, \"pinnedRowModel\", void 0);\n\n  __decorate([Autowired('rowPositionUtils')], RangeController.prototype, \"rowPositionUtils\", void 0);\n\n  __decorate([Autowired('cellPositionUtils')], RangeController.prototype, \"cellPositionUtils\", void 0);\n\n  __decorate([PostConstruct], RangeController.prototype, \"init\", null);\n\n  RangeController = __decorate([Bean('rangeController')], RangeController);\n  return RangeController;\n}(BeanStub);\n\nexport { RangeController };\n\nvar AutoScrollService =\n/** @class */\nfunction () {\n  function AutoScrollService(gridPanel, gridOptionsWrapper) {\n    this.tickingInterval = null;\n    this.gridPanel = gridPanel;\n    this.gridOptionsWrapper = gridOptionsWrapper;\n  }\n\n  AutoScrollService.prototype.check = function (mouseEvent, skipVerticalScroll) {\n    if (skipVerticalScroll === void 0) {\n      skipVerticalScroll = false;\n    }\n\n    var rect = this.gridPanel.getBodyClientRect();\n    skipVerticalScroll = skipVerticalScroll || this.gridOptionsWrapper.getDomLayout() !== Constants.DOM_LAYOUT_NORMAL; // we don't do ticking if grid is auto height unless we have a horizontal scroller\n\n    if (skipVerticalScroll && !this.gridPanel.isHorizontalScrollShowing()) {\n      return;\n    }\n\n    this.tickLeft = mouseEvent.clientX < rect.left + 20;\n    this.tickRight = mouseEvent.clientX > rect.right - 20;\n    this.tickUp = mouseEvent.clientY < rect.top + 20 && !skipVerticalScroll;\n    this.tickDown = mouseEvent.clientY > rect.bottom - 20 && !skipVerticalScroll;\n\n    if (this.tickLeft || this.tickRight || this.tickUp || this.tickDown) {\n      this.ensureTickingStarted();\n    } else {\n      this.ensureCleared();\n    }\n  };\n\n  AutoScrollService.prototype.ensureTickingStarted = function () {\n    if (this.tickingInterval === null) {\n      this.tickingInterval = window.setInterval(this.doTick.bind(this), 100);\n      this.tickCount = 0;\n    }\n  };\n\n  AutoScrollService.prototype.doTick = function () {\n    this.tickCount++;\n    var vScrollPosition = this.gridPanel.getVScrollPosition();\n    var hScrollPosition = this.gridPanel.getHScrollPosition();\n    var tickAmount;\n    tickAmount = this.tickCount > 20 ? 200 : this.tickCount > 10 ? 80 : 40;\n\n    if (this.tickUp) {\n      this.gridPanel.setVerticalScrollPosition(vScrollPosition.top - tickAmount);\n    }\n\n    if (this.tickDown) {\n      this.gridPanel.setVerticalScrollPosition(vScrollPosition.top + tickAmount);\n    }\n\n    if (this.tickLeft) {\n      this.gridPanel.setHorizontalScrollPosition(hScrollPosition.left - tickAmount);\n    }\n\n    if (this.tickRight) {\n      this.gridPanel.setHorizontalScrollPosition(hScrollPosition.left + tickAmount);\n    }\n  };\n\n  AutoScrollService.prototype.ensureCleared = function () {\n    if (this.tickingInterval) {\n      window.clearInterval(this.tickingInterval);\n      this.tickingInterval = null;\n    }\n  };\n\n  return AutoScrollService;\n}();","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/@ag-grid-enterprise/range-selection/dist/es6/rangeSelection/rangeController.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__spreadArrays","s","il","k","a","j","jl","Autowired","Bean","Constants","Events","PostConstruct","BeanStub","_","RangeController","_super","_this","apply","cellRanges","bodyScrollListener","onBodyScroll","bind","dragging","registerGridComp","gridPanel","autoScrollService","AutoScrollService","gridOptionsWrapper","init","logger","loggerFactory","addManagedListener","eventService","EVENT_COLUMN_EVERYTHING_CHANGED","removeAllCellRanges","EVENT_COLUMN_PIVOT_MODE_CHANGED","EVENT_COLUMN_ROW_GROUP_CHANGED","EVENT_COLUMN_GROUP_OPENED","refreshLastRangeStart","EVENT_COLUMN_MOVED","EVENT_COLUMN_PINNED","EVENT_COLUMN_VISIBLE","onColumnVisibleChange","forEach","cellRange","beforeCols","columns","filter","col","isVisible","colsInRangeChanged","areEqual","dispatchChangedEvent","id","lastRange","last","refreshRangeStart","isContiguousRange","rangeColumns","allColumns","columnController","getAllDisplayedColumns","allPositions","map","indexOf","sort","getRangeStartRow","startRow","endRow","rowPositionUtils","before","rowPinned","pinnedRowModel","getPinnedTopRowCount","PINNED_TOP","undefined","rowIndex","getRangeEndRow","pinnedBottomRowCount","getPinnedBottomRowCount","pinnedBottom","PINNED_BOTTOM","rowModel","getRowCount","setRangeToCell","cell","appendRange","isEnableRangeSelection","calculateColumnsBetween","column","suppressMultiRangeSelections","isSuppressMultiRangeSelection","missing","rowForCell","range","matches","sameRow","removeFromArray","push","startColumn","newestRangeStartCell","onDragStop","extendLatestRangeToCell","cellPosition","isEmpty","updateRangeEnd","silent","endColumn","colsToAdd","isLastCellOfRange","moveColInCellRange","colToMove","moveToFront","otherCols","_a","getRangeEdgeColumns","left","right","shouldMoveLeftCol","shouldMoveRightCol","allIndices","extendLatestRangeInDirection","startCell","firstCol","lastCol","endCellIndex","endCellFloating","endCellColumn","endCell","newEndCell","cellNavigationService","getNextCellToFocus","setCellRange","rowStartIndex","rowStartPinned","rowEndIndex","rowEndPinned","columnStart","columnEnd","params","addCellRange","setCellRanges","newRange","createCellRangeFromCellRangeParams","getColumnWithValidation","getCellRanges","isMoreThanOneCell","onDragging","lastMouseEvent","isCellInAnyRange","getCellRangeCount","isCellInSpecificRange","columnInRange","includes","rowInRange","isRowInRange","lastRow","isLastRow","rangeFirstIndexColumn","rangeLastIndexColumn","lastRangeColumn","isLastColumn","isBottomRightCell","isRightColumn","makeNull","floating","firstRow","thisRow","equalsFirstRow","equalsLastRow","afterFirstRow","beforeLastRow","getDraggingRange","draggingRange","onDragStart","mouseEvent","ctrlKey","metaKey","shiftKey","multiKeyPressed","allowMulti","multiSelectKeyPressed","mouseCell","mouseEventService","getCellPositionForEvent","exists","type","draggingCell","mouseRowPosition","addScrollEventListener","isMouseAndStartInPinned","position","skipVerticalScroll","check","cellPositionUtils","equals","ensureCleared","removeScrollEventListener","started","finished","event","freeze","EVENT_RANGE_SELECTION_CHANGED","api","gridApi","columnApi","dispatchEvent","columnFrom","columnTo","isSameColumn","fromIndex","console","warn","getId","toIndex","firstIndex","Math","min","lastIndex","tickingInterval","rect","getBodyClientRect","getDomLayout","DOM_LAYOUT_NORMAL","isHorizontalScrollShowing","tickLeft","clientX","tickRight","tickUp","clientY","top","tickDown","bottom","ensureTickingStarted","window","setInterval","doTick","tickCount","vScrollPosition","getVScrollPosition","hScrollPosition","getHScrollPosition","tickAmount","setVerticalScrollPosition","setHorizontalScrollPosition","clearInterval"],"mappings":"AAAA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIA,CAAC,CAACM,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAAc,KAF9E;;AAGA,WAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnBF,IAAAA,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASO,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBT,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACU,SAAF,GAAcT,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACS,MAAP,CAAcV,CAAd,CAAb,IAAiCO,EAAE,CAACE,SAAH,GAAeT,CAAC,CAACS,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;AACH,GAJD;AAKH,CAZ2C,EAA5C;;AAaA,IAAII,UAAU,GAAI,QAAQ,KAAKA,UAAd,IAA6B,UAAUC,UAAV,EAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACnF,MAAIC,CAAC,GAAGC,SAAS,CAACC,MAAlB;AAAA,MAA0BC,CAAC,GAAGH,CAAC,GAAG,CAAJ,GAAQH,MAAR,GAAiBE,IAAI,KAAK,IAAT,GAAgBA,IAAI,GAAGd,MAAM,CAACmB,wBAAP,CAAgCP,MAAhC,EAAwCC,GAAxC,CAAvB,GAAsEC,IAArH;AAAA,MAA2HhB,CAA3H;AACA,MAAI,OAAOsB,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACC,QAAf,KAA4B,UAA/D,EAA2EH,CAAC,GAAGE,OAAO,CAACC,QAAR,CAAiBV,UAAjB,EAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,CAAJ,CAA3E,KACK,KAAK,IAAIQ,CAAC,GAAGX,UAAU,CAACM,MAAX,GAAoB,CAAjC,EAAoCK,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C,EAAiD,IAAIxB,CAAC,GAAGa,UAAU,CAACW,CAAD,CAAlB,EAAuBJ,CAAC,GAAG,CAACH,CAAC,GAAG,CAAJ,GAAQjB,CAAC,CAACoB,CAAD,CAAT,GAAeH,CAAC,GAAG,CAAJ,GAAQjB,CAAC,CAACc,MAAD,EAASC,GAAT,EAAcK,CAAd,CAAT,GAA4BpB,CAAC,CAACc,MAAD,EAASC,GAAT,CAA7C,KAA+DK,CAAnE;AAC7E,SAAOH,CAAC,GAAG,CAAJ,IAASG,CAAT,IAAclB,MAAM,CAACuB,cAAP,CAAsBX,MAAtB,EAA8BC,GAA9B,EAAmCK,CAAnC,CAAd,EAAqDA,CAA5D;AACH,CALD;;AAMA,IAAIM,cAAc,GAAI,QAAQ,KAAKA,cAAd,IAAiC,YAAY;AAC9D,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWH,CAAC,GAAG,CAAf,EAAkBI,EAAE,GAAGV,SAAS,CAACC,MAAtC,EAA8CK,CAAC,GAAGI,EAAlD,EAAsDJ,CAAC,EAAvD,EAA2DG,CAAC,IAAIT,SAAS,CAACM,CAAD,CAAT,CAAaL,MAAlB;;AAC3D,OAAK,IAAIC,CAAC,GAAGf,KAAK,CAACsB,CAAD,CAAb,EAAkBE,CAAC,GAAG,CAAtB,EAAyBL,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGI,EAAzC,EAA6CJ,CAAC,EAA9C,EACI,KAAK,IAAIM,CAAC,GAAGZ,SAAS,CAACM,CAAD,CAAjB,EAAsBO,CAAC,GAAG,CAA1B,EAA6BC,EAAE,GAAGF,CAAC,CAACX,MAAzC,EAAiDY,CAAC,GAAGC,EAArD,EAAyDD,CAAC,IAAIF,CAAC,EAA/D,EACIT,CAAC,CAACS,CAAD,CAAD,GAAOC,CAAC,CAACC,CAAD,CAAR;;AACR,SAAOX,CAAP;AACH,CAND;;AAOA,SAASa,SAAT,EAAoBC,IAApB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,aAA7C,EAA4DC,QAA5D,EAAsEC,CAAtE,QAA+E,yBAA/E;;AACA,IAAIC,eAAe;AAAG;AAAe,UAAUC,MAAV,EAAkB;AACnD3C,EAAAA,SAAS,CAAC0C,eAAD,EAAkBC,MAAlB,CAAT;;AACA,WAASD,eAAT,GAA2B;AACvB,QAAIE,KAAK,GAAGD,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACE,KAAP,CAAa,IAAb,EAAmBzB,SAAnB,CAAnB,IAAoD,IAAhE;;AACAwB,IAAAA,KAAK,CAACE,UAAN,GAAmB,EAAnB;AACAF,IAAAA,KAAK,CAACG,kBAAN,GAA2BH,KAAK,CAACI,YAAN,CAAmBC,IAAnB,CAAwBL,KAAxB,CAA3B;AACAA,IAAAA,KAAK,CAACM,QAAN,GAAiB,KAAjB;AACA,WAAON,KAAP;AACH;;AACDF,EAAAA,eAAe,CAAC9B,SAAhB,CAA0BuC,gBAA1B,GAA6C,UAAUC,SAAV,EAAqB;AAC9D,SAAKA,SAAL,GAAiBA,SAAjB;AACA,SAAKC,iBAAL,GAAyB,IAAIC,iBAAJ,CAAsB,KAAKF,SAA3B,EAAsC,KAAKG,kBAA3C,CAAzB;AACH,GAHD;;AAIAb,EAAAA,eAAe,CAAC9B,SAAhB,CAA0B4C,IAA1B,GAAiC,YAAY;AACzC,SAAKC,MAAL,GAAc,KAAKC,aAAL,CAAmB7C,MAAnB,CAA0B,iBAA1B,CAAd;AACA,SAAK8C,kBAAL,CAAwB,KAAKC,YAA7B,EAA2CtB,MAAM,CAACuB,+BAAlD,EAAmF,KAAKC,mBAAL,CAAyBb,IAAzB,CAA8B,IAA9B,CAAnF;AACA,SAAKU,kBAAL,CAAwB,KAAKC,YAA7B,EAA2CtB,MAAM,CAACyB,+BAAlD,EAAmF,KAAKD,mBAAL,CAAyBb,IAAzB,CAA8B,IAA9B,CAAnF;AACA,SAAKU,kBAAL,CAAwB,KAAKC,YAA7B,EAA2CtB,MAAM,CAAC0B,8BAAlD,EAAkF,KAAKF,mBAAL,CAAyBb,IAAzB,CAA8B,IAA9B,CAAlF;AACA,SAAKU,kBAAL,CAAwB,KAAKC,YAA7B,EAA2CtB,MAAM,CAAC2B,yBAAlD,EAA6E,KAAKC,qBAAL,CAA2BjB,IAA3B,CAAgC,IAAhC,CAA7E;AACA,SAAKU,kBAAL,CAAwB,KAAKC,YAA7B,EAA2CtB,MAAM,CAAC6B,kBAAlD,EAAsE,KAAKD,qBAAL,CAA2BjB,IAA3B,CAAgC,IAAhC,CAAtE;AACA,SAAKU,kBAAL,CAAwB,KAAKC,YAA7B,EAA2CtB,MAAM,CAAC8B,mBAAlD,EAAuE,KAAKF,qBAAL,CAA2BjB,IAA3B,CAAgC,IAAhC,CAAvE;AACA,SAAKU,kBAAL,CAAwB,KAAKC,YAA7B,EAA2CtB,MAAM,CAAC+B,oBAAlD,EAAwE,KAAKC,qBAAL,CAA2BrB,IAA3B,CAAgC,IAAhC,CAAxE;AACH,GATD;;AAUAP,EAAAA,eAAe,CAAC9B,SAAhB,CAA0B0D,qBAA1B,GAAkD,YAAY;AAC1D,QAAI1B,KAAK,GAAG,IAAZ,CAD0D,CAE1D;;;AACA,SAAKsB,qBAAL,GAH0D,CAI1D;;AACA,SAAKpB,UAAL,CAAgByB,OAAhB,CAAwB,UAAUC,SAAV,EAAqB;AACzC,UAAIC,UAAU,GAAGD,SAAS,CAACE,OAA3B,CADyC,CAEzC;;AACAF,MAAAA,SAAS,CAACE,OAAV,GAAoBF,SAAS,CAACE,OAAV,CAAkBC,MAAlB,CAAyB,UAAUC,GAAV,EAAe;AAAE,eAAOA,GAAG,CAACC,SAAJ,EAAP;AAAyB,OAAnE,CAApB;AACA,UAAIC,kBAAkB,GAAG,CAACrC,CAAC,CAACsC,QAAF,CAAWN,UAAX,EAAuBD,SAAS,CAACE,OAAjC,CAA1B;;AACA,UAAII,kBAAJ,EAAwB;AACpB;AACAlC,QAAAA,KAAK,CAACoC,oBAAN,CAA2B,KAA3B,EAAkC,IAAlC,EAAwCR,SAAS,CAACS,EAAlD;AACH;AACJ,KATD;AAUH,GAfD;;AAgBAvC,EAAAA,eAAe,CAAC9B,SAAhB,CAA0BsD,qBAA1B,GAAkD,YAAY;AAC1D,QAAIgB,SAAS,GAAGzC,CAAC,CAAC0C,IAAF,CAAO,KAAKrC,UAAZ,CAAhB;;AACA,QAAI,CAACoC,SAAL,EAAgB;AACZ;AACH;;AACD,SAAKE,iBAAL,CAAuBF,SAAvB;AACH,GAND;;AAOAxC,EAAAA,eAAe,CAAC9B,SAAhB,CAA0ByE,iBAA1B,GAA8C,UAAUb,SAAV,EAAqB;AAC/D,QAAIc,YAAY,GAAGd,SAAS,CAACE,OAA7B;;AACA,QAAI,CAACY,YAAY,CAACjE,MAAlB,EAA0B;AACtB,aAAO,KAAP;AACH;;AACD,QAAIkE,UAAU,GAAG,KAAKC,gBAAL,CAAsBC,sBAAtB,EAAjB;AACA,QAAIC,YAAY,GAAGJ,YAAY,CAACK,GAAb,CAAiB,UAAUxE,CAAV,EAAa;AAAE,aAAOoE,UAAU,CAACK,OAAX,CAAmBzE,CAAnB,CAAP;AAA+B,KAA/D,EAAiE0E,IAAjE,CAAsE,UAAU7D,CAAV,EAAa7B,CAAb,EAAgB;AAAE,aAAO6B,CAAC,GAAG7B,CAAX;AAAe,KAAvG,CAAnB;AACA,WAAOsC,CAAC,CAAC0C,IAAF,CAAOO,YAAP,IAAuBA,YAAY,CAAC,CAAD,CAAnC,GAAyC,CAAzC,KAA+CJ,YAAY,CAACjE,MAAnE;AACH,GARD;;AASAqB,EAAAA,eAAe,CAAC9B,SAAhB,CAA0BkF,gBAA1B,GAA6C,UAAUtB,SAAV,EAAqB;AAC9D,QAAIA,SAAS,CAACuB,QAAV,IAAsBvB,SAAS,CAACwB,MAApC,EAA4C;AACxC,aAAO,KAAKC,gBAAL,CAAsBC,MAAtB,CAA6B1B,SAAS,CAACuB,QAAvC,EAAiDvB,SAAS,CAACwB,MAA3D,IACHxB,SAAS,CAACuB,QADP,GACkBvB,SAAS,CAACwB,MADnC;AAEH;;AACD,QAAIG,SAAS,GAAG,KAAKC,cAAL,CAAoBC,oBAApB,KAA6C,CAA7C,GAAiDhE,SAAS,CAACiE,UAA3D,GAAwEC,SAAxF;AACA,WAAO;AAAEC,MAAAA,QAAQ,EAAE,CAAZ;AAAeL,MAAAA,SAAS,EAAEA;AAA1B,KAAP;AACH,GAPD;;AAQAzD,EAAAA,eAAe,CAAC9B,SAAhB,CAA0B6F,cAA1B,GAA2C,UAAUjC,SAAV,EAAqB;AAC5D,QAAIA,SAAS,CAACuB,QAAV,IAAsBvB,SAAS,CAACwB,MAApC,EAA4C;AACxC,aAAO,KAAKC,gBAAL,CAAsBC,MAAtB,CAA6B1B,SAAS,CAACuB,QAAvC,EAAiDvB,SAAS,CAACwB,MAA3D,IACHxB,SAAS,CAACwB,MADP,GACgBxB,SAAS,CAACuB,QADjC;AAEH;;AACD,QAAIW,oBAAoB,GAAG,KAAKN,cAAL,CAAoBO,uBAApB,EAA3B;AACA,QAAIC,YAAY,GAAGF,oBAAoB,GAAG,CAA1C;;AACA,QAAIE,YAAJ,EAAkB;AACd,aAAO;AACHJ,QAAAA,QAAQ,EAAEE,oBAAoB,GAAG,CAD9B;AAEHP,QAAAA,SAAS,EAAE9D,SAAS,CAACwE;AAFlB,OAAP;AAIH;;AACD,WAAO;AACHL,MAAAA,QAAQ,EAAE,KAAKM,QAAL,CAAcC,WAAd,KAA8B,CADrC;AAEHZ,MAAAA,SAAS,EAAEI;AAFR,KAAP;AAIH,GAjBD;;AAkBA7D,EAAAA,eAAe,CAAC9B,SAAhB,CAA0BoG,cAA1B,GAA2C,UAAUC,IAAV,EAAgBC,WAAhB,EAA6B;AACpE,QAAIA,WAAW,KAAK,KAAK,CAAzB,EAA4B;AAAEA,MAAAA,WAAW,GAAG,KAAd;AAAsB;;AACpD,QAAI,CAAC,KAAK3D,kBAAL,CAAwB4D,sBAAxB,EAAL,EAAuD;AACnD;AACH;;AACD,QAAIzC,OAAO,GAAG,KAAK0C,uBAAL,CAA6BH,IAAI,CAACI,MAAlC,EAA0CJ,IAAI,CAACI,MAA/C,CAAd;;AACA,QAAI,CAAC3C,OAAL,EAAc;AACV;AACH;;AACD,QAAI4C,4BAA4B,GAAG,KAAK/D,kBAAL,CAAwBgE,6BAAxB,EAAnC,CAToE,CAUpE;;AACA,QAAID,4BAA4B,IAAI,CAACJ,WAAjC,IAAgDzE,CAAC,CAAC+E,OAAF,CAAU,KAAK1E,UAAf,CAApD,EAAgF;AAC5E,WAAKgB,mBAAL,CAAyB,IAAzB;AACH;;AACD,QAAI2D,UAAU,GAAG;AACbjB,MAAAA,QAAQ,EAAES,IAAI,CAACT,QADF;AAEbL,MAAAA,SAAS,EAAEc,IAAI,CAACd;AAFH,KAAjB,CAdoE,CAkBpE;AACA;AACA;;AACA,QAAI3B,SAAJ;;AACA,SAAK,IAAI9C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKoB,UAAL,CAAgBzB,MAApC,EAA4CK,CAAC,EAA7C,EAAiD;AAC7C,UAAIgG,KAAK,GAAG,KAAK5E,UAAL,CAAgBpB,CAAhB,CAAZ;AACA,UAAIiG,OAAO,GACX;AACCD,MAAAA,KAAK,CAAChD,OAAN,IAAiBgD,KAAK,CAAChD,OAAN,CAAcrD,MAAd,KAAyB,CAA1C,IAA+CqG,KAAK,CAAChD,OAAN,CAAc,CAAd,MAAqBuC,IAAI,CAACI,MAA1E,IACI;AACA,WAAKpB,gBAAL,CAAsB2B,OAAtB,CAA8BH,UAA9B,EAA0CC,KAAK,CAAC3B,QAAhD,CAFJ,IAGI,KAAKE,gBAAL,CAAsB2B,OAAtB,CAA8BH,UAA9B,EAA0CC,KAAK,CAAC1B,MAAhD,CALJ;;AAMA,UAAI2B,OAAJ,EAAa;AACTnD,QAAAA,SAAS,GAAGkD,KAAZ;AACA;AACH;AACJ;;AACD,QAAIlD,SAAJ,EAAe;AACX;AACA;AACA,UAAI/B,CAAC,CAAC0C,IAAF,CAAO,KAAKrC,UAAZ,MAA4B0B,SAAhC,EAA2C;AACvC/B,QAAAA,CAAC,CAACoF,eAAF,CAAkB,KAAK/E,UAAvB,EAAmC0B,SAAnC;;AACA,aAAK1B,UAAL,CAAgBgF,IAAhB,CAAqBtD,SAArB;AACH;AACJ,KAPD,MAQK;AACDA,MAAAA,SAAS,GAAG;AACRuB,QAAAA,QAAQ,EAAE0B,UADF;AAERzB,QAAAA,MAAM,EAAEyB,UAFA;AAGR/C,QAAAA,OAAO,EAAEA,OAHD;AAIRqD,QAAAA,WAAW,EAAEd,IAAI,CAACI;AAJV,OAAZ;AAMA,WAAKvE,UAAL,CAAgBgF,IAAhB,CAAqBtD,SAArB;AACH;;AACD,SAAKwD,oBAAL,GAA4Bf,IAA5B;AACA,SAAKgB,UAAL;AACA,SAAKjD,oBAAL,CAA0B,IAA1B,EAAgC,IAAhC,EAAsCR,SAAS,CAACS,EAAhD;AACH,GAvDD;;AAwDAvC,EAAAA,eAAe,CAAC9B,SAAhB,CAA0BsH,uBAA1B,GAAoD,UAAUC,YAAV,EAAwB;AACxE,QAAI,KAAKC,OAAL,MAAkB,CAAC,KAAKJ,oBAA5B,EAAkD;AAC9C;AACH;;AACD,QAAIxD,SAAS,GAAG/B,CAAC,CAAC0C,IAAF,CAAO,KAAKrC,UAAZ,CAAhB;;AACA,SAAKuF,cAAL,CAAoB7D,SAApB,EAA+B2D,YAA/B;AACH,GAND;;AAOAzF,EAAAA,eAAe,CAAC9B,SAAhB,CAA0ByH,cAA1B,GAA2C,UAAU7D,SAAV,EAAqB2D,YAArB,EAAmCG,MAAnC,EAA2C;AAClF,QAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;AAAEA,MAAAA,MAAM,GAAG,KAAT;AAAiB;;AAC1C,QAAIC,SAAS,GAAGJ,YAAY,CAACd,MAA7B;AACA,QAAImB,SAAS,GAAG,KAAKpB,uBAAL,CAA6B5C,SAAS,CAACuD,WAAvC,EAAoDQ,SAApD,CAAhB;;AACA,QAAI,CAACC,SAAD,IAAc,KAAKC,iBAAL,CAAuBjE,SAAvB,EAAkC2D,YAAlC,CAAlB,EAAmE;AAC/D;AACH;;AACD3D,IAAAA,SAAS,CAACE,OAAV,GAAoB8D,SAApB;AACAhE,IAAAA,SAAS,CAACwB,MAAV,GAAmB;AAAEQ,MAAAA,QAAQ,EAAE2B,YAAY,CAAC3B,QAAzB;AAAmCL,MAAAA,SAAS,EAAEgC,YAAY,CAAChC;AAA3D,KAAnB;;AACA,QAAI,CAACmC,MAAL,EAAa;AACT,WAAKtD,oBAAL,CAA0B,IAA1B,EAAgC,IAAhC,EAAsCR,SAAS,CAACS,EAAhD;AACH;AACJ,GAZD;;AAaAvC,EAAAA,eAAe,CAAC9B,SAAhB,CAA0BwE,iBAA1B,GAA8C,UAAUZ,SAAV,EAAqB;AAC/D,QAAIuD,WAAW,GAAGvD,SAAS,CAACuD,WAA5B;AAAA,QAAyCrD,OAAO,GAAGF,SAAS,CAACE,OAA7D;;AACA,QAAIgE,kBAAkB,GAAG,UAAUC,SAAV,EAAqBC,WAArB,EAAkC;AACvD,UAAIC,SAAS,GAAGrE,SAAS,CAACE,OAAV,CAAkBC,MAAlB,CAAyB,UAAUC,GAAV,EAAe;AAAE,eAAOA,GAAG,KAAK+D,SAAf;AAA2B,OAArE,CAAhB;;AACA,UAAIA,SAAJ,EAAe;AACXnE,QAAAA,SAAS,CAACuD,WAAV,GAAwBY,SAAxB;AACAnE,QAAAA,SAAS,CAACE,OAAV,GAAoBkE,WAAW,GAAGhH,cAAc,CAAC,CAAC+G,SAAD,CAAD,EAAcE,SAAd,CAAjB,GAA4CjH,cAAc,CAACiH,SAAD,EAAY,CAACF,SAAD,CAAZ,CAAzF;AACH,OAHD,MAIK;AACDnE,QAAAA,SAAS,CAACE,OAAV,GAAoBmE,SAApB;AACH;AACJ,KATD;;AAUA,QAAIC,EAAE,GAAG,KAAKC,mBAAL,CAAyBvE,SAAzB,CAAT;AAAA,QAA8CwE,IAAI,GAAGF,EAAE,CAACE,IAAxD;AAAA,QAA8DC,KAAK,GAAGH,EAAE,CAACG,KAAzE;;AACA,QAAIC,iBAAiB,GAAGnB,WAAW,KAAKrD,OAAO,CAAC,CAAD,CAAvB,IAA8BqD,WAAW,KAAKiB,IAAtE;;AACA,QAAIE,iBAAJ,EAAuB;AACnBR,MAAAA,kBAAkB,CAACM,IAAD,EAAO,IAAP,CAAlB;AACA;AACH;;AACD,QAAIG,kBAAkB,GAAGpB,WAAW,KAAKtF,CAAC,CAAC0C,IAAF,CAAOT,OAAP,CAAhB,IAAmCqD,WAAW,KAAKkB,KAA5E;;AACA,QAAIE,kBAAJ,EAAwB;AACpBT,MAAAA,kBAAkB,CAACO,KAAD,EAAQ,KAAR,CAAlB;AACA;AACH;AACJ,GAvBD;;AAwBAvG,EAAAA,eAAe,CAAC9B,SAAhB,CAA0BmI,mBAA1B,GAAgD,UAAUvE,SAAV,EAAqB;AACjE,QAAIe,UAAU,GAAG,KAAKC,gBAAL,CAAsBC,sBAAtB,EAAjB;AACA,QAAI2D,UAAU,GAAG5E,SAAS,CAACE,OAAV,CACZiB,GADY,CACR,UAAUxE,CAAV,EAAa;AAAE,aAAOoE,UAAU,CAACK,OAAX,CAAmBzE,CAAnB,CAAP;AAA+B,KADtC,EAEZwD,MAFY,CAEL,UAAUjD,CAAV,EAAa;AAAE,aAAOA,CAAC,GAAG,CAAC,CAAZ;AAAgB,KAF1B,EAGZmE,IAHY,CAGP,UAAU7D,CAAV,EAAa7B,CAAb,EAAgB;AAAE,aAAO6B,CAAC,GAAG7B,CAAX;AAAe,KAH1B,CAAjB;AAIA,WAAO;AACH6I,MAAAA,IAAI,EAAEzD,UAAU,CAAC6D,UAAU,CAAC,CAAD,CAAX,CADb;AAEHH,MAAAA,KAAK,EAAE1D,UAAU,CAAC9C,CAAC,CAAC0C,IAAF,CAAOiE,UAAP,CAAD;AAFd,KAAP;AAIH,GAVD,CArLmD,CAgMnD;;;AACA1G,EAAAA,eAAe,CAAC9B,SAAhB,CAA0ByI,4BAA1B,GAAyD,UAAUpI,GAAV,EAAe;AACpE,QAAI,KAAKmH,OAAL,MAAkB,CAAC,KAAKJ,oBAA5B,EAAkD;AAC9C;AACH;;AACD,QAAI9C,SAAS,GAAGzC,CAAC,CAAC0C,IAAF,CAAO,KAAKrC,UAAZ,CAAhB;;AACA,QAAIwG,SAAS,GAAG,KAAKtB,oBAArB;AACA,QAAIuB,QAAQ,GAAGrE,SAAS,CAACR,OAAV,CAAkB,CAAlB,CAAf;;AACA,QAAI8E,OAAO,GAAG/G,CAAC,CAAC0C,IAAF,CAAOD,SAAS,CAACR,OAAjB,CAAd,CAPoE,CAQpE;;;AACA,QAAI+E,YAAY,GAAGvE,SAAS,CAACc,MAAV,CAAiBQ,QAApC;AACA,QAAIkD,eAAe,GAAGxE,SAAS,CAACc,MAAV,CAAiBG,SAAvC;AACA,QAAIwD,aAAa,GAAGL,SAAS,CAACjC,MAAV,KAAqBkC,QAArB,GAAgCC,OAAhC,GAA0CD,QAA9D;AACA,QAAIK,OAAO,GAAG;AAAEvC,MAAAA,MAAM,EAAEsC,aAAV;AAAyBnD,MAAAA,QAAQ,EAAEiD,YAAnC;AAAiDtD,MAAAA,SAAS,EAAEuD;AAA5D,KAAd;AACA,QAAIG,UAAU,GAAG,KAAKC,qBAAL,CAA2BC,kBAA3B,CAA8C9I,GAA9C,EAAmD2I,OAAnD,CAAjB,CAboE,CAcpE;;AACA,QAAI,CAACC,UAAL,EAAiB;AACb;AACH;;AACD,SAAKG,YAAL,CAAkB;AACdC,MAAAA,aAAa,EAAEX,SAAS,CAAC9C,QADX;AAEd0D,MAAAA,cAAc,EAAEZ,SAAS,CAACnD,SAFZ;AAGdgE,MAAAA,WAAW,EAAEN,UAAU,CAACrD,QAHV;AAId4D,MAAAA,YAAY,EAAEP,UAAU,CAAC1D,SAJX;AAKdkE,MAAAA,WAAW,EAAEf,SAAS,CAACjC,MALT;AAMdiD,MAAAA,SAAS,EAAET,UAAU,CAACxC;AANR,KAAlB;AAQA,WAAOwC,UAAP;AACH,GA3BD;;AA4BAnH,EAAAA,eAAe,CAAC9B,SAAhB,CAA0BoJ,YAA1B,GAAyC,UAAUO,MAAV,EAAkB;AACvD,QAAI,CAAC,KAAKhH,kBAAL,CAAwB4D,sBAAxB,EAAL,EAAuD;AACnD;AACH;;AACD,SAAKrD,mBAAL,CAAyB,IAAzB;AACA,SAAK0G,YAAL,CAAkBD,MAAlB;AACH,GAND;;AAOA7H,EAAAA,eAAe,CAAC9B,SAAhB,CAA0B6J,aAA1B,GAA0C,UAAU3H,UAAV,EAAsB;AAC5D,QAAIF,KAAK,GAAG,IAAZ;;AACA,SAAKkB,mBAAL,CAAyB,IAAzB;AACAhB,IAAAA,UAAU,CAACyB,OAAX,CAAmB,UAAUmG,QAAV,EAAoB;AACnC,UAAIA,QAAQ,CAAChG,OAAT,IAAoBgG,QAAQ,CAAC3E,QAAjC,EAA2C;AACvCnD,QAAAA,KAAK,CAACoF,oBAAN,GAA6B;AACzBxB,UAAAA,QAAQ,EAAEkE,QAAQ,CAAC3E,QAAT,CAAkBS,QADH;AAEzBL,UAAAA,SAAS,EAAEuE,QAAQ,CAAC3E,QAAT,CAAkBI,SAFJ;AAGzBkB,UAAAA,MAAM,EAAEqD,QAAQ,CAAChG,OAAT,CAAiB,CAAjB;AAHiB,SAA7B;AAKH;;AACD9B,MAAAA,KAAK,CAACE,UAAN,CAAiBgF,IAAjB,CAAsB4C,QAAtB;AACH,KATD;AAUA,SAAK1F,oBAAL,CAA0B,KAA1B,EAAiC,IAAjC;AACH,GAdD;;AAeAtC,EAAAA,eAAe,CAAC9B,SAAhB,CAA0B+J,kCAA1B,GAA+D,UAAUJ,MAAV,EAAkB;AAC7E,QAAI3H,KAAK,GAAG,IAAZ;;AACA,QAAI8B,OAAJ;;AACA,QAAI6F,MAAM,CAAC7F,OAAX,EAAoB;AAChBA,MAAAA,OAAO,GAAG6F,MAAM,CAAC7F,OAAP,CAAeiB,GAAf,CAAmB,UAAUxE,CAAV,EAAa;AAAE,eAAOyB,KAAK,CAAC4C,gBAAN,CAAuBoF,uBAAvB,CAA+CzJ,CAA/C,CAAP;AAA2D,OAA7F,EAA+FwD,MAA/F,CAAsG,UAAUxD,CAAV,EAAa;AAAE,eAAOA,CAAP;AAAW,OAAhI,CAAV;AACH,KAFD,MAGK;AACD,UAAIkJ,WAAW,GAAG,KAAK7E,gBAAL,CAAsBoF,uBAAtB,CAA8CL,MAAM,CAACF,WAArD,CAAlB;AACA,UAAIC,SAAS,GAAG,KAAK9E,gBAAL,CAAsBoF,uBAAtB,CAA8CL,MAAM,CAACD,SAArD,CAAhB;;AACA,UAAI,CAACD,WAAD,IAAgB,CAACC,SAArB,EAAgC;AAC5B;AACH;;AACD5F,MAAAA,OAAO,GAAG,KAAK0C,uBAAL,CAA6BiD,WAA7B,EAA0CC,SAA1C,CAAV;AACH;;AACD,QAAI,CAAC5F,OAAL,EAAc;AACV;AACH;;AACD,QAAIqB,QAAQ,GAAGwE,MAAM,CAACN,aAAP,IAAwB,IAAxB,GAA+B;AAC1CzD,MAAAA,QAAQ,EAAE+D,MAAM,CAACN,aADyB;AAE1C9D,MAAAA,SAAS,EAAEoE,MAAM,CAACL;AAFwB,KAA/B,GAGX3D,SAHJ;AAIA,QAAIP,MAAM,GAAGuE,MAAM,CAACJ,WAAP,IAAsB,IAAtB,GAA6B;AACtC3D,MAAAA,QAAQ,EAAE+D,MAAM,CAACJ,WADqB;AAEtChE,MAAAA,SAAS,EAAEoE,MAAM,CAACH;AAFoB,KAA7B,GAGT7D,SAHJ;AAIA,WAAO;AACHR,MAAAA,QAAQ,EAAEA,QADP;AAEHC,MAAAA,MAAM,EAAEA,MAFL;AAGHtB,MAAAA,OAAO,EAAEA,OAHN;AAIHqD,MAAAA,WAAW,EAAErD,OAAO,CAAC,CAAD;AAJjB,KAAP;AAMH,GA/BD;;AAgCAhC,EAAAA,eAAe,CAAC9B,SAAhB,CAA0B4J,YAA1B,GAAyC,UAAUD,MAAV,EAAkB;AACvD,QAAI,CAAC,KAAKhH,kBAAL,CAAwB4D,sBAAxB,EAAL,EAAuD;AACnD;AACH;;AACD,QAAIuD,QAAQ,GAAG,KAAKC,kCAAL,CAAwCJ,MAAxC,CAAf;;AACA,QAAIG,QAAJ,EAAc;AACV,WAAK5H,UAAL,CAAgBgF,IAAhB,CAAqB4C,QAArB;AACA,WAAK1F,oBAAL,CAA0B,KAA1B,EAAiC,IAAjC,EAAuC0F,QAAQ,CAACzF,EAAhD;AACH;AACJ,GATD;;AAUAvC,EAAAA,eAAe,CAAC9B,SAAhB,CAA0BiK,aAA1B,GAA0C,YAAY;AAClD,WAAO,KAAK/H,UAAZ;AACH,GAFD;;AAGAJ,EAAAA,eAAe,CAAC9B,SAAhB,CAA0BwH,OAA1B,GAAoC,YAAY;AAC5C,WAAO,KAAKtF,UAAL,CAAgBzB,MAAhB,KAA2B,CAAlC;AACH,GAFD;;AAGAqB,EAAAA,eAAe,CAAC9B,SAAhB,CAA0BkK,iBAA1B,GAA8C,YAAY;AACtD,QAAI,KAAKhI,UAAL,CAAgBzB,MAAhB,KAA2B,CAA/B,EAAkC;AAC9B;AACA,aAAO,KAAP;AACH,KAHD,MAIK,IAAI,KAAKyB,UAAL,CAAgBzB,MAAhB,GAAyB,CAA7B,EAAgC;AACjC;AACA,aAAO,IAAP;AACH,KARqD,CAStD;;;AACA,QAAIqG,KAAK,GAAG,KAAK5E,UAAL,CAAgB,CAAhB,CAAZ;AACA,QAAIiD,QAAQ,GAAG,KAAKD,gBAAL,CAAsB4B,KAAtB,CAAf;AACA,QAAI1B,MAAM,GAAG,KAAKS,cAAL,CAAoBiB,KAApB,CAAb;AACA,WAAO3B,QAAQ,CAACI,SAAT,KAAuBH,MAAM,CAACG,SAA9B,IACHJ,QAAQ,CAACS,QAAT,KAAsBR,MAAM,CAACQ,QAD1B,IAEHkB,KAAK,CAAChD,OAAN,CAAcrD,MAAd,KAAyB,CAF7B;AAGH,GAhBD;;AAiBAqB,EAAAA,eAAe,CAAC9B,SAAhB,CAA0BkD,mBAA1B,GAAgD,UAAUwE,MAAV,EAAkB;AAC9D,QAAI,KAAKF,OAAL,EAAJ,EAAoB;AAChB;AACH;;AACD,SAAKH,UAAL;AACA,SAAKnF,UAAL,CAAgBzB,MAAhB,GAAyB,CAAzB;;AACA,QAAI,CAACiH,MAAL,EAAa;AACT,WAAKtD,oBAAL,CAA0B,KAA1B,EAAiC,IAAjC;AACH;AACJ,GATD,CApTmD,CA8TnD;AACA;AACA;;;AACAtC,EAAAA,eAAe,CAAC9B,SAAhB,CAA0BoC,YAA1B,GAAyC,YAAY;AACjD,SAAK+H,UAAL,CAAgB,KAAKC,cAArB;AACH,GAFD;;AAGAtI,EAAAA,eAAe,CAAC9B,SAAhB,CAA0BqK,gBAA1B,GAA6C,UAAUhE,IAAV,EAAgB;AACzD,WAAO,KAAKiE,iBAAL,CAAuBjE,IAAvB,IAA+B,CAAtC;AACH,GAFD;;AAGAvE,EAAAA,eAAe,CAAC9B,SAAhB,CAA0BuK,qBAA1B,GAAkD,UAAUlE,IAAV,EAAgBS,KAAhB,EAAuB;AACrE,QAAI0D,aAAa,GAAG1D,KAAK,CAAChD,OAAN,KAAkB,IAAlB,IAA0BjC,CAAC,CAAC4I,QAAF,CAAW3D,KAAK,CAAChD,OAAjB,EAA0BuC,IAAI,CAACI,MAA/B,CAA9C;;AACA,QAAIiE,UAAU,GAAG,KAAKC,YAAL,CAAkBtE,IAAI,CAACT,QAAvB,EAAiCS,IAAI,CAACd,SAAtC,EAAiDuB,KAAjD,CAAjB;AACA,WAAO0D,aAAa,IAAIE,UAAxB;AACH,GAJD;;AAKA5I,EAAAA,eAAe,CAAC9B,SAAhB,CAA0B6H,iBAA1B,GAA8C,UAAUjE,SAAV,EAAqByC,IAArB,EAA2B;AACrE,QAAIlB,QAAQ,GAAGvB,SAAS,CAACuB,QAAzB;AAAA,QAAmCC,MAAM,GAAGxB,SAAS,CAACwB,MAAtD;AACA,QAAIwF,OAAO,GAAG,KAAKvF,gBAAL,CAAsBC,MAAtB,CAA6BH,QAA7B,EAAuCC,MAAvC,IAAiDA,MAAjD,GAA0DD,QAAxE;AACA,QAAI0F,SAAS,GAAGxE,IAAI,CAACT,QAAL,KAAkBgF,OAAO,CAAChF,QAA1B,IAAsCS,IAAI,CAACd,SAAL,KAAmBqF,OAAO,CAACrF,SAAjF;AACA,QAAIuF,qBAAqB,GAAGlH,SAAS,CAACE,OAAV,CAAkB,CAAlB,CAA5B;;AACA,QAAIiH,oBAAoB,GAAGlJ,CAAC,CAAC0C,IAAF,CAAOX,SAAS,CAACE,OAAjB,CAA3B;;AACA,QAAIkH,eAAe,GAAGpH,SAAS,CAACuD,WAAV,KAA0B2D,qBAA1B,GAAkDC,oBAAlD,GAAyED,qBAA/F;AACA,QAAIG,YAAY,GAAG5E,IAAI,CAACI,MAAL,KAAgBuE,eAAnC;AACA,WAAOC,YAAY,IAAIJ,SAAvB;AACH,GATD;;AAUA/I,EAAAA,eAAe,CAAC9B,SAAhB,CAA0BkL,iBAA1B,GAA8C,UAAUtH,SAAV,EAAqByC,IAArB,EAA2B;AACrE,QAAI1B,UAAU,GAAG,KAAKC,gBAAL,CAAsBC,sBAAtB,EAAjB;AACA,QAAIC,YAAY,GAAGlB,SAAS,CAACE,OAAV,CAAkBiB,GAAlB,CAAsB,UAAUxE,CAAV,EAAa;AAAE,aAAOoE,UAAU,CAACK,OAAX,CAAmBzE,CAAnB,CAAP;AAA+B,KAApE,EAAsE0E,IAAtE,CAA2E,UAAU7D,CAAV,EAAa7B,CAAb,EAAgB;AAAE,aAAO6B,CAAC,GAAG7B,CAAX;AAAe,KAA5G,CAAnB;AACA,QAAI4F,QAAQ,GAAGvB,SAAS,CAACuB,QAAzB;AAAA,QAAmCC,MAAM,GAAGxB,SAAS,CAACwB,MAAtD;AACA,QAAIwF,OAAO,GAAG,KAAKvF,gBAAL,CAAsBC,MAAtB,CAA6BH,QAA7B,EAAuCC,MAAvC,IAAiDA,MAAjD,GAA0DD,QAAxE;;AACA,QAAIgG,aAAa,GAAGxG,UAAU,CAACK,OAAX,CAAmBqB,IAAI,CAACI,MAAxB,MAAoC5E,CAAC,CAAC0C,IAAF,CAAOO,YAAP,CAAxD;;AACA,QAAI+F,SAAS,GAAGxE,IAAI,CAACT,QAAL,KAAkBgF,OAAO,CAAChF,QAA1B,IAAsC/D,CAAC,CAACuJ,QAAF,CAAW/E,IAAI,CAACd,SAAhB,MAA+B1D,CAAC,CAACuJ,QAAF,CAAWR,OAAO,CAACrF,SAAnB,CAArF;;AACA,WAAO4F,aAAa,IAAIN,SAAxB;AACH,GARD,CAtVmD,CA+VnD;;;AACA/I,EAAAA,eAAe,CAAC9B,SAAhB,CAA0BsK,iBAA1B,GAA8C,UAAUjE,IAAV,EAAgB;AAC1D,QAAIrE,KAAK,GAAG,IAAZ;;AACA,QAAI,KAAKwF,OAAL,EAAJ,EAAoB;AAChB,aAAO,CAAP;AACH;;AACD,WAAO,KAAKtF,UAAL,CAAgB6B,MAAhB,CAAuB,UAAUH,SAAV,EAAqB;AAAE,aAAO5B,KAAK,CAACuI,qBAAN,CAA4BlE,IAA5B,EAAkCzC,SAAlC,CAAP;AAAsD,KAApG,EAAsGnD,MAA7G;AACH,GAND;;AAOAqB,EAAAA,eAAe,CAAC9B,SAAhB,CAA0B2K,YAA1B,GAAyC,UAAU/E,QAAV,EAAoByF,QAApB,EAA8BzH,SAA9B,EAAyC;AAC9E,QAAI0H,QAAQ,GAAG,KAAKpG,gBAAL,CAAsBtB,SAAtB,CAAf;AACA,QAAIgH,OAAO,GAAG,KAAK/E,cAAL,CAAoBjC,SAApB,CAAd;AACA,QAAI2H,OAAO,GAAG;AAAE3F,MAAAA,QAAQ,EAAEA,QAAZ;AAAsBL,MAAAA,SAAS,EAAE8F;AAAjC,KAAd,CAH8E,CAI9E;;AACA,QAAIG,cAAc,GAAGD,OAAO,CAAC3F,QAAR,KAAqB0F,QAAQ,CAAC1F,QAA9B,IAA0C2F,OAAO,CAAChG,SAAR,IAAqB+F,QAAQ,CAAC/F,SAA7F;AACA,QAAIkG,aAAa,GAAGF,OAAO,CAAC3F,QAAR,KAAqBgF,OAAO,CAAChF,QAA7B,IAAyC2F,OAAO,CAAChG,SAAR,IAAqBqF,OAAO,CAACrF,SAA1F;;AACA,QAAIiG,cAAc,IAAIC,aAAtB,EAAqC;AACjC,aAAO,IAAP;AACH;;AACD,QAAIC,aAAa,GAAG,CAAC,KAAKrG,gBAAL,CAAsBC,MAAtB,CAA6BiG,OAA7B,EAAsCD,QAAtC,CAArB;AACA,QAAIK,aAAa,GAAG,KAAKtG,gBAAL,CAAsBC,MAAtB,CAA6BiG,OAA7B,EAAsCX,OAAtC,CAApB;AACA,WAAOc,aAAa,IAAIC,aAAxB;AACH,GAbD;;AAcA7J,EAAAA,eAAe,CAAC9B,SAAhB,CAA0B4L,gBAA1B,GAA6C,YAAY;AACrD,WAAO,KAAKC,aAAZ;AACH,GAFD;;AAGA/J,EAAAA,eAAe,CAAC9B,SAAhB,CAA0B8L,WAA1B,GAAwC,UAAUC,UAAV,EAAsB;AAC1D,QAAI,CAAC,KAAKpJ,kBAAL,CAAwB4D,sBAAxB,EAAL,EAAuD;AACnD;AACH;;AACD,QAAIyF,OAAO,GAAGD,UAAU,CAACC,OAAzB;AAAA,QAAkCC,OAAO,GAAGF,UAAU,CAACE,OAAvD;AAAA,QAAgEC,QAAQ,GAAGH,UAAU,CAACG,QAAtF,CAJ0D,CAK1D;;AACA,QAAIC,eAAe,GAAGH,OAAO,IAAIC,OAAjC;AACA,QAAIG,UAAU,GAAG,CAAC,KAAKzJ,kBAAL,CAAwBgE,6BAAxB,EAAlB;AACA,QAAI0F,qBAAqB,GAAGD,UAAU,GAAGD,eAAH,GAAqB,KAA3D;AACA,QAAIG,SAAS,GAAG,KAAKC,iBAAL,CAAuBC,uBAAvB,CAA+CT,UAA/C,CAAhB;;AACA,QAAIlK,CAAC,CAAC+E,OAAF,CAAU0F,SAAV,CAAJ,EAA0B;AACtB;AACA;AACA;AACH;;AACD,QAAI,CAACD,qBAAD,KAA2B,CAACH,QAAD,IAAarK,CAAC,CAAC4K,MAAF,CAAS5K,CAAC,CAAC0C,IAAF,CAAO,KAAKrC,UAAZ,EAAwBwK,IAAjC,CAAxC,CAAJ,EAAqF;AACjF,WAAKxJ,mBAAL,CAAyB,IAAzB;AACH;;AACD,SAAKZ,QAAL,GAAgB,IAAhB;AACA,SAAKqK,YAAL,GAAoBL,SAApB;AACA,SAAKlC,cAAL,GAAsB2B,UAAtB;;AACA,QAAI,CAACG,QAAL,EAAe;AACX,WAAK9E,oBAAL,GAA4BkF,SAA5B;AACH,KAvByD,CAwB1D;AACA;AACA;AACA;;;AACA,QAAI,KAAKpK,UAAL,CAAgBzB,MAAhB,GAAyB,CAA7B,EAAgC;AAC5B,WAAKoL,aAAL,GAAqBhK,CAAC,CAAC0C,IAAF,CAAO,KAAKrC,UAAZ,CAArB;AACH,KAFD,MAGK;AACD,UAAI0K,gBAAgB,GAAG;AACnBhH,QAAAA,QAAQ,EAAE0G,SAAS,CAAC1G,QADD;AAEnBL,QAAAA,SAAS,EAAE+G,SAAS,CAAC/G;AAFF,OAAvB;AAIA,WAAKsG,aAAL,GAAqB;AACjB1G,QAAAA,QAAQ,EAAEyH,gBADO;AAEjBxH,QAAAA,MAAM,EAAEwH,gBAFS;AAGjB9I,QAAAA,OAAO,EAAE,CAACwI,SAAS,CAAC7F,MAAX,CAHQ;AAIjBU,QAAAA,WAAW,EAAE,KAAKC,oBAAL,CAA0BX;AAJtB,OAArB;AAMA,WAAKvE,UAAL,CAAgBgF,IAAhB,CAAqB,KAAK2E,aAA1B;AACH;;AACD,SAAKrJ,SAAL,CAAeqK,sBAAf,CAAsC,KAAK1K,kBAA3C;AACA,SAAKiC,oBAAL,CAA0B,IAA1B,EAAgC,KAAhC,EAAuC,KAAKyH,aAAL,CAAmBxH,EAA1D;AACH,GA9CD;;AA+CAvC,EAAAA,eAAe,CAAC9B,SAAhB,CAA0BmK,UAA1B,GAAuC,UAAU4B,UAAV,EAAsB;AACzD,QAAI/J,KAAK,GAAG,IAAZ;;AACA,QAAI,CAAC,KAAKM,QAAN,IAAkB,CAACyJ,UAAvB,EAAmC;AAC/B;AACH;;AACD,SAAK3B,cAAL,GAAsB2B,UAAtB;AACA,QAAIxE,YAAY,GAAG,KAAKgF,iBAAL,CAAuBC,uBAAvB,CAA+CT,UAA/C,CAAnB;;AACA,QAAIe,uBAAuB,GAAG,UAAUC,QAAV,EAAoB;AAC9C,aAAOxF,YAAY,IAAIA,YAAY,CAAChC,SAAb,KAA2BwH,QAA3C,IAAuD/K,KAAK,CAACoF,oBAAN,CAA2B7B,SAA3B,KAAyCwH,QAAvG;AACH,KAFD;;AAGA,QAAIC,kBAAkB,GAAGF,uBAAuB,CAAC,KAAD,CAAvB,IAAkCA,uBAAuB,CAAC,QAAD,CAAlF;AACA,SAAKrK,iBAAL,CAAuBwK,KAAvB,CAA6BlB,UAA7B,EAAyCiB,kBAAzC;;AACA,QAAI,CAACzF,YAAD,IACA,CAAC,KAAKoF,YADN,IAEA,KAAKO,iBAAL,CAAuBC,MAAvB,CAA8B,KAAKR,YAAnC,EAAiDpF,YAAjD,CAFJ,EAEoE;AAChE;AACH;;AACD,QAAIzD,OAAO,GAAG,KAAK0C,uBAAL,CAA6B,KAAKY,oBAAL,CAA0BX,MAAvD,EAA+Dc,YAAY,CAACd,MAA5E,CAAd;;AACA,QAAI,CAAC3C,OAAL,EAAc;AACV;AACH;;AACD,SAAK6I,YAAL,GAAoBpF,YAApB;AACA,SAAKsE,aAAL,CAAmBzG,MAAnB,GAA4B;AACxBQ,MAAAA,QAAQ,EAAE2B,YAAY,CAAC3B,QADC;AAExBL,MAAAA,SAAS,EAAEgC,YAAY,CAAChC;AAFA,KAA5B;AAIA,SAAKsG,aAAL,CAAmB/H,OAAnB,GAA6BA,OAA7B;AACA,SAAKM,oBAAL,CAA0B,KAA1B,EAAiC,KAAjC,EAAwC,KAAKyH,aAAL,CAAmBxH,EAA3D;AACH,GA5BD;;AA6BAvC,EAAAA,eAAe,CAAC9B,SAAhB,CAA0BqH,UAA1B,GAAuC,YAAY;AAC/C,QAAI,CAAC,KAAK/E,QAAV,EAAoB;AAChB;AACH;;AACD,QAAI+B,EAAE,GAAG,KAAKwH,aAAL,CAAmBxH,EAA5B;AACA,SAAK5B,iBAAL,CAAuB2K,aAAvB;AACA,SAAK5K,SAAL,CAAe6K,yBAAf,CAAyC,KAAKlL,kBAA9C;AACA,SAAKiI,cAAL,GAAsB,IAAtB;AACA,SAAK9H,QAAL,GAAgB,KAAhB;AACA,SAAKuJ,aAAL,GAAqBlG,SAArB;AACA,SAAKgH,YAAL,GAAoBhH,SAApB;AACA,SAAKvB,oBAAL,CAA0B,KAA1B,EAAiC,IAAjC,EAAuCC,EAAvC;AACH,GAZD;;AAaAvC,EAAAA,eAAe,CAAC9B,SAAhB,CAA0BoE,oBAA1B,GAAiD,UAAUkJ,OAAV,EAAmBC,QAAnB,EAA6BlJ,EAA7B,EAAiC;AAC9E,QAAImJ,KAAK,GAAGhO,MAAM,CAACiO,MAAP,CAAc;AACtBf,MAAAA,IAAI,EAAEhL,MAAM,CAACgM,6BADS;AAEtBC,MAAAA,GAAG,EAAE,KAAKC,OAFY;AAGtBC,MAAAA,SAAS,EAAE,KAAKA,SAHM;AAItBP,MAAAA,OAAO,EAAEA,OAJa;AAKtBC,MAAAA,QAAQ,EAAEA,QALY;AAMtBlJ,MAAAA,EAAE,EAAEA;AANkB,KAAd,CAAZ;AAQA,SAAKrB,YAAL,CAAkB8K,aAAlB,CAAgCN,KAAhC;AACH,GAVD;;AAWA1L,EAAAA,eAAe,CAAC9B,SAAhB,CAA0BwG,uBAA1B,GAAoD,UAAUuH,UAAV,EAAsBC,QAAtB,EAAgC;AAChF,QAAIrJ,UAAU,GAAG,KAAKC,gBAAL,CAAsBC,sBAAtB,EAAjB;AACA,QAAIoJ,YAAY,GAAGF,UAAU,KAAKC,QAAlC;AACA,QAAIE,SAAS,GAAGvJ,UAAU,CAACK,OAAX,CAAmB+I,UAAnB,CAAhB;;AACA,QAAIG,SAAS,GAAG,CAAhB,EAAmB;AACfC,MAAAA,OAAO,CAACC,IAAR,CAAa,qBAAqBL,UAAU,CAACM,KAAX,EAArB,GAA0C,iBAAvD;AACA,aAAO1I,SAAP;AACH;;AACD,QAAI2I,OAAO,GAAGL,YAAY,GAAGC,SAAH,GAAevJ,UAAU,CAACK,OAAX,CAAmBgJ,QAAnB,CAAzC;;AACA,QAAIM,OAAO,GAAG,CAAd,EAAiB;AACbH,MAAAA,OAAO,CAACC,IAAR,CAAa,qBAAqBJ,QAAQ,CAACK,KAAT,EAArB,GAAwC,iBAArD;AACA,aAAO1I,SAAP;AACH;;AACD,QAAIsI,YAAJ,EAAkB;AACd,aAAO,CAACF,UAAD,CAAP;AACH;;AACD,QAAIQ,UAAU,GAAGC,IAAI,CAACC,GAAL,CAASP,SAAT,EAAoBI,OAApB,CAAjB;AACA,QAAII,SAAS,GAAGH,UAAU,KAAKL,SAAf,GAA2BI,OAA3B,GAAqCJ,SAArD;AACA,QAAIpK,OAAO,GAAG,EAAd;;AACA,SAAK,IAAIhD,CAAC,GAAGyN,UAAb,EAAyBzN,CAAC,IAAI4N,SAA9B,EAAyC5N,CAAC,EAA1C,EAA8C;AAC1CgD,MAAAA,OAAO,CAACoD,IAAR,CAAavC,UAAU,CAAC7D,CAAD,CAAvB;AACH;;AACD,WAAOgD,OAAP;AACH,GAvBD;;AAwBA5D,EAAAA,UAAU,CAAC,CACPqB,SAAS,CAAC,eAAD,CADF,CAAD,EAEPO,eAAe,CAAC9B,SAFT,EAEoB,eAFpB,EAEqC,KAAK,CAF1C,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPqB,SAAS,CAAC,UAAD,CADF,CAAD,EAEPO,eAAe,CAAC9B,SAFT,EAEoB,UAFpB,EAEgC,KAAK,CAFrC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPqB,SAAS,CAAC,kBAAD,CADF,CAAD,EAEPO,eAAe,CAAC9B,SAFT,EAEoB,kBAFpB,EAEwC,KAAK,CAF7C,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPqB,SAAS,CAAC,mBAAD,CADF,CAAD,EAEPO,eAAe,CAAC9B,SAFT,EAEoB,mBAFpB,EAEyC,KAAK,CAF9C,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPqB,SAAS,CAAC,oBAAD,CADF,CAAD,EAEPO,eAAe,CAAC9B,SAFT,EAEoB,oBAFpB,EAE0C,KAAK,CAF/C,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPqB,SAAS,CAAC,WAAD,CADF,CAAD,EAEPO,eAAe,CAAC9B,SAFT,EAEoB,WAFpB,EAEiC,KAAK,CAFtC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPqB,SAAS,CAAC,SAAD,CADF,CAAD,EAEPO,eAAe,CAAC9B,SAFT,EAEoB,SAFpB,EAE+B,KAAK,CAFpC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPqB,SAAS,CAAC,uBAAD,CADF,CAAD,EAEPO,eAAe,CAAC9B,SAFT,EAEoB,uBAFpB,EAE6C,KAAK,CAFlD,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPqB,SAAS,CAAC,gBAAD,CADF,CAAD,EAEPO,eAAe,CAAC9B,SAFT,EAEoB,gBAFpB,EAEsC,KAAK,CAF3C,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPqB,SAAS,CAAC,kBAAD,CADF,CAAD,EAEPO,eAAe,CAAC9B,SAFT,EAEoB,kBAFpB,EAEwC,KAAK,CAF7C,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPqB,SAAS,CAAC,mBAAD,CADF,CAAD,EAEPO,eAAe,CAAC9B,SAFT,EAEoB,mBAFpB,EAEyC,KAAK,CAF9C,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPyB,aADO,CAAD,EAEPG,eAAe,CAAC9B,SAFT,EAEoB,MAFpB,EAE4B,IAF5B,CAAV;;AAGA8B,EAAAA,eAAe,GAAG5B,UAAU,CAAC,CACzBsB,IAAI,CAAC,iBAAD,CADqB,CAAD,EAEzBM,eAFyB,CAA5B;AAGA,SAAOA,eAAP;AACH,CA5hBoC,CA4hBnCF,QA5hBmC,CAArC;;AA6hBA,SAASE,eAAT;;AACA,IAAIY,iBAAiB;AAAG;AAAe,YAAY;AAC/C,WAASA,iBAAT,CAA2BF,SAA3B,EAAsCG,kBAAtC,EAA0D;AACtD,SAAKgM,eAAL,GAAuB,IAAvB;AACA,SAAKnM,SAAL,GAAiBA,SAAjB;AACA,SAAKG,kBAAL,GAA0BA,kBAA1B;AACH;;AACDD,EAAAA,iBAAiB,CAAC1C,SAAlB,CAA4BiN,KAA5B,GAAoC,UAAUlB,UAAV,EAAsBiB,kBAAtB,EAA0C;AAC1E,QAAIA,kBAAkB,KAAK,KAAK,CAAhC,EAAmC;AAAEA,MAAAA,kBAAkB,GAAG,KAArB;AAA6B;;AAClE,QAAI4B,IAAI,GAAG,KAAKpM,SAAL,CAAeqM,iBAAf,EAAX;AACA7B,IAAAA,kBAAkB,GAAGA,kBAAkB,IAAI,KAAKrK,kBAAL,CAAwBmM,YAAxB,OAA2CrN,SAAS,CAACsN,iBAAhG,CAH0E,CAI1E;;AACA,QAAI/B,kBAAkB,IAAI,CAAC,KAAKxK,SAAL,CAAewM,yBAAf,EAA3B,EAAuE;AACnE;AACH;;AACD,SAAKC,QAAL,GAAgBlD,UAAU,CAACmD,OAAX,GAAsBN,IAAI,CAACxG,IAAL,GAAY,EAAlD;AACA,SAAK+G,SAAL,GAAiBpD,UAAU,CAACmD,OAAX,GAAsBN,IAAI,CAACvG,KAAL,GAAa,EAApD;AACA,SAAK+G,MAAL,GAAcrD,UAAU,CAACsD,OAAX,GAAsBT,IAAI,CAACU,GAAL,GAAW,EAAjC,IAAwC,CAACtC,kBAAvD;AACA,SAAKuC,QAAL,GAAgBxD,UAAU,CAACsD,OAAX,GAAsBT,IAAI,CAACY,MAAL,GAAc,EAApC,IAA2C,CAACxC,kBAA5D;;AACA,QAAI,KAAKiC,QAAL,IAAiB,KAAKE,SAAtB,IAAmC,KAAKC,MAAxC,IAAkD,KAAKG,QAA3D,EAAqE;AACjE,WAAKE,oBAAL;AACH,KAFD,MAGK;AACD,WAAKrC,aAAL;AACH;AACJ,GAlBD;;AAmBA1K,EAAAA,iBAAiB,CAAC1C,SAAlB,CAA4ByP,oBAA5B,GAAmD,YAAY;AAC3D,QAAI,KAAKd,eAAL,KAAyB,IAA7B,EAAmC;AAC/B,WAAKA,eAAL,GAAuBe,MAAM,CAACC,WAAP,CAAmB,KAAKC,MAAL,CAAYvN,IAAZ,CAAiB,IAAjB,CAAnB,EAA2C,GAA3C,CAAvB;AACA,WAAKwN,SAAL,GAAiB,CAAjB;AACH;AACJ,GALD;;AAMAnN,EAAAA,iBAAiB,CAAC1C,SAAlB,CAA4B4P,MAA5B,GAAqC,YAAY;AAC7C,SAAKC,SAAL;AACA,QAAIC,eAAe,GAAG,KAAKtN,SAAL,CAAeuN,kBAAf,EAAtB;AACA,QAAIC,eAAe,GAAG,KAAKxN,SAAL,CAAeyN,kBAAf,EAAtB;AACA,QAAIC,UAAJ;AACAA,IAAAA,UAAU,GAAG,KAAKL,SAAL,GAAiB,EAAjB,GAAsB,GAAtB,GAA6B,KAAKA,SAAL,GAAiB,EAAjB,GAAsB,EAAtB,GAA2B,EAArE;;AACA,QAAI,KAAKT,MAAT,EAAiB;AACb,WAAK5M,SAAL,CAAe2N,yBAAf,CAAyCL,eAAe,CAACR,GAAhB,GAAsBY,UAA/D;AACH;;AACD,QAAI,KAAKX,QAAT,EAAmB;AACf,WAAK/M,SAAL,CAAe2N,yBAAf,CAAyCL,eAAe,CAACR,GAAhB,GAAsBY,UAA/D;AACH;;AACD,QAAI,KAAKjB,QAAT,EAAmB;AACf,WAAKzM,SAAL,CAAe4N,2BAAf,CAA2CJ,eAAe,CAAC5H,IAAhB,GAAuB8H,UAAlE;AACH;;AACD,QAAI,KAAKf,SAAT,EAAoB;AAChB,WAAK3M,SAAL,CAAe4N,2BAAf,CAA2CJ,eAAe,CAAC5H,IAAhB,GAAuB8H,UAAlE;AACH;AACJ,GAlBD;;AAmBAxN,EAAAA,iBAAiB,CAAC1C,SAAlB,CAA4BoN,aAA5B,GAA4C,YAAY;AACpD,QAAI,KAAKuB,eAAT,EAA0B;AACtBe,MAAAA,MAAM,CAACW,aAAP,CAAqB,KAAK1B,eAA1B;AACA,WAAKA,eAAL,GAAuB,IAAvB;AACH;AACJ,GALD;;AAMA,SAAOjM,iBAAP;AACH,CAzDsC,EAAvC","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { Autowired, Bean, Constants, Events, PostConstruct, BeanStub, _ } from \"@ag-grid-community/core\";\nvar RangeController = /** @class */ (function (_super) {\n    __extends(RangeController, _super);\n    function RangeController() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.cellRanges = [];\n        _this.bodyScrollListener = _this.onBodyScroll.bind(_this);\n        _this.dragging = false;\n        return _this;\n    }\n    RangeController.prototype.registerGridComp = function (gridPanel) {\n        this.gridPanel = gridPanel;\n        this.autoScrollService = new AutoScrollService(this.gridPanel, this.gridOptionsWrapper);\n    };\n    RangeController.prototype.init = function () {\n        this.logger = this.loggerFactory.create('RangeController');\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_EVERYTHING_CHANGED, this.removeAllCellRanges.bind(this));\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_PIVOT_MODE_CHANGED, this.removeAllCellRanges.bind(this));\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_ROW_GROUP_CHANGED, this.removeAllCellRanges.bind(this));\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_GROUP_OPENED, this.refreshLastRangeStart.bind(this));\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_MOVED, this.refreshLastRangeStart.bind(this));\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_PINNED, this.refreshLastRangeStart.bind(this));\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_VISIBLE, this.onColumnVisibleChange.bind(this));\n    };\n    RangeController.prototype.onColumnVisibleChange = function () {\n        var _this = this;\n        // first move start column in last cell range (i.e. series chart range)\n        this.refreshLastRangeStart();\n        // then check if the column visibility has changed in any cell range\n        this.cellRanges.forEach(function (cellRange) {\n            var beforeCols = cellRange.columns;\n            // remove hidden cols from cell range\n            cellRange.columns = cellRange.columns.filter(function (col) { return col.isVisible(); });\n            var colsInRangeChanged = !_.areEqual(beforeCols, cellRange.columns);\n            if (colsInRangeChanged) {\n                // notify users and other parts of grid (i.e. status panel) that range has changed\n                _this.dispatchChangedEvent(false, true, cellRange.id);\n            }\n        });\n    };\n    RangeController.prototype.refreshLastRangeStart = function () {\n        var lastRange = _.last(this.cellRanges);\n        if (!lastRange) {\n            return;\n        }\n        this.refreshRangeStart(lastRange);\n    };\n    RangeController.prototype.isContiguousRange = function (cellRange) {\n        var rangeColumns = cellRange.columns;\n        if (!rangeColumns.length) {\n            return false;\n        }\n        var allColumns = this.columnController.getAllDisplayedColumns();\n        var allPositions = rangeColumns.map(function (c) { return allColumns.indexOf(c); }).sort(function (a, b) { return a - b; });\n        return _.last(allPositions) - allPositions[0] + 1 === rangeColumns.length;\n    };\n    RangeController.prototype.getRangeStartRow = function (cellRange) {\n        if (cellRange.startRow && cellRange.endRow) {\n            return this.rowPositionUtils.before(cellRange.startRow, cellRange.endRow) ?\n                cellRange.startRow : cellRange.endRow;\n        }\n        var rowPinned = this.pinnedRowModel.getPinnedTopRowCount() > 0 ? Constants.PINNED_TOP : undefined;\n        return { rowIndex: 0, rowPinned: rowPinned };\n    };\n    RangeController.prototype.getRangeEndRow = function (cellRange) {\n        if (cellRange.startRow && cellRange.endRow) {\n            return this.rowPositionUtils.before(cellRange.startRow, cellRange.endRow) ?\n                cellRange.endRow : cellRange.startRow;\n        }\n        var pinnedBottomRowCount = this.pinnedRowModel.getPinnedBottomRowCount();\n        var pinnedBottom = pinnedBottomRowCount > 0;\n        if (pinnedBottom) {\n            return {\n                rowIndex: pinnedBottomRowCount - 1,\n                rowPinned: Constants.PINNED_BOTTOM\n            };\n        }\n        return {\n            rowIndex: this.rowModel.getRowCount() - 1,\n            rowPinned: undefined\n        };\n    };\n    RangeController.prototype.setRangeToCell = function (cell, appendRange) {\n        if (appendRange === void 0) { appendRange = false; }\n        if (!this.gridOptionsWrapper.isEnableRangeSelection()) {\n            return;\n        }\n        var columns = this.calculateColumnsBetween(cell.column, cell.column);\n        if (!columns) {\n            return;\n        }\n        var suppressMultiRangeSelections = this.gridOptionsWrapper.isSuppressMultiRangeSelection();\n        // if not appending, then clear previous range selections\n        if (suppressMultiRangeSelections || !appendRange || _.missing(this.cellRanges)) {\n            this.removeAllCellRanges(true);\n        }\n        var rowForCell = {\n            rowIndex: cell.rowIndex,\n            rowPinned: cell.rowPinned\n        };\n        // if there is already a range for this cell, then we reuse the same range, otherwise the user\n        // can ctrl & click a cell many times and hit ctrl+c, which would result in the cell getting copied\n        // many times to the clipboard.\n        var cellRange;\n        for (var i = 0; i < this.cellRanges.length; i++) {\n            var range = this.cellRanges[i];\n            var matches = \n            // check cols are same\n            (range.columns && range.columns.length === 1 && range.columns[0] === cell.column) &&\n                // check rows are same\n                this.rowPositionUtils.sameRow(rowForCell, range.startRow) &&\n                this.rowPositionUtils.sameRow(rowForCell, range.endRow);\n            if (matches) {\n                cellRange = range;\n                break;\n            }\n        }\n        if (cellRange) {\n            // we need it at the end of the list, as the dragStart picks the last created\n            // range as the start point for the drag\n            if (_.last(this.cellRanges) !== cellRange) {\n                _.removeFromArray(this.cellRanges, cellRange);\n                this.cellRanges.push(cellRange);\n            }\n        }\n        else {\n            cellRange = {\n                startRow: rowForCell,\n                endRow: rowForCell,\n                columns: columns,\n                startColumn: cell.column\n            };\n            this.cellRanges.push(cellRange);\n        }\n        this.newestRangeStartCell = cell;\n        this.onDragStop();\n        this.dispatchChangedEvent(true, true, cellRange.id);\n    };\n    RangeController.prototype.extendLatestRangeToCell = function (cellPosition) {\n        if (this.isEmpty() || !this.newestRangeStartCell) {\n            return;\n        }\n        var cellRange = _.last(this.cellRanges);\n        this.updateRangeEnd(cellRange, cellPosition);\n    };\n    RangeController.prototype.updateRangeEnd = function (cellRange, cellPosition, silent) {\n        if (silent === void 0) { silent = false; }\n        var endColumn = cellPosition.column;\n        var colsToAdd = this.calculateColumnsBetween(cellRange.startColumn, endColumn);\n        if (!colsToAdd || this.isLastCellOfRange(cellRange, cellPosition)) {\n            return;\n        }\n        cellRange.columns = colsToAdd;\n        cellRange.endRow = { rowIndex: cellPosition.rowIndex, rowPinned: cellPosition.rowPinned };\n        if (!silent) {\n            this.dispatchChangedEvent(true, true, cellRange.id);\n        }\n    };\n    RangeController.prototype.refreshRangeStart = function (cellRange) {\n        var startColumn = cellRange.startColumn, columns = cellRange.columns;\n        var moveColInCellRange = function (colToMove, moveToFront) {\n            var otherCols = cellRange.columns.filter(function (col) { return col !== colToMove; });\n            if (colToMove) {\n                cellRange.startColumn = colToMove;\n                cellRange.columns = moveToFront ? __spreadArrays([colToMove], otherCols) : __spreadArrays(otherCols, [colToMove]);\n            }\n            else {\n                cellRange.columns = otherCols;\n            }\n        };\n        var _a = this.getRangeEdgeColumns(cellRange), left = _a.left, right = _a.right;\n        var shouldMoveLeftCol = startColumn === columns[0] && startColumn !== left;\n        if (shouldMoveLeftCol) {\n            moveColInCellRange(left, true);\n            return;\n        }\n        var shouldMoveRightCol = startColumn === _.last(columns) && startColumn === right;\n        if (shouldMoveRightCol) {\n            moveColInCellRange(right, false);\n            return;\n        }\n    };\n    RangeController.prototype.getRangeEdgeColumns = function (cellRange) {\n        var allColumns = this.columnController.getAllDisplayedColumns();\n        var allIndices = cellRange.columns\n            .map(function (c) { return allColumns.indexOf(c); })\n            .filter(function (i) { return i > -1; })\n            .sort(function (a, b) { return a - b; });\n        return {\n            left: allColumns[allIndices[0]],\n            right: allColumns[_.last(allIndices)]\n        };\n    };\n    // returns true if successful, false if not successful\n    RangeController.prototype.extendLatestRangeInDirection = function (key) {\n        if (this.isEmpty() || !this.newestRangeStartCell) {\n            return;\n        }\n        var lastRange = _.last(this.cellRanges);\n        var startCell = this.newestRangeStartCell;\n        var firstCol = lastRange.columns[0];\n        var lastCol = _.last(lastRange.columns);\n        // find the cell that is at the furthest away corner from the starting cell\n        var endCellIndex = lastRange.endRow.rowIndex;\n        var endCellFloating = lastRange.endRow.rowPinned;\n        var endCellColumn = startCell.column === firstCol ? lastCol : firstCol;\n        var endCell = { column: endCellColumn, rowIndex: endCellIndex, rowPinned: endCellFloating };\n        var newEndCell = this.cellNavigationService.getNextCellToFocus(key, endCell);\n        // if user is at end of grid, so no cell to extend to, we return false\n        if (!newEndCell) {\n            return;\n        }\n        this.setCellRange({\n            rowStartIndex: startCell.rowIndex,\n            rowStartPinned: startCell.rowPinned,\n            rowEndIndex: newEndCell.rowIndex,\n            rowEndPinned: newEndCell.rowPinned,\n            columnStart: startCell.column,\n            columnEnd: newEndCell.column\n        });\n        return newEndCell;\n    };\n    RangeController.prototype.setCellRange = function (params) {\n        if (!this.gridOptionsWrapper.isEnableRangeSelection()) {\n            return;\n        }\n        this.removeAllCellRanges(true);\n        this.addCellRange(params);\n    };\n    RangeController.prototype.setCellRanges = function (cellRanges) {\n        var _this = this;\n        this.removeAllCellRanges(true);\n        cellRanges.forEach(function (newRange) {\n            if (newRange.columns && newRange.startRow) {\n                _this.newestRangeStartCell = {\n                    rowIndex: newRange.startRow.rowIndex,\n                    rowPinned: newRange.startRow.rowPinned,\n                    column: newRange.columns[0]\n                };\n            }\n            _this.cellRanges.push(newRange);\n        });\n        this.dispatchChangedEvent(false, true);\n    };\n    RangeController.prototype.createCellRangeFromCellRangeParams = function (params) {\n        var _this = this;\n        var columns;\n        if (params.columns) {\n            columns = params.columns.map(function (c) { return _this.columnController.getColumnWithValidation(c); }).filter(function (c) { return c; });\n        }\n        else {\n            var columnStart = this.columnController.getColumnWithValidation(params.columnStart);\n            var columnEnd = this.columnController.getColumnWithValidation(params.columnEnd);\n            if (!columnStart || !columnEnd) {\n                return;\n            }\n            columns = this.calculateColumnsBetween(columnStart, columnEnd);\n        }\n        if (!columns) {\n            return;\n        }\n        var startRow = params.rowStartIndex != null ? {\n            rowIndex: params.rowStartIndex,\n            rowPinned: params.rowStartPinned\n        } : undefined;\n        var endRow = params.rowEndIndex != null ? {\n            rowIndex: params.rowEndIndex,\n            rowPinned: params.rowEndPinned\n        } : undefined;\n        return {\n            startRow: startRow,\n            endRow: endRow,\n            columns: columns,\n            startColumn: columns[0]\n        };\n    };\n    RangeController.prototype.addCellRange = function (params) {\n        if (!this.gridOptionsWrapper.isEnableRangeSelection()) {\n            return;\n        }\n        var newRange = this.createCellRangeFromCellRangeParams(params);\n        if (newRange) {\n            this.cellRanges.push(newRange);\n            this.dispatchChangedEvent(false, true, newRange.id);\n        }\n    };\n    RangeController.prototype.getCellRanges = function () {\n        return this.cellRanges;\n    };\n    RangeController.prototype.isEmpty = function () {\n        return this.cellRanges.length === 0;\n    };\n    RangeController.prototype.isMoreThanOneCell = function () {\n        if (this.cellRanges.length === 0) {\n            // no ranges, so not more than one cell\n            return false;\n        }\n        else if (this.cellRanges.length > 1) {\n            // many ranges, so more than one cell\n            return true;\n        }\n        // only one range, return true if range has more than one\n        var range = this.cellRanges[0];\n        var startRow = this.getRangeStartRow(range);\n        var endRow = this.getRangeEndRow(range);\n        return startRow.rowPinned !== endRow.rowPinned ||\n            startRow.rowIndex !== endRow.rowIndex ||\n            range.columns.length !== 1;\n    };\n    RangeController.prototype.removeAllCellRanges = function (silent) {\n        if (this.isEmpty()) {\n            return;\n        }\n        this.onDragStop();\n        this.cellRanges.length = 0;\n        if (!silent) {\n            this.dispatchChangedEvent(false, true);\n        }\n    };\n    // as the user is dragging outside of the panel, the div starts to scroll, which in turn\n    // means we are selection more (or less) cells, but the mouse isn't moving, so we recalculate\n    // the selection my mimicking a new mouse event\n    RangeController.prototype.onBodyScroll = function () {\n        this.onDragging(this.lastMouseEvent);\n    };\n    RangeController.prototype.isCellInAnyRange = function (cell) {\n        return this.getCellRangeCount(cell) > 0;\n    };\n    RangeController.prototype.isCellInSpecificRange = function (cell, range) {\n        var columnInRange = range.columns !== null && _.includes(range.columns, cell.column);\n        var rowInRange = this.isRowInRange(cell.rowIndex, cell.rowPinned, range);\n        return columnInRange && rowInRange;\n    };\n    RangeController.prototype.isLastCellOfRange = function (cellRange, cell) {\n        var startRow = cellRange.startRow, endRow = cellRange.endRow;\n        var lastRow = this.rowPositionUtils.before(startRow, endRow) ? endRow : startRow;\n        var isLastRow = cell.rowIndex === lastRow.rowIndex && cell.rowPinned === lastRow.rowPinned;\n        var rangeFirstIndexColumn = cellRange.columns[0];\n        var rangeLastIndexColumn = _.last(cellRange.columns);\n        var lastRangeColumn = cellRange.startColumn === rangeFirstIndexColumn ? rangeLastIndexColumn : rangeFirstIndexColumn;\n        var isLastColumn = cell.column === lastRangeColumn;\n        return isLastColumn && isLastRow;\n    };\n    RangeController.prototype.isBottomRightCell = function (cellRange, cell) {\n        var allColumns = this.columnController.getAllDisplayedColumns();\n        var allPositions = cellRange.columns.map(function (c) { return allColumns.indexOf(c); }).sort(function (a, b) { return a - b; });\n        var startRow = cellRange.startRow, endRow = cellRange.endRow;\n        var lastRow = this.rowPositionUtils.before(startRow, endRow) ? endRow : startRow;\n        var isRightColumn = allColumns.indexOf(cell.column) === _.last(allPositions);\n        var isLastRow = cell.rowIndex === lastRow.rowIndex && _.makeNull(cell.rowPinned) === _.makeNull(lastRow.rowPinned);\n        return isRightColumn && isLastRow;\n    };\n    // returns the number of ranges this cell is in\n    RangeController.prototype.getCellRangeCount = function (cell) {\n        var _this = this;\n        if (this.isEmpty()) {\n            return 0;\n        }\n        return this.cellRanges.filter(function (cellRange) { return _this.isCellInSpecificRange(cell, cellRange); }).length;\n    };\n    RangeController.prototype.isRowInRange = function (rowIndex, floating, cellRange) {\n        var firstRow = this.getRangeStartRow(cellRange);\n        var lastRow = this.getRangeEndRow(cellRange);\n        var thisRow = { rowIndex: rowIndex, rowPinned: floating };\n        // compare rowPinned with == instead of === because it can be `null` or `undefined`\n        var equalsFirstRow = thisRow.rowIndex === firstRow.rowIndex && thisRow.rowPinned == firstRow.rowPinned;\n        var equalsLastRow = thisRow.rowIndex === lastRow.rowIndex && thisRow.rowPinned == lastRow.rowPinned;\n        if (equalsFirstRow || equalsLastRow) {\n            return true;\n        }\n        var afterFirstRow = !this.rowPositionUtils.before(thisRow, firstRow);\n        var beforeLastRow = this.rowPositionUtils.before(thisRow, lastRow);\n        return afterFirstRow && beforeLastRow;\n    };\n    RangeController.prototype.getDraggingRange = function () {\n        return this.draggingRange;\n    };\n    RangeController.prototype.onDragStart = function (mouseEvent) {\n        if (!this.gridOptionsWrapper.isEnableRangeSelection()) {\n            return;\n        }\n        var ctrlKey = mouseEvent.ctrlKey, metaKey = mouseEvent.metaKey, shiftKey = mouseEvent.shiftKey;\n        // ctrlKey for windows, metaKey for Apple\n        var multiKeyPressed = ctrlKey || metaKey;\n        var allowMulti = !this.gridOptionsWrapper.isSuppressMultiRangeSelection();\n        var multiSelectKeyPressed = allowMulti ? multiKeyPressed : false;\n        var mouseCell = this.mouseEventService.getCellPositionForEvent(mouseEvent);\n        if (_.missing(mouseCell)) {\n            // if drag wasn't on cell, then do nothing, including do not set dragging=true,\n            // (which them means onDragging and onDragStop do nothing)\n            return;\n        }\n        if (!multiSelectKeyPressed && (!shiftKey || _.exists(_.last(this.cellRanges).type))) {\n            this.removeAllCellRanges(true);\n        }\n        this.dragging = true;\n        this.draggingCell = mouseCell;\n        this.lastMouseEvent = mouseEvent;\n        if (!shiftKey) {\n            this.newestRangeStartCell = mouseCell;\n        }\n        // if we didn't clear the ranges, then dragging means the user clicked, and when the\n        // user clicks it means a range of one cell was created. we need to extend this range\n        // rather than creating another range. otherwise we end up with two distinct ranges\n        // from a drag operation (one from click, and one from drag).\n        if (this.cellRanges.length > 0) {\n            this.draggingRange = _.last(this.cellRanges);\n        }\n        else {\n            var mouseRowPosition = {\n                rowIndex: mouseCell.rowIndex,\n                rowPinned: mouseCell.rowPinned\n            };\n            this.draggingRange = {\n                startRow: mouseRowPosition,\n                endRow: mouseRowPosition,\n                columns: [mouseCell.column],\n                startColumn: this.newestRangeStartCell.column\n            };\n            this.cellRanges.push(this.draggingRange);\n        }\n        this.gridPanel.addScrollEventListener(this.bodyScrollListener);\n        this.dispatchChangedEvent(true, false, this.draggingRange.id);\n    };\n    RangeController.prototype.onDragging = function (mouseEvent) {\n        var _this = this;\n        if (!this.dragging || !mouseEvent) {\n            return;\n        }\n        this.lastMouseEvent = mouseEvent;\n        var cellPosition = this.mouseEventService.getCellPositionForEvent(mouseEvent);\n        var isMouseAndStartInPinned = function (position) {\n            return cellPosition && cellPosition.rowPinned === position && _this.newestRangeStartCell.rowPinned === position;\n        };\n        var skipVerticalScroll = isMouseAndStartInPinned('top') || isMouseAndStartInPinned('bottom');\n        this.autoScrollService.check(mouseEvent, skipVerticalScroll);\n        if (!cellPosition ||\n            !this.draggingCell ||\n            this.cellPositionUtils.equals(this.draggingCell, cellPosition)) {\n            return;\n        }\n        var columns = this.calculateColumnsBetween(this.newestRangeStartCell.column, cellPosition.column);\n        if (!columns) {\n            return;\n        }\n        this.draggingCell = cellPosition;\n        this.draggingRange.endRow = {\n            rowIndex: cellPosition.rowIndex,\n            rowPinned: cellPosition.rowPinned\n        };\n        this.draggingRange.columns = columns;\n        this.dispatchChangedEvent(false, false, this.draggingRange.id);\n    };\n    RangeController.prototype.onDragStop = function () {\n        if (!this.dragging) {\n            return;\n        }\n        var id = this.draggingRange.id;\n        this.autoScrollService.ensureCleared();\n        this.gridPanel.removeScrollEventListener(this.bodyScrollListener);\n        this.lastMouseEvent = null;\n        this.dragging = false;\n        this.draggingRange = undefined;\n        this.draggingCell = undefined;\n        this.dispatchChangedEvent(false, true, id);\n    };\n    RangeController.prototype.dispatchChangedEvent = function (started, finished, id) {\n        var event = Object.freeze({\n            type: Events.EVENT_RANGE_SELECTION_CHANGED,\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            started: started,\n            finished: finished,\n            id: id,\n        });\n        this.eventService.dispatchEvent(event);\n    };\n    RangeController.prototype.calculateColumnsBetween = function (columnFrom, columnTo) {\n        var allColumns = this.columnController.getAllDisplayedColumns();\n        var isSameColumn = columnFrom === columnTo;\n        var fromIndex = allColumns.indexOf(columnFrom);\n        if (fromIndex < 0) {\n            console.warn(\"ag-Grid: column \" + columnFrom.getId() + \" is not visible\");\n            return undefined;\n        }\n        var toIndex = isSameColumn ? fromIndex : allColumns.indexOf(columnTo);\n        if (toIndex < 0) {\n            console.warn(\"ag-Grid: column \" + columnTo.getId() + \" is not visible\");\n            return undefined;\n        }\n        if (isSameColumn) {\n            return [columnFrom];\n        }\n        var firstIndex = Math.min(fromIndex, toIndex);\n        var lastIndex = firstIndex === fromIndex ? toIndex : fromIndex;\n        var columns = [];\n        for (var i = firstIndex; i <= lastIndex; i++) {\n            columns.push(allColumns[i]);\n        }\n        return columns;\n    };\n    __decorate([\n        Autowired('loggerFactory')\n    ], RangeController.prototype, \"loggerFactory\", void 0);\n    __decorate([\n        Autowired('rowModel')\n    ], RangeController.prototype, \"rowModel\", void 0);\n    __decorate([\n        Autowired('columnController')\n    ], RangeController.prototype, \"columnController\", void 0);\n    __decorate([\n        Autowired('mouseEventService')\n    ], RangeController.prototype, \"mouseEventService\", void 0);\n    __decorate([\n        Autowired('gridOptionsWrapper')\n    ], RangeController.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        Autowired('columnApi')\n    ], RangeController.prototype, \"columnApi\", void 0);\n    __decorate([\n        Autowired('gridApi')\n    ], RangeController.prototype, \"gridApi\", void 0);\n    __decorate([\n        Autowired('cellNavigationService')\n    ], RangeController.prototype, \"cellNavigationService\", void 0);\n    __decorate([\n        Autowired(\"pinnedRowModel\")\n    ], RangeController.prototype, \"pinnedRowModel\", void 0);\n    __decorate([\n        Autowired('rowPositionUtils')\n    ], RangeController.prototype, \"rowPositionUtils\", void 0);\n    __decorate([\n        Autowired('cellPositionUtils')\n    ], RangeController.prototype, \"cellPositionUtils\", void 0);\n    __decorate([\n        PostConstruct\n    ], RangeController.prototype, \"init\", null);\n    RangeController = __decorate([\n        Bean('rangeController')\n    ], RangeController);\n    return RangeController;\n}(BeanStub));\nexport { RangeController };\nvar AutoScrollService = /** @class */ (function () {\n    function AutoScrollService(gridPanel, gridOptionsWrapper) {\n        this.tickingInterval = null;\n        this.gridPanel = gridPanel;\n        this.gridOptionsWrapper = gridOptionsWrapper;\n    }\n    AutoScrollService.prototype.check = function (mouseEvent, skipVerticalScroll) {\n        if (skipVerticalScroll === void 0) { skipVerticalScroll = false; }\n        var rect = this.gridPanel.getBodyClientRect();\n        skipVerticalScroll = skipVerticalScroll || this.gridOptionsWrapper.getDomLayout() !== Constants.DOM_LAYOUT_NORMAL;\n        // we don't do ticking if grid is auto height unless we have a horizontal scroller\n        if (skipVerticalScroll && !this.gridPanel.isHorizontalScrollShowing()) {\n            return;\n        }\n        this.tickLeft = mouseEvent.clientX < (rect.left + 20);\n        this.tickRight = mouseEvent.clientX > (rect.right - 20);\n        this.tickUp = mouseEvent.clientY < (rect.top + 20) && !skipVerticalScroll;\n        this.tickDown = mouseEvent.clientY > (rect.bottom - 20) && !skipVerticalScroll;\n        if (this.tickLeft || this.tickRight || this.tickUp || this.tickDown) {\n            this.ensureTickingStarted();\n        }\n        else {\n            this.ensureCleared();\n        }\n    };\n    AutoScrollService.prototype.ensureTickingStarted = function () {\n        if (this.tickingInterval === null) {\n            this.tickingInterval = window.setInterval(this.doTick.bind(this), 100);\n            this.tickCount = 0;\n        }\n    };\n    AutoScrollService.prototype.doTick = function () {\n        this.tickCount++;\n        var vScrollPosition = this.gridPanel.getVScrollPosition();\n        var hScrollPosition = this.gridPanel.getHScrollPosition();\n        var tickAmount;\n        tickAmount = this.tickCount > 20 ? 200 : (this.tickCount > 10 ? 80 : 40);\n        if (this.tickUp) {\n            this.gridPanel.setVerticalScrollPosition(vScrollPosition.top - tickAmount);\n        }\n        if (this.tickDown) {\n            this.gridPanel.setVerticalScrollPosition(vScrollPosition.top + tickAmount);\n        }\n        if (this.tickLeft) {\n            this.gridPanel.setHorizontalScrollPosition(hScrollPosition.left - tickAmount);\n        }\n        if (this.tickRight) {\n            this.gridPanel.setHorizontalScrollPosition(hScrollPosition.left + tickAmount);\n        }\n    };\n    AutoScrollService.prototype.ensureCleared = function () {\n        if (this.tickingInterval) {\n            window.clearInterval(this.tickingInterval);\n            this.tickingInterval = null;\n        }\n    };\n    return AutoScrollService;\n}());\n"]},"metadata":{},"sourceType":"module"}