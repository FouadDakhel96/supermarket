{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Autowired, Bean, Optional } from \"../../context/context\";\nimport { RegisteredComponentSource } from \"./userComponentRegistry\";\nimport { Promise } from \"../../utils\";\nimport { CellEditorComponent, CellRendererComponent, DateComponent, FilterComponent, FloatingFilterComponent, GroupRowInnerRendererComponent, HeaderComponent, HeaderGroupComponent, InnerRendererComponent, LoadingOverlayComponent, NoRowsOverlayComponent, PinnedRowCellRendererComponent, StatusPanelComponent, ToolPanelComponent, TooltipComponent } from \"./componentTypes\";\nimport { BeanStub } from \"../../context/beanStub\";\nimport { cloneObject, mergeDeep } from '../../utils/object';\nexport var ComponentSource;\n\n(function (ComponentSource) {\n  ComponentSource[ComponentSource[\"DEFAULT\"] = 0] = \"DEFAULT\";\n  ComponentSource[ComponentSource[\"REGISTERED_BY_NAME\"] = 1] = \"REGISTERED_BY_NAME\";\n  ComponentSource[ComponentSource[\"HARDCODED\"] = 2] = \"HARDCODED\";\n})(ComponentSource || (ComponentSource = {}));\n\nvar UserComponentFactory =\n/** @class */\nfunction (_super) {\n  __extends(UserComponentFactory, _super);\n\n  function UserComponentFactory() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  UserComponentFactory.prototype.newDateComponent = function (params) {\n    return this.createAndInitUserComponent(this.gridOptions, params, DateComponent, 'agDateInput');\n  };\n\n  UserComponentFactory.prototype.newHeaderComponent = function (params) {\n    return this.createAndInitUserComponent(params.column.getColDef(), params, HeaderComponent, 'agColumnHeader');\n  };\n\n  UserComponentFactory.prototype.newHeaderGroupComponent = function (params) {\n    return this.createAndInitUserComponent(params.columnGroup.getColGroupDef(), params, HeaderGroupComponent, 'agColumnGroupHeader');\n  };\n\n  UserComponentFactory.prototype.newFullWidthGroupRowInnerCellRenderer = function (params) {\n    return this.createAndInitUserComponent(this.gridOptions, params, GroupRowInnerRendererComponent, null, true);\n  }; // this one is unusual, as it can be LoadingCellRenderer, DetailCellRenderer, FullWidthCellRenderer or GroupRowRenderer.\n  // so we have to pass the type in.\n\n\n  UserComponentFactory.prototype.newFullWidthCellRenderer = function (params, cellRendererType, cellRendererName) {\n    return this.createAndInitUserComponent(null, params, {\n      propertyName: cellRendererType,\n      isCellRenderer: function () {\n        return true;\n      }\n    }, cellRendererName);\n  };\n\n  UserComponentFactory.prototype.newCellRenderer = function (target, params, isPinned) {\n    if (isPinned === void 0) {\n      isPinned = false;\n    }\n\n    return this.createAndInitUserComponent(target, params, isPinned ? PinnedRowCellRendererComponent : CellRendererComponent, null, true);\n  };\n\n  UserComponentFactory.prototype.newCellEditor = function (colDef, params) {\n    return this.createAndInitUserComponent(colDef, params, CellEditorComponent, 'agCellEditor');\n  };\n\n  UserComponentFactory.prototype.newInnerCellRenderer = function (target, params) {\n    return this.createAndInitUserComponent(target, params, InnerRendererComponent, null);\n  };\n\n  UserComponentFactory.prototype.newLoadingOverlayComponent = function (params) {\n    return this.createAndInitUserComponent(this.gridOptions, params, LoadingOverlayComponent, 'agLoadingOverlay');\n  };\n\n  UserComponentFactory.prototype.newNoRowsOverlayComponent = function (params) {\n    return this.createAndInitUserComponent(this.gridOptions, params, NoRowsOverlayComponent, 'agNoRowsOverlay');\n  };\n\n  UserComponentFactory.prototype.newTooltipComponent = function (params) {\n    return this.createAndInitUserComponent(params.colDef, params, TooltipComponent, 'agTooltipComponent');\n  };\n\n  UserComponentFactory.prototype.newFilterComponent = function (colDef, params, defaultFilter, modifyParamsCallback) {\n    return this.createAndInitUserComponent(colDef, params, FilterComponent, defaultFilter, false, modifyParamsCallback);\n  };\n\n  UserComponentFactory.prototype.newSetFilterCellRenderer = function (target, params) {\n    return this.createAndInitUserComponent(target, params, CellRendererComponent, null, true);\n  };\n\n  UserComponentFactory.prototype.newFloatingFilterComponent = function (colDef, params, defaultFloatingFilter) {\n    return this.createAndInitUserComponent(colDef, params, FloatingFilterComponent, defaultFloatingFilter, true);\n  };\n\n  UserComponentFactory.prototype.newToolPanelComponent = function (toolPanelDef, params) {\n    return this.createAndInitUserComponent(toolPanelDef, params, ToolPanelComponent);\n  };\n\n  UserComponentFactory.prototype.newStatusPanelComponent = function (def, params) {\n    return this.createAndInitUserComponent(def, params, StatusPanelComponent);\n  };\n  /**\n   * This method creates a component given everything needed to guess what sort of component needs to be instantiated\n   * It takes\n   *  @param definitionObject: This is the context for which this component needs to be created, it can be gridOptions\n   *      (global) or columnDef mostly.\n   *  @param paramsFromGrid: Params to be passed to the component and passed by ag-Grid. This will get merged with any params\n   *      specified by the user in the configuration\n   *  @param propertyName: The name of the property used in ag-grid as a convention to refer to the component, it can be:\n   *      'floatingFilter', 'cellRenderer', is used to find if the user is specifying a custom component\n   *  @param defaultComponentName: The actual name of the component to instantiate, this is usually the same as propertyName, but in\n   *      some cases is not, like floatingFilter, if it is the same is not necessary to specify\n   *  @param optional: Handy method to tell if this should return a component ALWAYS. if that is the case, but there is no\n   *      component found, it throws an error, by default all components are MANDATORY\n   *  @param modifyParamsCallback: A chance to customise the params passed to the init method. It receives what the current\n   *  params are and the component that init is about to get called for\n   */\n\n\n  UserComponentFactory.prototype.createAndInitUserComponent = function (definitionObject, paramsFromGrid, componentType, defaultComponentName, // optional items are: FloatingFilter, CellComp (for cellRenderer)\n  optional, // used by FilterManager only\n  modifyParamsCallback) {\n    if (optional === void 0) {\n      optional = false;\n    }\n\n    if (!definitionObject) {\n      definitionObject = this.gridOptions;\n    } // Create the component instance\n\n\n    var componentAndParams = this.createComponentInstance(definitionObject, componentType, paramsFromGrid, defaultComponentName, optional);\n\n    if (!componentAndParams) {\n      return null;\n    }\n\n    var componentInstance = componentAndParams.componentInstance; // Wire the component and call the init method with the correct params\n\n    var params = this.createFinalParams(definitionObject, componentType.propertyName, paramsFromGrid, componentAndParams.paramsFromSelector);\n    this.addReactHacks(params); // give caller chance to set any params that depend on the componentInstance (need here as the\n    // componentInstance was not available when createUserComponent was called)\n\n    var paramsAfterCallback = modifyParamsCallback ? modifyParamsCallback(params, componentInstance) : params;\n    var deferredInit = this.initComponent(componentInstance, paramsAfterCallback);\n\n    if (deferredInit == null) {\n      return Promise.resolve(componentInstance);\n    } else {\n      return deferredInit.then(function () {\n        return componentInstance;\n      });\n    }\n  };\n\n  UserComponentFactory.prototype.addReactHacks = function (params) {\n    // a temporary fix for AG-1574\n    // AG-1715 raised to do a wider ranging refactor to improve this\n    var agGridReact = this.context.getBean('agGridReact');\n\n    if (agGridReact) {\n      params.agGridReact = cloneObject(agGridReact);\n    } // AG-1716 - directly related to AG-1574 and AG-1715\n\n\n    var frameworkComponentWrapper = this.context.getBean('frameworkComponentWrapper');\n\n    if (frameworkComponentWrapper) {\n      params.frameworkComponentWrapper = frameworkComponentWrapper;\n    }\n  };\n  /**\n   * This method creates a component given everything needed to guess what sort of component needs to be instantiated\n   * It takes\n   *  @param clazz: The class to instantiate,\n   *  @param agGridParams: Params to be passed to the component and passed by ag-Grid. This will get merged with any params\n   *      specified by the user in the configuration\n   *  @param modifyParamsCallback: A chance to customise the params passed to the init method. It receives what the current\n   *  params are and the component that init is about to get called for\n   */\n\n\n  UserComponentFactory.prototype.createUserComponentFromConcreteClass = function (clazz, agGridParams) {\n    var internalComponent = new clazz();\n    this.initComponent(internalComponent, agGridParams);\n    return internalComponent;\n  };\n  /**\n   * This method returns the underlying representation of the component to be created. ie for Javascript the\n   * underlying function where we should be calling new into. In case of the frameworks, the framework class\n   * object that represents the component to be created.\n   *\n   * This method is handy for different reasons, for example if you want to check if a component has a particular\n   * method implemented without having to create the component, just by inspecting the source component\n   *\n   * It takes\n   *  @param definitionObject: This is the context for which this component needs to be created, it can be gridOptions\n   *      (global) or columnDef mostly.\n   *  @param propertyName: The name of the property used in ag-grid as a convention to refer to the component, it can be:\n   *      'floatingFilter', 'cellRenderer', is used to find if the user is specifying a custom component\n   *  @param params: Params to be passed to the dynamic component function in case it needs to be\n   *      invoked\n   *  @param defaultComponentName: The name of the component to load if there is no component specified\n   */\n\n\n  UserComponentFactory.prototype.lookupComponentClassDef = function (definitionObject, propertyName, params, defaultComponentName) {\n    if (params === void 0) {\n      params = null;\n    }\n    /**\n     * There are five things that can happen when resolving a component.\n     *  a) HardcodedFwComponent: That holder[propertyName]Framework has associated a Framework native component\n     *  b) HardcodedJsComponent: That holder[propertyName] has associate a JS component\n     *  c) hardcodedJsFunction: That holder[propertyName] has associate a JS function\n     *  d) hardcodedNameComponent: That holder[propertyName] has associate a string that represents a component to load\n     *  e) That none of the three previous are specified, then we need to use the DefaultRegisteredComponent\n     */\n\n\n    var hardcodedNameComponent = null;\n    var HardcodedJsComponent = null;\n    var hardcodedJsFunction = null;\n    var HardcodedFwComponent = null;\n    var componentSelectorFunc;\n\n    if (definitionObject != null) {\n      var componentPropertyValue = definitionObject[propertyName]; // for filters only, we allow 'true' for the component, which means default filter to be used\n\n      var usingDefaultComponent = componentPropertyValue === true;\n\n      if (componentPropertyValue != null && !usingDefaultComponent) {\n        if (typeof componentPropertyValue === 'string') {\n          hardcodedNameComponent = componentPropertyValue;\n        } else if (typeof componentPropertyValue === 'boolean') {// never happens, as we test for usingDefaultComponent above,\n          // however it's needed for the next block to compile\n        } else if (this.agComponentUtils.doesImplementIComponent(componentPropertyValue)) {\n          HardcodedJsComponent = componentPropertyValue;\n        } else {\n          hardcodedJsFunction = componentPropertyValue;\n        }\n      }\n\n      HardcodedFwComponent = definitionObject[propertyName + \"Framework\"];\n      componentSelectorFunc = definitionObject[propertyName + \"Selector\"];\n    }\n    /**\n     * Since we allow many types of flavors for specifying the components, let's make sure this is not an illegal\n     * combination\n     */\n\n\n    if (HardcodedJsComponent && HardcodedFwComponent || hardcodedNameComponent && HardcodedFwComponent || hardcodedJsFunction && HardcodedFwComponent) {\n      throw Error(\"ag-grid: you are trying to specify: \" + propertyName + \" twice as a component.\");\n    }\n\n    if (HardcodedFwComponent && !this.frameworkComponentWrapper) {\n      throw Error(\"ag-grid: you are specifying a framework component but you are not using a framework version of ag-grid for : \" + propertyName);\n    }\n\n    if (componentSelectorFunc && (hardcodedNameComponent || HardcodedJsComponent || hardcodedJsFunction || HardcodedFwComponent)) {\n      throw Error(\"ag-grid: you can't specify both, the selector and the component of ag-grid for : \" + propertyName);\n    }\n    /**\n     * At this stage we are guaranteed to either have,\n     * DEPRECATED\n     * - A unique HardcodedFwComponent\n     * - A unique HardcodedJsComponent\n     * - A unique hardcodedJsFunction\n     * BY NAME- FAVOURED APPROACH\n     * - A unique hardcodedNameComponent\n     * - None of the previous, hence we revert to: RegisteredComponent\n     */\n\n\n    if (HardcodedFwComponent) {\n      // console.warn(`ag-grid: Since version 12.1.0 specifying a component directly is deprecated, you should register the component by name`);\n      // console.warn(`${HardcodedFwComponent}`);\n      return {\n        componentFromFramework: true,\n        component: HardcodedFwComponent,\n        source: ComponentSource.HARDCODED,\n        paramsFromSelector: null\n      };\n    }\n\n    if (HardcodedJsComponent) {\n      // console.warn(`ag-grid: Since version 12.1.0 specifying a component directly is deprecated, you should register the component by name`);\n      // console.warn(`${HardcodedJsComponent}`);\n      return {\n        componentFromFramework: false,\n        component: HardcodedJsComponent,\n        source: ComponentSource.HARDCODED,\n        paramsFromSelector: null\n      };\n    }\n\n    if (hardcodedJsFunction) {\n      // console.warn(`ag-grid: Since version 12.1.0 specifying a function directly is deprecated, you should register the component by name`);\n      // console.warn(`${hardcodedJsFunction}`);\n      return this.agComponentUtils.adaptFunction(propertyName, hardcodedJsFunction, false, ComponentSource.HARDCODED);\n    }\n\n    var selectorResult = componentSelectorFunc ? componentSelectorFunc(params) : null;\n    var componentNameToUse;\n\n    if (selectorResult && selectorResult.component) {\n      componentNameToUse = selectorResult.component;\n    } else if (hardcodedNameComponent) {\n      componentNameToUse = hardcodedNameComponent;\n    } else {\n      componentNameToUse = defaultComponentName;\n    }\n\n    if (!componentNameToUse) {\n      return null;\n    }\n\n    var registeredCompClassDef = this.lookupFromRegisteredComponents(propertyName, componentNameToUse);\n\n    if (!registeredCompClassDef) {\n      return null;\n    }\n\n    return {\n      componentFromFramework: registeredCompClassDef.componentFromFramework,\n      component: registeredCompClassDef.component,\n      source: registeredCompClassDef.source,\n      paramsFromSelector: selectorResult ? selectorResult.params : null\n    };\n  };\n\n  UserComponentFactory.prototype.lookupFromRegisteredComponents = function (propertyName, componentNameOpt) {\n    var componentName = componentNameOpt != null ? componentNameOpt : propertyName;\n    var registeredComponent = this.userComponentRegistry.retrieve(componentName);\n\n    if (registeredComponent == null) {\n      return null;\n    } //If it is a FW it has to be registered as a component\n\n\n    if (registeredComponent.componentFromFramework) {\n      return {\n        component: registeredComponent.component,\n        componentFromFramework: true,\n        source: ComponentSource.REGISTERED_BY_NAME,\n        paramsFromSelector: null\n      };\n    } //If it is JS it may be a function or a component\n\n\n    if (this.agComponentUtils.doesImplementIComponent(registeredComponent.component)) {\n      return {\n        component: registeredComponent.component,\n        componentFromFramework: false,\n        source: registeredComponent.source == RegisteredComponentSource.REGISTERED ? ComponentSource.REGISTERED_BY_NAME : ComponentSource.DEFAULT,\n        paramsFromSelector: null\n      };\n    } // This is a function\n\n\n    return this.agComponentUtils.adaptFunction(propertyName, registeredComponent.component, registeredComponent.componentFromFramework, registeredComponent.source == RegisteredComponentSource.REGISTERED ? ComponentSource.REGISTERED_BY_NAME : ComponentSource.DEFAULT);\n  };\n  /**\n   * Useful to check what would be the resultant params for a given object\n   *  @param definitionObject: This is the context for which this component needs to be created, it can be gridOptions\n   *      (global) or columnDef mostly.\n   *  @param propertyName: The name of the property used in ag-grid as a convention to refer to the component, it can be:\n   *      'floatingFilter', 'cellRenderer', is used to find if the user is specifying a custom component\n   *  @param paramsFromGrid: Params to be passed to the component and passed by ag-Grid. This will get merged with any params\n   *      specified by the user in the configuration\n   * @returns {TParams} It merges the user agGridParams with the actual params specified by the user.\n   */\n\n\n  UserComponentFactory.prototype.createFinalParams = function (definitionObject, propertyName, paramsFromGrid, paramsFromSelector) {\n    if (paramsFromSelector === void 0) {\n      paramsFromSelector = null;\n    }\n\n    var params = {};\n    mergeDeep(params, paramsFromGrid);\n    var userParams = definitionObject ? definitionObject[propertyName + \"Params\"] : null;\n\n    if (userParams != null) {\n      if (typeof userParams === 'function') {\n        mergeDeep(params, userParams(paramsFromGrid));\n      } else if (typeof userParams === 'object') {\n        mergeDeep(params, userParams);\n      }\n    }\n\n    mergeDeep(params, paramsFromSelector);\n    return params;\n  };\n\n  UserComponentFactory.prototype.createComponentInstance = function (holder, componentType, paramsForSelector, defaultComponentName, optional) {\n    var propertyName = componentType.propertyName;\n    var componentToUse = this.lookupComponentClassDef(holder, propertyName, paramsForSelector, defaultComponentName);\n    var missing = !componentToUse || !componentToUse.component;\n\n    if (missing) {\n      // to help the user, we print out the name they are looking for, rather than the default name.\n      // i don't know why the default name was originally printed out (that doesn't help the user)\n      var overrideName = holder ? holder[propertyName] : defaultComponentName;\n      var nameToReport = overrideName ? overrideName : defaultComponentName;\n\n      if (!optional) {\n        console.error(\"Could not find component \" + nameToReport + \", did you forget to configure this component?\");\n      }\n\n      return null;\n    }\n\n    var componentInstance;\n\n    if (componentToUse.componentFromFramework) {\n      // Using framework component\n      var FrameworkComponentRaw = componentToUse.component;\n      var thisComponentConfig = this.componentMetadataProvider.retrieve(propertyName);\n      componentInstance = this.frameworkComponentWrapper.wrap(FrameworkComponentRaw, thisComponentConfig.mandatoryMethodList, thisComponentConfig.optionalMethodList, componentType, defaultComponentName);\n    } else {\n      // Using plain JavaScript component\n      componentInstance = new componentToUse.component();\n    }\n\n    return {\n      componentInstance: componentInstance,\n      paramsFromSelector: componentToUse.paramsFromSelector\n    };\n  };\n\n  UserComponentFactory.prototype.initComponent = function (component, params) {\n    this.context.createBean(component);\n\n    if (component.init == null) {\n      return;\n    }\n\n    return component.init(params);\n  };\n\n  __decorate([Autowired(\"gridOptions\")], UserComponentFactory.prototype, \"gridOptions\", void 0);\n\n  __decorate([Autowired(\"agComponentUtils\")], UserComponentFactory.prototype, \"agComponentUtils\", void 0);\n\n  __decorate([Autowired(\"componentMetadataProvider\")], UserComponentFactory.prototype, \"componentMetadataProvider\", void 0);\n\n  __decorate([Autowired(\"userComponentRegistry\")], UserComponentFactory.prototype, \"userComponentRegistry\", void 0);\n\n  __decorate([Optional(\"frameworkComponentWrapper\")], UserComponentFactory.prototype, \"frameworkComponentWrapper\", void 0);\n\n  UserComponentFactory = __decorate([Bean('userComponentFactory')], UserComponentFactory);\n  return UserComponentFactory;\n}(BeanStub);\n\nexport { UserComponentFactory };","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/@ag-grid-community/core/dist/es6/components/framework/userComponentFactory.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Autowired","Bean","Optional","RegisteredComponentSource","Promise","CellEditorComponent","CellRendererComponent","DateComponent","FilterComponent","FloatingFilterComponent","GroupRowInnerRendererComponent","HeaderComponent","HeaderGroupComponent","InnerRendererComponent","LoadingOverlayComponent","NoRowsOverlayComponent","PinnedRowCellRendererComponent","StatusPanelComponent","ToolPanelComponent","TooltipComponent","BeanStub","cloneObject","mergeDeep","ComponentSource","UserComponentFactory","_super","apply","newDateComponent","params","createAndInitUserComponent","gridOptions","newHeaderComponent","column","getColDef","newHeaderGroupComponent","columnGroup","getColGroupDef","newFullWidthGroupRowInnerCellRenderer","newFullWidthCellRenderer","cellRendererType","cellRendererName","propertyName","isCellRenderer","newCellRenderer","isPinned","newCellEditor","colDef","newInnerCellRenderer","newLoadingOverlayComponent","newNoRowsOverlayComponent","newTooltipComponent","newFilterComponent","defaultFilter","modifyParamsCallback","newSetFilterCellRenderer","newFloatingFilterComponent","defaultFloatingFilter","newToolPanelComponent","toolPanelDef","newStatusPanelComponent","def","definitionObject","paramsFromGrid","componentType","defaultComponentName","optional","componentAndParams","createComponentInstance","componentInstance","createFinalParams","paramsFromSelector","addReactHacks","paramsAfterCallback","deferredInit","initComponent","resolve","then","agGridReact","context","getBean","frameworkComponentWrapper","createUserComponentFromConcreteClass","clazz","agGridParams","internalComponent","lookupComponentClassDef","hardcodedNameComponent","HardcodedJsComponent","hardcodedJsFunction","HardcodedFwComponent","componentSelectorFunc","componentPropertyValue","usingDefaultComponent","agComponentUtils","doesImplementIComponent","Error","componentFromFramework","component","source","HARDCODED","adaptFunction","selectorResult","componentNameToUse","registeredCompClassDef","lookupFromRegisteredComponents","componentNameOpt","componentName","registeredComponent","userComponentRegistry","retrieve","REGISTERED_BY_NAME","REGISTERED","DEFAULT","userParams","holder","paramsForSelector","componentToUse","missing","overrideName","nameToReport","console","error","FrameworkComponentRaw","thisComponentConfig","componentMetadataProvider","wrap","mandatoryMethodList","optionalMethodList","createBean","init"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Autowired, Bean, Optional } from \"../../context/context\";\nimport { RegisteredComponentSource } from \"./userComponentRegistry\";\nimport { Promise } from \"../../utils\";\nimport { CellEditorComponent, CellRendererComponent, DateComponent, FilterComponent, FloatingFilterComponent, GroupRowInnerRendererComponent, HeaderComponent, HeaderGroupComponent, InnerRendererComponent, LoadingOverlayComponent, NoRowsOverlayComponent, PinnedRowCellRendererComponent, StatusPanelComponent, ToolPanelComponent, TooltipComponent } from \"./componentTypes\";\nimport { BeanStub } from \"../../context/beanStub\";\nimport { cloneObject, mergeDeep } from '../../utils/object';\nexport var ComponentSource;\n(function (ComponentSource) {\n    ComponentSource[ComponentSource[\"DEFAULT\"] = 0] = \"DEFAULT\";\n    ComponentSource[ComponentSource[\"REGISTERED_BY_NAME\"] = 1] = \"REGISTERED_BY_NAME\";\n    ComponentSource[ComponentSource[\"HARDCODED\"] = 2] = \"HARDCODED\";\n})(ComponentSource || (ComponentSource = {}));\nvar UserComponentFactory = /** @class */ (function (_super) {\n    __extends(UserComponentFactory, _super);\n    function UserComponentFactory() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    UserComponentFactory.prototype.newDateComponent = function (params) {\n        return this.createAndInitUserComponent(this.gridOptions, params, DateComponent, 'agDateInput');\n    };\n    UserComponentFactory.prototype.newHeaderComponent = function (params) {\n        return this.createAndInitUserComponent(params.column.getColDef(), params, HeaderComponent, 'agColumnHeader');\n    };\n    UserComponentFactory.prototype.newHeaderGroupComponent = function (params) {\n        return this.createAndInitUserComponent(params.columnGroup.getColGroupDef(), params, HeaderGroupComponent, 'agColumnGroupHeader');\n    };\n    UserComponentFactory.prototype.newFullWidthGroupRowInnerCellRenderer = function (params) {\n        return this.createAndInitUserComponent(this.gridOptions, params, GroupRowInnerRendererComponent, null, true);\n    };\n    // this one is unusual, as it can be LoadingCellRenderer, DetailCellRenderer, FullWidthCellRenderer or GroupRowRenderer.\n    // so we have to pass the type in.\n    UserComponentFactory.prototype.newFullWidthCellRenderer = function (params, cellRendererType, cellRendererName) {\n        return this.createAndInitUserComponent(null, params, {\n            propertyName: cellRendererType,\n            isCellRenderer: function () { return true; }\n        }, cellRendererName);\n    };\n    UserComponentFactory.prototype.newCellRenderer = function (target, params, isPinned) {\n        if (isPinned === void 0) { isPinned = false; }\n        return this.createAndInitUserComponent(target, params, isPinned ? PinnedRowCellRendererComponent : CellRendererComponent, null, true);\n    };\n    UserComponentFactory.prototype.newCellEditor = function (colDef, params) {\n        return this.createAndInitUserComponent(colDef, params, CellEditorComponent, 'agCellEditor');\n    };\n    UserComponentFactory.prototype.newInnerCellRenderer = function (target, params) {\n        return this.createAndInitUserComponent(target, params, InnerRendererComponent, null);\n    };\n    UserComponentFactory.prototype.newLoadingOverlayComponent = function (params) {\n        return this.createAndInitUserComponent(this.gridOptions, params, LoadingOverlayComponent, 'agLoadingOverlay');\n    };\n    UserComponentFactory.prototype.newNoRowsOverlayComponent = function (params) {\n        return this.createAndInitUserComponent(this.gridOptions, params, NoRowsOverlayComponent, 'agNoRowsOverlay');\n    };\n    UserComponentFactory.prototype.newTooltipComponent = function (params) {\n        return this.createAndInitUserComponent(params.colDef, params, TooltipComponent, 'agTooltipComponent');\n    };\n    UserComponentFactory.prototype.newFilterComponent = function (colDef, params, defaultFilter, modifyParamsCallback) {\n        return this.createAndInitUserComponent(colDef, params, FilterComponent, defaultFilter, false, modifyParamsCallback);\n    };\n    UserComponentFactory.prototype.newSetFilterCellRenderer = function (target, params) {\n        return this.createAndInitUserComponent(target, params, CellRendererComponent, null, true);\n    };\n    UserComponentFactory.prototype.newFloatingFilterComponent = function (colDef, params, defaultFloatingFilter) {\n        return this.createAndInitUserComponent(colDef, params, FloatingFilterComponent, defaultFloatingFilter, true);\n    };\n    UserComponentFactory.prototype.newToolPanelComponent = function (toolPanelDef, params) {\n        return this.createAndInitUserComponent(toolPanelDef, params, ToolPanelComponent);\n    };\n    UserComponentFactory.prototype.newStatusPanelComponent = function (def, params) {\n        return this.createAndInitUserComponent(def, params, StatusPanelComponent);\n    };\n    /**\n     * This method creates a component given everything needed to guess what sort of component needs to be instantiated\n     * It takes\n     *  @param definitionObject: This is the context for which this component needs to be created, it can be gridOptions\n     *      (global) or columnDef mostly.\n     *  @param paramsFromGrid: Params to be passed to the component and passed by ag-Grid. This will get merged with any params\n     *      specified by the user in the configuration\n     *  @param propertyName: The name of the property used in ag-grid as a convention to refer to the component, it can be:\n     *      'floatingFilter', 'cellRenderer', is used to find if the user is specifying a custom component\n     *  @param defaultComponentName: The actual name of the component to instantiate, this is usually the same as propertyName, but in\n     *      some cases is not, like floatingFilter, if it is the same is not necessary to specify\n     *  @param optional: Handy method to tell if this should return a component ALWAYS. if that is the case, but there is no\n     *      component found, it throws an error, by default all components are MANDATORY\n     *  @param modifyParamsCallback: A chance to customise the params passed to the init method. It receives what the current\n     *  params are and the component that init is about to get called for\n     */\n    UserComponentFactory.prototype.createAndInitUserComponent = function (definitionObject, paramsFromGrid, componentType, defaultComponentName, \n    // optional items are: FloatingFilter, CellComp (for cellRenderer)\n    optional, \n    // used by FilterManager only\n    modifyParamsCallback) {\n        if (optional === void 0) { optional = false; }\n        if (!definitionObject) {\n            definitionObject = this.gridOptions;\n        }\n        // Create the component instance\n        var componentAndParams = this.createComponentInstance(definitionObject, componentType, paramsFromGrid, defaultComponentName, optional);\n        if (!componentAndParams) {\n            return null;\n        }\n        var componentInstance = componentAndParams.componentInstance;\n        // Wire the component and call the init method with the correct params\n        var params = this.createFinalParams(definitionObject, componentType.propertyName, paramsFromGrid, componentAndParams.paramsFromSelector);\n        this.addReactHacks(params);\n        // give caller chance to set any params that depend on the componentInstance (need here as the\n        // componentInstance was not available when createUserComponent was called)\n        var paramsAfterCallback = modifyParamsCallback ? modifyParamsCallback(params, componentInstance) : params;\n        var deferredInit = this.initComponent(componentInstance, paramsAfterCallback);\n        if (deferredInit == null) {\n            return Promise.resolve(componentInstance);\n        }\n        else {\n            return deferredInit.then(function () { return componentInstance; });\n        }\n    };\n    UserComponentFactory.prototype.addReactHacks = function (params) {\n        // a temporary fix for AG-1574\n        // AG-1715 raised to do a wider ranging refactor to improve this\n        var agGridReact = this.context.getBean('agGridReact');\n        if (agGridReact) {\n            params.agGridReact = cloneObject(agGridReact);\n        }\n        // AG-1716 - directly related to AG-1574 and AG-1715\n        var frameworkComponentWrapper = this.context.getBean('frameworkComponentWrapper');\n        if (frameworkComponentWrapper) {\n            params.frameworkComponentWrapper = frameworkComponentWrapper;\n        }\n    };\n    /**\n     * This method creates a component given everything needed to guess what sort of component needs to be instantiated\n     * It takes\n     *  @param clazz: The class to instantiate,\n     *  @param agGridParams: Params to be passed to the component and passed by ag-Grid. This will get merged with any params\n     *      specified by the user in the configuration\n     *  @param modifyParamsCallback: A chance to customise the params passed to the init method. It receives what the current\n     *  params are and the component that init is about to get called for\n     */\n    UserComponentFactory.prototype.createUserComponentFromConcreteClass = function (clazz, agGridParams) {\n        var internalComponent = new clazz();\n        this.initComponent(internalComponent, agGridParams);\n        return internalComponent;\n    };\n    /**\n     * This method returns the underlying representation of the component to be created. ie for Javascript the\n     * underlying function where we should be calling new into. In case of the frameworks, the framework class\n     * object that represents the component to be created.\n     *\n     * This method is handy for different reasons, for example if you want to check if a component has a particular\n     * method implemented without having to create the component, just by inspecting the source component\n     *\n     * It takes\n     *  @param definitionObject: This is the context for which this component needs to be created, it can be gridOptions\n     *      (global) or columnDef mostly.\n     *  @param propertyName: The name of the property used in ag-grid as a convention to refer to the component, it can be:\n     *      'floatingFilter', 'cellRenderer', is used to find if the user is specifying a custom component\n     *  @param params: Params to be passed to the dynamic component function in case it needs to be\n     *      invoked\n     *  @param defaultComponentName: The name of the component to load if there is no component specified\n     */\n    UserComponentFactory.prototype.lookupComponentClassDef = function (definitionObject, propertyName, params, defaultComponentName) {\n        if (params === void 0) { params = null; }\n        /**\n         * There are five things that can happen when resolving a component.\n         *  a) HardcodedFwComponent: That holder[propertyName]Framework has associated a Framework native component\n         *  b) HardcodedJsComponent: That holder[propertyName] has associate a JS component\n         *  c) hardcodedJsFunction: That holder[propertyName] has associate a JS function\n         *  d) hardcodedNameComponent: That holder[propertyName] has associate a string that represents a component to load\n         *  e) That none of the three previous are specified, then we need to use the DefaultRegisteredComponent\n         */\n        var hardcodedNameComponent = null;\n        var HardcodedJsComponent = null;\n        var hardcodedJsFunction = null;\n        var HardcodedFwComponent = null;\n        var componentSelectorFunc;\n        if (definitionObject != null) {\n            var componentPropertyValue = definitionObject[propertyName];\n            // for filters only, we allow 'true' for the component, which means default filter to be used\n            var usingDefaultComponent = componentPropertyValue === true;\n            if (componentPropertyValue != null && !usingDefaultComponent) {\n                if (typeof componentPropertyValue === 'string') {\n                    hardcodedNameComponent = componentPropertyValue;\n                }\n                else if (typeof componentPropertyValue === 'boolean') {\n                    // never happens, as we test for usingDefaultComponent above,\n                    // however it's needed for the next block to compile\n                }\n                else if (this.agComponentUtils.doesImplementIComponent(componentPropertyValue)) {\n                    HardcodedJsComponent = componentPropertyValue;\n                }\n                else {\n                    hardcodedJsFunction = componentPropertyValue;\n                }\n            }\n            HardcodedFwComponent = definitionObject[propertyName + \"Framework\"];\n            componentSelectorFunc = definitionObject[propertyName + \"Selector\"];\n        }\n        /**\n         * Since we allow many types of flavors for specifying the components, let's make sure this is not an illegal\n         * combination\n         */\n        if ((HardcodedJsComponent && HardcodedFwComponent) ||\n            (hardcodedNameComponent && HardcodedFwComponent) ||\n            (hardcodedJsFunction && HardcodedFwComponent)) {\n            throw Error(\"ag-grid: you are trying to specify: \" + propertyName + \" twice as a component.\");\n        }\n        if (HardcodedFwComponent && !this.frameworkComponentWrapper) {\n            throw Error(\"ag-grid: you are specifying a framework component but you are not using a framework version of ag-grid for : \" + propertyName);\n        }\n        if (componentSelectorFunc && (hardcodedNameComponent || HardcodedJsComponent || hardcodedJsFunction || HardcodedFwComponent)) {\n            throw Error(\"ag-grid: you can't specify both, the selector and the component of ag-grid for : \" + propertyName);\n        }\n        /**\n         * At this stage we are guaranteed to either have,\n         * DEPRECATED\n         * - A unique HardcodedFwComponent\n         * - A unique HardcodedJsComponent\n         * - A unique hardcodedJsFunction\n         * BY NAME- FAVOURED APPROACH\n         * - A unique hardcodedNameComponent\n         * - None of the previous, hence we revert to: RegisteredComponent\n         */\n        if (HardcodedFwComponent) {\n            // console.warn(`ag-grid: Since version 12.1.0 specifying a component directly is deprecated, you should register the component by name`);\n            // console.warn(`${HardcodedFwComponent}`);\n            return {\n                componentFromFramework: true,\n                component: HardcodedFwComponent,\n                source: ComponentSource.HARDCODED,\n                paramsFromSelector: null\n            };\n        }\n        if (HardcodedJsComponent) {\n            // console.warn(`ag-grid: Since version 12.1.0 specifying a component directly is deprecated, you should register the component by name`);\n            // console.warn(`${HardcodedJsComponent}`);\n            return {\n                componentFromFramework: false,\n                component: HardcodedJsComponent,\n                source: ComponentSource.HARDCODED,\n                paramsFromSelector: null\n            };\n        }\n        if (hardcodedJsFunction) {\n            // console.warn(`ag-grid: Since version 12.1.0 specifying a function directly is deprecated, you should register the component by name`);\n            // console.warn(`${hardcodedJsFunction}`);\n            return this.agComponentUtils.adaptFunction(propertyName, hardcodedJsFunction, false, ComponentSource.HARDCODED);\n        }\n        var selectorResult = componentSelectorFunc ? componentSelectorFunc(params) : null;\n        var componentNameToUse;\n        if (selectorResult && selectorResult.component) {\n            componentNameToUse = selectorResult.component;\n        }\n        else if (hardcodedNameComponent) {\n            componentNameToUse = hardcodedNameComponent;\n        }\n        else {\n            componentNameToUse = defaultComponentName;\n        }\n        if (!componentNameToUse) {\n            return null;\n        }\n        var registeredCompClassDef = this.lookupFromRegisteredComponents(propertyName, componentNameToUse);\n        if (!registeredCompClassDef) {\n            return null;\n        }\n        return {\n            componentFromFramework: registeredCompClassDef.componentFromFramework,\n            component: registeredCompClassDef.component,\n            source: registeredCompClassDef.source,\n            paramsFromSelector: selectorResult ? selectorResult.params : null\n        };\n    };\n    UserComponentFactory.prototype.lookupFromRegisteredComponents = function (propertyName, componentNameOpt) {\n        var componentName = componentNameOpt != null ? componentNameOpt : propertyName;\n        var registeredComponent = this.userComponentRegistry.retrieve(componentName);\n        if (registeredComponent == null) {\n            return null;\n        }\n        //If it is a FW it has to be registered as a component\n        if (registeredComponent.componentFromFramework) {\n            return {\n                component: registeredComponent.component,\n                componentFromFramework: true,\n                source: ComponentSource.REGISTERED_BY_NAME,\n                paramsFromSelector: null\n            };\n        }\n        //If it is JS it may be a function or a component\n        if (this.agComponentUtils.doesImplementIComponent(registeredComponent.component)) {\n            return {\n                component: registeredComponent.component,\n                componentFromFramework: false,\n                source: (registeredComponent.source == RegisteredComponentSource.REGISTERED) ? ComponentSource.REGISTERED_BY_NAME : ComponentSource.DEFAULT,\n                paramsFromSelector: null\n            };\n        }\n        // This is a function\n        return this.agComponentUtils.adaptFunction(propertyName, registeredComponent.component, registeredComponent.componentFromFramework, (registeredComponent.source == RegisteredComponentSource.REGISTERED) ? ComponentSource.REGISTERED_BY_NAME : ComponentSource.DEFAULT);\n    };\n    /**\n     * Useful to check what would be the resultant params for a given object\n     *  @param definitionObject: This is the context for which this component needs to be created, it can be gridOptions\n     *      (global) or columnDef mostly.\n     *  @param propertyName: The name of the property used in ag-grid as a convention to refer to the component, it can be:\n     *      'floatingFilter', 'cellRenderer', is used to find if the user is specifying a custom component\n     *  @param paramsFromGrid: Params to be passed to the component and passed by ag-Grid. This will get merged with any params\n     *      specified by the user in the configuration\n     * @returns {TParams} It merges the user agGridParams with the actual params specified by the user.\n     */\n    UserComponentFactory.prototype.createFinalParams = function (definitionObject, propertyName, paramsFromGrid, paramsFromSelector) {\n        if (paramsFromSelector === void 0) { paramsFromSelector = null; }\n        var params = {};\n        mergeDeep(params, paramsFromGrid);\n        var userParams = definitionObject ? definitionObject[propertyName + \"Params\"] : null;\n        if (userParams != null) {\n            if (typeof userParams === 'function') {\n                mergeDeep(params, userParams(paramsFromGrid));\n            }\n            else if (typeof userParams === 'object') {\n                mergeDeep(params, userParams);\n            }\n        }\n        mergeDeep(params, paramsFromSelector);\n        return params;\n    };\n    UserComponentFactory.prototype.createComponentInstance = function (holder, componentType, paramsForSelector, defaultComponentName, optional) {\n        var propertyName = componentType.propertyName;\n        var componentToUse = this.lookupComponentClassDef(holder, propertyName, paramsForSelector, defaultComponentName);\n        var missing = !componentToUse || !componentToUse.component;\n        if (missing) {\n            // to help the user, we print out the name they are looking for, rather than the default name.\n            // i don't know why the default name was originally printed out (that doesn't help the user)\n            var overrideName = holder ? holder[propertyName] : defaultComponentName;\n            var nameToReport = overrideName ? overrideName : defaultComponentName;\n            if (!optional) {\n                console.error(\"Could not find component \" + nameToReport + \", did you forget to configure this component?\");\n            }\n            return null;\n        }\n        var componentInstance;\n        if (componentToUse.componentFromFramework) {\n            // Using framework component\n            var FrameworkComponentRaw = componentToUse.component;\n            var thisComponentConfig = this.componentMetadataProvider.retrieve(propertyName);\n            componentInstance = this.frameworkComponentWrapper.wrap(FrameworkComponentRaw, thisComponentConfig.mandatoryMethodList, thisComponentConfig.optionalMethodList, componentType, defaultComponentName);\n        }\n        else {\n            // Using plain JavaScript component\n            componentInstance = new componentToUse.component();\n        }\n        return { componentInstance: componentInstance, paramsFromSelector: componentToUse.paramsFromSelector };\n    };\n    UserComponentFactory.prototype.initComponent = function (component, params) {\n        this.context.createBean(component);\n        if (component.init == null) {\n            return;\n        }\n        return component.init(params);\n    };\n    __decorate([\n        Autowired(\"gridOptions\")\n    ], UserComponentFactory.prototype, \"gridOptions\", void 0);\n    __decorate([\n        Autowired(\"agComponentUtils\")\n    ], UserComponentFactory.prototype, \"agComponentUtils\", void 0);\n    __decorate([\n        Autowired(\"componentMetadataProvider\")\n    ], UserComponentFactory.prototype, \"componentMetadataProvider\", void 0);\n    __decorate([\n        Autowired(\"userComponentRegistry\")\n    ], UserComponentFactory.prototype, \"userComponentRegistry\", void 0);\n    __decorate([\n        Optional(\"frameworkComponentWrapper\")\n    ], UserComponentFactory.prototype, \"frameworkComponentWrapper\", void 0);\n    UserComponentFactory = __decorate([\n        Bean('userComponentFactory')\n    ], UserComponentFactory);\n    return UserComponentFactory;\n}(BeanStub));\nexport { UserComponentFactory };\n"]},"metadata":{},"sourceType":"module"}