{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nimport { missing, exists, values } from './generic';\nimport { forEach } from './array';\nexport function iterateObject(object, callback) {\n  if (object == null) {\n    return;\n  }\n\n  if (Array.isArray(object)) {\n    forEach(object, function (value, index) {\n      return callback(\"\" + index, value);\n    });\n  } else {\n    forEach(Object.keys(object), function (key) {\n      return callback(key, object[key]);\n    });\n  }\n}\nexport function cloneObject(object) {\n  var copy = {};\n  var keys = Object.keys(object);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = object[key];\n    copy[key] = value;\n  }\n\n  return copy;\n}\nexport function deepCloneObject(object) {\n  return JSON.parse(JSON.stringify(object));\n}\nexport function getProperty(object, key) {\n  return object[key];\n}\nexport function setProperty(object, key, value) {\n  object[key] = value;\n}\n/**\n * Will copy the specified properties from `source` into the equivalent properties on `target`, ignoring properties with\n * a value of `undefined`.\n */\n\nexport function copyPropertiesIfPresent(source, target) {\n  var properties = [];\n\n  for (var _i = 2; _i < arguments.length; _i++) {\n    properties[_i - 2] = arguments[_i];\n  }\n\n  forEach(properties, function (p) {\n    return copyPropertyIfPresent(source, target, p);\n  });\n}\n/**\n * Will copy the specified property from `source` into the equivalent property on `target`, unless the property has a\n * value of `undefined`. If a transformation is provided, it will be applied to the value before being set on `target`.\n */\n\nexport function copyPropertyIfPresent(source, target, property, transform) {\n  var value = getProperty(source, property);\n\n  if (value !== undefined) {\n    setProperty(target, property, transform ? transform(value) : value);\n  }\n}\nexport function getAllKeysInObjects(objects) {\n  var allValues = {};\n  objects.filter(function (obj) {\n    return obj != null;\n  }).forEach(function (obj) {\n    forEach(Object.keys(obj), function (key) {\n      return allValues[key] = null;\n    });\n  });\n  return Object.keys(allValues);\n}\nexport function mergeDeep(dest, source, copyUndefined) {\n  if (copyUndefined === void 0) {\n    copyUndefined = true;\n  }\n\n  if (!exists(source)) {\n    return;\n  }\n\n  iterateObject(source, function (key, newValue) {\n    var oldValue = dest[key];\n\n    if (oldValue === newValue) {\n      return;\n    }\n\n    if (typeof oldValue === 'object' && typeof newValue === 'object' && !Array.isArray(oldValue)) {\n      mergeDeep(oldValue, newValue);\n    } else if (copyUndefined || newValue !== undefined) {\n      dest[key] = newValue;\n    }\n  });\n}\nexport function assign(object) {\n  var sources = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    sources[_i - 1] = arguments[_i];\n  }\n\n  forEach(sources, function (source) {\n    return iterateObject(source, function (key, value) {\n      return object[key] = value;\n    });\n  });\n  return object;\n}\nexport function missingOrEmptyObject(value) {\n  return missing(value) || Object.keys(value).length === 0;\n}\nexport function get(source, expression, defaultValue) {\n  if (source == null) {\n    return defaultValue;\n  }\n\n  var keys = expression.split('.');\n  var objectToRead = source;\n\n  while (keys.length > 1) {\n    objectToRead = objectToRead[keys.shift()];\n\n    if (objectToRead == null) {\n      return defaultValue;\n    }\n  }\n\n  var value = objectToRead[keys[0]];\n  return value != null ? value : defaultValue;\n}\nexport function set(target, expression, value) {\n  if (target == null) {\n    return;\n  }\n\n  var keys = expression.split('.');\n  var objectToUpdate = target;\n\n  while (keys.length > 1) {\n    objectToUpdate = objectToUpdate[keys.shift()];\n\n    if (objectToUpdate == null) {\n      return;\n    }\n  }\n\n  objectToUpdate[keys[0]] = value;\n}\nexport function deepFreeze(object) {\n  Object.freeze(object);\n  forEach(values(object), function (v) {\n    if (v != null && (typeof v === 'object' || typeof v === 'function')) {\n      deepFreeze(v);\n    }\n  });\n  return object;\n}\nexport function getValueUsingField(data, field, fieldContainsDots) {\n  if (!field || !data) {\n    return;\n  } // if no '.', then it's not a deep value\n\n\n  if (!fieldContainsDots) {\n    return data[field];\n  } // otherwise it is a deep value, so need to dig for it\n\n\n  var fields = field.split('.');\n  var currentObject = data;\n\n  for (var i = 0; i < fields.length; i++) {\n    currentObject = currentObject[fields[i]];\n\n    if (missing(currentObject)) {\n      return null;\n    }\n  }\n\n  return currentObject;\n}","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/@ag-grid-community/core/dist/es6/utils/object.js"],"names":["missing","exists","values","forEach","iterateObject","object","callback","Array","isArray","value","index","Object","keys","key","cloneObject","copy","i","length","deepCloneObject","JSON","parse","stringify","getProperty","setProperty","copyPropertiesIfPresent","source","target","properties","_i","arguments","p","copyPropertyIfPresent","property","transform","undefined","getAllKeysInObjects","objects","allValues","filter","obj","mergeDeep","dest","copyUndefined","newValue","oldValue","assign","sources","missingOrEmptyObject","get","expression","defaultValue","split","objectToRead","shift","set","objectToUpdate","deepFreeze","freeze","v","getValueUsingField","data","field","fieldContainsDots","fields","currentObject"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nimport { missing, exists, values } from './generic';\nimport { forEach } from './array';\nexport function iterateObject(object, callback) {\n    if (object == null) {\n        return;\n    }\n    if (Array.isArray(object)) {\n        forEach(object, function (value, index) { return callback(\"\" + index, value); });\n    }\n    else {\n        forEach(Object.keys(object), function (key) { return callback(key, object[key]); });\n    }\n}\nexport function cloneObject(object) {\n    var copy = {};\n    var keys = Object.keys(object);\n    for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var value = object[key];\n        copy[key] = value;\n    }\n    return copy;\n}\nexport function deepCloneObject(object) {\n    return JSON.parse(JSON.stringify(object));\n}\nexport function getProperty(object, key) {\n    return object[key];\n}\nexport function setProperty(object, key, value) {\n    object[key] = value;\n}\n/**\n * Will copy the specified properties from `source` into the equivalent properties on `target`, ignoring properties with\n * a value of `undefined`.\n */\nexport function copyPropertiesIfPresent(source, target) {\n    var properties = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        properties[_i - 2] = arguments[_i];\n    }\n    forEach(properties, function (p) { return copyPropertyIfPresent(source, target, p); });\n}\n/**\n * Will copy the specified property from `source` into the equivalent property on `target`, unless the property has a\n * value of `undefined`. If a transformation is provided, it will be applied to the value before being set on `target`.\n */\nexport function copyPropertyIfPresent(source, target, property, transform) {\n    var value = getProperty(source, property);\n    if (value !== undefined) {\n        setProperty(target, property, transform ? transform(value) : value);\n    }\n}\nexport function getAllKeysInObjects(objects) {\n    var allValues = {};\n    objects.filter(function (obj) { return obj != null; }).forEach(function (obj) {\n        forEach(Object.keys(obj), function (key) { return allValues[key] = null; });\n    });\n    return Object.keys(allValues);\n}\nexport function mergeDeep(dest, source, copyUndefined) {\n    if (copyUndefined === void 0) { copyUndefined = true; }\n    if (!exists(source)) {\n        return;\n    }\n    iterateObject(source, function (key, newValue) {\n        var oldValue = dest[key];\n        if (oldValue === newValue) {\n            return;\n        }\n        if (typeof oldValue === 'object' && typeof newValue === 'object' && !Array.isArray(oldValue)) {\n            mergeDeep(oldValue, newValue);\n        }\n        else if (copyUndefined || newValue !== undefined) {\n            dest[key] = newValue;\n        }\n    });\n}\nexport function assign(object) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    forEach(sources, function (source) { return iterateObject(source, function (key, value) { return object[key] = value; }); });\n    return object;\n}\nexport function missingOrEmptyObject(value) {\n    return missing(value) || Object.keys(value).length === 0;\n}\nexport function get(source, expression, defaultValue) {\n    if (source == null) {\n        return defaultValue;\n    }\n    var keys = expression.split('.');\n    var objectToRead = source;\n    while (keys.length > 1) {\n        objectToRead = objectToRead[keys.shift()];\n        if (objectToRead == null) {\n            return defaultValue;\n        }\n    }\n    var value = objectToRead[keys[0]];\n    return value != null ? value : defaultValue;\n}\nexport function set(target, expression, value) {\n    if (target == null) {\n        return;\n    }\n    var keys = expression.split('.');\n    var objectToUpdate = target;\n    while (keys.length > 1) {\n        objectToUpdate = objectToUpdate[keys.shift()];\n        if (objectToUpdate == null) {\n            return;\n        }\n    }\n    objectToUpdate[keys[0]] = value;\n}\nexport function deepFreeze(object) {\n    Object.freeze(object);\n    forEach(values(object), function (v) {\n        if (v != null && (typeof v === 'object' || typeof v === 'function')) {\n            deepFreeze(v);\n        }\n    });\n    return object;\n}\nexport function getValueUsingField(data, field, fieldContainsDots) {\n    if (!field || !data) {\n        return;\n    }\n    // if no '.', then it's not a deep value\n    if (!fieldContainsDots) {\n        return data[field];\n    }\n    // otherwise it is a deep value, so need to dig for it\n    var fields = field.split('.');\n    var currentObject = data;\n    for (var i = 0; i < fields.length; i++) {\n        currentObject = currentObject[fields[i]];\n        if (missing(currentObject)) {\n            return null;\n        }\n    }\n    return currentObject;\n}\n"]},"metadata":{},"sourceType":"module"}