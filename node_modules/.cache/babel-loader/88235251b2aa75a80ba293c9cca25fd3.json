{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Promise } from '../utils';\nimport { Autowired, Bean, PostConstruct, PreDestroy } from '../context/context';\nimport { Events } from '../events';\nimport { ModuleNames } from '../modules/moduleNames';\nimport { ModuleRegistry } from '../modules/moduleRegistry';\nimport { forEach, some, every } from '../utils/array';\nimport { BeanStub } from '../context/beanStub';\nimport { convertToSet } from '../utils/set';\nimport { exists } from '../utils/generic';\nimport { mergeDeep, cloneObject, assign } from '../utils/object';\nimport { loadTemplate } from '../utils/dom';\n\nvar FilterManager =\n/** @class */\nfunction (_super) {\n  __extends(FilterManager, _super);\n\n  function FilterManager() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.allFilters = new Map();\n    _this.quickFilter = null;\n    _this.quickFilterParts = null; // this is true when the grid is processing the filter change. this is used by the cell comps, so that they\n    // don't flash when data changes due to filter changes. there is no need to flash when filter changes as the\n    // user is in control, so doesn't make sense to show flashing changes. for example, go to main demo where\n    // this feature is turned off (hack code to always return false for isSuppressFlashingCellsBecauseFiltering(), put in)\n    // 100,000 rows and group by country. then do some filtering. all the cells flash, which is silly.\n\n    _this.processingFilterChange = false;\n    return _this;\n  }\n\n  FilterManager_1 = FilterManager;\n\n  FilterManager.prototype.init = function () {\n    this.addManagedListener(this.eventService, Events.EVENT_ROW_DATA_CHANGED, this.onNewRowsLoaded.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_NEW_COLUMNS_LOADED, this.onNewColumnsLoaded.bind(this));\n    this.quickFilter = this.parseQuickFilter(this.gridOptionsWrapper.getQuickFilterText());\n    this.setQuickFilterParts();\n    this.allowShowChangeAfterFilter = this.gridOptionsWrapper.isAllowShowChangeAfterFilter(); // check this here, in case there is a filter from the start\n\n    this.checkExternalFilter();\n  };\n\n  FilterManager.prototype.setQuickFilterParts = function () {\n    this.quickFilterParts = this.quickFilter ? this.quickFilter.split(' ') : null;\n  };\n\n  FilterManager.prototype.setFilterModel = function (model) {\n    var _this = this;\n\n    var allPromises = [];\n\n    if (model) {\n      // mark the filters as we set them, so any active filters left over we stop\n      var modelKeys_1 = convertToSet(Object.keys(model));\n      this.allFilters.forEach(function (filterWrapper, colId) {\n        var newModel = model[colId];\n        allPromises.push(_this.setModelOnFilterWrapper(filterWrapper.filterPromise, newModel));\n        modelKeys_1.delete(colId);\n      }); // at this point, processedFields contains data for which we don't have a filter working yet\n\n      modelKeys_1.forEach(function (colId) {\n        var column = _this.columnController.getPrimaryColumn(colId);\n\n        if (!column) {\n          console.warn('Warning ag-grid setFilterModel - no column found for colId ' + colId);\n          return;\n        }\n\n        var filterWrapper = _this.getOrCreateFilterWrapper(column, 'NO_UI');\n\n        allPromises.push(_this.setModelOnFilterWrapper(filterWrapper.filterPromise, model[colId]));\n      });\n    } else {\n      this.allFilters.forEach(function (filterWrapper) {\n        allPromises.push(_this.setModelOnFilterWrapper(filterWrapper.filterPromise, null));\n      });\n    }\n\n    Promise.all(allPromises).then(function () {\n      return _this.onFilterChanged();\n    });\n  };\n\n  FilterManager.prototype.setModelOnFilterWrapper = function (filterPromise, newModel) {\n    return new Promise(function (resolve) {\n      filterPromise.then(function (filter) {\n        if (typeof filter.setModel !== 'function') {\n          console.warn('Warning ag-grid - filter missing setModel method, which is needed for setFilterModel');\n          resolve();\n        }\n\n        var promise = filter.setModel(newModel);\n\n        if (promise == null) {\n          resolve();\n        } else {\n          promise.then(function () {\n            return resolve();\n          });\n        }\n      });\n    });\n  };\n\n  FilterManager.prototype.getFilterModel = function () {\n    var result = {};\n    this.allFilters.forEach(function (filterWrapper, key) {\n      // because user can provide filters, we provide useful error checking and messages\n      var filterPromise = filterWrapper.filterPromise;\n      var filter = filterPromise.resolveNow(null, function (filter) {\n        return filter;\n      });\n\n      if (filter == null) {\n        return null;\n      }\n\n      if (typeof filter.getModel !== 'function') {\n        console.warn('Warning ag-grid - filter API missing getModel method, which is needed for getFilterModel');\n        return;\n      }\n\n      var model = filter.getModel();\n\n      if (exists(model)) {\n        result[key] = model;\n      }\n    });\n    return result;\n  }; // returns true if any advanced filter (ie not quick filter) active\n\n\n  FilterManager.prototype.isAdvancedFilterPresent = function () {\n    return this.advancedFilterPresent;\n  }; // called by:\n  // 1) onFilterChanged()\n  // 2) onNewRowsLoaded()\n\n\n  FilterManager.prototype.setAdvancedFilterPresent = function () {\n    var atLeastOneActive = false;\n    this.allFilters.forEach(function (filterWrapper) {\n      if (atLeastOneActive) {\n        return;\n      } // no need to check any more\n\n\n      if (filterWrapper.filterPromise.resolveNow(false, function (filter) {\n        return filter.isFilterActive();\n      })) {\n        atLeastOneActive = true;\n      }\n    });\n    this.advancedFilterPresent = atLeastOneActive;\n  };\n\n  FilterManager.prototype.updateFilterFlagInColumns = function (source, additionalEventAttributes) {\n    this.allFilters.forEach(function (filterWrapper) {\n      var isFilterActive = filterWrapper.filterPromise.resolveNow(false, function (filter) {\n        return filter.isFilterActive();\n      });\n      filterWrapper.column.setFilterActive(isFilterActive, source, additionalEventAttributes);\n    });\n  }; // returns true if quickFilter or advancedFilter\n\n\n  FilterManager.prototype.isAnyFilterPresent = function () {\n    return this.isQuickFilterPresent() || this.advancedFilterPresent || this.externalFilterPresent;\n  };\n\n  FilterManager.prototype.doesFilterPass = function (node, filterToSkip) {\n    var data = node.data;\n    var filterPasses = true;\n    this.allFilters.forEach(function (filterWrapper) {\n      // if a filter has already failed, no need to run any more\n      if (!filterPasses) {\n        return;\n      } // if no filter, always pass\n\n\n      if (filterWrapper == null) {\n        return;\n      }\n\n      var filter = filterWrapper.filterPromise.resolveNow(undefined, function (filter) {\n        return filter;\n      });\n\n      if (filter == null || filter === filterToSkip || !filter.isFilterActive()) {\n        return;\n      }\n\n      if (!filter.doesFilterPass) {\n        // because users can do custom filters, give nice error message\n        throw new Error('Filter is missing method doesFilterPass');\n      }\n\n      filterPasses = filter.doesFilterPass({\n        node: node,\n        data: data\n      });\n    });\n    return filterPasses;\n  };\n\n  FilterManager.prototype.parseQuickFilter = function (newFilter) {\n    if (!exists(newFilter)) {\n      return null;\n    }\n\n    if (!this.gridOptionsWrapper.isRowModelDefault()) {\n      console.warn('ag-grid: quick filtering only works with the Client-Side Row Model');\n      return null;\n    }\n\n    return newFilter.toUpperCase();\n  };\n\n  FilterManager.prototype.setQuickFilter = function (newFilter) {\n    var parsedFilter = this.parseQuickFilter(newFilter);\n\n    if (this.quickFilter !== parsedFilter) {\n      this.quickFilter = parsedFilter;\n      this.setQuickFilterParts();\n      this.onFilterChanged();\n    }\n  };\n\n  FilterManager.prototype.checkExternalFilter = function () {\n    this.externalFilterPresent = this.gridOptionsWrapper.isExternalFilterPresent();\n  };\n\n  FilterManager.prototype.onFilterChanged = function (filterInstance, additionalEventAttributes) {\n    this.setAdvancedFilterPresent();\n    this.updateFilterFlagInColumns('filterChanged', additionalEventAttributes);\n    this.checkExternalFilter();\n    this.allFilters.forEach(function (filterWrapper) {\n      filterWrapper.filterPromise.then(function (filter) {\n        if (filter !== filterInstance && filter.onAnyFilterChanged) {\n          filter.onAnyFilterChanged();\n        }\n      });\n    });\n    var filterChangedEvent = {\n      type: Events.EVENT_FILTER_CHANGED,\n      api: this.gridApi,\n      columnApi: this.columnApi\n    };\n\n    if (additionalEventAttributes) {\n      mergeDeep(filterChangedEvent, additionalEventAttributes);\n    } // because internal events are not async in ag-grid, when the dispatchEvent\n    // method comes back, we know all listeners have finished executing.\n\n\n    this.processingFilterChange = true;\n    this.eventService.dispatchEvent(filterChangedEvent);\n    this.processingFilterChange = false;\n  };\n\n  FilterManager.prototype.isSuppressFlashingCellsBecauseFiltering = function () {\n    // if user has elected to always flash cell changes, then always return false, otherwise we suppress flashing\n    // changes when filtering\n    return !this.allowShowChangeAfterFilter && this.processingFilterChange;\n  };\n\n  FilterManager.prototype.isQuickFilterPresent = function () {\n    return this.quickFilter !== null;\n  };\n\n  FilterManager.prototype.doesRowPassOtherFilters = function (filterToSkip, node) {\n    return this.doesRowPassFilter(node, filterToSkip);\n  };\n\n  FilterManager.prototype.doesRowPassQuickFilterNoCache = function (node, filterPart) {\n    var _this = this;\n\n    var columns = this.columnController.getAllColumnsForQuickFilter();\n    return some(columns, function (column) {\n      var part = _this.getQuickFilterTextForColumn(column, node);\n\n      return exists(part) && part.indexOf(filterPart) >= 0;\n    });\n  };\n\n  FilterManager.prototype.doesRowPassQuickFilterCache = function (node, filterPart) {\n    if (!node.quickFilterAggregateText) {\n      this.aggregateRowForQuickFilter(node);\n    }\n\n    return node.quickFilterAggregateText.indexOf(filterPart) >= 0;\n  };\n\n  FilterManager.prototype.doesRowPassQuickFilter = function (node) {\n    var _this = this;\n\n    var usingCache = this.gridOptionsWrapper.isCacheQuickFilter(); // each part must pass, if any fails, then the whole filter fails\n\n    return every(this.quickFilterParts, function (part) {\n      return usingCache ? _this.doesRowPassQuickFilterCache(node, part) : _this.doesRowPassQuickFilterNoCache(node, part);\n    });\n  };\n\n  FilterManager.prototype.doesRowPassFilter = function (node, filterToSkip) {\n    // the row must pass ALL of the filters, so if any of them fail,\n    // we return true. that means if a row passes the quick filter,\n    // but fails the column filter, it fails overall\n    // first up, check quick filter\n    if (this.isQuickFilterPresent() && !this.doesRowPassQuickFilter(node)) {\n      return false;\n    } // secondly, give the client a chance to reject this row\n\n\n    if (this.externalFilterPresent && !this.gridOptionsWrapper.doesExternalFilterPass(node)) {\n      return false;\n    } // lastly, check our internal advanced filter\n\n\n    if (this.advancedFilterPresent && !this.doesFilterPass(node, filterToSkip)) {\n      return false;\n    } // got this far, all filters pass\n\n\n    return true;\n  };\n\n  FilterManager.prototype.getQuickFilterTextForColumn = function (column, node) {\n    var value = this.valueService.getValue(column, node, true);\n    var colDef = column.getColDef();\n\n    if (colDef.getQuickFilterText) {\n      var params = {\n        value: value,\n        node: node,\n        data: node.data,\n        column: column,\n        colDef: colDef,\n        context: this.gridOptionsWrapper.getContext()\n      };\n      value = colDef.getQuickFilterText(params);\n    }\n\n    return exists(value) ? value.toString().toUpperCase() : null;\n  };\n\n  FilterManager.prototype.aggregateRowForQuickFilter = function (node) {\n    var _this = this;\n\n    var stringParts = [];\n    var columns = this.columnController.getAllColumnsForQuickFilter();\n    forEach(columns, function (column) {\n      var part = _this.getQuickFilterTextForColumn(column, node);\n\n      if (exists(part)) {\n        stringParts.push(part);\n      }\n    });\n    node.quickFilterAggregateText = stringParts.join(FilterManager_1.QUICK_FILTER_SEPARATOR);\n  };\n\n  FilterManager.prototype.onNewRowsLoaded = function (source) {\n    this.allFilters.forEach(function (filterWrapper) {\n      filterWrapper.filterPromise.then(function (filter) {\n        if (filter.onNewRowsLoaded) {\n          filter.onNewRowsLoaded();\n        }\n      });\n    });\n    this.updateFilterFlagInColumns(source);\n    this.setAdvancedFilterPresent();\n  };\n\n  FilterManager.prototype.createValueGetter = function (column) {\n    var _this = this;\n\n    return function (node) {\n      return _this.valueService.getValue(column, node, true);\n    };\n  };\n\n  FilterManager.prototype.getFilterComponent = function (column, source) {\n    return this.getOrCreateFilterWrapper(column, source).filterPromise;\n  };\n\n  FilterManager.prototype.isFilterActive = function (column) {\n    var filterWrapper = this.cachedFilter(column);\n    return filterWrapper && filterWrapper.filterPromise.resolveNow(false, function (filter) {\n      return filter.isFilterActive();\n    });\n  };\n\n  FilterManager.prototype.getOrCreateFilterWrapper = function (column, source) {\n    var filterWrapper = this.cachedFilter(column);\n\n    if (!filterWrapper) {\n      filterWrapper = this.createFilterWrapper(column, source);\n      this.allFilters.set(column.getColId(), filterWrapper);\n    } else if (source !== 'NO_UI') {\n      this.putIntoGui(filterWrapper, source);\n    }\n\n    return filterWrapper;\n  };\n\n  FilterManager.prototype.cachedFilter = function (column) {\n    return this.allFilters.get(column.getColId());\n  };\n\n  FilterManager.prototype.createFilterInstance = function (column, $scope) {\n    var _this = this;\n\n    var defaultFilter = ModuleRegistry.isRegistered(ModuleNames.SetFilterModule) ? 'agSetColumnFilter' : 'agTextColumnFilter';\n    var sanitisedColDef = cloneObject(column.getColDef());\n    var filterInstance;\n    var params = this.createFilterParams(column, sanitisedColDef, $scope);\n\n    params.filterModifiedCallback = function () {\n      var event = {\n        type: Events.EVENT_FILTER_MODIFIED,\n        api: _this.gridApi,\n        columnApi: _this.columnApi,\n        column: column,\n        filterInstance: filterInstance\n      };\n\n      _this.eventService.dispatchEvent(event);\n    }; // we modify params in a callback as we need the filter instance, and this isn't available\n    // when creating the params above\n\n\n    var modifyParamsCallback = function modifyParamsCallback(params, filterInstance) {\n      return assign(params, {\n        doesRowPassOtherFilter: function doesRowPassOtherFilter(node) {\n          return _this.doesRowPassOtherFilters(filterInstance, node);\n        },\n        filterChangedCallback: function filterChangedCallback(additionalEventAttributes) {\n          return _this.onFilterChanged(filterInstance, additionalEventAttributes);\n        }\n      });\n    };\n\n    var res = this.userComponentFactory.newFilterComponent(sanitisedColDef, params, defaultFilter, modifyParamsCallback);\n\n    if (res) {\n      res.then(function (r) {\n        return filterInstance = r;\n      });\n    }\n\n    return res;\n  };\n\n  FilterManager.prototype.createFilterParams = function (column, colDef, $scope) {\n    if ($scope === void 0) {\n      $scope = null;\n    }\n\n    var params = {\n      api: this.gridOptionsWrapper.getApi(),\n      column: column,\n      colDef: colDef,\n      rowModel: this.rowModel,\n      filterChangedCallback: null,\n      filterModifiedCallback: null,\n      valueGetter: this.createValueGetter(column),\n      context: this.gridOptionsWrapper.getContext(),\n      doesRowPassOtherFilter: null\n    }; // hack in scope if using AngularJS\n\n    if ($scope) {\n      params.$scope = $scope;\n    }\n\n    return params;\n  };\n\n  FilterManager.prototype.createFilterWrapper = function (column, source) {\n    var filterWrapper = {\n      column: column,\n      filterPromise: null,\n      scope: null,\n      compiledElement: null,\n      guiPromise: Promise.resolve(null)\n    };\n    filterWrapper.scope = this.gridOptionsWrapper.isAngularCompileFilters() ? this.$scope.$new() : null;\n    filterWrapper.filterPromise = this.createFilterInstance(column, filterWrapper.scope);\n\n    if (filterWrapper.filterPromise) {\n      this.putIntoGui(filterWrapper, source);\n    }\n\n    return filterWrapper;\n  };\n\n  FilterManager.prototype.putIntoGui = function (filterWrapper, source) {\n    var _this = this;\n\n    var eFilterGui = document.createElement('div');\n    eFilterGui.className = 'ag-filter';\n    filterWrapper.guiPromise = new Promise(function (resolve) {\n      filterWrapper.filterPromise.then(function (filter) {\n        var guiFromFilter = filter.getGui();\n\n        if (!exists(guiFromFilter)) {\n          console.warn(\"getGui method from filter returned \" + guiFromFilter + \", it should be a DOM element or an HTML template string.\");\n        } // for backwards compatibility with Angular 1 - we\n        // used to allow providing back HTML from getGui().\n        // once we move away from supporting Angular 1\n        // directly, we can change this.\n\n\n        if (typeof guiFromFilter === 'string') {\n          guiFromFilter = loadTemplate(guiFromFilter);\n        }\n\n        eFilterGui.appendChild(guiFromFilter);\n\n        if (filterWrapper.scope) {\n          var compiledElement = _this.$compile(eFilterGui)(filterWrapper.scope);\n\n          filterWrapper.compiledElement = compiledElement;\n          window.setTimeout(function () {\n            return filterWrapper.scope.$apply();\n          }, 0);\n        }\n\n        resolve(eFilterGui);\n\n        _this.eventService.dispatchEvent({\n          type: Events.EVENT_FILTER_OPENED,\n          column: filterWrapper.column,\n          source: source,\n          eGui: eFilterGui,\n          api: _this.gridApi,\n          columnApi: _this.columnApi\n        });\n      });\n    });\n  };\n\n  FilterManager.prototype.onNewColumnsLoaded = function () {\n    var _this = this;\n\n    var atLeastOneFilterGone = false;\n    this.allFilters.forEach(function (filterWrapper) {\n      var oldColumn = !_this.columnController.getPrimaryColumn(filterWrapper.column);\n\n      if (oldColumn) {\n        atLeastOneFilterGone = true;\n\n        _this.disposeFilterWrapper(filterWrapper, 'filterDestroyed');\n      }\n    });\n\n    if (atLeastOneFilterGone) {\n      this.onFilterChanged();\n    }\n  }; // destroys the filter, so it not longer takes part\n\n\n  FilterManager.prototype.destroyFilter = function (column, source) {\n    if (source === void 0) {\n      source = 'api';\n    }\n\n    var filterWrapper = this.allFilters.get(column.getColId());\n\n    if (filterWrapper) {\n      this.disposeFilterWrapper(filterWrapper, source);\n      this.onFilterChanged();\n    }\n  };\n\n  FilterManager.prototype.disposeFilterWrapper = function (filterWrapper, source) {\n    var _this = this;\n\n    filterWrapper.filterPromise.then(function (filter) {\n      filter.setModel(null);\n\n      _this.getContext().destroyBean(filter);\n\n      filterWrapper.column.setFilterActive(false, source);\n\n      if (filterWrapper.scope) {\n        if (filterWrapper.compiledElement) {\n          filterWrapper.compiledElement.remove();\n        }\n\n        filterWrapper.scope.$destroy();\n      }\n\n      _this.allFilters.delete(filterWrapper.column.getColId());\n    });\n  };\n\n  FilterManager.prototype.destroy = function () {\n    var _this = this;\n\n    _super.prototype.destroy.call(this);\n\n    this.allFilters.forEach(function (filterWrapper) {\n      return _this.disposeFilterWrapper(filterWrapper, 'filterDestroyed');\n    });\n  };\n\n  var FilterManager_1;\n  FilterManager.QUICK_FILTER_SEPARATOR = '\\n';\n\n  __decorate([Autowired('$compile')], FilterManager.prototype, \"$compile\", void 0);\n\n  __decorate([Autowired('$scope')], FilterManager.prototype, \"$scope\", void 0);\n\n  __decorate([Autowired('gridOptionsWrapper')], FilterManager.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([Autowired('valueService')], FilterManager.prototype, \"valueService\", void 0);\n\n  __decorate([Autowired('columnController')], FilterManager.prototype, \"columnController\", void 0);\n\n  __decorate([Autowired('rowModel')], FilterManager.prototype, \"rowModel\", void 0);\n\n  __decorate([Autowired('columnApi')], FilterManager.prototype, \"columnApi\", void 0);\n\n  __decorate([Autowired('gridApi')], FilterManager.prototype, \"gridApi\", void 0);\n\n  __decorate([Autowired('userComponentFactory')], FilterManager.prototype, \"userComponentFactory\", void 0);\n\n  __decorate([PostConstruct], FilterManager.prototype, \"init\", null);\n\n  __decorate([PreDestroy], FilterManager.prototype, \"destroy\", null);\n\n  FilterManager = FilterManager_1 = __decorate([Bean('filterManager')], FilterManager);\n  return FilterManager;\n}(BeanStub);\n\nexport { FilterManager };","map":{"version":3,"sources":["/Users/fouaddakhel/Projects/Nana/ReactJS/supermarket_dashboard/supermarket_dashboard/node_modules/@ag-grid-community/core/dist/es6/filter/filterManager.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Promise","Autowired","Bean","PostConstruct","PreDestroy","Events","ModuleNames","ModuleRegistry","forEach","some","every","BeanStub","convertToSet","exists","mergeDeep","cloneObject","assign","loadTemplate","FilterManager","_super","_this","apply","allFilters","Map","quickFilter","quickFilterParts","processingFilterChange","FilterManager_1","init","addManagedListener","eventService","EVENT_ROW_DATA_CHANGED","onNewRowsLoaded","bind","EVENT_NEW_COLUMNS_LOADED","onNewColumnsLoaded","parseQuickFilter","gridOptionsWrapper","getQuickFilterText","setQuickFilterParts","allowShowChangeAfterFilter","isAllowShowChangeAfterFilter","checkExternalFilter","split","setFilterModel","model","allPromises","modelKeys_1","keys","filterWrapper","colId","newModel","push","setModelOnFilterWrapper","filterPromise","delete","column","columnController","getPrimaryColumn","console","warn","getOrCreateFilterWrapper","all","then","onFilterChanged","resolve","filter","setModel","promise","getFilterModel","result","resolveNow","getModel","isAdvancedFilterPresent","advancedFilterPresent","setAdvancedFilterPresent","atLeastOneActive","isFilterActive","updateFilterFlagInColumns","source","additionalEventAttributes","setFilterActive","isAnyFilterPresent","isQuickFilterPresent","externalFilterPresent","doesFilterPass","node","filterToSkip","data","filterPasses","undefined","Error","newFilter","isRowModelDefault","toUpperCase","setQuickFilter","parsedFilter","isExternalFilterPresent","filterInstance","onAnyFilterChanged","filterChangedEvent","type","EVENT_FILTER_CHANGED","api","gridApi","columnApi","dispatchEvent","isSuppressFlashingCellsBecauseFiltering","doesRowPassOtherFilters","doesRowPassFilter","doesRowPassQuickFilterNoCache","filterPart","columns","getAllColumnsForQuickFilter","part","getQuickFilterTextForColumn","indexOf","doesRowPassQuickFilterCache","quickFilterAggregateText","aggregateRowForQuickFilter","doesRowPassQuickFilter","usingCache","isCacheQuickFilter","doesExternalFilterPass","value","valueService","getValue","colDef","getColDef","params","context","getContext","toString","stringParts","join","QUICK_FILTER_SEPARATOR","createValueGetter","getFilterComponent","cachedFilter","createFilterWrapper","set","getColId","putIntoGui","get","createFilterInstance","$scope","defaultFilter","isRegistered","SetFilterModule","sanitisedColDef","createFilterParams","filterModifiedCallback","event","EVENT_FILTER_MODIFIED","modifyParamsCallback","doesRowPassOtherFilter","filterChangedCallback","res","userComponentFactory","newFilterComponent","getApi","rowModel","valueGetter","scope","compiledElement","guiPromise","isAngularCompileFilters","$new","eFilterGui","document","createElement","className","guiFromFilter","getGui","appendChild","$compile","window","setTimeout","$apply","EVENT_FILTER_OPENED","eGui","atLeastOneFilterGone","oldColumn","disposeFilterWrapper","destroyFilter","destroyBean","remove","$destroy","destroy","call"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v23.2.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Promise } from '../utils';\nimport { Autowired, Bean, PostConstruct, PreDestroy } from '../context/context';\nimport { Events } from '../events';\nimport { ModuleNames } from '../modules/moduleNames';\nimport { ModuleRegistry } from '../modules/moduleRegistry';\nimport { forEach, some, every } from '../utils/array';\nimport { BeanStub } from '../context/beanStub';\nimport { convertToSet } from '../utils/set';\nimport { exists } from '../utils/generic';\nimport { mergeDeep, cloneObject, assign } from '../utils/object';\nimport { loadTemplate } from '../utils/dom';\nvar FilterManager = /** @class */ (function (_super) {\n    __extends(FilterManager, _super);\n    function FilterManager() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.allFilters = new Map();\n        _this.quickFilter = null;\n        _this.quickFilterParts = null;\n        // this is true when the grid is processing the filter change. this is used by the cell comps, so that they\n        // don't flash when data changes due to filter changes. there is no need to flash when filter changes as the\n        // user is in control, so doesn't make sense to show flashing changes. for example, go to main demo where\n        // this feature is turned off (hack code to always return false for isSuppressFlashingCellsBecauseFiltering(), put in)\n        // 100,000 rows and group by country. then do some filtering. all the cells flash, which is silly.\n        _this.processingFilterChange = false;\n        return _this;\n    }\n    FilterManager_1 = FilterManager;\n    FilterManager.prototype.init = function () {\n        this.addManagedListener(this.eventService, Events.EVENT_ROW_DATA_CHANGED, this.onNewRowsLoaded.bind(this));\n        this.addManagedListener(this.eventService, Events.EVENT_NEW_COLUMNS_LOADED, this.onNewColumnsLoaded.bind(this));\n        this.quickFilter = this.parseQuickFilter(this.gridOptionsWrapper.getQuickFilterText());\n        this.setQuickFilterParts();\n        this.allowShowChangeAfterFilter = this.gridOptionsWrapper.isAllowShowChangeAfterFilter();\n        // check this here, in case there is a filter from the start\n        this.checkExternalFilter();\n    };\n    FilterManager.prototype.setQuickFilterParts = function () {\n        this.quickFilterParts = this.quickFilter ? this.quickFilter.split(' ') : null;\n    };\n    FilterManager.prototype.setFilterModel = function (model) {\n        var _this = this;\n        var allPromises = [];\n        if (model) {\n            // mark the filters as we set them, so any active filters left over we stop\n            var modelKeys_1 = convertToSet(Object.keys(model));\n            this.allFilters.forEach(function (filterWrapper, colId) {\n                var newModel = model[colId];\n                allPromises.push(_this.setModelOnFilterWrapper(filterWrapper.filterPromise, newModel));\n                modelKeys_1.delete(colId);\n            });\n            // at this point, processedFields contains data for which we don't have a filter working yet\n            modelKeys_1.forEach(function (colId) {\n                var column = _this.columnController.getPrimaryColumn(colId);\n                if (!column) {\n                    console.warn('Warning ag-grid setFilterModel - no column found for colId ' + colId);\n                    return;\n                }\n                var filterWrapper = _this.getOrCreateFilterWrapper(column, 'NO_UI');\n                allPromises.push(_this.setModelOnFilterWrapper(filterWrapper.filterPromise, model[colId]));\n            });\n        }\n        else {\n            this.allFilters.forEach(function (filterWrapper) {\n                allPromises.push(_this.setModelOnFilterWrapper(filterWrapper.filterPromise, null));\n            });\n        }\n        Promise.all(allPromises).then(function () { return _this.onFilterChanged(); });\n    };\n    FilterManager.prototype.setModelOnFilterWrapper = function (filterPromise, newModel) {\n        return new Promise(function (resolve) {\n            filterPromise.then(function (filter) {\n                if (typeof filter.setModel !== 'function') {\n                    console.warn('Warning ag-grid - filter missing setModel method, which is needed for setFilterModel');\n                    resolve();\n                }\n                var promise = filter.setModel(newModel);\n                if (promise == null) {\n                    resolve();\n                }\n                else {\n                    promise.then(function () { return resolve(); });\n                }\n            });\n        });\n    };\n    FilterManager.prototype.getFilterModel = function () {\n        var result = {};\n        this.allFilters.forEach(function (filterWrapper, key) {\n            // because user can provide filters, we provide useful error checking and messages\n            var filterPromise = filterWrapper.filterPromise;\n            var filter = filterPromise.resolveNow(null, function (filter) { return filter; });\n            if (filter == null) {\n                return null;\n            }\n            if (typeof filter.getModel !== 'function') {\n                console.warn('Warning ag-grid - filter API missing getModel method, which is needed for getFilterModel');\n                return;\n            }\n            var model = filter.getModel();\n            if (exists(model)) {\n                result[key] = model;\n            }\n        });\n        return result;\n    };\n    // returns true if any advanced filter (ie not quick filter) active\n    FilterManager.prototype.isAdvancedFilterPresent = function () {\n        return this.advancedFilterPresent;\n    };\n    // called by:\n    // 1) onFilterChanged()\n    // 2) onNewRowsLoaded()\n    FilterManager.prototype.setAdvancedFilterPresent = function () {\n        var atLeastOneActive = false;\n        this.allFilters.forEach(function (filterWrapper) {\n            if (atLeastOneActive) {\n                return;\n            } // no need to check any more\n            if (filterWrapper.filterPromise.resolveNow(false, function (filter) { return filter.isFilterActive(); })) {\n                atLeastOneActive = true;\n            }\n        });\n        this.advancedFilterPresent = atLeastOneActive;\n    };\n    FilterManager.prototype.updateFilterFlagInColumns = function (source, additionalEventAttributes) {\n        this.allFilters.forEach(function (filterWrapper) {\n            var isFilterActive = filterWrapper.filterPromise.resolveNow(false, function (filter) { return filter.isFilterActive(); });\n            filterWrapper.column.setFilterActive(isFilterActive, source, additionalEventAttributes);\n        });\n    };\n    // returns true if quickFilter or advancedFilter\n    FilterManager.prototype.isAnyFilterPresent = function () {\n        return this.isQuickFilterPresent() || this.advancedFilterPresent || this.externalFilterPresent;\n    };\n    FilterManager.prototype.doesFilterPass = function (node, filterToSkip) {\n        var data = node.data;\n        var filterPasses = true;\n        this.allFilters.forEach(function (filterWrapper) {\n            // if a filter has already failed, no need to run any more\n            if (!filterPasses) {\n                return;\n            }\n            // if no filter, always pass\n            if (filterWrapper == null) {\n                return;\n            }\n            var filter = filterWrapper.filterPromise.resolveNow(undefined, function (filter) { return filter; });\n            if (filter == null || filter === filterToSkip || !filter.isFilterActive()) {\n                return;\n            }\n            if (!filter.doesFilterPass) { // because users can do custom filters, give nice error message\n                throw new Error('Filter is missing method doesFilterPass');\n            }\n            filterPasses = filter.doesFilterPass({ node: node, data: data });\n        });\n        return filterPasses;\n    };\n    FilterManager.prototype.parseQuickFilter = function (newFilter) {\n        if (!exists(newFilter)) {\n            return null;\n        }\n        if (!this.gridOptionsWrapper.isRowModelDefault()) {\n            console.warn('ag-grid: quick filtering only works with the Client-Side Row Model');\n            return null;\n        }\n        return newFilter.toUpperCase();\n    };\n    FilterManager.prototype.setQuickFilter = function (newFilter) {\n        var parsedFilter = this.parseQuickFilter(newFilter);\n        if (this.quickFilter !== parsedFilter) {\n            this.quickFilter = parsedFilter;\n            this.setQuickFilterParts();\n            this.onFilterChanged();\n        }\n    };\n    FilterManager.prototype.checkExternalFilter = function () {\n        this.externalFilterPresent = this.gridOptionsWrapper.isExternalFilterPresent();\n    };\n    FilterManager.prototype.onFilterChanged = function (filterInstance, additionalEventAttributes) {\n        this.setAdvancedFilterPresent();\n        this.updateFilterFlagInColumns('filterChanged', additionalEventAttributes);\n        this.checkExternalFilter();\n        this.allFilters.forEach(function (filterWrapper) {\n            filterWrapper.filterPromise.then(function (filter) {\n                if (filter !== filterInstance && filter.onAnyFilterChanged) {\n                    filter.onAnyFilterChanged();\n                }\n            });\n        });\n        var filterChangedEvent = {\n            type: Events.EVENT_FILTER_CHANGED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        if (additionalEventAttributes) {\n            mergeDeep(filterChangedEvent, additionalEventAttributes);\n        }\n        // because internal events are not async in ag-grid, when the dispatchEvent\n        // method comes back, we know all listeners have finished executing.\n        this.processingFilterChange = true;\n        this.eventService.dispatchEvent(filterChangedEvent);\n        this.processingFilterChange = false;\n    };\n    FilterManager.prototype.isSuppressFlashingCellsBecauseFiltering = function () {\n        // if user has elected to always flash cell changes, then always return false, otherwise we suppress flashing\n        // changes when filtering\n        return !this.allowShowChangeAfterFilter && this.processingFilterChange;\n    };\n    FilterManager.prototype.isQuickFilterPresent = function () {\n        return this.quickFilter !== null;\n    };\n    FilterManager.prototype.doesRowPassOtherFilters = function (filterToSkip, node) {\n        return this.doesRowPassFilter(node, filterToSkip);\n    };\n    FilterManager.prototype.doesRowPassQuickFilterNoCache = function (node, filterPart) {\n        var _this = this;\n        var columns = this.columnController.getAllColumnsForQuickFilter();\n        return some(columns, function (column) {\n            var part = _this.getQuickFilterTextForColumn(column, node);\n            return exists(part) && part.indexOf(filterPart) >= 0;\n        });\n    };\n    FilterManager.prototype.doesRowPassQuickFilterCache = function (node, filterPart) {\n        if (!node.quickFilterAggregateText) {\n            this.aggregateRowForQuickFilter(node);\n        }\n        return node.quickFilterAggregateText.indexOf(filterPart) >= 0;\n    };\n    FilterManager.prototype.doesRowPassQuickFilter = function (node) {\n        var _this = this;\n        var usingCache = this.gridOptionsWrapper.isCacheQuickFilter();\n        // each part must pass, if any fails, then the whole filter fails\n        return every(this.quickFilterParts, function (part) {\n            return usingCache ? _this.doesRowPassQuickFilterCache(node, part) : _this.doesRowPassQuickFilterNoCache(node, part);\n        });\n    };\n    FilterManager.prototype.doesRowPassFilter = function (node, filterToSkip) {\n        // the row must pass ALL of the filters, so if any of them fail,\n        // we return true. that means if a row passes the quick filter,\n        // but fails the column filter, it fails overall\n        // first up, check quick filter\n        if (this.isQuickFilterPresent() && !this.doesRowPassQuickFilter(node)) {\n            return false;\n        }\n        // secondly, give the client a chance to reject this row\n        if (this.externalFilterPresent && !this.gridOptionsWrapper.doesExternalFilterPass(node)) {\n            return false;\n        }\n        // lastly, check our internal advanced filter\n        if (this.advancedFilterPresent && !this.doesFilterPass(node, filterToSkip)) {\n            return false;\n        }\n        // got this far, all filters pass\n        return true;\n    };\n    FilterManager.prototype.getQuickFilterTextForColumn = function (column, node) {\n        var value = this.valueService.getValue(column, node, true);\n        var colDef = column.getColDef();\n        if (colDef.getQuickFilterText) {\n            var params = {\n                value: value,\n                node: node,\n                data: node.data,\n                column: column,\n                colDef: colDef,\n                context: this.gridOptionsWrapper.getContext()\n            };\n            value = colDef.getQuickFilterText(params);\n        }\n        return exists(value) ? value.toString().toUpperCase() : null;\n    };\n    FilterManager.prototype.aggregateRowForQuickFilter = function (node) {\n        var _this = this;\n        var stringParts = [];\n        var columns = this.columnController.getAllColumnsForQuickFilter();\n        forEach(columns, function (column) {\n            var part = _this.getQuickFilterTextForColumn(column, node);\n            if (exists(part)) {\n                stringParts.push(part);\n            }\n        });\n        node.quickFilterAggregateText = stringParts.join(FilterManager_1.QUICK_FILTER_SEPARATOR);\n    };\n    FilterManager.prototype.onNewRowsLoaded = function (source) {\n        this.allFilters.forEach(function (filterWrapper) {\n            filterWrapper.filterPromise.then(function (filter) {\n                if (filter.onNewRowsLoaded) {\n                    filter.onNewRowsLoaded();\n                }\n            });\n        });\n        this.updateFilterFlagInColumns(source);\n        this.setAdvancedFilterPresent();\n    };\n    FilterManager.prototype.createValueGetter = function (column) {\n        var _this = this;\n        return function (node) { return _this.valueService.getValue(column, node, true); };\n    };\n    FilterManager.prototype.getFilterComponent = function (column, source) {\n        return this.getOrCreateFilterWrapper(column, source).filterPromise;\n    };\n    FilterManager.prototype.isFilterActive = function (column) {\n        var filterWrapper = this.cachedFilter(column);\n        return filterWrapper && filterWrapper.filterPromise.resolveNow(false, function (filter) { return filter.isFilterActive(); });\n    };\n    FilterManager.prototype.getOrCreateFilterWrapper = function (column, source) {\n        var filterWrapper = this.cachedFilter(column);\n        if (!filterWrapper) {\n            filterWrapper = this.createFilterWrapper(column, source);\n            this.allFilters.set(column.getColId(), filterWrapper);\n        }\n        else if (source !== 'NO_UI') {\n            this.putIntoGui(filterWrapper, source);\n        }\n        return filterWrapper;\n    };\n    FilterManager.prototype.cachedFilter = function (column) {\n        return this.allFilters.get(column.getColId());\n    };\n    FilterManager.prototype.createFilterInstance = function (column, $scope) {\n        var _this = this;\n        var defaultFilter = ModuleRegistry.isRegistered(ModuleNames.SetFilterModule) ? 'agSetColumnFilter' : 'agTextColumnFilter';\n        var sanitisedColDef = cloneObject(column.getColDef());\n        var filterInstance;\n        var params = this.createFilterParams(column, sanitisedColDef, $scope);\n        params.filterModifiedCallback = function () {\n            var event = {\n                type: Events.EVENT_FILTER_MODIFIED,\n                api: _this.gridApi,\n                columnApi: _this.columnApi,\n                column: column,\n                filterInstance: filterInstance\n            };\n            _this.eventService.dispatchEvent(event);\n        };\n        // we modify params in a callback as we need the filter instance, and this isn't available\n        // when creating the params above\n        var modifyParamsCallback = function (params, filterInstance) { return assign(params, {\n            doesRowPassOtherFilter: function (node) { return _this.doesRowPassOtherFilters(filterInstance, node); },\n            filterChangedCallback: function (additionalEventAttributes) {\n                return _this.onFilterChanged(filterInstance, additionalEventAttributes);\n            }\n        }); };\n        var res = this.userComponentFactory.newFilterComponent(sanitisedColDef, params, defaultFilter, modifyParamsCallback);\n        if (res) {\n            res.then(function (r) { return filterInstance = r; });\n        }\n        return res;\n    };\n    FilterManager.prototype.createFilterParams = function (column, colDef, $scope) {\n        if ($scope === void 0) { $scope = null; }\n        var params = {\n            api: this.gridOptionsWrapper.getApi(),\n            column: column,\n            colDef: colDef,\n            rowModel: this.rowModel,\n            filterChangedCallback: null,\n            filterModifiedCallback: null,\n            valueGetter: this.createValueGetter(column),\n            context: this.gridOptionsWrapper.getContext(),\n            doesRowPassOtherFilter: null\n        };\n        // hack in scope if using AngularJS\n        if ($scope) {\n            params.$scope = $scope;\n        }\n        return params;\n    };\n    FilterManager.prototype.createFilterWrapper = function (column, source) {\n        var filterWrapper = {\n            column: column,\n            filterPromise: null,\n            scope: null,\n            compiledElement: null,\n            guiPromise: Promise.resolve(null)\n        };\n        filterWrapper.scope = this.gridOptionsWrapper.isAngularCompileFilters() ? this.$scope.$new() : null;\n        filterWrapper.filterPromise = this.createFilterInstance(column, filterWrapper.scope);\n        if (filterWrapper.filterPromise) {\n            this.putIntoGui(filterWrapper, source);\n        }\n        return filterWrapper;\n    };\n    FilterManager.prototype.putIntoGui = function (filterWrapper, source) {\n        var _this = this;\n        var eFilterGui = document.createElement('div');\n        eFilterGui.className = 'ag-filter';\n        filterWrapper.guiPromise = new Promise(function (resolve) {\n            filterWrapper.filterPromise.then(function (filter) {\n                var guiFromFilter = filter.getGui();\n                if (!exists(guiFromFilter)) {\n                    console.warn(\"getGui method from filter returned \" + guiFromFilter + \", it should be a DOM element or an HTML template string.\");\n                }\n                // for backwards compatibility with Angular 1 - we\n                // used to allow providing back HTML from getGui().\n                // once we move away from supporting Angular 1\n                // directly, we can change this.\n                if (typeof guiFromFilter === 'string') {\n                    guiFromFilter = loadTemplate(guiFromFilter);\n                }\n                eFilterGui.appendChild(guiFromFilter);\n                if (filterWrapper.scope) {\n                    var compiledElement = _this.$compile(eFilterGui)(filterWrapper.scope);\n                    filterWrapper.compiledElement = compiledElement;\n                    window.setTimeout(function () { return filterWrapper.scope.$apply(); }, 0);\n                }\n                resolve(eFilterGui);\n                _this.eventService.dispatchEvent({\n                    type: Events.EVENT_FILTER_OPENED,\n                    column: filterWrapper.column,\n                    source: source,\n                    eGui: eFilterGui,\n                    api: _this.gridApi,\n                    columnApi: _this.columnApi\n                });\n            });\n        });\n    };\n    FilterManager.prototype.onNewColumnsLoaded = function () {\n        var _this = this;\n        var atLeastOneFilterGone = false;\n        this.allFilters.forEach(function (filterWrapper) {\n            var oldColumn = !_this.columnController.getPrimaryColumn(filterWrapper.column);\n            if (oldColumn) {\n                atLeastOneFilterGone = true;\n                _this.disposeFilterWrapper(filterWrapper, 'filterDestroyed');\n            }\n        });\n        if (atLeastOneFilterGone) {\n            this.onFilterChanged();\n        }\n    };\n    // destroys the filter, so it not longer takes part\n    FilterManager.prototype.destroyFilter = function (column, source) {\n        if (source === void 0) { source = 'api'; }\n        var filterWrapper = this.allFilters.get(column.getColId());\n        if (filterWrapper) {\n            this.disposeFilterWrapper(filterWrapper, source);\n            this.onFilterChanged();\n        }\n    };\n    FilterManager.prototype.disposeFilterWrapper = function (filterWrapper, source) {\n        var _this = this;\n        filterWrapper.filterPromise.then(function (filter) {\n            filter.setModel(null);\n            _this.getContext().destroyBean(filter);\n            filterWrapper.column.setFilterActive(false, source);\n            if (filterWrapper.scope) {\n                if (filterWrapper.compiledElement) {\n                    filterWrapper.compiledElement.remove();\n                }\n                filterWrapper.scope.$destroy();\n            }\n            _this.allFilters.delete(filterWrapper.column.getColId());\n        });\n    };\n    FilterManager.prototype.destroy = function () {\n        var _this = this;\n        _super.prototype.destroy.call(this);\n        this.allFilters.forEach(function (filterWrapper) { return _this.disposeFilterWrapper(filterWrapper, 'filterDestroyed'); });\n    };\n    var FilterManager_1;\n    FilterManager.QUICK_FILTER_SEPARATOR = '\\n';\n    __decorate([\n        Autowired('$compile')\n    ], FilterManager.prototype, \"$compile\", void 0);\n    __decorate([\n        Autowired('$scope')\n    ], FilterManager.prototype, \"$scope\", void 0);\n    __decorate([\n        Autowired('gridOptionsWrapper')\n    ], FilterManager.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        Autowired('valueService')\n    ], FilterManager.prototype, \"valueService\", void 0);\n    __decorate([\n        Autowired('columnController')\n    ], FilterManager.prototype, \"columnController\", void 0);\n    __decorate([\n        Autowired('rowModel')\n    ], FilterManager.prototype, \"rowModel\", void 0);\n    __decorate([\n        Autowired('columnApi')\n    ], FilterManager.prototype, \"columnApi\", void 0);\n    __decorate([\n        Autowired('gridApi')\n    ], FilterManager.prototype, \"gridApi\", void 0);\n    __decorate([\n        Autowired('userComponentFactory')\n    ], FilterManager.prototype, \"userComponentFactory\", void 0);\n    __decorate([\n        PostConstruct\n    ], FilterManager.prototype, \"init\", null);\n    __decorate([\n        PreDestroy\n    ], FilterManager.prototype, \"destroy\", null);\n    FilterManager = FilterManager_1 = __decorate([\n        Bean('filterManager')\n    ], FilterManager);\n    return FilterManager;\n}(BeanStub));\nexport { FilterManager };\n"]},"metadata":{},"sourceType":"module"}